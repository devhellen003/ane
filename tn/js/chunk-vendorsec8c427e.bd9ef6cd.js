(window["webpackJsonp"] = window["webpackJsonp"] || []).push([
    ["chunk-vendors~ec8c427e"], {
        "017d": function(t, e, r) {
            "use strict";
            (function(t) {
                function n() {}
                r.d(e, "a", (function() {
                    return o
                })), r.d(e, "b", (function() {
                    return n
                })), r.d(e, "c", (function() {
                    return s
                })), r.d(e, "d", (function() {
                    return a
                })), r.d(e, "e", (function() {
                    return c
                }));

                function i(t) {
                    return t()
                }

                function s(t) {
                    t.forEach(i)
                }

                function o(t) {
                    return "function" === typeof t
                }

                function a(t, e) {
                    return t != t ? e == e : t !== e || t && "object" === typeof t || "function" === typeof t
                }

                function u(t) {
                    return 0 === Object.keys(t).length
                }

                function c(t, ...e) {
                    if (null == t) return n;
                    const r = t.subscribe(...e);
                    return r.unsubscribe ? () => r.unsubscribe() : r
                }
                new Set;
                new Map;
                Promise.resolve();
                new Set;
                new Set;
                "undefined" !== typeof window ? window : "undefined" !== typeof globalThis && globalThis;
                new Set(["allowfullscreen", "allowpaymentrequest", "async", "autofocus", "autoplay", "checked", "controls", "default", "defer", "disabled", "formnovalidate", "hidden", "inert", "ismap", "itemscope", "loop", "multiple", "muted", "nomodule", "novalidate", "open", "playsinline", "readonly", "required", "reversed", "selected"]);
                let h;

                function l(t, e) {
                    const r = t.$$;
                    null !== r.fragment && (s(r.on_destroy), r.fragment && r.fragment.d(e), r.on_destroy = r.fragment = null, r.ctx = [])
                }
                "function" === typeof HTMLElement && (h = class extends HTMLElement {
                    constructor() {
                        super(), this.attachShadow({
                            mode: "open"
                        })
                    }
                    connectedCallback() {
                        const {
                            on_mount: t
                        } = this.$$;
                        this.$$.on_disconnect = t.map(i).filter(o);
                        for (const e in this.$$.slotted) this.appendChild(this.$$.slotted[e])
                    }
                    attributeChangedCallback(t, e, r) {
                        this[t] = r
                    }
                    disconnectedCallback() {
                        s(this.$$.on_disconnect)
                    }
                    $destroy() {
                        l(this, 1), this.$destroy = n
                    }
                    $on(t, e) {
                        if (!o(e)) return n;
                        const r = this.$$.callbacks[t] || (this.$$.callbacks[t] = []);
                        return r.push(e), () => {
                            const t = r.indexOf(e); - 1 !== t && r.splice(t, 1)
                        }
                    }
                    $set(t) {
                        this.$$set && !u(t) && (this.$$.skip_bound = !0, this.$$set(t), this.$$.skip_bound = !1)
                    }
                })
            }).call(this, r("c8ba"))
        },
        "0799": function(t, e, r) {
            const {
                Cell: n
            } = r("41b0"), {
                base64ToBytes: i
            } = r("1afa"), s = r("d33d").default;
            "undefined" === typeof fetch && (fetch = r(35));
            const o = "-9223372036854775808";
            class a {
                constructor(t, e) {
                    this.host = t || "https://toncenter.com/api/v2/jsonRPC", this.options = e || {}
                }
                sendImpl(t, e) {
                    const r = {
                        "Content-Type": "application/json"
                    };
                    return this.options.apiKey && (r["X-API-Key"] = this.options.apiKey), fetch(t, {
                        method: "POST",
                        headers: r,
                        body: JSON.stringify(e)
                    }).then(t => t.json()).then(({
                        result: t,
                        error: e
                    }) => t || Promise.reject(e))
                }
                send(t, e) {
                    return this.sendImpl(this.host, {
                        id: 1,
                        jsonrpc: "2.0",
                        method: t,
                        params: e
                    })
                }
                async getAddressInfo(t) {
                    return this.send("getAddressInformation", {
                        address: t
                    })
                }
                async getExtendedAddressInfo(t) {
                    return this.send("getExtendedAddressInformation", {
                        address: t
                    })
                }
                async getWalletInfo(t) {
                    return this.send("getWalletInformation", {
                        address: t
                    })
                }
                async getTransactions(t, e = 20, r, n, i, s) {
                    return this.send("getTransactions", {
                        address: t,
                        limit: e,
                        lt: r,
                        hash: n,
                        to_lt: i,
                        archival: s
                    })
                }
                async getBalance(t) {
                    return this.send("getAddressBalance", {
                        address: t
                    })
                }
                async sendBoc(t) {
                    return this.send("sendBoc", {
                        boc: t
                    })
                }
                async sendQuery(t) {
                    return this.send("sendQuerySimple", t)
                }
                async getEstimateFee(t) {
                    return this.send("estimateFee", t)
                }
                async call(t, e, r = []) {
                    return this.send("runGetMethod", {
                        address: t,
                        method: e,
                        stack: r
                    })
                }
                async call2(t, e, r = []) {
                    const n = await this.send("runGetMethod", {
                        address: t,
                        method: e,
                        stack: r
                    });
                    return s.parseResponse(n)
                }
                async getConfigParam(t) {
                    const e = await this.send("getConfigParam", {
                        config_id: t
                    });
                    if ("configInfo" !== e["@type"]) throw new Error("getConfigParam expected type configInfo");
                    if (!e.config) throw new Error("getConfigParam expected config");
                    if ("tvm.cell" !== e.config["@type"]) throw new Error("getConfigParam expected type tvm.cell");
                    if (!e.config.bytes) throw new Error("getConfigParam expected bytes");
                    return n.oneFromBoc(i(e.config.bytes))
                }
                async getMasterchainInfo() {
                    return this.send("getMasterchainInfo", {})
                }
                async getBlockShards(t) {
                    return this.send("shards", {
                        seqno: t
                    })
                }
                async getBlockTransactions(t, e, r, n, i, s) {
                    return this.send("getBlockTransactions", {
                        workchain: t,
                        shard: e,
                        seqno: r,
                        count: n,
                        after_lt: i,
                        after_hash: s
                    })
                }
                async getMasterchainBlockTransactions(t, e, r, n) {
                    return this.getBlockTransactions(-1, o, t, e, r, n)
                }
                async getBlockHeader(t, e, r) {
                    return this.send("getBlockHeader", {
                        workchain: t,
                        shard: e,
                        seqno: r
                    })
                }
                async getMasterchainBlockHeader(t) {
                    return this.getBlockHeader(-1, o, t)
                }
            }
            a.SHARD_ID_ALL = o, t.exports.default = a
        },
        "087f": function(t, e, r) {
            var n = r("3fb5"),
                i = r("b672"),
                s = r("8707").Buffer,
                o = [1518500249, 1859775393, -1894007588, -899497514],
                a = new Array(80);

            function u() {
                this.init(), this._w = a, i.call(this, 64, 56)
            }

            function c(t) {
                return t << 5 | t >>> 27
            }

            function h(t) {
                return t << 30 | t >>> 2
            }

            function l(t, e, r, n) {
                return 0 === t ? e & r | ~e & n : 2 === t ? e & r | e & n | r & n : e ^ r ^ n
            }
            n(u, i), u.prototype.init = function() {
                return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this
            }, u.prototype._update = function(t) {
                for (var e = this._w, r = 0 | this._a, n = 0 | this._b, i = 0 | this._c, s = 0 | this._d, a = 0 | this._e, u = 0; u < 16; ++u) e[u] = t.readInt32BE(4 * u);
                for (; u < 80; ++u) e[u] = e[u - 3] ^ e[u - 8] ^ e[u - 14] ^ e[u - 16];
                for (var d = 0; d < 80; ++d) {
                    var f = ~~(d / 20),
                        p = c(r) + l(f, n, i, s) + a + e[d] + o[f] | 0;
                    a = s, s = i, i = h(n), n = r, r = p
                }
                this._a = r + this._a | 0, this._b = n + this._b | 0, this._c = i + this._c | 0, this._d = s + this._d | 0, this._e = a + this._e | 0
            }, u.prototype._hash = function() {
                var t = s.allocUnsafe(20);
                return t.writeInt32BE(0 | this._a, 0), t.writeInt32BE(0 | this._b, 4), t.writeInt32BE(0 | this._c, 8), t.writeInt32BE(0 | this._d, 12), t.writeInt32BE(0 | this._e, 16), t
            }, t.exports = u
        },
        "117b": function(t, e, r) {
            "use strict";
            var n = r("55b8");
            t.exports = function(t, e, r) {
                var i = r.config.validateStatus;
                r.status && i && !i(r.status) ? e(n("Request failed with status code " + r.status, r.config, null, r.request, r)) : t(r)
            }
        },
        "11d5": function(t, e, r) {
            const {
                LockupWalletV1: n
            } = r("d621"), {
                VestingWalletV1: i
            } = r("9a3b");
            t.exports.default = {
                LockupWalletV1: n,
                VestingWalletV1: i,
                all: {
                    "lockup-0.1": n,
                    "vesting-1": i
                },
                list: [n, i]
            }
        },
        1845: function(t, e, r) {
            "use strict";
            var n = r("6012"),
                i = Object.prototype.toString;

            function s(t) {
                return "[object Array]" === i.call(t)
            }

            function o(t) {
                return "undefined" === typeof t
            }

            function a(t) {
                return null !== t && !o(t) && null !== t.constructor && !o(t.constructor) && "function" === typeof t.constructor.isBuffer && t.constructor.isBuffer(t)
            }

            function u(t) {
                return "[object ArrayBuffer]" === i.call(t)
            }

            function c(t) {
                return "undefined" !== typeof FormData && t instanceof FormData
            }

            function h(t) {
                var e;
                return e = "undefined" !== typeof ArrayBuffer && ArrayBuffer.isView ? ArrayBuffer.isView(t) : t && t.buffer && t.buffer instanceof ArrayBuffer, e
            }

            function l(t) {
                return "string" === typeof t
            }

            function d(t) {
                return "number" === typeof t
            }

            function f(t) {
                return null !== t && "object" === typeof t
            }

            function p(t) {
                if ("[object Object]" !== i.call(t)) return !1;
                var e = Object.getPrototypeOf(t);
                return null === e || e === Object.prototype
            }

            function g(t) {
                return "[object Date]" === i.call(t)
            }

            function v(t) {
                return "[object File]" === i.call(t)
            }

            function m(t) {
                return "[object Blob]" === i.call(t)
            }

            function y(t) {
                return "[object Function]" === i.call(t)
            }

            function w(t) {
                return f(t) && y(t.pipe)
            }

            function b(t) {
                return "undefined" !== typeof URLSearchParams && t instanceof URLSearchParams
            }

            function C(t) {
                return t.trim ? t.trim() : t.replace(/^\s+|\s+$/g, "")
            }

            function A() {
                return ("undefined" === typeof navigator || "ReactNative" !== navigator.product && "NativeScript" !== navigator.product && "NS" !== navigator.product) && ("undefined" !== typeof window && "undefined" !== typeof document)
            }

            function B(t, e) {
                if (null !== t && "undefined" !== typeof t)
                    if ("object" !== typeof t && (t = [t]), s(t))
                        for (var r = 0, n = t.length; r < n; r++) e.call(null, t[r], r, t);
                    else
                        for (var i in t) Object.prototype.hasOwnProperty.call(t, i) && e.call(null, t[i], i, t)
            }

            function F() {
                var t = {};

                function e(e, r) {
                    p(t[r]) && p(e) ? t[r] = F(t[r], e) : p(e) ? t[r] = F({}, e) : s(e) ? t[r] = e.slice() : t[r] = e
                }
                for (var r = 0, n = arguments.length; r < n; r++) B(arguments[r], e);
                return t
            }

            function E(t, e, r) {
                return B(e, (function(e, i) {
                    t[i] = r && "function" === typeof e ? n(e, r) : e
                })), t
            }

            function x(t) {
                return 65279 === t.charCodeAt(0) && (t = t.slice(1)), t
            }
            t.exports = {
                isArray: s,
                isArrayBuffer: u,
                isBuffer: a,
                isFormData: c,
                isArrayBufferView: h,
                isString: l,
                isNumber: d,
                isObject: f,
                isPlainObject: p,
                isUndefined: o,
                isDate: g,
                isFile: v,
                isBlob: m,
                isFunction: y,
                isStream: w,
                isURLSearchParams: b,
                isStandardBrowserEnv: A,
                forEach: B,
                merge: F,
                extend: E,
                trim: C,
                stripBOM: x
            }
        },
        "19b1": function(t, e, r) {
            const {
                PaymentChannel: n
            } = r("f573");
            class i {
                constructor(t) {
                    this.provider = t
                }
                createChannel(t) {
                    return new n(this.provider, t)
                }
            }
            t.exports = {
                Payments: i,
                PaymentChannel: n
            }
        },
        "1afa": function(t, e, r) {
            const {
                BN: n,
                nacl: i,
                sha256: s,
                fromNano: o,
                toNano: a,
                bytesToHex: u,
                hexToBytes: c,
                stringToBytes: h,
                crc32c: l,
                crc16: d,
                concatBytes: f,
                bytesToBase64: p,
                base64ToBytes: g,
                base64toString: v,
                stringToBase64: m,
                compareBytes: y,
                readNBytesUIntFromArray: w,
                keyPairFromSeed: b,
                newKeyPair: C,
                newSeed: A
            } = r("a00c"), B = r("aa4f").default, F = r("b11e").default, E = r("2732").default;

            function x(t) {
                const e = "ton://transfer/";
                if (!t.startsWith(e)) throw new Error("must starts with " + e);
                const r = t.substring(e.length).split("?");
                if (r.length > 2) throw new Error('multiple "?"');
                const i = r[0];
                if (!B.isValid(i)) throw new Error("invalid address format " + i);
                const s = {
                        address: i
                    },
                    o = r[1];
                if (o && o.length) {
                    const t = o.split("&").map(t => t.split("="));
                    for (const e of t) {
                        if (2 !== e.length) throw new Error("invalid url pair");
                        const t = e[0],
                            r = e[1];
                        if ("amount" === t) {
                            if (s.amount) throw new Error("amount already set");
                            const t = new n(r);
                            if (t.isNeg()) throw new Error("negative amount");
                            s.amount = r
                        } else {
                            if ("text" !== t) throw new Error("unknown url var " + t);
                            if (s.text) throw new Error("text already set");
                            s.text = decodeURIComponent(r)
                        }
                    }
                }
                return s
            }

            function _(t, e, r) {
                let n = "ton://transfer/" + t;
                const i = [];
                return e && i.push("amount=" + e), r && i.push("text=" + encodeURIComponent(r)), 0 === i.length ? n : n + "?" + i.join("&")
            }
            t.exports = {
                Address: B,
                AdnlAddress: F,
                StorageBagId: E,
                BN: n,
                nacl: i,
                sha256: s,
                fromNano: o,
                toNano: a,
                bytesToHex: u,
                hexToBytes: c,
                stringToBytes: h,
                crc32c: l,
                crc16: d,
                concatBytes: f,
                bytesToBase64: p,
                base64ToBytes: g,
                base64toString: v,
                stringToBase64: m,
                compareBytes: y,
                readNBytesUIntFromArray: w,
                parseTransferUrl: x,
                formatTransferUrl: _,
                keyPairFromSeed: b,
                newKeyPair: C,
                newSeed: A
            }
        },
        "1bdc": function(t, e, r) {
            const {
                Contract: n
            } = r("38a0"), {
                Cell: i
            } = r("41b0"), {
                Address: s
            } = r("1afa"), {
                parseAddress: o
            } = r("cdcf");
            class a extends n {
                constructor(t, e) {
                    e.wc = 0, e.code = e.code || i.oneFromBoc("B5EE9C7241010401006D000114FF00F4A413F4BCF2C80B01020120020300AAD23221C700915BE0D0D3030171B0915BE0FA40ED44D0FA403012C705F2E19101D31F01C0018E2BFA003001D4D43021F90070C8CA07CBFFC9D077748018C8CB05CB0258CF165004FA0213CB6BCCCCC971FB00915BE20004F2308EF7CCE7"), super(t, e)
                }
                createDataCell() {
                    const t = new i;
                    return t.bits.writeAddress(this.options.ownerAddress), t
                }
            }
            t.exports = {
                NftMarketplace: a
            }
        },
        "1ee7": function(t, e, r) {
            const n = r("1afa"),
                i = n.Address,
                s = r("41b0"),
                o = r("624c"),
                a = r("0799").default,
                {
                    Contract: u
                } = r("38a0"),
                c = r("6746").default,
                h = r("11d5").default,
                l = r("95e6").default,
                d = r("8b05").default,
                f = r("8144").default,
                {
                    BlockSubscription: p,
                    InMemoryBlockStorage: g
                } = r("d238"),
                {
                    SubscriptionContract: v
                } = r("7235"),
                {
                    Payments: m,
                    PaymentChannel: y
                } = r("19b1"),
                w = r("afe4").default,
                b = r("8378").default,
                C = r("146e").default,
                {
                    Dns: A,
                    DnsCollection: B,
                    DnsItem: F
                } = r("e71e").default,
                E = "0.0.66";
            class x {
                constructor(t) {
                    this.version = E, this.utils = n, this.Address = i, this.boc = s, this.Contract = u, this.BlockSubscription = p, this.InMemoryBlockStorage = g, this.provider = t || new a, this.dns = new A(this.provider), this.wallet = new c(this.provider), this.payments = new m(this.provider), this.lockupWallet = h
                }
                async getTransactions(t, e = 20, r, n, i) {
                    return this.provider.getTransactions(t.toString(), e, r, n, i)
                }
                async getBalance(t) {
                    return this.provider.getBalance(t.toString())
                }
                async sendBoc(t) {
                    return this.provider.sendBoc(n.bytesToBase64(t))
                }
                async call(t, e, r = []) {
                    return this.provider.call(t.toString(), e, r)
                }
            }
            x.version = E, x.utils = n, x.Address = i, x.boc = s, x.HttpProvider = a, x.Contract = u, x.Wallets = c, x.LockupWallets = h, x.SubscriptionContract = v, x.BlockSubscription = p, x.InMemoryBlockStorage = g, x.ledger = {
                TransportWebUSB: w,
                TransportWebHID: b,
                BluetoothTransport: C,
                AppTon: o
            }, x.token = {
                nft: d,
                ft: f,
                jetton: f
            }, x.HighloadWallets = l, x.dns = A, x.dns.DnsCollection = B, x.dns.DnsItem = F, x.payments = m, x.payments.PaymentChannel = y, t.exports = x
        },
        "2514b": function(t, e, r) {
            "use strict";
            var n = r("b8fa"),
                i = Array.prototype.concat,
                s = Array.prototype.slice,
                o = t.exports = function(t) {
                    for (var e = [], r = 0, o = t.length; r < o; r++) {
                        var a = t[r];
                        n(a) ? e = i.call(e, s.call(a)) : e.push(a)
                    }
                    return e
                };
            o.wrap = function(t) {
                return function() {
                    return t(o(arguments))
                }
            }
        },
        2732: function(t, e, r) {
            r("5cc6");
            const {
                hexToBytes: n,
                bytesToHex: i
            } = r("a00c");
            class s {
                static isValid(t) {
                    try {
                        return new s(t), !0
                    } catch (e) {
                        return !1
                    }
                }
                constructor(t) {
                    if (null == t) throw "Invalid address";
                    if (t instanceof s) this.bytes = t.bytes;
                    else if (t instanceof Uint8Array) {
                        if (32 !== t.length) throw new Error("invalid bag id bytes length");
                        this.bytes = t
                    } else {
                        if ("string" !== typeof t) throw new Error("unsupported type");
                        if (64 !== t.length) throw new Error("invalid bag id hex length");
                        this.bytes = n(t)
                    }
                }
                toHex() {
                    let t = i(this.bytes);
                    while (t.length < 64) t = "0" + t;
                    return t
                }
            }
            t.exports.default = s
        },
        "27c0d": function(t, e, r) {
            const {
                Contract: n
            } = r("38a0"), {
                Cell: i
            } = r("41b0"), {
                parseAddress: s
            } = r("cdcf"), {
                BN: o
            } = r("1afa"), a
            class u extends n {
                constructor(t, e) {
                    e.wc = 0, e.code = e.code || i.oneFromBoc(a), super(t, e)
                }
                async createTransferBody(t) {
                    const e = new i;
                    return e.bits.writeUint(260734629, 32), e.bits.writeUint(t.queryId || 0, 64), e.bits.writeCoins(t.jettonAmount), e.bits.writeAddress(t.toAddress), e.bits.writeAddress(t.responseAddress), e.bits.writeBit(!1), e.bits.writeCoins(t.forwardAmount || new o(0)), t.forwardPayload ? t.forwardPayload.refs ? (e.bits.writeBit(!0), e.refs.push(t.forwardPayload)) : (e.bits.writeBit(!1), e.bits.writeBytes(t.forwardPayload)) : e.bits.writeBit(!1), e
                }
                async createBurnBody(t) {
                    const e = new i;
                    return e.bits.writeUint(1499400124, 32), e.bits.writeUint(t.queryId || 0, 64), e.bits.writeCoins(t.jettonAmount), e.bits.writeAddress(t.responseAddress), e
                }
                async getData() {
                    const t = await this.getAddress(),
                        e = await this.provider.call2(t.toString(), "get_wallet_data"),
                        r = e[0],
                        n = s(e[1]),
                        i = s(e[2]),
                        o = e[3];
                    return {
                        balance: r,
                        ownerAddress: n,
                        jettonMinterAddress: i,
                        jettonWalletCode: o
                    }
                }
            }
            u.codeHex = a, t.exports = {
                JettonWallet: u
            }
        },
        "29f7": function(t, e, r) {
            (function(e) {
                const n = r("8691"),
                    i = r("3337").ec,
                    s = new i("secp256k1"),
                    o = r("ef8b"),
                    a = e.alloc(32, 0),
                    u = e.from("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141", "hex"),
                    c = e.from("fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f", "hex"),
                    h = s.curve.n,
                    l = h.shrn(1),
                    d = s.curve.g,
                    f = "Expected Private",
                    p = "Expected Point",
                    g = "Expected Tweak",
                    v = "Expected Hash",
                    m = "Expected Signature",
                    y = "Expected Extra Data (32 bytes)";

                function w(t) {
                    return e.isBuffer(t) && 32 === t.length
                }

                function b(t) {
                    return !!w(t) && t.compare(u) < 0
                }

                function C(t) {
                    if (!e.isBuffer(t)) return !1;
                    if (t.length < 33) return !1;
                    const r = t[0],
                        n = t.slice(1, 33);
                    if (0 === n.compare(a)) return !1;
                    if (n.compare(c) >= 0) return !1;
                    if ((2 === r || 3 === r) && 33 === t.length) {
                        try {
                            M(t)
                        } catch (s) {
                            return !1
                        }
                        return !0
                    }
                    const i = t.slice(33);
                    return 0 !== i.compare(a) && (!(i.compare(c) >= 0) && (4 === r && 65 === t.length))
                }

                function A(t) {
                    return 4 !== t[0]
                }

                function B(t) {
                    return !!C(t) && A(t)
                }

                function F(t) {
                    return !!w(t) && (t.compare(a) > 0 && t.compare(u) < 0)
                }

                function E(t) {
                    const r = t.slice(0, 32),
                        n = t.slice(32, 64);
                    return e.isBuffer(t) && 64 === t.length && r.compare(u) < 0 && n.compare(u) < 0
                }

                function x(t, e) {
                    return void 0 === t && void 0 !== e ? A(e) : void 0 === t || t
                }

                function _(t) {
                    return new n(t)
                }

                function k(t) {
                    return t.toArrayLike(e, "be", 32)
                }

                function M(t) {
                    return s.curve.decodePoint(t)
                }

                function D(t, r) {
                    return e.from(t._encode(r))
                }

                function S(t, e, r) {
                    if (!C(t)) throw new TypeError(p);
                    if (!C(e)) throw new TypeError(p);
                    const n = M(t),
                        i = M(e),
                        s = n.add(i);
                    if (s.isInfinity()) return null;
                    const o = x(r, t);
                    return D(s, o)
                }

                function I(t, e, r) {
                    if (!C(t)) throw new TypeError(p);
                    if (!b(e)) throw new TypeError(g);
                    const n = x(r, t),
                        i = M(t);
                    if (0 === e.compare(a)) return D(i, n);
                    const s = _(e),
                        o = d.mul(s),
                        u = i.add(o);
                    return u.isInfinity() ? null : D(u, n)
                }

                function N(t, e) {
                    if (!C(t)) throw new TypeError(p);
                    const r = M(t);
                    if (r.isInfinity()) throw new TypeError(p);
                    const n = x(e, t);
                    return D(r, n)
                }

                function T(t, e) {
                    if (!F(t)) throw new TypeError(f);
                    const r = _(t),
                        n = d.mul(r);
                    if (n.isInfinity()) return null;
                    const i = x(e);
                    return D(n, i)
                }

                function P(t, e, r) {
                    if (!C(t)) throw new TypeError(p);
                    if (!b(e)) throw new TypeError(g);
                    const n = x(r, t),
                        i = M(t),
                        s = _(e),
                        o = i.mul(s);
                    return o.isInfinity() ? null : D(o, n)
                }

                function O(t, e) {
                    if (!F(t)) throw new TypeError(f);
                    if (!b(e)) throw new TypeError(g);
                    const r = _(t),
                        n = _(e),
                        i = k(r.add(n).umod(h));
                    return F(i) ? i : null
                }

                function U(t, e) {
                    if (!F(t)) throw new TypeError(f);
                    if (!b(e)) throw new TypeError(g);
                    const r = _(t),
                        n = _(e),
                        i = k(r.sub(n).umod(h));
                    return F(i) ? i : null
                }

                function j(t, e) {
                    return R(t, e)
                }

                function W(t, e, r) {
                    return R(t, e, r)
                }

                function R(t, r, n) {
                    if (!w(t)) throw new TypeError(v);
                    if (!F(r)) throw new TypeError(f);
                    if (void 0 !== n && !w(n)) throw new TypeError(y);
                    const i = _(r),
                        s = _(t);
                    let a, u;
                    const c = function(t) {
                        const e = _(t),
                            r = d.mul(e);
                        return !r.isInfinity() && (a = r.x.umod(h), 0 !== a.isZero() && (u = e.invm(h).mul(s.add(i.mul(a))).umod(h), 0 !== u.isZero()))
                    };
                    o(t, r, c, F, n), u.cmp(l) > 0 && (u = h.sub(u));
                    const p = e.allocUnsafe(64);
                    return k(a).copy(p, 0), k(u).copy(p, 32), p
                }

                function L(t, e, r, n) {
                    if (!w(t)) throw new TypeError(v);
                    if (!C(e)) throw new TypeError(p);
                    if (!E(r)) throw new TypeError(m);
                    const i = M(e),
                        s = _(r.slice(0, 32)),
                        o = _(r.slice(32, 64));
                    if (n && o.cmp(l) > 0) return !1;
                    if (s.gtn(0) <= 0) return !1;
                    if (o.gtn(0) <= 0) return !1;
                    const a = _(t),
                        u = o.invm(h),
                        c = a.mul(u).umod(h),
                        f = s.mul(u).umod(h),
                        g = d.mulAdd(c, i, f);
                    if (g.isInfinity()) return !1;
                    const y = g.x,
                        b = y.umod(h);
                    return b.eq(s)
                }
                t.exports = {
                    isPoint: C,
                    isPointCompressed: B,
                    isPrivate: F,
                    pointAdd: S,
                    pointAddScalar: I,
                    pointCompress: N,
                    pointFromScalar: T,
                    pointMultiply: P,
                    privateAdd: O,
                    privateSub: U,
                    sign: j,
                    signWithEntropy: W,
                    verify: L
                }
            }).call(this, r("b639").Buffer)
        },
        "380f4": function(t, e, r) {
            "use strict";
            var n = r("8b5a"),
                i = r("7850");
            t.exports = function(t, e) {
                return t && !n(e) ? i(t, e) : e
            }
        },
        "38a0": function(t, e, r) {
            const {
                Cell: n
            } = r("41b0"), {
                Address: i,
                bytesToBase64: s,
                bytesToHex: o,
                BN: a
            } = r("1afa");
            class u {
                constructor(t, e) {
                    this.provider = t, this.options = e, this.address = e.address ? new i(e.address) : null, e.wc || (e.wc = this.address ? this.address.wc : 0), this.methods = {}
                }
                async getAddress() {
                    return this.address || (this.address = (await this.createStateInit()).address), this.address
                }
                createCodeCell() {
                    if (!this.options.code) throw new Error("Contract: options.code is not defined");
                    return this.options.code
                }
                createDataCell() {
                    return new n
                }
                async createStateInit() {
                    const t = this.createCodeCell(),
                        e = this.createDataCell(),
                        r = u.createStateInit(t, e),
                        n = await r.hash(),
                        s = new i(this.options.wc + ":" + o(n));
                    return {
                        stateInit: r,
                        address: s,
                        code: t,
                        data: e
                    }
                }
                static createStateInit(t, e, r = null, i = null, s = null) {
                    if (r) throw "Library in state init is not implemented";
                    if (i) throw "Split depth in state init is not implemented";
                    if (s) throw "Ticktock in state init is not implemented";
                    const o = new n;
                    return o.bits.writeBitArray([Boolean(i), Boolean(s), Boolean(t), Boolean(e), Boolean(r)]), t && o.refs.push(t), e && o.refs.push(e), r && o.refs.push(r), o
                }
                static createInternalMessageHeader(t, e = 0, r = !0, s = null, o = !1, a = null, u = null, c = 0, h = 0, l = 0, d = 0) {
                    const f = new n;
                    if (f.bits.writeBit(!1), f.bits.writeBit(r), null !== s ? f.bits.writeBit(s) : f.bits.writeBit(new i(t).isBounceable), f.bits.writeBit(o), f.bits.writeAddress(a ? new i(a) : null), f.bits.writeAddress(new i(t)), f.bits.writeGrams(e), u) throw "Currency collections are not implemented yet";
                    return f.bits.writeBit(Boolean(u)), f.bits.writeGrams(c), f.bits.writeGrams(h), f.bits.writeUint(l, 64), f.bits.writeUint(d, 32), f
                }
                static createExternalMessageHeader(t, e = null, r = 0) {
                    const s = new n;
                    return s.bits.writeUint(2, 2), s.bits.writeAddress(e ? new i(e) : null), s.bits.writeAddress(new i(t)), s.bits.writeGrams(r), s
                }
                static createOutMsg(t, e, r, s = null) {
                    let o = new n;
                    r && (r.refs ? o = r : "string" === typeof r ? r.length > 0 && (o.bits.writeUint(0, 32), o.bits.writeString(r)) : o.bits.writeBytes(r));
                    const c = u.createInternalMessageHeader(new i(t), new a(e)),
                        h = u.createCommonMsgInfo(c, s, o);
                    return h
                }
                static createCommonMsgInfo(t, e = null, r = null) {
                    const i = new n;
                    return i.writeCell(t), e ? (i.bits.writeBit(!0), i.bits.writeBit(!0), i.refs.push(e)) : i.bits.writeBit(!1), r ? i.bits.getFreeBits() >= r.bits.getUsedBits() && i.refs.length + r.refs.length <= 4 ? (i.bits.writeBit(!1), i.writeCell(r)) : (i.bits.writeBit(!0), i.refs.push(r)) : i.bits.writeBit(!1), i
                }
                static createMethod(t, e) {
                    return {
                        getBody: async () => (await e).body,
                        getQuery: async () => (await e).message,
                        send: async () => {
                            const r = await e,
                                n = s(await r.message.toBoc(!1));
                            return t.sendBoc(n)
                        },
                        estimateFee: async () => {
                            const r = await e,
                                n = r.code ? {
                                    address: r.address.toString(!0, !0, !1),
                                    body: s(await r.body.toBoc(!1)),
                                    init_code: s(await r.code.toBoc(!1)),
                                    init_data: s(await r.data.toBoc(!1))
                                } : {
                                    address: r.address.toString(!0, !0, !0),
                                    body: s(await r.body.toBoc(!1))
                                };
                            return t.getEstimateFee(n)
                        }
                    }
                }
            }
            t.exports = {
                Contract: u
            }
        },
        "38d9": function(t, e, r) {
            "use strict";
            var n = r("1845"),
                i = r("bfb7"),
                s = r("3bdc"),
                o = r("ad92"),
                a = r("4b6c");

            function u(t) {
                if (t.cancelToken && t.cancelToken.throwIfRequested(), t.signal && t.signal.aborted) throw new a("canceled")
            }
            t.exports = function(t) {
                u(t), t.headers = t.headers || {}, t.data = i.call(t, t.data, t.headers, t.transformRequest), t.headers = n.merge(t.headers.common || {}, t.headers[t.method] || {}, t.headers), n.forEach(["delete", "get", "head", "post", "put", "patch", "common"], (function(e) {
                    delete t.headers[e]
                }));
                var e = t.adapter || o.adapter;
                return e(t).then((function(e) {
                    return u(t), e.data = i.call(t, e.data, e.headers, t.transformResponse), e
                }), (function(e) {
                    return s(e) || (u(t), e && e.response && (e.response.data = i.call(t, e.response.data, e.response.headers, t.transformResponse))), Promise.reject(e)
                }))
            }
        },
        "3bdc": function(t, e, r) {
            "use strict";
            t.exports = function(t) {
                return !(!t || !t.__CANCEL__)
            }
        },
        4151: function(t, e) {
            const r = 1e4,
                n = 1e3,
                i = t => ({
                    workchain: t.workchain,
                    shardId: t.shard,
                    shardBlockNumber: t.seqno
                });
            class s {
                constructor(t, e, i, s) {
                    this.provider = t, this.storage = e, this.onBlock = i, this.startMcBlockNumber = s ? s.startMcBlockNumber : void 0, this.mcInterval = (s ? s.mcInterval : void 0) || r, this.shardsInterval = (s ? s.shardsInterval : void 0) || n
                }
                async start() {
                    if (this.stop(), !this.startMcBlockNumber && (this.startMcBlockNumber = (await this.provider.getMasterchainInfo()).last.seqno, !this.startMcBlockNumber)) throw new Error("Cannot get start mc block number from provider");
                    const t = await this.provider.getMasterchainBlockHeader(this.startMcBlockNumber);
                    if (this.startLT = t.end_lt, !this.startLT) throw new Error("Cannot get startLT from provider");
                    let e = !1;
                    const r = async () => {
                        if (!e) {
                            e = !0;
                            try {
                                const t = await this.storage.getLastMasterchainBlockNumber() || this.startMcBlockNumber;
                                if (!t) throw new Error("no init masterchain block in storage");
                                const e = (await this.provider.getMasterchainInfo()).last.seqno;
                                if (!e) throw new Error("invalid last masterchain block from provider");
                                for (let r = t + 1; r < e; r++) {
                                    const t = await this.provider.getBlockShards(r),
                                        e = await this.provider.getMasterchainBlockHeader(r);
                                    await this.onBlock(e, t), await this.storage.insertBlocks(r, t.shards.map(i))
                                }
                            } catch (t) {
                                console.error(t)
                            }
                            e = !1
                        }
                    };
                    this.mcIntervalId = setInterval(() => r(), this.mcInterval), r();
                    let n = !1;
                    const s = async () => {
                        if (!n) {
                            n = !0;
                            try {
                                const t = await this.storage.getUnprocessedShardBlock();
                                if (t) {
                                    const {
                                        workchain: e,
                                        shardId: r,
                                        shardBlockNumber: n
                                    } = t, s = await this.provider.getBlockHeader(e, r, n);
                                    if (s.end_lt < this.startLT) await this.storage.setBlockProcessed(e, r, n, []);
                                    else {
                                        await this.onBlock(s);
                                        const t = s.prev_blocks.map(i);
                                        await this.storage.setBlockProcessed(e, r, n, t)
                                    }
                                }
                            } catch (t) {
                                console.log(t)
                            }
                            n = !1
                        }
                    };
                    this.shardsIntervalId = setInterval(() => s(), this.shardsInterval)
                }
                stop() {
                    clearInterval(this.mcIntervalId), clearInterval(this.shardsIntervalId)
                }
            }
            t.exports = {
                BlockSubscription: s
            }
        },
        "41b0": function(t, e, r) {
            const {
                BitString: n
            } = r("5a63"), {
                Cell: i
            } = r("e774"), {
                Slice: s
            } = r("a3a5");
            t.exports = {
                BitString: n,
                Cell: i,
                Slice: s
            }
        },
        "43a5": function(t, e, r) {
            const {
                Contract: n
            } = r("38a0"), {
                Cell: i
            } = r("41b0"), {
                parseAddress: s
            } = r("cdcf"), {
                BN: o
            } = r("1afa"), a
            class u extends n {
                constructor(t, e) {
                    e.wc = 0, e.code = e.code || i.oneFromBoc(a), super(t, e), this.methods.getData = this.getData.bind(this)
                }
                createDataCell() {
                    const t = new i;
                    t.bits.writeAddress(this.options.marketplaceAddress), t.bits.writeAddress(this.options.nftAddress), t.bits.writeAddress(null), t.bits.writeCoins(this.options.fullPrice);
                    const e = new i;
                    return e.bits.writeCoins(this.options.marketplaceFee), e.bits.writeAddress(this.options.royaltyAddress), e.bits.writeCoins(this.options.royaltyAmount), t.refs[0] = e, t
                }
                async getData() {
                    const t = await this.getAddress(),
                        e = await this.provider.call2(t.toString(), "get_sale_data"),
                        r = s(e[0]),
                        n = s(e[1]),
                        i = s(e[2]),
                        o = e[3],
                        a = e[4],
                        u = s(e[5]),
                        c = e[6];
                    return {
                        marketplaceAddress: r,
                        nftAddress: n,
                        nftOwnerAddress: i,
                        fullPrice: o,
                        marketplaceFee: a,
                        royaltyAddress: u,
                        royaltyAmount: c
                    }
                }
                async createCancelBody(t) {
                    const e = new i;
                    return e.bits.writeUint(3, 32), e.bits.writeUint(t.queryId || 0, 64), e
                }
            }
            u.codeHex = a, t.exports = {
                NftSale: u
            }
        },
        "4b36": function(t, e, r) {
            "use strict";
            var n = r("4b6c");

            function i(t) {
                if ("function" !== typeof t) throw new TypeError("executor must be a function.");
                var e;
                this.promise = new Promise((function(t) {
                    e = t
                }));
                var r = this;
                this.promise.then((function(t) {
                    if (r._listeners) {
                        var e, n = r._listeners.length;
                        for (e = 0; e < n; e++) r._listeners[e](t);
                        r._listeners = null
                    }
                })), this.promise.then = function(t) {
                    var e, n = new Promise((function(t) {
                        r.subscribe(t), e = t
                    })).then(t);
                    return n.cancel = function() {
                        r.unsubscribe(e)
                    }, n
                }, t((function(t) {
                    r.reason || (r.reason = new n(t), e(r.reason))
                }))
            }
            i.prototype.throwIfRequested = function() {
                if (this.reason) throw this.reason
            }, i.prototype.subscribe = function(t) {
                this.reason ? t(this.reason) : this._listeners ? this._listeners.push(t) : this._listeners = [t]
            }, i.prototype.unsubscribe = function(t) {
                if (this._listeners) {
                    var e = this._listeners.indexOf(t); - 1 !== e && this._listeners.splice(e, 1)
                }
            }, i.source = function() {
                var t, e = new i((function(e) {
                    t = e
                }));
                return {
                    token: e,
                    cancel: t
                }
            }, t.exports = i
        },
        "4b6c": function(t, e, r) {
            "use strict";

            function n(t) {
                this.message = t
            }
            n.prototype.toString = function() {
                return "Cancel" + (this.message ? ": " + this.message : "")
            }, n.prototype.__CANCEL__ = !0, t.exports = n
        },
        "4fc9": function(t, e, r) {
            const {
                Contract: n
            } = r("38a0"), {
                Cell: i
            } = r("41b0"), {
                Address: s,
                BN: o
            } = r("1afa"), {
                parseAddress: a
            } = r("cdcf"), {
                dnsResolve: u,
                categoryToBN: c
            } = r("e101");
            class h extends n {
                constructor(t, e) {
                    e.wc = 0, e.code = e.code, super(t, e), this.methods.getData = this.getData.bind(this), this.methods.getDomain = this.getDomain.bind(this), this.methods.getAuctionInfo = this.getAuctionInfo.bind(this), this.methods.getLastFillUpTime = this.getLastFillUpTime.bind(this), this.methods.resolve = this.resolve.bind(this)
                }
                createDataCell() {
                    const t = new i;
                    return t.bits.writeUint(this.options.index, 256), t.bits.writeAddress(this.options.collectionAddress), t
                }
                async getData() {
                    const t = await this.getAddress(),
                        e = await this.provider.call2(t.toString(), "get_nft_data"),
                        r = -1 === e[0].toNumber(),
                        n = e[1],
                        i = a(e[2]),
                        s = r ? a(e[3]) : null,
                        o = e[4];
                    return {
                        isInitialized: r,
                        index: n,
                        collectionAddress: i,
                        ownerAddress: s,
                        contentCell: o
                    }
                }
                async createTransferBody(t) {
                    const e = new i;
                    return e.bits.writeUint(1607220500, 32), e.bits.writeUint(t.queryId || 0, 64), e.bits.writeAddress(t.newOwnerAddress), e.bits.writeAddress(t.responseAddress), e.bits.writeBit(!1), e.bits.writeCoins(t.forwardAmount || new o(0)), e.bits.writeBit(!1), t.forwardPayload && e.bits.writeBytes(t.forwardPayload), e
                }
                createGetStaticDataBody(t) {
                    const e = new i;
                    return e.bits.writeUint(801842850, 32), e.bits.writeUint(t.queryId || 0, 64), e
                }
                async getDomain() {
                    const t = await this.getAddress(),
                        e = await this.provider.call2(t.toString(), "get_domain");
                    return (new TextDecoder).decode(e.bits.array.buffer)
                }
                async getAuctionInfo() {
                    const t = await this.getAddress(),
                        e = await this.provider.call2(t.toString(), "get_auction_info"),
                        r = a(e[0]),
                        n = e[1],
                        i = e[2].toNumber();
                    return {
                        maxBidAddress: r,
                        maxBidAmount: n,
                        auctionEndTime: i
                    }
                }
                async getLastFillUpTime() {
                    const t = await this.getAddress(),
                        e = await this.provider.call2(t.toString(), "get_last_fill_up_time");
                    return e.toNumber()
                }
                async resolve(t, e, r) {
                    const n = await this.getAddress();
                    return u(this.provider, n.toString(), t, e, r)
                }
            }
            h.createChangeContentEntryBody = async t => {
                const e = new i;
                return e.bits.writeUint(1320284409, 32), e.bits.writeUint(t.queryId || 0, 64), e.bits.writeUint(await c(t.category), 256), t.value && (e.refs[0] = t.value), e
            }, t.exports = {
                DnsItem: h
            }
        },
        "4fd1": function(t, e, r) {
            var n = r("3fb5"),
                i = r("b672"),
                s = r("8707").Buffer,
                o = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591],
                a = new Array(160);

            function u() {
                this.init(), this._w = a, i.call(this, 128, 112)
            }

            function c(t, e, r) {
                return r ^ t & (e ^ r)
            }

            function h(t, e, r) {
                return t & e | r & (t | e)
            }

            function l(t, e) {
                return (t >>> 28 | e << 4) ^ (e >>> 2 | t << 30) ^ (e >>> 7 | t << 25)
            }

            function d(t, e) {
                return (t >>> 14 | e << 18) ^ (t >>> 18 | e << 14) ^ (e >>> 9 | t << 23)
            }

            function f(t, e) {
                return (t >>> 1 | e << 31) ^ (t >>> 8 | e << 24) ^ t >>> 7
            }

            function p(t, e) {
                return (t >>> 1 | e << 31) ^ (t >>> 8 | e << 24) ^ (t >>> 7 | e << 25)
            }

            function g(t, e) {
                return (t >>> 19 | e << 13) ^ (e >>> 29 | t << 3) ^ t >>> 6
            }

            function v(t, e) {
                return (t >>> 19 | e << 13) ^ (e >>> 29 | t << 3) ^ (t >>> 6 | e << 26)
            }

            function m(t, e) {
                return t >>> 0 < e >>> 0 ? 1 : 0
            }
            n(u, i), u.prototype.init = function() {
                return this._ah = 1779033703, this._bh = 3144134277, this._ch = 1013904242, this._dh = 2773480762, this._eh = 1359893119, this._fh = 2600822924, this._gh = 528734635, this._hh = 1541459225, this._al = 4089235720, this._bl = 2227873595, this._cl = 4271175723, this._dl = 1595750129, this._el = 2917565137, this._fl = 725511199, this._gl = 4215389547, this._hl = 327033209, this
            }, u.prototype._update = function(t) {
                for (var e = this._w, r = 0 | this._ah, n = 0 | this._bh, i = 0 | this._ch, s = 0 | this._dh, a = 0 | this._eh, u = 0 | this._fh, y = 0 | this._gh, w = 0 | this._hh, b = 0 | this._al, C = 0 | this._bl, A = 0 | this._cl, B = 0 | this._dl, F = 0 | this._el, E = 0 | this._fl, x = 0 | this._gl, _ = 0 | this._hl, k = 0; k < 32; k += 2) e[k] = t.readInt32BE(4 * k), e[k + 1] = t.readInt32BE(4 * k + 4);
                for (; k < 160; k += 2) {
                    var M = e[k - 30],
                        D = e[k - 30 + 1],
                        S = f(M, D),
                        I = p(D, M);
                    M = e[k - 4], D = e[k - 4 + 1];
                    var N = g(M, D),
                        T = v(D, M),
                        P = e[k - 14],
                        O = e[k - 14 + 1],
                        U = e[k - 32],
                        j = e[k - 32 + 1],
                        W = I + O | 0,
                        R = S + P + m(W, I) | 0;
                    W = W + T | 0, R = R + N + m(W, T) | 0, W = W + j | 0, R = R + U + m(W, j) | 0, e[k] = R, e[k + 1] = W
                }
                for (var L = 0; L < 160; L += 2) {
                    R = e[L], W = e[L + 1];
                    var q = h(r, n, i),
                        K = h(b, C, A),
                        H = l(r, b),
                        V = l(b, r),
                        J = d(a, F),
                        z = d(F, a),
                        G = o[L],
                        $ = o[L + 1],
                        Z = c(a, u, y),
                        Y = c(F, E, x),
                        X = _ + z | 0,
                        Q = w + J + m(X, _) | 0;
                    X = X + Y | 0, Q = Q + Z + m(X, Y) | 0, X = X + $ | 0, Q = Q + G + m(X, $) | 0, X = X + W | 0, Q = Q + R + m(X, W) | 0;
                    var tt = V + K | 0,
                        et = H + q + m(tt, V) | 0;
                    w = y, _ = x, y = u, x = E, u = a, E = F, F = B + X | 0, a = s + Q + m(F, B) | 0, s = i, B = A, i = n, A = C, n = r, C = b, b = X + tt | 0, r = Q + et + m(b, X) | 0
                }
                this._al = this._al + b | 0, this._bl = this._bl + C | 0, this._cl = this._cl + A | 0, this._dl = this._dl + B | 0, this._el = this._el + F | 0, this._fl = this._fl + E | 0, this._gl = this._gl + x | 0, this._hl = this._hl + _ | 0, this._ah = this._ah + r + m(this._al, b) | 0, this._bh = this._bh + n + m(this._bl, C) | 0, this._ch = this._ch + i + m(this._cl, A) | 0, this._dh = this._dh + s + m(this._dl, B) | 0, this._eh = this._eh + a + m(this._el, F) | 0, this._fh = this._fh + u + m(this._fl, E) | 0, this._gh = this._gh + y + m(this._gl, x) | 0, this._hh = this._hh + w + m(this._hl, _) | 0
            }, u.prototype._hash = function() {
                var t = s.allocUnsafe(64);

                function e(e, r, n) {
                    t.writeInt32BE(e, n), t.writeInt32BE(r, n + 4)
                }
                return e(this._ah, this._al, 0), e(this._bh, this._bl, 8), e(this._ch, this._cl, 16), e(this._dh, this._dl, 24), e(this._eh, this._el, 32), e(this._fh, this._fl, 40), e(this._gh, this._gl, 48), e(this._hh, this._hl, 56), t
            }, t.exports = u
        },
        "53bc": function(t, e, r) {
            const {
                Cell: n
            } = r("41b0"), {
                Contract: i
            } = r("38a0"), {
                Address: s,
                bytesToHex: o,
                BN: a,
                toNano: u
            } = r("1afa"), {
                WalletContract: c
            } = r("df0c"), {
                parseWalletV3TransferQuery: h,
                parseWalletV3TransferBody: l
            } = r("ef5a");
            class d extends c {
                constructor(t, e) {
                    e.code = n.oneFromBoc("B5EE9C72410214010002D4000114FF00F4A413F4BCF2C80B010201200203020148040504F8F28308D71820D31FD31FD31F02F823BBF264ED44D0D31FD31FD3FFF404D15143BAF2A15151BAF2A205F901541064F910F2A3F80024A4C8CB1F5240CB1F5230CBFF5210F400C9ED54F80F01D30721C0009F6C519320D74A96D307D402FB00E830E021C001E30021C002E30001C0039130E30D03A4C8CB1F12CB1FCBFF1011121302E6D001D0D3032171B0925F04E022D749C120925F04E002D31F218210706C7567BD22821064737472BDB0925F05E003FA403020FA4401C8CA07CBFFC9D0ED44D0810140D721F404305C810108F40A6FA131B3925F07E005D33FC8258210706C7567BA923830E30D03821064737472BA925F06E30D06070201200809007801FA00F40430F8276F2230500AA121BEF2E0508210706C7567831EB17080185004CB0526CF1658FA0219F400CB6917CB1F5260CB3F20C98040FB0006008A5004810108F45930ED44D0810140D720C801CF16F400C9ED540172B08E23821064737472831EB17080185005CB055003CF1623FA0213CB6ACB1FCB3FC98040FB00925F03E20201200A0B0059BD242B6F6A2684080A06B90FA0218470D4080847A4937D29910CE6903E9FF9837812801B7810148987159F31840201580C0D0011B8C97ED44D0D70B1F8003DB29DFB513420405035C87D010C00B23281F2FFF274006040423D029BE84C600201200E0F0019ADCE76A26840206B90EB85FFC00019AF1DF6A26840106B90EB858FC0006ED207FA00D4D422F90005C8CA0715CBFFC9D077748018C8CB05CB0222CF165005FA0214CB6B12CCCCC973FB00C84014810108F451F2A7020070810108D718FA00D33FC8542047810108F451F2A782106E6F746570748018C8CB05CB025006CF165004FA0214CB6A12CB1FCB3FC973FB0002006C810108D718FA00D33F305224810108F459F2A782106473747270748018C8CB05CB025005CF165003FA0213CB6ACB1F12CB3FC973FB00000AF400C9ED54696225E5"), super(t, e), this.options.walletId || (this.options.walletId = 698983191 + this.options.wc), this.methods.deployAndInstallPlugin = e => i.createMethod(t, this.deployAndInstallPlugin(e)), this.methods.installPlugin = e => i.createMethod(t, this.installPlugin(e)), this.methods.removePlugin = e => i.createMethod(t, this.removePlugin(e)), this.methods.getPublicKey = this.getPublicKey.bind(this), this.methods.getWalletId = this.getWalletId.bind(this), this.methods.isPluginInstalled = this.isPluginInstalled.bind(this), this.methods.getPluginsList = this.getPluginsList.bind(this)
                }
                getName() {
                    return "v4R2"
                }
                createSigningMessage(t, e, r) {
                    t = t || 0, e = e || Math.floor(Date.now() / 1e3) + 60;
                    const i = new n;
                    if (i.bits.writeUint(this.options.walletId, 32), 0 === t)
                        for (let n = 0; n < 32; n++) i.bits.writeBit(1);
                    else i.bits.writeUint(e, 32);
                    return i.bits.writeUint(t, 32), r || i.bits.writeUint(0, 8), i
                }
                createDataCell() {
                    const t = new n;
                    return t.bits.writeUint(0, 32), t.bits.writeUint(this.options.walletId, 32), t.bits.writeBytes(this.options.publicKey), t.bits.writeUint(0, 1), t
                }
                async deployAndInstallPlugin(t) {
                    const {
                        secretKey: e,
                        seqno: r,
                        pluginWc: n,
                        amount: i,
                        stateInit: s,
                        body: o,
                        expireAt: a
                    } = t, u = this.createSigningMessage(r, a, !0);
                    return u.bits.writeUint(1, 8), u.bits.writeInt(n, 8), u.bits.writeGrams(i), u.refs.push(s), u.refs.push(o), this.createExternalMessage(u, e, r, !1)
                }
                async _setPlugin(t, e) {
                    const {
                        secretKey: r,
                        seqno: n,
                        amount: i,
                        queryId: o,
                        expireAt: a
                    } = t, c = new s(t.pluginAddress), h = this.createSigningMessage(n, a, !0);
                    return h.bits.writeUint(e ? 2 : 3, 8), h.bits.writeInt(c.wc, 8), h.bits.writeBytes(c.hashPart), h.bits.writeGrams(i || u("0.1")), h.bits.writeUint(o || 0, 64), this.createExternalMessage(h, r, n, !1)
                }
                async installPlugin(t) {
                    return this._setPlugin(t, !0)
                }
                async removePlugin(t) {
                    return this._setPlugin(t, !1)
                }
                async getWalletId() {
                    const t = await this.getAddress(),
                        e = await this.provider.call2(t.toString(), "get_subwallet_id");
                    return e.toNumber()
                }
                async getPublicKey() {
                    const t = await this.getAddress();
                    return this.provider.call2(t.toString(), "get_public_key")
                }
                async isPluginInstalled(t) {
                    t = new s(t);
                    const e = "0x" + o(t.hashPart),
                        r = await this.getAddress(),
                        n = await this.provider.call2(r.toString(), "is_plugin_installed", [
                            ["num", t.wc],
                            ["num", e]
                        ]);
                    return !n.isZero()
                }
                async getPluginsList() {
                    const t = t => t[0].toNumber() + ":" + t[1].toString(16),
                        e = await this.getAddress(),
                        r = await this.provider.call2(e.toString(), "get_plugin_list");
                    return r.map(t)
                }
            }
            d.parseTransferQuery = h, d.parseTransferBody = l, t.exports = {
                WalletV4ContractR2: d
            }
        },
        "55b0": function(t, e, r) {
            const {
                Cell: n
            } = r("41b0"), {
                WalletContract: i
            } = r("df0c"), {
                parseWalletV3TransferQuery: s,
                parseWalletV3TransferBody: o
            } = r("ef5a");
            class a extends i {
                createSigningMessage(t, e) {
                    t = t || 0, e = e || Math.floor(Date.now() / 1e3) + 60;
                    const r = new n;
                    if (r.bits.writeUint(this.options.walletId, 32), 0 === t)
                        for (let n = 0; n < 32; n++) r.bits.writeBit(1);
                    else r.bits.writeUint(e, 32);
                    return r.bits.writeUint(t, 32), r
                }
                createDataCell() {
                    const t = new n;
                    return t.bits.writeUint(0, 32), t.bits.writeUint(this.options.walletId, 32), t.bits.writeBytes(this.options.publicKey), t
                }
            }
            class u extends a {
                constructor(t, e) {
                    e.code = n.oneFromBoc("B5EE9C724101010100620000C0FF0020DD2082014C97BA9730ED44D0D70B1FE0A4F2608308D71820D31FD31FD31FF82313BBF263ED44D0D31FD31FD3FFD15132BAF2A15144BAF2A204F901541055F910F2A3F8009320D74A96D307D402FB00E8D101A4C8CB1FCB1FCBFFC9ED543FBE6EE0"), super(t, e), this.options.walletId || (this.options.walletId = 698983191 + this.options.wc)
                }
                getName() {
                    return "v3R1"
                }
            }
            u.parseTransferQuery = s, u.parseTransferBody = o;
            class c extends a {
                constructor(t, e) {
                    e.code = n.oneFromBoc("B5EE9C724101010100710000DEFF0020DD2082014C97BA218201339CBAB19F71B0ED44D0D31FD31F31D70BFFE304E0A4F2608308D71820D31FD31FD31FF82313BBF263ED44D0D31FD31FD3FFD15132BAF2A15144BAF2A204F901541055F910F2A3F8009320D74A96D307D402FB00E8D101A4C8CB1FCB1FCBFFC9ED5410BD6DAD"), super(t, e), this.options.walletId || (this.options.walletId = 698983191 + this.options.wc)
                }
                getName() {
                    return "v3R2"
                }
            }
            c.parseTransferQuery = s, c.parseTransferBody = o, t.exports = {
                WalletV3ContractR1: u,
                WalletV3ContractR2: c
            }
        },
        "55b8": function(t, e, r) {
            "use strict";
            var n = r("c360");
            t.exports = function(t, e, r, i, s) {
                var o = new Error(t);
                return n(o, e, r, i, s)
            }
        },
        "55d9": function(t, e, r) {
            "use strict";
            var n = function(t) {
                return i(t) && !s(t)
            };

            function i(t) {
                return !!t && "object" === typeof t
            }

            function s(t) {
                var e = Object.prototype.toString.call(t);
                return "[object RegExp]" === e || "[object Date]" === e || u(t)
            }
            var o = "function" === typeof Symbol && Symbol.for,
                a = o ? Symbol.for("react.element") : 60103;

            function u(t) {
                return t.$$typeof === a
            }

            function c(t) {
                return Array.isArray(t) ? [] : {}
            }

            function h(t, e) {
                return !1 !== e.clone && e.isMergeableObject(t) ? y(c(t), t, e) : t
            }

            function l(t, e, r) {
                return t.concat(e).map((function(t) {
                    return h(t, r)
                }))
            }

            function d(t, e) {
                if (!e.customMerge) return y;
                var r = e.customMerge(t);
                return "function" === typeof r ? r : y
            }

            function f(t) {
                return Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(t).filter((function(e) {
                    return t.propertyIsEnumerable(e)
                })) : []
            }

            function p(t) {
                return Object.keys(t).concat(f(t))
            }

            function g(t, e) {
                try {
                    return e in t
                } catch (r) {
                    return !1
                }
            }

            function v(t, e) {
                return g(t, e) && !(Object.hasOwnProperty.call(t, e) && Object.propertyIsEnumerable.call(t, e))
            }

            function m(t, e, r) {
                var n = {};
                return r.isMergeableObject(t) && p(t).forEach((function(e) {
                    n[e] = h(t[e], r)
                })), p(e).forEach((function(i) {
                    v(t, i) || (g(t, i) && r.isMergeableObject(e[i]) ? n[i] = d(i, r)(t[i], e[i], r) : n[i] = h(e[i], r))
                })), n
            }

            function y(t, e, r) {
                r = r || {}, r.arrayMerge = r.arrayMerge || l, r.isMergeableObject = r.isMergeableObject || n, r.cloneUnlessOtherwiseSpecified = h;
                var i = Array.isArray(e),
                    s = Array.isArray(t),
                    o = i === s;
                return o ? i ? r.arrayMerge(t, e, r) : m(t, e, r) : h(e, r)
            }
            y.all = function(t, e) {
                if (!Array.isArray(t)) throw new Error("first argument should be an array");
                return t.reduce((function(t, r) {
                    return y(t, r, e)
                }), {})
            };
            var w = y;
            t.exports = w
        },
        "5a63": function(t, e, r) {
            r("5cc6"), r("20bf");
            const {
                BN: n,
                bytesToHex: i
            } = r("1afa");
            class s {
                constructor(t) {
                    this.array = Uint8Array.from({
                        length: Math.ceil(t / 8)
                    }, () => 0), this.cursor = 0, this.length = t
                }
                getFreeBits() {
                    return this.length - this.cursor
                }
                getUsedBits() {
                    return this.cursor
                }
                getUsedBytes() {
                    return Math.ceil(this.cursor / 8)
                }
                get(t) {
                    return (this.array[t / 8 | 0] & 1 << 7 - t % 8) > 0
                }
                checkRange(t) {
                    if (t > this.length) throw Error("BitString overflow")
                }
                on(t) {
                    this.checkRange(t), this.array[t / 8 | 0] |= 1 << 7 - t % 8
                }
                off(t) {
                    this.checkRange(t), this.array[t / 8 | 0] &= ~(1 << 7 - t % 8)
                }
                toggle(t) {
                    this.checkRange(t), this.array[t / 8 | 0] ^= 1 << 7 - t % 8
                }
                forEach(t) {
                    const e = this.cursor;
                    for (let r = 0; r < e; r++) t(this.get(r))
                }
                writeBit(t) {
                    t && t > 0 ? this.on(this.cursor) : this.off(this.cursor), this.cursor = this.cursor + 1
                }
                writeBitArray(t) {
                    for (let e = 0; e < t.length; e++) this.writeBit(t[e])
                }
                writeUint(t, e) {
                    if (isNaN(t)) throw new Error("writeUint: value is NaN");
                    if (null === t) throw new Error("writeUint: value is null");
                    if (void 0 === t) throw new Error("writeUint: value is undefined");
                    if (!e) throw new Error("writeUint: no bitLength");
                    if (t = new n(t), 0 == e || t.toString(2).length > e) {
                        if (0 == t) return;
                        throw Error("bitLength is too small for number, got number=" + t + ",bitLength=" + e)
                    }
                    const r = t.toString(2, e);
                    for (let n = 0; n < e; n++) this.writeBit(1 == r[n])
                }
                writeInt(t, e) {
                    if (isNaN(t)) throw new Error("writeInt: value is NaN");
                    if (null === t) throw new Error("writeInt: value is null");
                    if (void 0 === t) throw new Error("writeInt: value is undefined");
                    if (!e) throw new Error("writeInt: no bitLength");
                    if (t = new n(t), 1 == e) {
                        if (-1 == t) return void this.writeBit(!0);
                        if (0 == t) return void this.writeBit(!1);
                        throw Error("Bitlength is too small for number")
                    }
                    if (t.isNeg()) {
                        this.writeBit(!0);
                        const r = new n(2),
                            i = r.pow(new n(e - 1));
                        this.writeUint(i.add(t), e - 1)
                    } else this.writeBit(!1), this.writeUint(t, e - 1)
                }
                writeUint8(t) {
                    this.writeUint(t, 8)
                }
                writeBytes(t) {
                    for (let e = 0; e < t.length; e++) this.writeUint8(t[e])
                }
                writeString(t) {
                    this.writeBytes((new TextEncoder).encode(t))
                }
                writeGrams(t) {
                    if (0 == t) this.writeUint(0, 4);
                    else {
                        t = new n(t);
                        const e = Math.ceil(t.toString(16).length / 2);
                        this.writeUint(e, 4), this.writeUint(t, 8 * e)
                    }
                }
                writeCoins(t) {
                    this.writeGrams(t)
                }
                writeAddress(t) {
                    null == t ? this.writeUint(0, 2) : (this.writeUint(2, 2), this.writeUint(0, 1), this.writeInt(t.wc, 8), this.writeBytes(t.hashPart))
                }
                writeBitString(t) {
                    t.forEach(t => {
                        this.writeBit(t)
                    })
                }
                clone() {
                    const t = new s(0);
                    return t.array = this.array.slice(0), t.length = this.length, t.cursor = this.cursor, t
                }
                toString() {
                    return this.toHex()
                }
                getTopUppedArray() {
                    const t = this.clone();
                    let e = 8 * Math.ceil(t.cursor / 8) - t.cursor;
                    if (e > 0) {
                        e -= 1, t.writeBit(!0);
                        while (e > 0) e -= 1, t.writeBit(!1)
                    }
                    return t.array = t.array.slice(0, Math.ceil(t.cursor / 8)), t.array
                }
                toHex() {
                    if (this.cursor % 4 === 0) {
                        const t = i(this.array.slice(0, Math.ceil(this.cursor / 8))).toUpperCase();
                        return this.cursor % 8 === 0 ? t : t.substr(0, t.length - 1)
                    } {
                        const t = this.clone();
                        t.writeBit(1);
                        while (t.cursor % 4 !== 0) t.writeBit(0);
                        const e = t.toHex().toUpperCase();
                        return e + "_"
                    }
                }
                setTopUppedArray(t, e = !0) {
                    if (this.length = 8 * t.length, this.array = t, this.cursor = this.length, !e && this.length) {
                        let r = !1;
                        for (let t = 0; t < 7; t++)
                            if (this.cursor -= 1, this.get(this.cursor)) {
                                r = !0, this.off(this.cursor);
                                break
                            }
                        if (!r) throw console.log(t, e), new Error("Incorrect TopUppedArray")
                    }
                }
            }
            t.exports = {
                BitString: s
            }
        },
        6012: function(t, e, r) {
            "use strict";
            t.exports = function(t, e) {
                return function() {
                    for (var r = new Array(arguments.length), n = 0; n < r.length; n++) r[n] = arguments[n];
                    return t.apply(e, r)
                }
            }
        },
        "624c": function(t, e, r) {
            (function(e) {
                r("5cc6");
                const {
                    Cell: n
                } = r("41b0"), {
                    Address: i,
                    BN: s,
                    bytesToHex: o
                } = r("1afa"), {
                    Contract: a
                } = r("38a0");
                class u {
                    constructor(t, e) {
                        this.transport = t, this.ton = e, this.ADDRESS_FORMAT_HEX = 0, this.ADDRESS_FORMAT_USER_FRIENDLY = 1, this.ADDRESS_FORMAT_URL_SAFE = 2, this.ADDRESS_FORMAT_BOUNCEABLE = 4, this.ADDRESS_FORMAT_TEST_ONLY = 8
                    }
                    async getAppConfiguration() {
                        const t = await this.transport.send(224, 1, 0, 0);
                        return {
                            version: t[0] + "." + t[1] + "." + t[2]
                        }
                    }
                    async getPublicKey(t, r) {
                        const n = e.alloc(4);
                        n.writeInt32BE(t);
                        const i = await this.transport.send(224, 2, r ? 1 : 0, 0, n),
                            s = i[0],
                            o = new Uint8Array(i.slice(1, 1 + s));
                        return {
                            publicKey: o
                        }
                    }
                    async getAddress(t, r, n) {
                        const s = e.alloc(4);
                        s.writeInt32BE(t);
                        const a = await this.transport.send(224, 5, r ? 1 : 0, n, s),
                            u = a[0],
                            c = new Uint8Array(a.slice(1, 1 + u)),
                            h = new i("0:" + o(c));
                        return {
                            address: h
                        }
                    }
                    async sign(t, r) {
                        const n = e.alloc(4);
                        n.writeInt32BE(t);
                        const i = e.concat([n, e.from(r)]),
                            s = await this.transport.send(224, 3, 0, 0, i),
                            o = s[0],
                            a = s.slice(1, 1 + o);
                        return {
                            signature: a
                        }
                    }
                    async transfer(t, r, i, s, o, u) {
                        const c = 3,
                            h = await r.createTransferMessage(null, i, s, o, null, c, !0),
                            l = e.alloc(4);
                        l.writeInt32BE(t);
                        const d = e.concat([l, e.from(await h.signingMessage.toBoc())]),
                            f = await this.transport.send(224, 4, u, 0, d),
                            p = f[0],
                            g = f.slice(1, 1 + p),
                            v = new Uint8Array(g),
                            m = new n;
                        m.bits.writeBytes(v), m.writeCell(h.signingMessage);
                        let y = null,
                            w = null,
                            b = null;
                        if (0 === o) {
                            const t = await r.createStateInit();
                            y = t.stateInit, w = t.code, b = t.data
                        }
                        const C = await r.getAddress(),
                            A = a.createExternalMessageHeader(C),
                            B = a.createCommonMsgInfo(A, y, m),
                            F = new Promise(t => {
                                t({
                                    address: C,
                                    message: B,
                                    body: m,
                                    signature: v,
                                    signingMessage: h.signingMessage,
                                    stateInit: y,
                                    code: w,
                                    data: b
                                })
                            });
                        return a.createMethod(this.ton.provider, F)
                    }
                }
                t.exports = u
            }).call(this, r("b639").Buffer)
        },
        6343: function(t, e, r) {
            "use strict";
            r.d(e, "a", (function() {
                return X
            })), r.d(e, "b", (function() {
                return y
            })), r.d(e, "c", (function() {
                return U
            })), r.d(e, "d", (function() {
                return M
            })), r.d(e, "e", (function() {
                return O
            }));
            var n = r("017d");
            const i = [];

            function s(t, e) {
                return {
                    subscribe: o(t, e).subscribe
                }
            }

            function o(t, e = n["b"]) {
                let r;
                const s = new Set;

                function o(e) {
                    if (Object(n["d"])(t, e) && (t = e, r)) {
                        const e = !i.length;
                        for (const r of s) r[1](), i.push(r, t);
                        if (e) {
                            for (let t = 0; t < i.length; t += 2) i[t][0](i[t + 1]);
                            i.length = 0
                        }
                    }
                }

                function a(e) {
                    o(e(t))
                }

                function u(i, a = n["b"]) {
                    const u = [i, a];
                    return s.add(u), 1 === s.size && (r = e(o) || n["b"]), i(t), () => {
                        s.delete(u), 0 === s.size && (r(), r = null)
                    }
                }
                return {
                    set: o,
                    update: a,
                    subscribe: u
                }
            }

            function a(t, e, r) {
                const i = !Array.isArray(t),
                    o = i ? [t] : t,
                    a = e.length < 2;
                return s(r, t => {
                    let r = !1;
                    const s = [];
                    let u = 0,
                        c = n["b"];
                    const h = () => {
                            if (u) return;
                            c();
                            const r = e(i ? s[0] : s, t);
                            a ? t(r) : c = Object(n["a"])(r) ? r : n["b"]
                        },
                        l = o.map((t, e) => Object(n["e"])(t, t => {
                            s[e] = t, u &= ~(1 << e), r && h()
                        }, () => {
                            u |= 1 << e
                        }));
                    return r = !0, h(),
                        function() {
                            Object(n["c"])(l), c()
                        }
                })
            }
            var u = r("55d9"),
                c = r.n(u),
                h = r("e902");
            const l = {},
                d = (t, e, r) => r ? (e in l || (l[e] = {}), t in l[e] || (l[e][t] = r), r) : r,
                f = (t, e) => {
                    if (null == e) return;
                    if (e in l && t in l[e]) return l[e][t];
                    const r = T(e);
                    for (let n = 0; n < r.length; n++) {
                        const i = m(r[n], t);
                        if (i) return d(t, e, i)
                    }
                };
            let p;
            const g = o({});

            function v(t) {
                return t in p
            }

            function m(t, e) {
                if (!v(t)) return null;
                const r = function(t) {
                    return p[t] || null
                }(t);
                return function(t, e) {
                    if (null == e) return;
                    if (e in t) return t[e];
                    const r = e.split(".");
                    let n = t;
                    for (let i = 0; i < r.length; i++)
                        if ("object" == typeof n) {
                            if (i > 0) {
                                const t = r.slice(i, r.length).join(".");
                                if (t in n) {
                                    n = n[t];
                                    break
                                }
                            }
                            n = n[r[i]]
                        } else n = void 0;
                    return n
                }(r, e)
            }

            function y(t, ...e) {
                delete l[t], g.update(r => (r[t] = c.a.all([r[t] || {}, ...e]), r))
            }
            a([g], ([t]) => Object.keys(t));
            g.subscribe(t => p = t);
            const w = {};

            function b(t) {
                return w[t]
            }

            function C(t) {
                return null != t && T(t).some(t => {
                    var e;
                    return null === (e = b(t)) || void 0 === e ? void 0 : e.size
                })
            }

            function A(t, e) {
                const r = Promise.all(e.map(e => (function(t, e) {
                    w[t].delete(e), 0 === w[t].size && delete w[t]
                }(t, e), e().then(t => t.default || t))));
                return r.then(e => y(t, ...e))
            }
            const B = {};

            function F(t) {
                if (!C(t)) return t in B ? B[t] : Promise.resolve();
                const e = function(t) {
                    return T(t).map(t => {
                        const e = b(t);
                        return [t, e ? [...e] : []]
                    }).filter(([, t]) => t.length > 0)
                }(t);
                return B[t] = Promise.all(e.map(([t, e]) => A(t, e))).then(() => {
                    if (C(t)) return F(t);
                    delete B[t]
                }), B[t]
            }
            /*! *****************************************************************************
            Copyright (c) Microsoft Corporation.

            Permission to use, copy, modify, and/or distribute this software for any
            purpose with or without fee is hereby granted.

            THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
            REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
            AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
            INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
            LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
            OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
            PERFORMANCE OF THIS SOFTWARE.
            ***************************************************************************** */
            function E(t, e) {
                var r = {};
                for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && e.indexOf(n) < 0 && (r[n] = t[n]);
                if (null != t && "function" == typeof Object.getOwnPropertySymbols) {
                    var i = 0;
                    for (n = Object.getOwnPropertySymbols(t); i < n.length; i++) e.indexOf(n[i]) < 0 && Object.prototype.propertyIsEnumerable.call(t, n[i]) && (r[n[i]] = t[n[i]])
                }
                return r
            }

            function x({
                locale: t,
                id: e
            }) {
                console.warn(`[svelte-i18n] The message "${e}" was not found in "${T(t).join('", "')}".${C(P())?"\n\nNote: there are at least one loader still registered to this locale that wasn't executed.":""}`)
            }
            const _ = {
                fallbackLocale: null,
                loadingDelay: 200,
                formats: {
                    number: {
                        scientific: {
                            notation: "scientific"
                        },
                        engineering: {
                            notation: "engineering"
                        },
                        compactLong: {
                            notation: "compact",
                            compactDisplay: "long"
                        },
                        compactShort: {
                            notation: "compact",
                            compactDisplay: "short"
                        }
                    },
                    date: {
                        short: {
                            month: "numeric",
                            day: "numeric",
                            year: "2-digit"
                        },
                        medium: {
                            month: "short",
                            day: "numeric",
                            year: "numeric"
                        },
                        long: {
                            month: "long",
                            day: "numeric",
                            year: "numeric"
                        },
                        full: {
                            weekday: "long",
                            month: "long",
                            day: "numeric",
                            year: "numeric"
                        }
                    },
                    time: {
                        short: {
                            hour: "numeric",
                            minute: "numeric"
                        },
                        medium: {
                            hour: "numeric",
                            minute: "numeric",
                            second: "numeric"
                        },
                        long: {
                            hour: "numeric",
                            minute: "numeric",
                            second: "numeric",
                            timeZoneName: "short"
                        },
                        full: {
                            hour: "numeric",
                            minute: "numeric",
                            second: "numeric",
                            timeZoneName: "short"
                        }
                    }
                },
                warnOnMissingMessages: !0,
                handleMissingMessage: void 0,
                ignoreTag: !0
            };

            function k() {
                return _
            }

            function M(t) {
                const {
                    formats: e
                } = t, r = E(t, ["formats"]), n = t.initialLocale || t.fallbackLocale;
                return r.warnOnMissingMessages && (delete r.warnOnMissingMessages, null == r.handleMissingMessage ? r.handleMissingMessage = x : console.warn('[svelte-i18n] The "warnOnMissingMessages" option is deprecated. Please use the "handleMissingMessage" option instead.')), Object.assign(_, r, {
                    initialLocale: n
                }), e && ("number" in e && Object.assign(_.formats.number, e.number), "date" in e && Object.assign(_.formats.date, e.date), "time" in e && Object.assign(_.formats.time, e.time)), O.set(n)
            }
            const D = o(!1);
            let S;
            const I = o(null);

            function N(t) {
                return t.split("-").map((t, e, r) => r.slice(0, e + 1).join("-")).reverse()
            }

            function T(t, e = k().fallbackLocale) {
                const r = N(t);
                return e ? [...new Set([...r, ...N(e)])] : r
            }

            function P() {
                return null != S ? S : void 0
            }
            I.subscribe(t => {
                S = null != t ? t : void 0, "undefined" != typeof window && null != t && document.documentElement.setAttribute("lang", t)
            });
            const O = Object.assign(Object.assign({}, I), {
                    set: t => {
                        if (t && function(t) {
                                if (null == t) return;
                                const e = T(t);
                                for (let r = 0; r < e.length; r++) {
                                    const t = e[r];
                                    if (v(t)) return t
                                }
                            }(t) && C(t)) {
                            const {
                                loadingDelay: e
                            } = k();
                            let r;
                            return "undefined" != typeof window && null != P() && e ? r = window.setTimeout(() => D.set(!0), e) : D.set(!0), F(t).then(() => {
                                I.set(t)
                            }).finally(() => {
                                clearTimeout(r), D.set(!1)
                            })
                        }
                        return I.set(t)
                    }
                }),
                U = () => "undefined" == typeof window ? null : window.navigator.language || window.navigator.languages[0],
                j = t => {
                    const e = Object.create(null);
                    return r => {
                        const n = JSON.stringify(r);
                        return n in e ? e[n] : e[n] = t(r)
                    }
                },
                W = (t, e) => {
                    const {
                        formats: r
                    } = k();
                    if (t in r && e in r[t]) return r[t][e];
                    throw new Error(`[svelte-i18n] Unknown "${e}" ${t} format.`)
                },
                R = j(t => {
                    var {
                        locale: e,
                        format: r
                    } = t, n = E(t, ["locale", "format"]);
                    if (null == e) throw new Error('[svelte-i18n] A "locale" must be set to format numbers');
                    return r && (n = W("number", r)), new Intl.NumberFormat(e, n)
                }),
                L = j(t => {
                    var {
                        locale: e,
                        format: r
                    } = t, n = E(t, ["locale", "format"]);
                    if (null == e) throw new Error('[svelte-i18n] A "locale" must be set to format dates');
                    return r ? n = W("date", r) : 0 === Object.keys(n).length && (n = W("date", "short")), new Intl.DateTimeFormat(e, n)
                }),
                q = j(t => {
                    var {
                        locale: e,
                        format: r
                    } = t, n = E(t, ["locale", "format"]);
                    if (null == e) throw new Error('[svelte-i18n] A "locale" must be set to format time values');
                    return r ? n = W("time", r) : 0 === Object.keys(n).length && (n = W("time", "short")), new Intl.DateTimeFormat(e, n)
                }),
                K = (t = {}) => {
                    var {
                        locale: e = P()
                    } = t, r = E(t, ["locale"]);
                    return R(Object.assign({
                        locale: e
                    }, r))
                },
                H = (t = {}) => {
                    var {
                        locale: e = P()
                    } = t, r = E(t, ["locale"]);
                    return L(Object.assign({
                        locale: e
                    }, r))
                },
                V = (t = {}) => {
                    var {
                        locale: e = P()
                    } = t, r = E(t, ["locale"]);
                    return q(Object.assign({
                        locale: e
                    }, r))
                },
                J = j((t, e = P()) => new h["a"](t, e, k().formats, {
                    ignoreTag: k().ignoreTag
                })),
                z = (t, e = {}) => {
                    var r, n, i, s;
                    let o = e;
                    "object" == typeof t && (o = t, t = o.id);
                    const {
                        values: a,
                        locale: u = P(),
                        default: c
                    } = o;
                    if (null == u) throw new Error("[svelte-i18n] Cannot format a message without first setting the initial locale.");
                    let h = f(t, u);
                    if (h) {
                        if ("string" != typeof h) return console.warn(`[svelte-i18n] Message with id "${t}" must be of type "string", found: "${typeof h}". Gettin its value through the "$format" method is deprecated; use the "json" method instead.`), h
                    } else h = null !== (s = null !== (i = null === (n = (r = k()).handleMissingMessage) || void 0 === n ? void 0 : n.call(r, {
                        locale: u,
                        id: t,
                        defaultValue: c
                    })) && void 0 !== i ? i : c) && void 0 !== s ? s : t;
                    if (!a) return h;
                    let l = h;
                    try {
                        l = J(h, u).format(a)
                    } catch (e) {
                        console.warn(`[svelte-i18n] Message "${t}" has syntax error:`, e.message)
                    }
                    return l
                },
                G = (t, e) => V(e).format(t),
                $ = (t, e) => H(e).format(t),
                Z = (t, e) => K(e).format(t),
                Y = (t, e = P()) => f(t, e),
                X = a([O, g], () => z);
            a([O], () => G), a([O], () => $), a([O], () => Z), a([O, g], () => Y)
        },
        "65e1": function(t, e, r) {
            "use strict";
            t.exports = function(t) {
                return "object" === typeof t && !0 === t.isAxiosError
            }
        },
        6746: function(t, e, r) {
            const {
                Cell: n
            } = r("41b0"), {
                Address: i,
                BN: s,
                toNano: o,
                bytesToHex: a,
                hexToBytes: u,
                nacl: c,
                stringToBytes: h,
                bytesToBase64: l
            } = r("1afa"), {
                Contract: d
            } = r("38a0"), {
                SimpleWalletContractR1: f,
                SimpleWalletContractR2: p,
                SimpleWalletContractR3: g
            } = r("9992"), {
                WalletV2ContractR1: v,
                WalletV2ContractR2: m
            } = r("7376"), {
                WalletV3ContractR1: y,
                WalletV3ContractR2: w
            } = r("55b0"), {
                WalletV4ContractR1: b
            } = r("6c00"), {
                WalletV4ContractR2: C
            } = r("53bc"), A = {
                simpleR1: f,
                simpleR2: p,
                simpleR3: g,
                v2R1: v,
                v2R2: m,
                v3R1: y,
                v3R2: w,
                v4R1: b,
                v4R2: C
            }, B = [f, p, g, v, m, y, w, b, C];
            class F {
                constructor(t) {
                    this.provider = t, this.all = A, this.list = B, this.defaultVersion = "v3R1", this.default = this.all[this.defaultVersion]
                }
                create(t) {
                    return new this.default(this.provider, t)
                }
            }
            F.all = A, F.list = B, t.exports.default = F
        },
        "694e": function(t, e, r) {
            const {
                Cell: n
            } = r("41b0"), {
                Address: i,
                bytesToHex: s
            } = r("1afa"), {
                DNS_CATEGORY_NEXT_RESOLVER: o,
                DNS_CATEGORY_SITE: a,
                DNS_CATEGORY_WALLET: u,
                DNS_CATEGORY_STORAGE: c,
                createSmartContractAddressRecord: h,
                createAdnlAddressRecord: l,
                createStorageBagIdRecord: d,
                createNextResolverRecord: f,
                parseSmartContractAddressRecord: p,
                parseAdnlAddressRecord: g,
                parseStorageBagIdRecord: v,
                parseSiteRecord: m,
                parseNextResolverRecord: y,
                dnsResolve: w
            } = r("e101");
            class b {
                constructor(t) {
                    this.provider = t
                }
                async getRootDnsAddress() {
                    const t = await this.provider.getConfigParam(4),
                        e = t.bits.array;
                    if (32 !== e.length) throw new Error("Invalid ConfigParam 4 length " + e.length);
                    const r = s(e);
                    return new i("-1:" + r)
                }
                async resolve(t, e, r) {
                    const n = await this.getRootDnsAddress();
                    return w(this.provider, n.toString(), t, e, r)
                }
                getWalletAddress(t) {
                    return this.resolve(t, u)
                }
                getSiteAddress(t) {
                    return this.resolve(t, a)
                }
            }
            b.resolve = w, b.createSmartContractAddressRecord = h, b.createAdnlAddressRecord = l, b.createStorageBagIdRecord = d, b.createNextResolverRecord = f, b.parseNextResolverRecord = y, b.parseAdnlAddressRecord = g, b.parseStorageBagIdRecord = v, b.parseSiteRecord = m, b.parseSmartContractAddressRecord = p, b.DNS_CATEGORY_NEXT_RESOLVER = o, b.DNS_CATEGORY_WALLET = u, b.DNS_CATEGORY_SITE = a, b.DNS_CATEGORY_STORAGE = c, t.exports.default = b
        },
        "69f2": function(t, e, r) {
            e = t.exports = function(t) {
                t = t.toLowerCase();
                var r = e[t];
                if (!r) throw new Error(t + " is not supported (we accept pull requests)");
                return new r
            };
            e.sha = r("087f"), e.sha1 = r("7e78"), e.sha224 = r("72aa"), e.sha256 = r("a255"), e.sha384 = r("b837"), e.sha512 = r("4fd1")
        },
        "6c00": function(t, e, r) {
            const {
                Cell: n
            } = r("41b0"), {
                Contract: i
            } = r("38a0"), {
                Address: s,
                bytesToHex: o,
                BN: a
            } = r("1afa"), {
                WalletContract: u
            } = r("df0c"), {
                parseWalletV3TransferQuery: c,
                parseWalletV3TransferBody: h
            } = r("ef5a");
            class l extends u {
                constructor(t, e) {
                    e.code = n.oneFromBocsuper(t, e), this.options.walletId || (this.options.walletId = 698983191 + this.options.wc), this.methods.getPublicKey = this.getPublicKey.bind(this)
                }
                getName() {
                    return "v4R1"
                }
                createSigningMessage(t, e, r) {
                    t = t || 0, e = e || Math.floor(Date.now() / 1e3) + 60;
                    const i = new n;
                    if (i.bits.writeUint(this.options.walletId, 32), 0 === t)
                        for (let n = 0; n < 32; n++) i.bits.writeBit(1);
                    else i.bits.writeUint(e, 32);
                    return i.bits.writeUint(t, 32), r || i.bits.writeUint(0, 8), i
                }
                createDataCell() {
                    const t = new n;
                    return t.bits.writeUint(0, 32), t.bits.writeUint(this.options.walletId, 32), t.bits.writeBytes(this.options.publicKey), t.bits.writeUint(0, 1), t
                }
                async getPublicKey() {
                    const t = await this.getAddress();
                    return this.provider.call2(t.toString(), "get_public_key")
                }
            }
            l.parseTransferQuery = c, l.parseTransferBody = h, t.exports = {
                WalletV4ContractR1: l
            }
        },
        7235: function(t, e, r) {
            const {
                Contract: n
            } = r("38a0"), {
                Cell: i
            } = r("41b0"), {
                hexToBytes: s,
                BN: o,
                nacl: a,
                bytesToBase64: u
            } = r("1afa");
            class c extends n {
                constructor(t, e) {
                    e.code = i.oneFromBocsuper(t, e), this.methods.pay = () => n.createMethod(t, this.createPayExternalMessage()), this.methods.getSubscriptionData = this.getSubscriptionData.bind(this)
                }
                createDataCell() {
                    const t = new i;
                    return t.bits.writeAddress(this.options.wallet), t.bits.writeAddress(this.options.beneficiary), t.bits.writeGrams(this.options.amount), t.bits.writeUint(this.options.period, 32), t.bits.writeUint(this.options.startAt, 32), t.bits.writeUint(this.options.timeout, 32), t.bits.writeUint(0, 32), t.bits.writeUint(0, 32), t.bits.writeUint(0, 8), t.bits.writeUint(this.options.subscriptionId, 32), t
                }
                createBody() {
                    const t = new i;
                    return t.bits.writeUint(new o(1886156135).add(new o(2147483648)), 32), t
                }
                createSelfDestructBody() {
                    const t = new i;
                    return t.bits.writeUint(1685288050, 32), t
                }
                async getSubscriptionData() {
                    const t = t => t[0].toNumber() + ":" + t[1].toString(16),
                        e = await this.getAddress(),
                        r = await this.provider.call2(e.toString(), "get_subscription_data"),
                        n = t(r[0]),
                        i = t(r[1]),
                        s = r[2],
                        o = r[3].toNumber(),
                        a = r[4].toNumber(),
                        u = r[5].toNumber(),
                        c = r[6].toNumber(),
                        h = r[7].toNumber(),
                        l = r[8].toNumber(),
                        d = r[9].toNumber();
                    return {
                        wallet: n,
                        beneficiary: i,
                        amount: s,
                        period: o,
                        startAt: a,
                        timeout: u,
                        lastPayment: c,
                        lastRequest: h,
                        failedAttempts: l,
                        subscriptionId: d
                    }
                }
                async createPayExternalMessage() {
                    const t = await this.getAddress(),
                        e = n.createExternalMessageHeader(t),
                        r = n.createCommonMsgInfo(e, null, null),
                        s = new i;
                    return s.bits.writeUint(Math.floor(Date.now() / 1e3), 64), {
                        address: t,
                        message: r,
                        body: s
                    }
                }
            }
            t.exports = {
                SubscriptionContract: c
            }
        },
        "72aa": function(t, e, r) {
            var n = r("3fb5"),
                i = r("a255"),
                s = r("b672"),
                o = r("8707").Buffer,
                a = new Array(64);

            function u() {
                this.init(), this._w = a, s.call(this, 64, 56)
            }
            n(u, i), u.prototype.init = function() {
                return this._a = 3238371032, this._b = 914150663, this._c = 812702999, this._d = 4144912697, this._e = 4290775857, this._f = 1750603025, this._g = 1694076839, this._h = 3204075428, this
            }, u.prototype._hash = function() {
                var t = o.allocUnsafe(28);
                return t.writeInt32BE(this._a, 0), t.writeInt32BE(this._b, 4), t.writeInt32BE(this._c, 8), t.writeInt32BE(this._d, 12), t.writeInt32BE(this._e, 16), t.writeInt32BE(this._f, 20), t.writeInt32BE(this._g, 24), t
            }, t.exports = u
        },
        7376: function(t, e, r) {
            const {
                Cell: n
            } = r("41b0"), {
                WalletContract: i
            } = r("df0c");
            class s extends i {
                createSigningMessage(t, e) {
                    t = t || 0, e = e || Math.floor(Date.now() / 1e3) + 60;
                    const r = new n;
                    if (r.bits.writeUint(t, 32), 0 === t)
                        for (let n = 0; n < 32; n++) r.bits.writeBit(1);
                    else r.bits.writeUint(e, 32);
                    return r
                }
            }
            class o extends s {
                constructor(t, e) {
                    e.code = n.oneFromBoc("B5EE9C724101010100570000AAFF0020DD2082014C97BA9730ED44D0D70B1FE0A4F2608308D71820D31FD31F01F823BBF263ED44D0D31FD3FFD15131BAF2A103F901541042F910F2A2F800029320D74A96D307D402FB00E8D1A4C8CB1FCBFFC9ED54A1370BB6"), super(t, e)
                }
                getName() {
                    return "v2R1"
                }
            }
            class a extends s {
                constructor(t, e) {
                    e.code = n.oneFromBoc("B5EE9C724101010100630000C2FF0020DD2082014C97BA218201339CBAB19C71B0ED44D0D31FD70BFFE304E0A4F2608308D71820D31FD31F01F823BBF263ED44D0D31FD3FFD15131BAF2A103F901541042F910F2A2F800029320D74A96D307D402FB00E8D1A4C8CB1FCBFFC9ED54044CD7A1"), super(t, e)
                }
                getName() {
                    return "v2R2"
                }
            }
            t.exports = {
                WalletV2ContractR1: o,
                WalletV2ContractR2: a
            }
        },
        "74b3": function(t, e, r) {
            "use strict";
            var n = r("1845"),
                i = r("f0a4"),
                s = r("d017"),
                o = r("38d9"),
                a = r("cd67"),
                u = r("c3ee"),
                c = u.validators;

            function h(t) {
                this.defaults = t, this.interceptors = {
                    request: new s,
                    response: new s
                }
            }
            h.prototype.request = function(t) {
                "string" === typeof t ? (t = arguments[1] || {}, t.url = arguments[0]) : t = t || {}, t = a(this.defaults, t), t.method ? t.method = t.method.toLowerCase() : this.defaults.method ? t.method = this.defaults.method.toLowerCase() : t.method = "get";
                var e = t.transitional;
                void 0 !== e && u.assertOptions(e, {
                    silentJSONParsing: c.transitional(c.boolean),
                    forcedJSONParsing: c.transitional(c.boolean),
                    clarifyTimeoutError: c.transitional(c.boolean)
                }, !1);
                var r = [],
                    n = !0;
                this.interceptors.request.forEach((function(e) {
                    "function" === typeof e.runWhen && !1 === e.runWhen(t) || (n = n && e.synchronous, r.unshift(e.fulfilled, e.rejected))
                }));
                var i, s = [];
                if (this.interceptors.response.forEach((function(t) {
                        s.push(t.fulfilled, t.rejected)
                    })), !n) {
                    var h = [o, void 0];
                    Array.prototype.unshift.apply(h, r), h = h.concat(s), i = Promise.resolve(t);
                    while (h.length) i = i.then(h.shift(), h.shift());
                    return i
                }
                var l = t;
                while (r.length) {
                    var d = r.shift(),
                        f = r.shift();
                    try {
                        l = d(l)
                    } catch (p) {
                        f(p);
                        break
                    }
                }
                try {
                    i = o(l)
                } catch (p) {
                    return Promise.reject(p)
                }
                while (s.length) i = i.then(s.shift(), s.shift());
                return i
            }, h.prototype.getUri = function(t) {
                return t = a(this.defaults, t), i(t.url, t.params, t.paramsSerializer).replace(/^\?/, "")
            }, n.forEach(["delete", "get", "head", "options"], (function(t) {
                h.prototype[t] = function(e, r) {
                    return this.request(a(r || {}, {
                        method: t,
                        url: e,
                        data: (r || {}).data
                    }))
                }
            })), n.forEach(["post", "put", "patch"], (function(t) {
                h.prototype[t] = function(e, r, n) {
                    return this.request(a(n || {}, {
                        method: t,
                        url: e,
                        data: r
                    }))
                }
            })), t.exports = h
        },
        7850: function(t, e, r) {
            "use strict";
            t.exports = function(t, e) {
                return e ? t.replace(/\/+$/, "") + "/" + e.replace(/^\/+/, "") : t
            }
        },
        "7d72": function(t, e, r) {
            "use strict";
            var n = r("8707").Buffer,
                i = n.isEncoding || function(t) {
                    switch (t = "" + t, t && t.toLowerCase()) {
                        case "hex":
                        case "utf8":
                        case "utf-8":
                        case "ascii":
                        case "binary":
                        case "base64":
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                        case "raw":
                            return !0;
                        default:
                            return !1
                    }
                };

            function s(t) {
                if (!t) return "utf8";
                var e;
                while (1) switch (t) {
                    case "utf8":
                    case "utf-8":
                        return "utf8";
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                        return "utf16le";
                    case "latin1":
                    case "binary":
                        return "latin1";
                    case "base64":
                    case "ascii":
                    case "hex":
                        return t;
                    default:
                        if (e) return;
                        t = ("" + t).toLowerCase(), e = !0
                }
            }

            function o(t) {
                var e = s(t);
                if ("string" !== typeof e && (n.isEncoding === i || !i(t))) throw new Error("Unknown encoding: " + t);
                return e || t
            }

            function a(t) {
                var e;
                switch (this.encoding = o(t), this.encoding) {
                    case "utf16le":
                        this.text = p, this.end = g, e = 4;
                        break;
                    case "utf8":
                        this.fillLast = l, e = 4;
                        break;
                    case "base64":
                        this.text = v, this.end = m, e = 3;
                        break;
                    default:
                        return this.write = y, void(this.end = w)
                }
                this.lastNeed = 0, this.lastTotal = 0, this.lastChar = n.allocUnsafe(e)
            }

            function u(t) {
                return t <= 127 ? 0 : t >> 5 === 6 ? 2 : t >> 4 === 14 ? 3 : t >> 3 === 30 ? 4 : t >> 6 === 2 ? -1 : -2
            }

            function c(t, e, r) {
                var n = e.length - 1;
                if (n < r) return 0;
                var i = u(e[n]);
                return i >= 0 ? (i > 0 && (t.lastNeed = i - 1), i) : --n < r || -2 === i ? 0 : (i = u(e[n]), i >= 0 ? (i > 0 && (t.lastNeed = i - 2), i) : --n < r || -2 === i ? 0 : (i = u(e[n]), i >= 0 ? (i > 0 && (2 === i ? i = 0 : t.lastNeed = i - 3), i) : 0))
            }

            function h(t, e, r) {
                if (128 !== (192 & e[0])) return t.lastNeed = 0, "�";
                if (t.lastNeed > 1 && e.length > 1) {
                    if (128 !== (192 & e[1])) return t.lastNeed = 1, "�";
                    if (t.lastNeed > 2 && e.length > 2 && 128 !== (192 & e[2])) return t.lastNeed = 2, "�"
                }
            }

            function l(t) {
                var e = this.lastTotal - this.lastNeed,
                    r = h(this, t, e);
                return void 0 !== r ? r : this.lastNeed <= t.length ? (t.copy(this.lastChar, e, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal)) : (t.copy(this.lastChar, e, 0, t.length), void(this.lastNeed -= t.length))
            }

            function d(t, e) {
                var r = c(this, t, e);
                if (!this.lastNeed) return t.toString("utf8", e);
                this.lastTotal = r;
                var n = t.length - (r - this.lastNeed);
                return t.copy(this.lastChar, 0, n), t.toString("utf8", e, n)
            }

            function f(t) {
                var e = t && t.length ? this.write(t) : "";
                return this.lastNeed ? e + "�" : e
            }

            function p(t, e) {
                if ((t.length - e) % 2 === 0) {
                    var r = t.toString("utf16le", e);
                    if (r) {
                        var n = r.charCodeAt(r.length - 1);
                        if (n >= 55296 && n <= 56319) return this.lastNeed = 2, this.lastTotal = 4, this.lastChar[0] = t[t.length - 2], this.lastChar[1] = t[t.length - 1], r.slice(0, -1)
                    }
                    return r
                }
                return this.lastNeed = 1, this.lastTotal = 2, this.lastChar[0] = t[t.length - 1], t.toString("utf16le", e, t.length - 1)
            }

            function g(t) {
                var e = t && t.length ? this.write(t) : "";
                if (this.lastNeed) {
                    var r = this.lastTotal - this.lastNeed;
                    return e + this.lastChar.toString("utf16le", 0, r)
                }
                return e
            }

            function v(t, e) {
                var r = (t.length - e) % 3;
                return 0 === r ? t.toString("base64", e) : (this.lastNeed = 3 - r, this.lastTotal = 3, 1 === r ? this.lastChar[0] = t[t.length - 1] : (this.lastChar[0] = t[t.length - 2], this.lastChar[1] = t[t.length - 1]), t.toString("base64", e, t.length - r))
            }

            function m(t) {
                var e = t && t.length ? this.write(t) : "";
                return this.lastNeed ? e + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : e
            }

            function y(t) {
                return t.toString(this.encoding)
            }

            function w(t) {
                return t && t.length ? this.write(t) : ""
            }
            e.StringDecoder = a, a.prototype.write = function(t) {
                if (0 === t.length) return "";
                var e, r;
                if (this.lastNeed) {
                    if (e = this.fillLast(t), void 0 === e) return "";
                    r = this.lastNeed, this.lastNeed = 0
                } else r = 0;
                return r < t.length ? e ? e + this.text(t, r) : this.text(t, r) : e || ""
            }, a.prototype.end = f, a.prototype.text = d, a.prototype.fillLast = function(t) {
                if (this.lastNeed <= t.length) return t.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
                t.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, t.length), this.lastNeed -= t.length
            }
        },
        "7e78": function(t, e, r) {
            var n = r("3fb5"),
                i = r("b672"),
                s = r("8707").Buffer,
                o = [1518500249, 1859775393, -1894007588, -899497514],
                a = new Array(80);

            function u() {
                this.init(), this._w = a, i.call(this, 64, 56)
            }

            function c(t) {
                return t << 1 | t >>> 31
            }

            function h(t) {
                return t << 5 | t >>> 27
            }

            function l(t) {
                return t << 30 | t >>> 2
            }

            function d(t, e, r, n) {
                return 0 === t ? e & r | ~e & n : 2 === t ? e & r | e & n | r & n : e ^ r ^ n
            }
            n(u, i), u.prototype.init = function() {
                return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this
            }, u.prototype._update = function(t) {
                for (var e = this._w, r = 0 | this._a, n = 0 | this._b, i = 0 | this._c, s = 0 | this._d, a = 0 | this._e, u = 0; u < 16; ++u) e[u] = t.readInt32BE(4 * u);
                for (; u < 80; ++u) e[u] = c(e[u - 3] ^ e[u - 8] ^ e[u - 14] ^ e[u - 16]);
                for (var f = 0; f < 80; ++f) {
                    var p = ~~(f / 20),
                        g = h(r) + d(p, n, i, s) + a + e[f] + o[p] | 0;
                    a = s, s = i, i = l(n), n = r, r = g
                }
                this._a = r + this._a | 0, this._b = n + this._b | 0, this._c = i + this._c | 0, this._d = s + this._d | 0, this._e = a + this._e | 0
            }, u.prototype._hash = function() {
                var t = s.allocUnsafe(20);
                return t.writeInt32BE(0 | this._a, 0), t.writeInt32BE(0 | this._b, 4), t.writeInt32BE(0 | this._c, 8), t.writeInt32BE(0 | this._d, 12), t.writeInt32BE(0 | this._e, 16), t
            }, t.exports = u
        },
        8144: function(t, e, r) {
            const {
                JettonMinter: n
            } = r("eb1a"), {
                JettonWallet: i
            } = r("27c0d");
            t.exports.default = {
                JettonMinter: n,
                JettonWallet: i
            }
        },
        "85b1": function(t, e, r) {
            var n = r("5162");
            t.exports = function(t) {
                return "string" !== typeof t ? t : n(t) ? t.slice(2) : t
            }
        },
        8691: function(t, e, r) {
            (function(t) {
                (function(t, e) {
                    "use strict";

                    function n(t, e) {
                        if (!t) throw new Error(e || "Assertion failed")
                    }

                    function i(t, e) {
                        t.super_ = e;
                        var r = function() {};
                        r.prototype = e.prototype, t.prototype = new r, t.prototype.constructor = t
                    }

                    function s(t, e, r) {
                        if (s.isBN(t)) return t;
                        this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== t && ("le" !== e && "be" !== e || (r = e, e = 10), this._init(t || 0, e || 10, r || "be"))
                    }
                    var o;
                    "object" === typeof t ? t.exports = s : e.BN = s, s.BN = s, s.wordSize = 26;
                    try {
                        o = "undefined" !== typeof window && "undefined" !== typeof window.Buffer ? window.Buffer : r(19).Buffer
                    } catch (_) {}

                    function a(t, e) {
                        var r = t.charCodeAt(e);
                        return r >= 65 && r <= 70 ? r - 55 : r >= 97 && r <= 102 ? r - 87 : r - 48 & 15
                    }

                    function u(t, e, r) {
                        var n = a(t, r);
                        return r - 1 >= e && (n |= a(t, r - 1) << 4), n
                    }

                    function c(t, e, r, n) {
                        for (var i = 0, s = Math.min(t.length, r), o = e; o < s; o++) {
                            var a = t.charCodeAt(o) - 48;
                            i *= n, i += a >= 49 ? a - 49 + 10 : a >= 17 ? a - 17 + 10 : a
                        }
                        return i
                    }
                    s.isBN = function(t) {
                        return t instanceof s || null !== t && "object" === typeof t && t.constructor.wordSize === s.wordSize && Array.isArray(t.words)
                    }, s.max = function(t, e) {
                        return t.cmp(e) > 0 ? t : e
                    }, s.min = function(t, e) {
                        return t.cmp(e) < 0 ? t : e
                    }, s.prototype._init = function(t, e, r) {
                        if ("number" === typeof t) return this._initNumber(t, e, r);
                        if ("object" === typeof t) return this._initArray(t, e, r);
                        "hex" === e && (e = 16), n(e === (0 | e) && e >= 2 && e <= 36), t = t.toString().replace(/\s+/g, "");
                        var i = 0;
                        "-" === t[0] && (i++, this.negative = 1), i < t.length && (16 === e ? this._parseHex(t, i, r) : (this._parseBase(t, e, i), "le" === r && this._initArray(this.toArray(), e, r)))
                    }, s.prototype._initNumber = function(t, e, r) {
                        t < 0 && (this.negative = 1, t = -t), t < 67108864 ? (this.words = [67108863 & t], this.length = 1) : t < 4503599627370496 ? (this.words = [67108863 & t, t / 67108864 & 67108863], this.length = 2) : (n(t < 9007199254740992), this.words = [67108863 & t, t / 67108864 & 67108863, 1], this.length = 3), "le" === r && this._initArray(this.toArray(), e, r)
                    }, s.prototype._initArray = function(t, e, r) {
                        if (n("number" === typeof t.length), t.length <= 0) return this.words = [0], this.length = 1, this;
                        this.length = Math.ceil(t.length / 3), this.words = new Array(this.length);
                        for (var i = 0; i < this.length; i++) this.words[i] = 0;
                        var s, o, a = 0;
                        if ("be" === r)
                            for (i = t.length - 1, s = 0; i >= 0; i -= 3) o = t[i] | t[i - 1] << 8 | t[i - 2] << 16, this.words[s] |= o << a & 67108863, this.words[s + 1] = o >>> 26 - a & 67108863, a += 24, a >= 26 && (a -= 26, s++);
                        else if ("le" === r)
                            for (i = 0, s = 0; i < t.length; i += 3) o = t[i] | t[i + 1] << 8 | t[i + 2] << 16, this.words[s] |= o << a & 67108863, this.words[s + 1] = o >>> 26 - a & 67108863, a += 24, a >= 26 && (a -= 26, s++);
                        return this.strip()
                    }, s.prototype._parseHex = function(t, e, r) {
                        this.length = Math.ceil((t.length - e) / 6), this.words = new Array(this.length);
                        for (var n = 0; n < this.length; n++) this.words[n] = 0;
                        var i, s = 0,
                            o = 0;
                        if ("be" === r)
                            for (n = t.length - 1; n >= e; n -= 2) i = u(t, e, n) << s, this.words[o] |= 67108863 & i, s >= 18 ? (s -= 18, o += 1, this.words[o] |= i >>> 26) : s += 8;
                        else {
                            var a = t.length - e;
                            for (n = a % 2 === 0 ? e + 1 : e; n < t.length; n += 2) i = u(t, e, n) << s, this.words[o] |= 67108863 & i, s >= 18 ? (s -= 18, o += 1, this.words[o] |= i >>> 26) : s += 8
                        }
                        this.strip()
                    }, s.prototype._parseBase = function(t, e, r) {
                        this.words = [0], this.length = 1;
                        for (var n = 0, i = 1; i <= 67108863; i *= e) n++;
                        n--, i = i / e | 0;
                        for (var s = t.length - r, o = s % n, a = Math.min(s, s - o) + r, u = 0, h = r; h < a; h += n) u = c(t, h, h + n, e), this.imuln(i), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
                        if (0 !== o) {
                            var l = 1;
                            for (u = c(t, h, t.length, e), h = 0; h < o; h++) l *= e;
                            this.imuln(l), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u)
                        }
                        this.strip()
                    }, s.prototype.copy = function(t) {
                        t.words = new Array(this.length);
                        for (var e = 0; e < this.length; e++) t.words[e] = this.words[e];
                        t.length = this.length, t.negative = this.negative, t.red = this.red
                    }, s.prototype.clone = function() {
                        var t = new s(null);
                        return this.copy(t), t
                    }, s.prototype._expand = function(t) {
                        while (this.length < t) this.words[this.length++] = 0;
                        return this
                    }, s.prototype.strip = function() {
                        while (this.length > 1 && 0 === this.words[this.length - 1]) this.length--;
                        return this._normSign()
                    }, s.prototype._normSign = function() {
                        return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this
                    }, s.prototype.inspect = function() {
                        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">"
                    };
                    var h = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"],
                        l = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                        d = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];

                    function f(t) {
                        for (var e = new Array(t.bitLength()), r = 0; r < e.length; r++) {
                            var n = r / 26 | 0,
                                i = r % 26;
                            e[r] = (t.words[n] & 1 << i) >>> i
                        }
                        return e
                    }

                    function p(t, e, r) {
                        r.negative = e.negative ^ t.negative;
                        var n = t.length + e.length | 0;
                        r.length = n, n = n - 1 | 0;
                        var i = 0 | t.words[0],
                            s = 0 | e.words[0],
                            o = i * s,
                            a = 67108863 & o,
                            u = o / 67108864 | 0;
                        r.words[0] = a;
                        for (var c = 1; c < n; c++) {
                            for (var h = u >>> 26, l = 67108863 & u, d = Math.min(c, e.length - 1), f = Math.max(0, c - t.length + 1); f <= d; f++) {
                                var p = c - f | 0;
                                i = 0 | t.words[p], s = 0 | e.words[f], o = i * s + l, h += o / 67108864 | 0, l = 67108863 & o
                            }
                            r.words[c] = 0 | l, u = 0 | h
                        }
                        return 0 !== u ? r.words[c] = 0 | u : r.length--, r.strip()
                    }
                    s.prototype.toString = function(t, e) {
                        var r;
                        if (t = t || 10, e = 0 | e || 1, 16 === t || "hex" === t) {
                            r = "";
                            for (var i = 0, s = 0, o = 0; o < this.length; o++) {
                                var a = this.words[o],
                                    u = (16777215 & (a << i | s)).toString(16);
                                s = a >>> 24 - i & 16777215, r = 0 !== s || o !== this.length - 1 ? h[6 - u.length] + u + r : u + r, i += 2, i >= 26 && (i -= 26, o--)
                            }
                            0 !== s && (r = s.toString(16) + r);
                            while (r.length % e !== 0) r = "0" + r;
                            return 0 !== this.negative && (r = "-" + r), r
                        }
                        if (t === (0 | t) && t >= 2 && t <= 36) {
                            var c = l[t],
                                f = d[t];
                            r = "";
                            var p = this.clone();
                            p.negative = 0;
                            while (!p.isZero()) {
                                var g = p.modn(f).toString(t);
                                p = p.idivn(f), r = p.isZero() ? g + r : h[c - g.length] + g + r
                            }
                            this.isZero() && (r = "0" + r);
                            while (r.length % e !== 0) r = "0" + r;
                            return 0 !== this.negative && (r = "-" + r), r
                        }
                        n(!1, "Base should be between 2 and 36")
                    }, s.prototype.toNumber = function() {
                        var t = this.words[0];
                        return 2 === this.length ? t += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && n(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -t : t
                    }, s.prototype.toJSON = function() {
                        return this.toString(16)
                    }, s.prototype.toBuffer = function(t, e) {
                        return n("undefined" !== typeof o), this.toArrayLike(o, t, e)
                    }, s.prototype.toArray = function(t, e) {
                        return this.toArrayLike(Array, t, e)
                    }, s.prototype.toArrayLike = function(t, e, r) {
                        var i = this.byteLength(),
                            s = r || Math.max(1, i);
                        n(i <= s, "byte array longer than desired length"), n(s > 0, "Requested array length <= 0"), this.strip();
                        var o, a, u = "le" === e,
                            c = new t(s),
                            h = this.clone();
                        if (u) {
                            for (a = 0; !h.isZero(); a++) o = h.andln(255), h.iushrn(8), c[a] = o;
                            for (; a < s; a++) c[a] = 0
                        } else {
                            for (a = 0; a < s - i; a++) c[a] = 0;
                            for (a = 0; !h.isZero(); a++) o = h.andln(255), h.iushrn(8), c[s - a - 1] = o
                        }
                        return c
                    }, Math.clz32 ? s.prototype._countBits = function(t) {
                        return 32 - Math.clz32(t)
                    } : s.prototype._countBits = function(t) {
                        var e = t,
                            r = 0;
                        return e >= 4096 && (r += 13, e >>>= 13), e >= 64 && (r += 7, e >>>= 7), e >= 8 && (r += 4, e >>>= 4), e >= 2 && (r += 2, e >>>= 2), r + e
                    }, s.prototype._zeroBits = function(t) {
                        if (0 === t) return 26;
                        var e = t,
                            r = 0;
                        return 0 === (8191 & e) && (r += 13, e >>>= 13), 0 === (127 & e) && (r += 7, e >>>= 7), 0 === (15 & e) && (r += 4, e >>>= 4), 0 === (3 & e) && (r += 2, e >>>= 2), 0 === (1 & e) && r++, r
                    }, s.prototype.bitLength = function() {
                        var t = this.words[this.length - 1],
                            e = this._countBits(t);
                        return 26 * (this.length - 1) + e
                    }, s.prototype.zeroBits = function() {
                        if (this.isZero()) return 0;
                        for (var t = 0, e = 0; e < this.length; e++) {
                            var r = this._zeroBits(this.words[e]);
                            if (t += r, 26 !== r) break
                        }
                        return t
                    }, s.prototype.byteLength = function() {
                        return Math.ceil(this.bitLength() / 8)
                    }, s.prototype.toTwos = function(t) {
                        return 0 !== this.negative ? this.abs().inotn(t).iaddn(1) : this.clone()
                    }, s.prototype.fromTwos = function(t) {
                        return this.testn(t - 1) ? this.notn(t).iaddn(1).ineg() : this.clone()
                    }, s.prototype.isNeg = function() {
                        return 0 !== this.negative
                    }, s.prototype.neg = function() {
                        return this.clone().ineg()
                    }, s.prototype.ineg = function() {
                        return this.isZero() || (this.negative ^= 1), this
                    }, s.prototype.iuor = function(t) {
                        while (this.length < t.length) this.words[this.length++] = 0;
                        for (var e = 0; e < t.length; e++) this.words[e] = this.words[e] | t.words[e];
                        return this.strip()
                    }, s.prototype.ior = function(t) {
                        return n(0 === (this.negative | t.negative)), this.iuor(t)
                    }, s.prototype.or = function(t) {
                        return this.length > t.length ? this.clone().ior(t) : t.clone().ior(this)
                    }, s.prototype.uor = function(t) {
                        return this.length > t.length ? this.clone().iuor(t) : t.clone().iuor(this)
                    }, s.prototype.iuand = function(t) {
                        var e;
                        e = this.length > t.length ? t : this;
                        for (var r = 0; r < e.length; r++) this.words[r] = this.words[r] & t.words[r];
                        return this.length = e.length, this.strip()
                    }, s.prototype.iand = function(t) {
                        return n(0 === (this.negative | t.negative)), this.iuand(t)
                    }, s.prototype.and = function(t) {
                        return this.length > t.length ? this.clone().iand(t) : t.clone().iand(this)
                    }, s.prototype.uand = function(t) {
                        return this.length > t.length ? this.clone().iuand(t) : t.clone().iuand(this)
                    }, s.prototype.iuxor = function(t) {
                        var e, r;
                        this.length > t.length ? (e = this, r = t) : (e = t, r = this);
                        for (var n = 0; n < r.length; n++) this.words[n] = e.words[n] ^ r.words[n];
                        if (this !== e)
                            for (; n < e.length; n++) this.words[n] = e.words[n];
                        return this.length = e.length, this.strip()
                    }, s.prototype.ixor = function(t) {
                        return n(0 === (this.negative | t.negative)), this.iuxor(t)
                    }, s.prototype.xor = function(t) {
                        return this.length > t.length ? this.clone().ixor(t) : t.clone().ixor(this)
                    }, s.prototype.uxor = function(t) {
                        return this.length > t.length ? this.clone().iuxor(t) : t.clone().iuxor(this)
                    }, s.prototype.inotn = function(t) {
                        n("number" === typeof t && t >= 0);
                        var e = 0 | Math.ceil(t / 26),
                            r = t % 26;
                        this._expand(e), r > 0 && e--;
                        for (var i = 0; i < e; i++) this.words[i] = 67108863 & ~this.words[i];
                        return r > 0 && (this.words[i] = ~this.words[i] & 67108863 >> 26 - r), this.strip()
                    }, s.prototype.notn = function(t) {
                        return this.clone().inotn(t)
                    }, s.prototype.setn = function(t, e) {
                        n("number" === typeof t && t >= 0);
                        var r = t / 26 | 0,
                            i = t % 26;
                        return this._expand(r + 1), this.words[r] = e ? this.words[r] | 1 << i : this.words[r] & ~(1 << i), this.strip()
                    }, s.prototype.iadd = function(t) {
                        var e, r, n;
                        if (0 !== this.negative && 0 === t.negative) return this.negative = 0, e = this.isub(t), this.negative ^= 1, this._normSign();
                        if (0 === this.negative && 0 !== t.negative) return t.negative = 0, e = this.isub(t), t.negative = 1, e._normSign();
                        this.length > t.length ? (r = this, n = t) : (r = t, n = this);
                        for (var i = 0, s = 0; s < n.length; s++) e = (0 | r.words[s]) + (0 | n.words[s]) + i, this.words[s] = 67108863 & e, i = e >>> 26;
                        for (; 0 !== i && s < r.length; s++) e = (0 | r.words[s]) + i, this.words[s] = 67108863 & e, i = e >>> 26;
                        if (this.length = r.length, 0 !== i) this.words[this.length] = i, this.length++;
                        else if (r !== this)
                            for (; s < r.length; s++) this.words[s] = r.words[s];
                        return this
                    }, s.prototype.add = function(t) {
                        var e;
                        return 0 !== t.negative && 0 === this.negative ? (t.negative = 0, e = this.sub(t), t.negative ^= 1, e) : 0 === t.negative && 0 !== this.negative ? (this.negative = 0, e = t.sub(this), this.negative = 1, e) : this.length > t.length ? this.clone().iadd(t) : t.clone().iadd(this)
                    }, s.prototype.isub = function(t) {
                        if (0 !== t.negative) {
                            t.negative = 0;
                            var e = this.iadd(t);
                            return t.negative = 1, e._normSign()
                        }
                        if (0 !== this.negative) return this.negative = 0, this.iadd(t), this.negative = 1, this._normSign();
                        var r, n, i = this.cmp(t);
                        if (0 === i) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
                        i > 0 ? (r = this, n = t) : (r = t, n = this);
                        for (var s = 0, o = 0; o < n.length; o++) e = (0 | r.words[o]) - (0 | n.words[o]) + s, s = e >> 26, this.words[o] = 67108863 & e;
                        for (; 0 !== s && o < r.length; o++) e = (0 | r.words[o]) + s, s = e >> 26, this.words[o] = 67108863 & e;
                        if (0 === s && o < r.length && r !== this)
                            for (; o < r.length; o++) this.words[o] = r.words[o];
                        return this.length = Math.max(this.length, o), r !== this && (this.negative = 1), this.strip()
                    }, s.prototype.sub = function(t) {
                        return this.clone().isub(t)
                    };
                    var g = function(t, e, r) {
                        var n, i, s, o = t.words,
                            a = e.words,
                            u = r.words,
                            c = 0,
                            h = 0 | o[0],
                            l = 8191 & h,
                            d = h >>> 13,
                            f = 0 | o[1],
                            p = 8191 & f,
                            g = f >>> 13,
                            v = 0 | o[2],
                            m = 8191 & v,
                            y = v >>> 13,
                            w = 0 | o[3],
                            b = 8191 & w,
                            C = w >>> 13,
                            A = 0 | o[4],
                            B = 8191 & A,
                            F = A >>> 13,
                            E = 0 | o[5],
                            x = 8191 & E,
                            _ = E >>> 13,
                            k = 0 | o[6],
                            M = 8191 & k,
                            D = k >>> 13,
                            S = 0 | o[7],
                            I = 8191 & S,
                            N = S >>> 13,
                            T = 0 | o[8],
                            P = 8191 & T,
                            O = T >>> 13,
                            U = 0 | o[9],
                            j = 8191 & U,
                            W = U >>> 13,
                            R = 0 | a[0],
                            L = 8191 & R,
                            q = R >>> 13,
                            K = 0 | a[1],
                            H = 8191 & K,
                            V = K >>> 13,
                            J = 0 | a[2],
                            z = 8191 & J,
                            G = J >>> 13,
                            $ = 0 | a[3],
                            Z = 8191 & $,
                            Y = $ >>> 13,
                            X = 0 | a[4],
                            Q = 8191 & X,
                            tt = X >>> 13,
                            et = 0 | a[5],
                            rt = 8191 & et,
                            nt = et >>> 13,
                            it = 0 | a[6],
                            st = 8191 & it,
                            ot = it >>> 13,
                            at = 0 | a[7],
                            ut = 8191 & at,
                            ct = at >>> 13,
                            ht = 0 | a[8],
                            lt = 8191 & ht,
                            dt = ht >>> 13,
                            ft = 0 | a[9],
                            pt = 8191 & ft,
                            gt = ft >>> 13;
                        r.negative = t.negative ^ e.negative, r.length = 19, n = Math.imul(l, L), i = Math.imul(l, q), i = i + Math.imul(d, L) | 0, s = Math.imul(d, q);
                        var vt = (c + n | 0) + ((8191 & i) << 13) | 0;
                        c = (s + (i >>> 13) | 0) + (vt >>> 26) | 0, vt &= 67108863, n = Math.imul(p, L), i = Math.imul(p, q), i = i + Math.imul(g, L) | 0, s = Math.imul(g, q), n = n + Math.imul(l, H) | 0, i = i + Math.imul(l, V) | 0, i = i + Math.imul(d, H) | 0, s = s + Math.imul(d, V) | 0;
                        var mt = (c + n | 0) + ((8191 & i) << 13) | 0;
                        c = (s + (i >>> 13) | 0) + (mt >>> 26) | 0, mt &= 67108863, n = Math.imul(m, L), i = Math.imul(m, q), i = i + Math.imul(y, L) | 0, s = Math.imul(y, q), n = n + Math.imul(p, H) | 0, i = i + Math.imul(p, V) | 0, i = i + Math.imul(g, H) | 0, s = s + Math.imul(g, V) | 0, n = n + Math.imul(l, z) | 0, i = i + Math.imul(l, G) | 0, i = i + Math.imul(d, z) | 0, s = s + Math.imul(d, G) | 0;
                        var yt = (c + n | 0) + ((8191 & i) << 13) | 0;
                        c = (s + (i >>> 13) | 0) + (yt >>> 26) | 0, yt &= 67108863, n = Math.imul(b, L), i = Math.imul(b, q), i = i + Math.imul(C, L) | 0, s = Math.imul(C, q), n = n + Math.imul(m, H) | 0, i = i + Math.imul(m, V) | 0, i = i + Math.imul(y, H) | 0, s = s + Math.imul(y, V) | 0, n = n + Math.imul(p, z) | 0, i = i + Math.imul(p, G) | 0, i = i + Math.imul(g, z) | 0, s = s + Math.imul(g, G) | 0, n = n + Math.imul(l, Z) | 0, i = i + Math.imul(l, Y) | 0, i = i + Math.imul(d, Z) | 0, s = s + Math.imul(d, Y) | 0;
                        var wt = (c + n | 0) + ((8191 & i) << 13) | 0;
                        c = (s + (i >>> 13) | 0) + (wt >>> 26) | 0, wt &= 67108863, n = Math.imul(B, L), i = Math.imul(B, q), i = i + Math.imul(F, L) | 0, s = Math.imul(F, q), n = n + Math.imul(b, H) | 0, i = i + Math.imul(b, V) | 0, i = i + Math.imul(C, H) | 0, s = s + Math.imul(C, V) | 0, n = n + Math.imul(m, z) | 0, i = i + Math.imul(m, G) | 0, i = i + Math.imul(y, z) | 0, s = s + Math.imul(y, G) | 0, n = n + Math.imul(p, Z) | 0, i = i + Math.imul(p, Y) | 0, i = i + Math.imul(g, Z) | 0, s = s + Math.imul(g, Y) | 0, n = n + Math.imul(l, Q) | 0, i = i + Math.imul(l, tt) | 0, i = i + Math.imul(d, Q) | 0, s = s + Math.imul(d, tt) | 0;
                        var bt = (c + n | 0) + ((8191 & i) << 13) | 0;
                        c = (s + (i >>> 13) | 0) + (bt >>> 26) | 0, bt &= 67108863, n = Math.imul(x, L), i = Math.imul(x, q), i = i + Math.imul(_, L) | 0, s = Math.imul(_, q), n = n + Math.imul(B, H) | 0, i = i + Math.imul(B, V) | 0, i = i + Math.imul(F, H) | 0, s = s + Math.imul(F, V) | 0, n = n + Math.imul(b, z) | 0, i = i + Math.imul(b, G) | 0, i = i + Math.imul(C, z) | 0, s = s + Math.imul(C, G) | 0, n = n + Math.imul(m, Z) | 0, i = i + Math.imul(m, Y) | 0, i = i + Math.imul(y, Z) | 0, s = s + Math.imul(y, Y) | 0, n = n + Math.imul(p, Q) | 0, i = i + Math.imul(p, tt) | 0, i = i + Math.imul(g, Q) | 0, s = s + Math.imul(g, tt) | 0, n = n + Math.imul(l, rt) | 0, i = i + Math.imul(l, nt) | 0, i = i + Math.imul(d, rt) | 0, s = s + Math.imul(d, nt) | 0;
                        var Ct = (c + n | 0) + ((8191 & i) << 13) | 0;
                        c = (s + (i >>> 13) | 0) + (Ct >>> 26) | 0, Ct &= 67108863, n = Math.imul(M, L), i = Math.imul(M, q), i = i + Math.imul(D, L) | 0, s = Math.imul(D, q), n = n + Math.imul(x, H) | 0, i = i + Math.imul(x, V) | 0, i = i + Math.imul(_, H) | 0, s = s + Math.imul(_, V) | 0, n = n + Math.imul(B, z) | 0, i = i + Math.imul(B, G) | 0, i = i + Math.imul(F, z) | 0, s = s + Math.imul(F, G) | 0, n = n + Math.imul(b, Z) | 0, i = i + Math.imul(b, Y) | 0, i = i + Math.imul(C, Z) | 0, s = s + Math.imul(C, Y) | 0, n = n + Math.imul(m, Q) | 0, i = i + Math.imul(m, tt) | 0, i = i + Math.imul(y, Q) | 0, s = s + Math.imul(y, tt) | 0, n = n + Math.imul(p, rt) | 0, i = i + Math.imul(p, nt) | 0, i = i + Math.imul(g, rt) | 0, s = s + Math.imul(g, nt) | 0, n = n + Math.imul(l, st) | 0, i = i + Math.imul(l, ot) | 0, i = i + Math.imul(d, st) | 0, s = s + Math.imul(d, ot) | 0;
                        var At = (c + n | 0) + ((8191 & i) << 13) | 0;
                        c = (s + (i >>> 13) | 0) + (At >>> 26) | 0, At &= 67108863, n = Math.imul(I, L), i = Math.imul(I, q), i = i + Math.imul(N, L) | 0, s = Math.imul(N, q), n = n + Math.imul(M, H) | 0, i = i + Math.imul(M, V) | 0, i = i + Math.imul(D, H) | 0, s = s + Math.imul(D, V) | 0, n = n + Math.imul(x, z) | 0, i = i + Math.imul(x, G) | 0, i = i + Math.imul(_, z) | 0, s = s + Math.imul(_, G) | 0, n = n + Math.imul(B, Z) | 0, i = i + Math.imul(B, Y) | 0, i = i + Math.imul(F, Z) | 0, s = s + Math.imul(F, Y) | 0, n = n + Math.imul(b, Q) | 0, i = i + Math.imul(b, tt) | 0, i = i + Math.imul(C, Q) | 0, s = s + Math.imul(C, tt) | 0, n = n + Math.imul(m, rt) | 0, i = i + Math.imul(m, nt) | 0, i = i + Math.imul(y, rt) | 0, s = s + Math.imul(y, nt) | 0, n = n + Math.imul(p, st) | 0, i = i + Math.imul(p, ot) | 0, i = i + Math.imul(g, st) | 0, s = s + Math.imul(g, ot) | 0, n = n + Math.imul(l, ut) | 0, i = i + Math.imul(l, ct) | 0, i = i + Math.imul(d, ut) | 0, s = s + Math.imul(d, ct) | 0;
                        var Bt = (c + n | 0) + ((8191 & i) << 13) | 0;
                        c = (s + (i >>> 13) | 0) + (Bt >>> 26) | 0, Bt &= 67108863, n = Math.imul(P, L), i = Math.imul(P, q), i = i + Math.imul(O, L) | 0, s = Math.imul(O, q), n = n + Math.imul(I, H) | 0, i = i + Math.imul(I, V) | 0, i = i + Math.imul(N, H) | 0, s = s + Math.imul(N, V) | 0, n = n + Math.imul(M, z) | 0, i = i + Math.imul(M, G) | 0, i = i + Math.imul(D, z) | 0, s = s + Math.imul(D, G) | 0, n = n + Math.imul(x, Z) | 0, i = i + Math.imul(x, Y) | 0, i = i + Math.imul(_, Z) | 0, s = s + Math.imul(_, Y) | 0, n = n + Math.imul(B, Q) | 0, i = i + Math.imul(B, tt) | 0, i = i + Math.imul(F, Q) | 0, s = s + Math.imul(F, tt) | 0, n = n + Math.imul(b, rt) | 0, i = i + Math.imul(b, nt) | 0, i = i + Math.imul(C, rt) | 0, s = s + Math.imul(C, nt) | 0, n = n + Math.imul(m, st) | 0, i = i + Math.imul(m, ot) | 0, i = i + Math.imul(y, st) | 0, s = s + Math.imul(y, ot) | 0, n = n + Math.imul(p, ut) | 0, i = i + Math.imul(p, ct) | 0, i = i + Math.imul(g, ut) | 0, s = s + Math.imul(g, ct) | 0, n = n + Math.imul(l, lt) | 0, i = i + Math.imul(l, dt) | 0, i = i + Math.imul(d, lt) | 0, s = s + Math.imul(d, dt) | 0;
                        var Ft = (c + n | 0) + ((8191 & i) << 13) | 0;
                        c = (s + (i >>> 13) | 0) + (Ft >>> 26) | 0, Ft &= 67108863, n = Math.imul(j, L), i = Math.imul(j, q), i = i + Math.imul(W, L) | 0, s = Math.imul(W, q), n = n + Math.imul(P, H) | 0, i = i + Math.imul(P, V) | 0, i = i + Math.imul(O, H) | 0, s = s + Math.imul(O, V) | 0, n = n + Math.imul(I, z) | 0, i = i + Math.imul(I, G) | 0, i = i + Math.imul(N, z) | 0, s = s + Math.imul(N, G) | 0, n = n + Math.imul(M, Z) | 0, i = i + Math.imul(M, Y) | 0, i = i + Math.imul(D, Z) | 0, s = s + Math.imul(D, Y) | 0, n = n + Math.imul(x, Q) | 0, i = i + Math.imul(x, tt) | 0, i = i + Math.imul(_, Q) | 0, s = s + Math.imul(_, tt) | 0, n = n + Math.imul(B, rt) | 0, i = i + Math.imul(B, nt) | 0, i = i + Math.imul(F, rt) | 0, s = s + Math.imul(F, nt) | 0, n = n + Math.imul(b, st) | 0, i = i + Math.imul(b, ot) | 0, i = i + Math.imul(C, st) | 0, s = s + Math.imul(C, ot) | 0, n = n + Math.imul(m, ut) | 0, i = i + Math.imul(m, ct) | 0, i = i + Math.imul(y, ut) | 0, s = s + Math.imul(y, ct) | 0, n = n + Math.imul(p, lt) | 0, i = i + Math.imul(p, dt) | 0, i = i + Math.imul(g, lt) | 0, s = s + Math.imul(g, dt) | 0, n = n + Math.imul(l, pt) | 0, i = i + Math.imul(l, gt) | 0, i = i + Math.imul(d, pt) | 0, s = s + Math.imul(d, gt) | 0;
                        var Et = (c + n | 0) + ((8191 & i) << 13) | 0;
                        c = (s + (i >>> 13) | 0) + (Et >>> 26) | 0, Et &= 67108863, n = Math.imul(j, H), i = Math.imul(j, V), i = i + Math.imul(W, H) | 0, s = Math.imul(W, V), n = n + Math.imul(P, z) | 0, i = i + Math.imul(P, G) | 0, i = i + Math.imul(O, z) | 0, s = s + Math.imul(O, G) | 0, n = n + Math.imul(I, Z) | 0, i = i + Math.imul(I, Y) | 0, i = i + Math.imul(N, Z) | 0, s = s + Math.imul(N, Y) | 0, n = n + Math.imul(M, Q) | 0, i = i + Math.imul(M, tt) | 0, i = i + Math.imul(D, Q) | 0, s = s + Math.imul(D, tt) | 0, n = n + Math.imul(x, rt) | 0, i = i + Math.imul(x, nt) | 0, i = i + Math.imul(_, rt) | 0, s = s + Math.imul(_, nt) | 0, n = n + Math.imul(B, st) | 0, i = i + Math.imul(B, ot) | 0, i = i + Math.imul(F, st) | 0, s = s + Math.imul(F, ot) | 0, n = n + Math.imul(b, ut) | 0, i = i + Math.imul(b, ct) | 0, i = i + Math.imul(C, ut) | 0, s = s + Math.imul(C, ct) | 0, n = n + Math.imul(m, lt) | 0, i = i + Math.imul(m, dt) | 0, i = i + Math.imul(y, lt) | 0, s = s + Math.imul(y, dt) | 0, n = n + Math.imul(p, pt) | 0, i = i + Math.imul(p, gt) | 0, i = i + Math.imul(g, pt) | 0, s = s + Math.imul(g, gt) | 0;
                        var xt = (c + n | 0) + ((8191 & i) << 13) | 0;
                        c = (s + (i >>> 13) | 0) + (xt >>> 26) | 0, xt &= 67108863, n = Math.imul(j, z), i = Math.imul(j, G), i = i + Math.imul(W, z) | 0, s = Math.imul(W, G), n = n + Math.imul(P, Z) | 0, i = i + Math.imul(P, Y) | 0, i = i + Math.imul(O, Z) | 0, s = s + Math.imul(O, Y) | 0, n = n + Math.imul(I, Q) | 0, i = i + Math.imul(I, tt) | 0, i = i + Math.imul(N, Q) | 0, s = s + Math.imul(N, tt) | 0, n = n + Math.imul(M, rt) | 0, i = i + Math.imul(M, nt) | 0, i = i + Math.imul(D, rt) | 0, s = s + Math.imul(D, nt) | 0, n = n + Math.imul(x, st) | 0, i = i + Math.imul(x, ot) | 0, i = i + Math.imul(_, st) | 0, s = s + Math.imul(_, ot) | 0, n = n + Math.imul(B, ut) | 0, i = i + Math.imul(B, ct) | 0, i = i + Math.imul(F, ut) | 0, s = s + Math.imul(F, ct) | 0, n = n + Math.imul(b, lt) | 0, i = i + Math.imul(b, dt) | 0, i = i + Math.imul(C, lt) | 0, s = s + Math.imul(C, dt) | 0, n = n + Math.imul(m, pt) | 0, i = i + Math.imul(m, gt) | 0, i = i + Math.imul(y, pt) | 0, s = s + Math.imul(y, gt) | 0;
                        var _t = (c + n | 0) + ((8191 & i) << 13) | 0;
                        c = (s + (i >>> 13) | 0) + (_t >>> 26) | 0, _t &= 67108863, n = Math.imul(j, Z), i = Math.imul(j, Y), i = i + Math.imul(W, Z) | 0, s = Math.imul(W, Y), n = n + Math.imul(P, Q) | 0, i = i + Math.imul(P, tt) | 0, i = i + Math.imul(O, Q) | 0, s = s + Math.imul(O, tt) | 0, n = n + Math.imul(I, rt) | 0, i = i + Math.imul(I, nt) | 0, i = i + Math.imul(N, rt) | 0, s = s + Math.imul(N, nt) | 0, n = n + Math.imul(M, st) | 0, i = i + Math.imul(M, ot) | 0, i = i + Math.imul(D, st) | 0, s = s + Math.imul(D, ot) | 0, n = n + Math.imul(x, ut) | 0, i = i + Math.imul(x, ct) | 0, i = i + Math.imul(_, ut) | 0, s = s + Math.imul(_, ct) | 0, n = n + Math.imul(B, lt) | 0, i = i + Math.imul(B, dt) | 0, i = i + Math.imul(F, lt) | 0, s = s + Math.imul(F, dt) | 0, n = n + Math.imul(b, pt) | 0, i = i + Math.imul(b, gt) | 0, i = i + Math.imul(C, pt) | 0, s = s + Math.imul(C, gt) | 0;
                        var kt = (c + n | 0) + ((8191 & i) << 13) | 0;
                        c = (s + (i >>> 13) | 0) + (kt >>> 26) | 0, kt &= 67108863, n = Math.imul(j, Q), i = Math.imul(j, tt), i = i + Math.imul(W, Q) | 0, s = Math.imul(W, tt), n = n + Math.imul(P, rt) | 0, i = i + Math.imul(P, nt) | 0, i = i + Math.imul(O, rt) | 0, s = s + Math.imul(O, nt) | 0, n = n + Math.imul(I, st) | 0, i = i + Math.imul(I, ot) | 0, i = i + Math.imul(N, st) | 0, s = s + Math.imul(N, ot) | 0, n = n + Math.imul(M, ut) | 0, i = i + Math.imul(M, ct) | 0, i = i + Math.imul(D, ut) | 0, s = s + Math.imul(D, ct) | 0, n = n + Math.imul(x, lt) | 0, i = i + Math.imul(x, dt) | 0, i = i + Math.imul(_, lt) | 0, s = s + Math.imul(_, dt) | 0, n = n + Math.imul(B, pt) | 0, i = i + Math.imul(B, gt) | 0, i = i + Math.imul(F, pt) | 0, s = s + Math.imul(F, gt) | 0;
                        var Mt = (c + n | 0) + ((8191 & i) << 13) | 0;
                        c = (s + (i >>> 13) | 0) + (Mt >>> 26) | 0, Mt &= 67108863, n = Math.imul(j, rt), i = Math.imul(j, nt), i = i + Math.imul(W, rt) | 0, s = Math.imul(W, nt), n = n + Math.imul(P, st) | 0, i = i + Math.imul(P, ot) | 0, i = i + Math.imul(O, st) | 0, s = s + Math.imul(O, ot) | 0, n = n + Math.imul(I, ut) | 0, i = i + Math.imul(I, ct) | 0, i = i + Math.imul(N, ut) | 0, s = s + Math.imul(N, ct) | 0, n = n + Math.imul(M, lt) | 0, i = i + Math.imul(M, dt) | 0, i = i + Math.imul(D, lt) | 0, s = s + Math.imul(D, dt) | 0, n = n + Math.imul(x, pt) | 0, i = i + Math.imul(x, gt) | 0, i = i + Math.imul(_, pt) | 0, s = s + Math.imul(_, gt) | 0;
                        var Dt = (c + n | 0) + ((8191 & i) << 13) | 0;
                        c = (s + (i >>> 13) | 0) + (Dt >>> 26) | 0, Dt &= 67108863, n = Math.imul(j, st), i = Math.imul(j, ot), i = i + Math.imul(W, st) | 0, s = Math.imul(W, ot), n = n + Math.imul(P, ut) | 0, i = i + Math.imul(P, ct) | 0, i = i + Math.imul(O, ut) | 0, s = s + Math.imul(O, ct) | 0, n = n + Math.imul(I, lt) | 0, i = i + Math.imul(I, dt) | 0, i = i + Math.imul(N, lt) | 0, s = s + Math.imul(N, dt) | 0, n = n + Math.imul(M, pt) | 0, i = i + Math.imul(M, gt) | 0, i = i + Math.imul(D, pt) | 0, s = s + Math.imul(D, gt) | 0;
                        var St = (c + n | 0) + ((8191 & i) << 13) | 0;
                        c = (s + (i >>> 13) | 0) + (St >>> 26) | 0, St &= 67108863, n = Math.imul(j, ut), i = Math.imul(j, ct), i = i + Math.imul(W, ut) | 0, s = Math.imul(W, ct), n = n + Math.imul(P, lt) | 0, i = i + Math.imul(P, dt) | 0, i = i + Math.imul(O, lt) | 0, s = s + Math.imul(O, dt) | 0, n = n + Math.imul(I, pt) | 0, i = i + Math.imul(I, gt) | 0, i = i + Math.imul(N, pt) | 0, s = s + Math.imul(N, gt) | 0;
                        var It = (c + n | 0) + ((8191 & i) << 13) | 0;
                        c = (s + (i >>> 13) | 0) + (It >>> 26) | 0, It &= 67108863, n = Math.imul(j, lt), i = Math.imul(j, dt), i = i + Math.imul(W, lt) | 0, s = Math.imul(W, dt), n = n + Math.imul(P, pt) | 0, i = i + Math.imul(P, gt) | 0, i = i + Math.imul(O, pt) | 0, s = s + Math.imul(O, gt) | 0;
                        var Nt = (c + n | 0) + ((8191 & i) << 13) | 0;
                        c = (s + (i >>> 13) | 0) + (Nt >>> 26) | 0, Nt &= 67108863, n = Math.imul(j, pt), i = Math.imul(j, gt), i = i + Math.imul(W, pt) | 0, s = Math.imul(W, gt);
                        var Tt = (c + n | 0) + ((8191 & i) << 13) | 0;
                        return c = (s + (i >>> 13) | 0) + (Tt >>> 26) | 0, Tt &= 67108863, u[0] = vt, u[1] = mt, u[2] = yt, u[3] = wt, u[4] = bt, u[5] = Ct, u[6] = At, u[7] = Bt, u[8] = Ft, u[9] = Et, u[10] = xt, u[11] = _t, u[12] = kt, u[13] = Mt, u[14] = Dt, u[15] = St, u[16] = It, u[17] = Nt, u[18] = Tt, 0 !== c && (u[19] = c, r.length++), r
                    };

                    function v(t, e, r) {
                        r.negative = e.negative ^ t.negative, r.length = t.length + e.length;
                        for (var n = 0, i = 0, s = 0; s < r.length - 1; s++) {
                            var o = i;
                            i = 0;
                            for (var a = 67108863 & n, u = Math.min(s, e.length - 1), c = Math.max(0, s - t.length + 1); c <= u; c++) {
                                var h = s - c,
                                    l = 0 | t.words[h],
                                    d = 0 | e.words[c],
                                    f = l * d,
                                    p = 67108863 & f;
                                o = o + (f / 67108864 | 0) | 0, p = p + a | 0, a = 67108863 & p, o = o + (p >>> 26) | 0, i += o >>> 26, o &= 67108863
                            }
                            r.words[s] = a, n = o, o = i
                        }
                        return 0 !== n ? r.words[s] = n : r.length--, r.strip()
                    }

                    function m(t, e, r) {
                        var n = new y;
                        return n.mulp(t, e, r)
                    }

                    function y(t, e) {
                        this.x = t, this.y = e
                    }
                    Math.imul || (g = p), s.prototype.mulTo = function(t, e) {
                        var r, n = this.length + t.length;
                        return r = 10 === this.length && 10 === t.length ? g(this, t, e) : n < 63 ? p(this, t, e) : n < 1024 ? v(this, t, e) : m(this, t, e), r
                    }, y.prototype.makeRBT = function(t) {
                        for (var e = new Array(t), r = s.prototype._countBits(t) - 1, n = 0; n < t; n++) e[n] = this.revBin(n, r, t);
                        return e
                    }, y.prototype.revBin = function(t, e, r) {
                        if (0 === t || t === r - 1) return t;
                        for (var n = 0, i = 0; i < e; i++) n |= (1 & t) << e - i - 1, t >>= 1;
                        return n
                    }, y.prototype.permute = function(t, e, r, n, i, s) {
                        for (var o = 0; o < s; o++) n[o] = e[t[o]], i[o] = r[t[o]]
                    }, y.prototype.transform = function(t, e, r, n, i, s) {
                        this.permute(s, t, e, r, n, i);
                        for (var o = 1; o < i; o <<= 1)
                            for (var a = o << 1, u = Math.cos(2 * Math.PI / a), c = Math.sin(2 * Math.PI / a), h = 0; h < i; h += a)
                                for (var l = u, d = c, f = 0; f < o; f++) {
                                    var p = r[h + f],
                                        g = n[h + f],
                                        v = r[h + f + o],
                                        m = n[h + f + o],
                                        y = l * v - d * m;
                                    m = l * m + d * v, v = y, r[h + f] = p + v, n[h + f] = g + m, r[h + f + o] = p - v, n[h + f + o] = g - m, f !== a && (y = u * l - c * d, d = u * d + c * l, l = y)
                                }
                    }, y.prototype.guessLen13b = function(t, e) {
                        var r = 1 | Math.max(e, t),
                            n = 1 & r,
                            i = 0;
                        for (r = r / 2 | 0; r; r >>>= 1) i++;
                        return 1 << i + 1 + n
                    }, y.prototype.conjugate = function(t, e, r) {
                        if (!(r <= 1))
                            for (var n = 0; n < r / 2; n++) {
                                var i = t[n];
                                t[n] = t[r - n - 1], t[r - n - 1] = i, i = e[n], e[n] = -e[r - n - 1], e[r - n - 1] = -i
                            }
                    }, y.prototype.normalize13b = function(t, e) {
                        for (var r = 0, n = 0; n < e / 2; n++) {
                            var i = 8192 * Math.round(t[2 * n + 1] / e) + Math.round(t[2 * n] / e) + r;
                            t[n] = 67108863 & i, r = i < 67108864 ? 0 : i / 67108864 | 0
                        }
                        return t
                    }, y.prototype.convert13b = function(t, e, r, i) {
                        for (var s = 0, o = 0; o < e; o++) s += 0 | t[o], r[2 * o] = 8191 & s, s >>>= 13, r[2 * o + 1] = 8191 & s, s >>>= 13;
                        for (o = 2 * e; o < i; ++o) r[o] = 0;
                        n(0 === s), n(0 === (-8192 & s))
                    }, y.prototype.stub = function(t) {
                        for (var e = new Array(t), r = 0; r < t; r++) e[r] = 0;
                        return e
                    }, y.prototype.mulp = function(t, e, r) {
                        var n = 2 * this.guessLen13b(t.length, e.length),
                            i = this.makeRBT(n),
                            s = this.stub(n),
                            o = new Array(n),
                            a = new Array(n),
                            u = new Array(n),
                            c = new Array(n),
                            h = new Array(n),
                            l = new Array(n),
                            d = r.words;
                        d.length = n, this.convert13b(t.words, t.length, o, n), this.convert13b(e.words, e.length, c, n), this.transform(o, s, a, u, n, i), this.transform(c, s, h, l, n, i);
                        for (var f = 0; f < n; f++) {
                            var p = a[f] * h[f] - u[f] * l[f];
                            u[f] = a[f] * l[f] + u[f] * h[f], a[f] = p
                        }
                        return this.conjugate(a, u, n), this.transform(a, u, d, s, n, i), this.conjugate(d, s, n), this.normalize13b(d, n), r.negative = t.negative ^ e.negative, r.length = t.length + e.length, r.strip()
                    }, s.prototype.mul = function(t) {
                        var e = new s(null);
                        return e.words = new Array(this.length + t.length), this.mulTo(t, e)
                    }, s.prototype.mulf = function(t) {
                        var e = new s(null);
                        return e.words = new Array(this.length + t.length), m(this, t, e)
                    }, s.prototype.imul = function(t) {
                        return this.clone().mulTo(t, this)
                    }, s.prototype.imuln = function(t) {
                        n("number" === typeof t), n(t < 67108864);
                        for (var e = 0, r = 0; r < this.length; r++) {
                            var i = (0 | this.words[r]) * t,
                                s = (67108863 & i) + (67108863 & e);
                            e >>= 26, e += i / 67108864 | 0, e += s >>> 26, this.words[r] = 67108863 & s
                        }
                        return 0 !== e && (this.words[r] = e, this.length++), this
                    }, s.prototype.muln = function(t) {
                        return this.clone().imuln(t)
                    }, s.prototype.sqr = function() {
                        return this.mul(this)
                    }, s.prototype.isqr = function() {
                        return this.imul(this.clone())
                    }, s.prototype.pow = function(t) {
                        var e = f(t);
                        if (0 === e.length) return new s(1);
                        for (var r = this, n = 0; n < e.length; n++, r = r.sqr())
                            if (0 !== e[n]) break;
                        if (++n < e.length)
                            for (var i = r.sqr(); n < e.length; n++, i = i.sqr()) 0 !== e[n] && (r = r.mul(i));
                        return r
                    }, s.prototype.iushln = function(t) {
                        n("number" === typeof t && t >= 0);
                        var e, r = t % 26,
                            i = (t - r) / 26,
                            s = 67108863 >>> 26 - r << 26 - r;
                        if (0 !== r) {
                            var o = 0;
                            for (e = 0; e < this.length; e++) {
                                var a = this.words[e] & s,
                                    u = (0 | this.words[e]) - a << r;
                                this.words[e] = u | o, o = a >>> 26 - r
                            }
                            o && (this.words[e] = o, this.length++)
                        }
                        if (0 !== i) {
                            for (e = this.length - 1; e >= 0; e--) this.words[e + i] = this.words[e];
                            for (e = 0; e < i; e++) this.words[e] = 0;
                            this.length += i
                        }
                        return this.strip()
                    }, s.prototype.ishln = function(t) {
                        return n(0 === this.negative), this.iushln(t)
                    }, s.prototype.iushrn = function(t, e, r) {
                        var i;
                        n("number" === typeof t && t >= 0), i = e ? (e - e % 26) / 26 : 0;
                        var s = t % 26,
                            o = Math.min((t - s) / 26, this.length),
                            a = 67108863 ^ 67108863 >>> s << s,
                            u = r;
                        if (i -= o, i = Math.max(0, i), u) {
                            for (var c = 0; c < o; c++) u.words[c] = this.words[c];
                            u.length = o
                        }
                        if (0 === o);
                        else if (this.length > o)
                            for (this.length -= o, c = 0; c < this.length; c++) this.words[c] = this.words[c + o];
                        else this.words[0] = 0, this.length = 1;
                        var h = 0;
                        for (c = this.length - 1; c >= 0 && (0 !== h || c >= i); c--) {
                            var l = 0 | this.words[c];
                            this.words[c] = h << 26 - s | l >>> s, h = l & a
                        }
                        return u && 0 !== h && (u.words[u.length++] = h), 0 === this.length && (this.words[0] = 0, this.length = 1), this.strip()
                    }, s.prototype.ishrn = function(t, e, r) {
                        return n(0 === this.negative), this.iushrn(t, e, r)
                    }, s.prototype.shln = function(t) {
                        return this.clone().ishln(t)
                    }, s.prototype.ushln = function(t) {
                        return this.clone().iushln(t)
                    }, s.prototype.shrn = function(t) {
                        return this.clone().ishrn(t)
                    }, s.prototype.ushrn = function(t) {
                        return this.clone().iushrn(t)
                    }, s.prototype.testn = function(t) {
                        n("number" === typeof t && t >= 0);
                        var e = t % 26,
                            r = (t - e) / 26,
                            i = 1 << e;
                        if (this.length <= r) return !1;
                        var s = this.words[r];
                        return !!(s & i)
                    }, s.prototype.imaskn = function(t) {
                        n("number" === typeof t && t >= 0);
                        var e = t % 26,
                            r = (t - e) / 26;
                        if (n(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r) return this;
                        if (0 !== e && r++, this.length = Math.min(r, this.length), 0 !== e) {
                            var i = 67108863 ^ 67108863 >>> e << e;
                            this.words[this.length - 1] &= i
                        }
                        return this.strip()
                    }, s.prototype.maskn = function(t) {
                        return this.clone().imaskn(t)
                    }, s.prototype.iaddn = function(t) {
                        return n("number" === typeof t), n(t < 67108864), t < 0 ? this.isubn(-t) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) < t ? (this.words[0] = t - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(t), this.negative = 1, this) : this._iaddn(t)
                    }, s.prototype._iaddn = function(t) {
                        this.words[0] += t;
                        for (var e = 0; e < this.length && this.words[e] >= 67108864; e++) this.words[e] -= 67108864, e === this.length - 1 ? this.words[e + 1] = 1 : this.words[e + 1]++;
                        return this.length = Math.max(this.length, e + 1), this
                    }, s.prototype.isubn = function(t) {
                        if (n("number" === typeof t), n(t < 67108864), t < 0) return this.iaddn(-t);
                        if (0 !== this.negative) return this.negative = 0, this.iaddn(t), this.negative = 1, this;
                        if (this.words[0] -= t, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
                        else
                            for (var e = 0; e < this.length && this.words[e] < 0; e++) this.words[e] += 67108864, this.words[e + 1] -= 1;
                        return this.strip()
                    }, s.prototype.addn = function(t) {
                        return this.clone().iaddn(t)
                    }, s.prototype.subn = function(t) {
                        return this.clone().isubn(t)
                    }, s.prototype.iabs = function() {
                        return this.negative = 0, this
                    }, s.prototype.abs = function() {
                        return this.clone().iabs()
                    }, s.prototype._ishlnsubmul = function(t, e, r) {
                        var i, s, o = t.length + r;
                        this._expand(o);
                        var a = 0;
                        for (i = 0; i < t.length; i++) {
                            s = (0 | this.words[i + r]) + a;
                            var u = (0 | t.words[i]) * e;
                            s -= 67108863 & u, a = (s >> 26) - (u / 67108864 | 0), this.words[i + r] = 67108863 & s
                        }
                        for (; i < this.length - r; i++) s = (0 | this.words[i + r]) + a, a = s >> 26, this.words[i + r] = 67108863 & s;
                        if (0 === a) return this.strip();
                        for (n(-1 === a), a = 0, i = 0; i < this.length; i++) s = -(0 | this.words[i]) + a, a = s >> 26, this.words[i] = 67108863 & s;
                        return this.negative = 1, this.strip()
                    }, s.prototype._wordDiv = function(t, e) {
                        var r = this.length - t.length,
                            n = this.clone(),
                            i = t,
                            o = 0 | i.words[i.length - 1],
                            a = this._countBits(o);
                        r = 26 - a, 0 !== r && (i = i.ushln(r), n.iushln(r), o = 0 | i.words[i.length - 1]);
                        var u, c = n.length - i.length;
                        if ("mod" !== e) {
                            u = new s(null), u.length = c + 1, u.words = new Array(u.length);
                            for (var h = 0; h < u.length; h++) u.words[h] = 0
                        }
                        var l = n.clone()._ishlnsubmul(i, 1, c);
                        0 === l.negative && (n = l, u && (u.words[c] = 1));
                        for (var d = c - 1; d >= 0; d--) {
                            var f = 67108864 * (0 | n.words[i.length + d]) + (0 | n.words[i.length + d - 1]);
                            f = Math.min(f / o | 0, 67108863), n._ishlnsubmul(i, f, d);
                            while (0 !== n.negative) f--, n.negative = 0, n._ishlnsubmul(i, 1, d), n.isZero() || (n.negative ^= 1);
                            u && (u.words[d] = f)
                        }
                        return u && u.strip(), n.strip(), "div" !== e && 0 !== r && n.iushrn(r), {
                            div: u || null,
                            mod: n
                        }
                    }, s.prototype.divmod = function(t, e, r) {
                        return n(!t.isZero()), this.isZero() ? {
                            div: new s(0),
                            mod: new s(0)
                        } : 0 !== this.negative && 0 === t.negative ? (a = this.neg().divmod(t, e), "mod" !== e && (i = a.div.neg()), "div" !== e && (o = a.mod.neg(), r && 0 !== o.negative && o.iadd(t)), {
                            div: i,
                            mod: o
                        }) : 0 === this.negative && 0 !== t.negative ? (a = this.divmod(t.neg(), e), "mod" !== e && (i = a.div.neg()), {
                            div: i,
                            mod: a.mod
                        }) : 0 !== (this.negative & t.negative) ? (a = this.neg().divmod(t.neg(), e), "div" !== e && (o = a.mod.neg(), r && 0 !== o.negative && o.isub(t)), {
                            div: a.div,
                            mod: o
                        }) : t.length > this.length || this.cmp(t) < 0 ? {
                            div: new s(0),
                            mod: this
                        } : 1 === t.length ? "div" === e ? {
                            div: this.divn(t.words[0]),
                            mod: null
                        } : "mod" === e ? {
                            div: null,
                            mod: new s(this.modn(t.words[0]))
                        } : {
                            div: this.divn(t.words[0]),
                            mod: new s(this.modn(t.words[0]))
                        } : this._wordDiv(t, e);
                        var i, o, a
                    }, s.prototype.div = function(t) {
                        return this.divmod(t, "div", !1).div
                    }, s.prototype.mod = function(t) {
                        return this.divmod(t, "mod", !1).mod
                    }, s.prototype.umod = function(t) {
                        return this.divmod(t, "mod", !0).mod
                    }, s.prototype.divRound = function(t) {
                        var e = this.divmod(t);
                        if (e.mod.isZero()) return e.div;
                        var r = 0 !== e.div.negative ? e.mod.isub(t) : e.mod,
                            n = t.ushrn(1),
                            i = t.andln(1),
                            s = r.cmp(n);
                        return s < 0 || 1 === i && 0 === s ? e.div : 0 !== e.div.negative ? e.div.isubn(1) : e.div.iaddn(1)
                    }, s.prototype.modn = function(t) {
                        n(t <= 67108863);
                        for (var e = (1 << 26) % t, r = 0, i = this.length - 1; i >= 0; i--) r = (e * r + (0 | this.words[i])) % t;
                        return r
                    }, s.prototype.idivn = function(t) {
                        n(t <= 67108863);
                        for (var e = 0, r = this.length - 1; r >= 0; r--) {
                            var i = (0 | this.words[r]) + 67108864 * e;
                            this.words[r] = i / t | 0, e = i % t
                        }
                        return this.strip()
                    }, s.prototype.divn = function(t) {
                        return this.clone().idivn(t)
                    }, s.prototype.egcd = function(t) {
                        n(0 === t.negative), n(!t.isZero());
                        var e = this,
                            r = t.clone();
                        e = 0 !== e.negative ? e.umod(t) : e.clone();
                        var i = new s(1),
                            o = new s(0),
                            a = new s(0),
                            u = new s(1),
                            c = 0;
                        while (e.isEven() && r.isEven()) e.iushrn(1), r.iushrn(1), ++c;
                        var h = r.clone(),
                            l = e.clone();
                        while (!e.isZero()) {
                            for (var d = 0, f = 1; 0 === (e.words[0] & f) && d < 26; ++d, f <<= 1);
                            if (d > 0) {
                                e.iushrn(d);
                                while (d-- > 0)(i.isOdd() || o.isOdd()) && (i.iadd(h), o.isub(l)), i.iushrn(1), o.iushrn(1)
                            }
                            for (var p = 0, g = 1; 0 === (r.words[0] & g) && p < 26; ++p, g <<= 1);
                            if (p > 0) {
                                r.iushrn(p);
                                while (p-- > 0)(a.isOdd() || u.isOdd()) && (a.iadd(h), u.isub(l)), a.iushrn(1), u.iushrn(1)
                            }
                            e.cmp(r) >= 0 ? (e.isub(r), i.isub(a), o.isub(u)) : (r.isub(e), a.isub(i), u.isub(o))
                        }
                        return {
                            a: a,
                            b: u,
                            gcd: r.iushln(c)
                        }
                    }, s.prototype._invmp = function(t) {
                        n(0 === t.negative), n(!t.isZero());
                        var e = this,
                            r = t.clone();
                        e = 0 !== e.negative ? e.umod(t) : e.clone();
                        var i, o = new s(1),
                            a = new s(0),
                            u = r.clone();
                        while (e.cmpn(1) > 0 && r.cmpn(1) > 0) {
                            for (var c = 0, h = 1; 0 === (e.words[0] & h) && c < 26; ++c, h <<= 1);
                            if (c > 0) {
                                e.iushrn(c);
                                while (c-- > 0) o.isOdd() && o.iadd(u), o.iushrn(1)
                            }
                            for (var l = 0, d = 1; 0 === (r.words[0] & d) && l < 26; ++l, d <<= 1);
                            if (l > 0) {
                                r.iushrn(l);
                                while (l-- > 0) a.isOdd() && a.iadd(u), a.iushrn(1)
                            }
                            e.cmp(r) >= 0 ? (e.isub(r), o.isub(a)) : (r.isub(e), a.isub(o))
                        }
                        return i = 0 === e.cmpn(1) ? o : a, i.cmpn(0) < 0 && i.iadd(t), i
                    }, s.prototype.gcd = function(t) {
                        if (this.isZero()) return t.abs();
                        if (t.isZero()) return this.abs();
                        var e = this.clone(),
                            r = t.clone();
                        e.negative = 0, r.negative = 0;
                        for (var n = 0; e.isEven() && r.isEven(); n++) e.iushrn(1), r.iushrn(1);
                        do {
                            while (e.isEven()) e.iushrn(1);
                            while (r.isEven()) r.iushrn(1);
                            var i = e.cmp(r);
                            if (i < 0) {
                                var s = e;
                                e = r, r = s
                            } else if (0 === i || 0 === r.cmpn(1)) break;
                            e.isub(r)
                        } while (1);
                        return r.iushln(n)
                    }, s.prototype.invm = function(t) {
                        return this.egcd(t).a.umod(t)
                    }, s.prototype.isEven = function() {
                        return 0 === (1 & this.words[0])
                    }, s.prototype.isOdd = function() {
                        return 1 === (1 & this.words[0])
                    }, s.prototype.andln = function(t) {
                        return this.words[0] & t
                    }, s.prototype.bincn = function(t) {
                        n("number" === typeof t);
                        var e = t % 26,
                            r = (t - e) / 26,
                            i = 1 << e;
                        if (this.length <= r) return this._expand(r + 1), this.words[r] |= i, this;
                        for (var s = i, o = r; 0 !== s && o < this.length; o++) {
                            var a = 0 | this.words[o];
                            a += s, s = a >>> 26, a &= 67108863, this.words[o] = a
                        }
                        return 0 !== s && (this.words[o] = s, this.length++), this
                    }, s.prototype.isZero = function() {
                        return 1 === this.length && 0 === this.words[0]
                    }, s.prototype.cmpn = function(t) {
                        var e, r = t < 0;
                        if (0 !== this.negative && !r) return -1;
                        if (0 === this.negative && r) return 1;
                        if (this.strip(), this.length > 1) e = 1;
                        else {
                            r && (t = -t), n(t <= 67108863, "Number is too big");
                            var i = 0 | this.words[0];
                            e = i === t ? 0 : i < t ? -1 : 1
                        }
                        return 0 !== this.negative ? 0 | -e : e
                    }, s.prototype.cmp = function(t) {
                        if (0 !== this.negative && 0 === t.negative) return -1;
                        if (0 === this.negative && 0 !== t.negative) return 1;
                        var e = this.ucmp(t);
                        return 0 !== this.negative ? 0 | -e : e
                    }, s.prototype.ucmp = function(t) {
                        if (this.length > t.length) return 1;
                        if (this.length < t.length) return -1;
                        for (var e = 0, r = this.length - 1; r >= 0; r--) {
                            var n = 0 | this.words[r],
                                i = 0 | t.words[r];
                            if (n !== i) {
                                n < i ? e = -1 : n > i && (e = 1);
                                break
                            }
                        }
                        return e
                    }, s.prototype.gtn = function(t) {
                        return 1 === this.cmpn(t)
                    }, s.prototype.gt = function(t) {
                        return 1 === this.cmp(t)
                    }, s.prototype.gten = function(t) {
                        return this.cmpn(t) >= 0
                    }, s.prototype.gte = function(t) {
                        return this.cmp(t) >= 0
                    }, s.prototype.ltn = function(t) {
                        return -1 === this.cmpn(t)
                    }, s.prototype.lt = function(t) {
                        return -1 === this.cmp(t)
                    }, s.prototype.lten = function(t) {
                        return this.cmpn(t) <= 0
                    }, s.prototype.lte = function(t) {
                        return this.cmp(t) <= 0
                    }, s.prototype.eqn = function(t) {
                        return 0 === this.cmpn(t)
                    }, s.prototype.eq = function(t) {
                        return 0 === this.cmp(t)
                    }, s.red = function(t) {
                        return new E(t)
                    }, s.prototype.toRed = function(t) {
                        return n(!this.red, "Already a number in reduction context"), n(0 === this.negative, "red works only with positives"), t.convertTo(this)._forceRed(t)
                    }, s.prototype.fromRed = function() {
                        return n(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this)
                    }, s.prototype._forceRed = function(t) {
                        return this.red = t, this
                    }, s.prototype.forceRed = function(t) {
                        return n(!this.red, "Already a number in reduction context"), this._forceRed(t)
                    }, s.prototype.redAdd = function(t) {
                        return n(this.red, "redAdd works only with red numbers"), this.red.add(this, t)
                    }, s.prototype.redIAdd = function(t) {
                        return n(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t)
                    }, s.prototype.redSub = function(t) {
                        return n(this.red, "redSub works only with red numbers"), this.red.sub(this, t)
                    }, s.prototype.redISub = function(t) {
                        return n(this.red, "redISub works only with red numbers"), this.red.isub(this, t)
                    }, s.prototype.redShl = function(t) {
                        return n(this.red, "redShl works only with red numbers"), this.red.shl(this, t)
                    }, s.prototype.redMul = function(t) {
                        return n(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.mul(this, t)
                    }, s.prototype.redIMul = function(t) {
                        return n(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.imul(this, t)
                    }, s.prototype.redSqr = function() {
                        return n(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this)
                    }, s.prototype.redISqr = function() {
                        return n(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this)
                    }, s.prototype.redSqrt = function() {
                        return n(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this)
                    }, s.prototype.redInvm = function() {
                        return n(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this)
                    }, s.prototype.redNeg = function() {
                        return n(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this)
                    }, s.prototype.redPow = function(t) {
                        return n(this.red && !t.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t)
                    };
                    var w = {
                        k256: null,
                        p224: null,
                        p192: null,
                        p25519: null
                    };

                    function b(t, e) {
                        this.name = t, this.p = new s(e, 16), this.n = this.p.bitLength(), this.k = new s(1).iushln(this.n).isub(this.p), this.tmp = this._tmp()
                    }

                    function C() {
                        b.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")
                    }

                    function A() {
                        b.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")
                    }

                    function B() {
                        b.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")
                    }

                    function F() {
                        b.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")
                    }

                    function E(t) {
                        if ("string" === typeof t) {
                            var e = s._prime(t);
                            this.m = e.p, this.prime = e
                        } else n(t.gtn(1), "modulus must be greater than 1"), this.m = t, this.prime = null
                    }

                    function x(t) {
                        E.call(this, t), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new s(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv)
                    }
                    b.prototype._tmp = function() {
                        var t = new s(null);
                        return t.words = new Array(Math.ceil(this.n / 13)), t
                    }, b.prototype.ireduce = function(t) {
                        var e, r = t;
                        do {
                            this.split(r, this.tmp), r = this.imulK(r), r = r.iadd(this.tmp), e = r.bitLength()
                        } while (e > this.n);
                        var n = e < this.n ? -1 : r.ucmp(this.p);
                        return 0 === n ? (r.words[0] = 0, r.length = 1) : n > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r
                    }, b.prototype.split = function(t, e) {
                        t.iushrn(this.n, 0, e)
                    }, b.prototype.imulK = function(t) {
                        return t.imul(this.k)
                    }, i(C, b), C.prototype.split = function(t, e) {
                        for (var r = 4194303, n = Math.min(t.length, 9), i = 0; i < n; i++) e.words[i] = t.words[i];
                        if (e.length = n, t.length <= 9) return t.words[0] = 0, void(t.length = 1);
                        var s = t.words[9];
                        for (e.words[e.length++] = s & r, i = 10; i < t.length; i++) {
                            var o = 0 | t.words[i];
                            t.words[i - 10] = (o & r) << 4 | s >>> 22, s = o
                        }
                        s >>>= 22, t.words[i - 10] = s, 0 === s && t.length > 10 ? t.length -= 10 : t.length -= 9
                    }, C.prototype.imulK = function(t) {
                        t.words[t.length] = 0, t.words[t.length + 1] = 0, t.length += 2;
                        for (var e = 0, r = 0; r < t.length; r++) {
                            var n = 0 | t.words[r];
                            e += 977 * n, t.words[r] = 67108863 & e, e = 64 * n + (e / 67108864 | 0)
                        }
                        return 0 === t.words[t.length - 1] && (t.length--, 0 === t.words[t.length - 1] && t.length--), t
                    }, i(A, b), i(B, b), i(F, b), F.prototype.imulK = function(t) {
                        for (var e = 0, r = 0; r < t.length; r++) {
                            var n = 19 * (0 | t.words[r]) + e,
                                i = 67108863 & n;
                            n >>>= 26, t.words[r] = i, e = n
                        }
                        return 0 !== e && (t.words[t.length++] = e), t
                    }, s._prime = function(t) {
                        if (w[t]) return w[t];
                        var e;
                        if ("k256" === t) e = new C;
                        else if ("p224" === t) e = new A;
                        else if ("p192" === t) e = new B;
                        else {
                            if ("p25519" !== t) throw new Error("Unknown prime " + t);
                            e = new F
                        }
                        return w[t] = e, e
                    }, E.prototype._verify1 = function(t) {
                        n(0 === t.negative, "red works only with positives"), n(t.red, "red works only with red numbers")
                    }, E.prototype._verify2 = function(t, e) {
                        n(0 === (t.negative | e.negative), "red works only with positives"), n(t.red && t.red === e.red, "red works only with red numbers")
                    }, E.prototype.imod = function(t) {
                        return this.prime ? this.prime.ireduce(t)._forceRed(this) : t.umod(this.m)._forceRed(this)
                    }, E.prototype.neg = function(t) {
                        return t.isZero() ? t.clone() : this.m.sub(t)._forceRed(this)
                    }, E.prototype.add = function(t, e) {
                        this._verify2(t, e);
                        var r = t.add(e);
                        return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this)
                    }, E.prototype.iadd = function(t, e) {
                        this._verify2(t, e);
                        var r = t.iadd(e);
                        return r.cmp(this.m) >= 0 && r.isub(this.m), r
                    }, E.prototype.sub = function(t, e) {
                        this._verify2(t, e);
                        var r = t.sub(e);
                        return r.cmpn(0) < 0 && r.iadd(this.m), r._forceRed(this)
                    }, E.prototype.isub = function(t, e) {
                        this._verify2(t, e);
                        var r = t.isub(e);
                        return r.cmpn(0) < 0 && r.iadd(this.m), r
                    }, E.prototype.shl = function(t, e) {
                        return this._verify1(t), this.imod(t.ushln(e))
                    }, E.prototype.imul = function(t, e) {
                        return this._verify2(t, e), this.imod(t.imul(e))
                    }, E.prototype.mul = function(t, e) {
                        return this._verify2(t, e), this.imod(t.mul(e))
                    }, E.prototype.isqr = function(t) {
                        return this.imul(t, t.clone())
                    }, E.prototype.sqr = function(t) {
                        return this.mul(t, t)
                    }, E.prototype.sqrt = function(t) {
                        if (t.isZero()) return t.clone();
                        var e = this.m.andln(3);
                        if (n(e % 2 === 1), 3 === e) {
                            var r = this.m.add(new s(1)).iushrn(2);
                            return this.pow(t, r)
                        }
                        var i = this.m.subn(1),
                            o = 0;
                        while (!i.isZero() && 0 === i.andln(1)) o++, i.iushrn(1);
                        n(!i.isZero());
                        var a = new s(1).toRed(this),
                            u = a.redNeg(),
                            c = this.m.subn(1).iushrn(1),
                            h = this.m.bitLength();
                        h = new s(2 * h * h).toRed(this);
                        while (0 !== this.pow(h, c).cmp(u)) h.redIAdd(u);
                        var l = this.pow(h, i),
                            d = this.pow(t, i.addn(1).iushrn(1)),
                            f = this.pow(t, i),
                            p = o;
                        while (0 !== f.cmp(a)) {
                            for (var g = f, v = 0; 0 !== g.cmp(a); v++) g = g.redSqr();
                            n(v < p);
                            var m = this.pow(l, new s(1).iushln(p - v - 1));
                            d = d.redMul(m), l = m.redSqr(), f = f.redMul(l), p = v
                        }
                        return d
                    }, E.prototype.invm = function(t) {
                        var e = t._invmp(this.m);
                        return 0 !== e.negative ? (e.negative = 0, this.imod(e).redNeg()) : this.imod(e)
                    }, E.prototype.pow = function(t, e) {
                        if (e.isZero()) return new s(1).toRed(this);
                        if (0 === e.cmpn(1)) return t.clone();
                        var r = 4,
                            n = new Array(1 << r);
                        n[0] = new s(1).toRed(this), n[1] = t;
                        for (var i = 2; i < n.length; i++) n[i] = this.mul(n[i - 1], t);
                        var o = n[0],
                            a = 0,
                            u = 0,
                            c = e.bitLength() % 26;
                        for (0 === c && (c = 26), i = e.length - 1; i >= 0; i--) {
                            for (var h = e.words[i], l = c - 1; l >= 0; l--) {
                                var d = h >> l & 1;
                                o !== n[0] && (o = this.sqr(o)), 0 !== d || 0 !== a ? (a <<= 1, a |= d, u++, (u === r || 0 === i && 0 === l) && (o = this.mul(o, n[a]), u = 0, a = 0)) : u = 0
                            }
                            c = 26
                        }
                        return o
                    }, E.prototype.convertTo = function(t) {
                        var e = t.umod(this.m);
                        return e === t ? e.clone() : e
                    }, E.prototype.convertFrom = function(t) {
                        var e = t.clone();
                        return e.red = null, e
                    }, s.mont = function(t) {
                        return new x(t)
                    }, i(x, E), x.prototype.convertTo = function(t) {
                        return this.imod(t.ushln(this.shift))
                    }, x.prototype.convertFrom = function(t) {
                        var e = this.imod(t.mul(this.rinv));
                        return e.red = null, e
                    }, x.prototype.imul = function(t, e) {
                        if (t.isZero() || e.isZero()) return t.words[0] = 0, t.length = 1, t;
                        var r = t.imul(e),
                            n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                            i = r.isub(n).iushrn(this.shift),
                            s = i;
                        return i.cmp(this.m) >= 0 ? s = i.isub(this.m) : i.cmpn(0) < 0 && (s = i.iadd(this.m)), s._forceRed(this)
                    }, x.prototype.mul = function(t, e) {
                        if (t.isZero() || e.isZero()) return new s(0)._forceRed(this);
                        var r = t.mul(e),
                            n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                            i = r.isub(n).iushrn(this.shift),
                            o = i;
                        return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this)
                    }, x.prototype.invm = function(t) {
                        var e = this.imod(t._invmp(this.m).mul(this.r2));
                        return e._forceRed(this)
                    }
                })(t, this)
            }).call(this, r("62e4")(t))
        },
        "8b05": function(t, e, r) {
            const {
                NftCollection: n
            } = r("e75f"), {
                NftItem: i
            } = r("fe2a"), {
                NftMarketplace: s
            } = r("1bdc"), {
                NftSale: o
            } = r("43a5");
            t.exports.default = {
                NftCollection: n,
                NftItem: i,
                NftMarketplace: s,
                NftSale: o
            }
        },
        "8b5a": function(t, e, r) {
            "use strict";
            t.exports = function(t) {
                return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(t)
            }
        },
        "8bac": function(t, e) {
            t.exports = {
                version: "0.24.0"
            }
        },
        "8d61": function(t, e, r) {
            (function(r) {
                var n;
                e = t.exports = tt, n = "object" === typeof r && Object({
                    VUE_APP_ENV: "production",
                    NODE_ENV: "production",
                    BASE_URL: "/"
                }) && Object({
                    VUE_APP_ENV: "production",
                    NODE_ENV: "production",
                    BASE_URL: "/"
                }).NODE_DEBUG && /\bsemver\b/i.test(Object({
                    VUE_APP_ENV: "production",
                    NODE_ENV: "production",
                    BASE_URL: "/"
                }).NODE_DEBUG) ? function() {
                    var t = Array.prototype.slice.call(arguments, 0);
                    t.unshift("SEMVER"), console.log.apply(console, t)
                } : function() {}, e.SEMVER_SPEC_VERSION = "2.0.0";
                var i = 256,
                    s = Number.MAX_SAFE_INTEGER || 9007199254740991,
                    o = 16,
                    a = e.re = [],
                    u = e.src = [],
                    c = 0,
                    h = c++;
                u[h] = "0|[1-9]\\d*";
                var l = c++;
                u[l] = "[0-9]+";
                var d = c++;
                u[d] = "\\d*[a-zA-Z-][a-zA-Z0-9-]*";
                var f = c++;
                u[f] = "(" + u[h] + ")\\.(" + u[h] + ")\\.(" + u[h] + ")";
                var p = c++;
                u[p] = "(" + u[l] + ")\\.(" + u[l] + ")\\.(" + u[l] + ")";
                var g = c++;
                u[g] = "(?:" + u[h] + "|" + u[d] + ")";
                var v = c++;
                u[v] = "(?:" + u[l] + "|" + u[d] + ")";
                var m = c++;
                u[m] = "(?:-(" + u[g] + "(?:\\." + u[g] + ")*))";
                var y = c++;
                u[y] = "(?:-?(" + u[v] + "(?:\\." + u[v] + ")*))";
                var w = c++;
                u[w] = "[0-9A-Za-z-]+";
                var b = c++;
                u[b] = "(?:\\+(" + u[w] + "(?:\\." + u[w] + ")*))";
                var C = c++,
                    A = "v?" + u[f] + u[m] + "?" + u[b] + "?";
                u[C] = "^" + A + "$";
                var B = "[v=\\s]*" + u[p] + u[y] + "?" + u[b] + "?",
                    F = c++;
                u[F] = "^" + B + "$";
                var E = c++;
                u[E] = "((?:<|>)?=?)";
                var x = c++;
                u[x] = u[l] + "|x|X|\\*";
                var _ = c++;
                u[_] = u[h] + "|x|X|\\*";
                var k = c++;
                u[k] = "[v=\\s]*(" + u[_] + ")(?:\\.(" + u[_] + ")(?:\\.(" + u[_] + ")(?:" + u[m] + ")?" + u[b] + "?)?)?";
                var M = c++;
                u[M] = "[v=\\s]*(" + u[x] + ")(?:\\.(" + u[x] + ")(?:\\.(" + u[x] + ")(?:" + u[y] + ")?" + u[b] + "?)?)?";
                var D = c++;
                u[D] = "^" + u[E] + "\\s*" + u[k] + "$";
                var S = c++;
                u[S] = "^" + u[E] + "\\s*" + u[M] + "$";
                var I = c++;
                u[I] = "(?:^|[^\\d])(\\d{1," + o + "})(?:\\.(\\d{1," + o + "}))?(?:\\.(\\d{1," + o + "}))?(?:$|[^\\d])";
                var N = c++;
                u[N] = "(?:~>?)";
                var T = c++;
                u[T] = "(\\s*)" + u[N] + "\\s+", a[T] = new RegExp(u[T], "g");
                var P = "$1~",
                    O = c++;
                u[O] = "^" + u[N] + u[k] + "$";
                var U = c++;
                u[U] = "^" + u[N] + u[M] + "$";
                var j = c++;
                u[j] = "(?:\\^)";
                var W = c++;
                u[W] = "(\\s*)" + u[j] + "\\s+", a[W] = new RegExp(u[W], "g");
                var R = "$1^",
                    L = c++;
                u[L] = "^" + u[j] + u[k] + "$";
                var q = c++;
                u[q] = "^" + u[j] + u[M] + "$";
                var K = c++;
                u[K] = "^" + u[E] + "\\s*(" + B + ")$|^$";
                var H = c++;
                u[H] = "^" + u[E] + "\\s*(" + A + ")$|^$";
                var V = c++;
                u[V] = "(\\s*)" + u[E] + "\\s*(" + B + "|" + u[k] + ")", a[V] = new RegExp(u[V], "g");
                var J = "$1$2$3",
                    z = c++;
                u[z] = "^\\s*(" + u[k] + ")\\s+-\\s+(" + u[k] + ")\\s*$";
                var G = c++;
                u[G] = "^\\s*(" + u[M] + ")\\s+-\\s+(" + u[M] + ")\\s*$";
                var $ = c++;
                u[$] = "(<|>)?=?\\s*\\*";
                for (var Z = 0; Z < c; Z++) n(Z, u[Z]), a[Z] || (a[Z] = new RegExp(u[Z]));

                function Y(t, e) {
                    if (e && "object" === typeof e || (e = {
                            loose: !!e,
                            includePrerelease: !1
                        }), t instanceof tt) return t;
                    if ("string" !== typeof t) return null;
                    if (t.length > i) return null;
                    var r = e.loose ? a[F] : a[C];
                    if (!r.test(t)) return null;
                    try {
                        return new tt(t, e)
                    } catch (n) {
                        return null
                    }
                }

                function X(t, e) {
                    var r = Y(t, e);
                    return r ? r.version : null
                }

                function Q(t, e) {
                    var r = Y(t.trim().replace(/^[=v]+/, ""), e);
                    return r ? r.version : null
                }

                function tt(t, e) {
                    if (e && "object" === typeof e || (e = {
                            loose: !!e,
                            includePrerelease: !1
                        }), t instanceof tt) {
                        if (t.loose === e.loose) return t;
                        t = t.version
                    } else if ("string" !== typeof t) throw new TypeError("Invalid Version: " + t);
                    if (t.length > i) throw new TypeError("version is longer than " + i + " characters");
                    if (!(this instanceof tt)) return new tt(t, e);
                    n("SemVer", t, e), this.options = e, this.loose = !!e.loose;
                    var r = t.trim().match(e.loose ? a[F] : a[C]);
                    if (!r) throw new TypeError("Invalid Version: " + t);
                    if (this.raw = t, this.major = +r[1], this.minor = +r[2], this.patch = +r[3], this.major > s || this.major < 0) throw new TypeError("Invalid major version");
                    if (this.minor > s || this.minor < 0) throw new TypeError("Invalid minor version");
                    if (this.patch > s || this.patch < 0) throw new TypeError("Invalid patch version");
                    r[4] ? this.prerelease = r[4].split(".").map((function(t) {
                        if (/^[0-9]+$/.test(t)) {
                            var e = +t;
                            if (e >= 0 && e < s) return e
                        }
                        return t
                    })) : this.prerelease = [], this.build = r[5] ? r[5].split(".") : [], this.format()
                }

                function et(t, e, r, n) {
                    "string" === typeof r && (n = r, r = void 0);
                    try {
                        return new tt(t, r).inc(e, n).version
                    } catch (i) {
                        return null
                    }
                }

                function rt(t, e) {
                    if (vt(t, e)) return null;
                    var r = Y(t),
                        n = Y(e),
                        i = "";
                    if (r.prerelease.length || n.prerelease.length) {
                        i = "pre";
                        var s = "prerelease"
                    }
                    for (var o in r)
                        if (("major" === o || "minor" === o || "patch" === o) && r[o] !== n[o]) return i + o;
                    return s
                }
                e.parse = Y, e.valid = X, e.clean = Q, e.SemVer = tt, tt.prototype.format = function() {
                    return this.version = this.major + "." + this.minor + "." + this.patch, this.prerelease.length && (this.version += "-" + this.prerelease.join(".")), this.version
                }, tt.prototype.toString = function() {
                    return this.version
                }, tt.prototype.compare = function(t) {
                    return n("SemVer.compare", this.version, this.options, t), t instanceof tt || (t = new tt(t, this.options)), this.compareMain(t) || this.comparePre(t)
                }, tt.prototype.compareMain = function(t) {
                    return t instanceof tt || (t = new tt(t, this.options)), it(this.major, t.major) || it(this.minor, t.minor) || it(this.patch, t.patch)
                }, tt.prototype.comparePre = function(t) {
                    if (t instanceof tt || (t = new tt(t, this.options)), this.prerelease.length && !t.prerelease.length) return -1;
                    if (!this.prerelease.length && t.prerelease.length) return 1;
                    if (!this.prerelease.length && !t.prerelease.length) return 0;
                    var e = 0;
                    do {
                        var r = this.prerelease[e],
                            i = t.prerelease[e];
                        if (n("prerelease compare", e, r, i), void 0 === r && void 0 === i) return 0;
                        if (void 0 === i) return 1;
                        if (void 0 === r) return -1;
                        if (r !== i) return it(r, i)
                    } while (++e)
                }, tt.prototype.inc = function(t, e) {
                    switch (t) {
                        case "premajor":
                            this.prerelease.length = 0, this.patch = 0, this.minor = 0, this.major++, this.inc("pre", e);
                            break;
                        case "preminor":
                            this.prerelease.length = 0, this.patch = 0, this.minor++, this.inc("pre", e);
                            break;
                        case "prepatch":
                            this.prerelease.length = 0, this.inc("patch", e), this.inc("pre", e);
                            break;
                        case "prerelease":
                            0 === this.prerelease.length && this.inc("patch", e), this.inc("pre", e);
                            break;
                        case "major":
                            0 === this.minor && 0 === this.patch && 0 !== this.prerelease.length || this.major++, this.minor = 0, this.patch = 0, this.prerelease = [];
                            break;
                        case "minor":
                            0 === this.patch && 0 !== this.prerelease.length || this.minor++, this.patch = 0, this.prerelease = [];
                            break;
                        case "patch":
                            0 === this.prerelease.length && this.patch++, this.prerelease = [];
                            break;
                        case "pre":
                            if (0 === this.prerelease.length) this.prerelease = [0];
                            else {
                                var r = this.prerelease.length;
                                while (--r >= 0) "number" === typeof this.prerelease[r] && (this.prerelease[r]++, r = -2); - 1 === r && this.prerelease.push(0)
                            }
                            e && (this.prerelease[0] === e ? isNaN(this.prerelease[1]) && (this.prerelease = [e, 0]) : this.prerelease = [e, 0]);
                            break;
                        default:
                            throw new Error("invalid increment argument: " + t)
                    }
                    return this.format(), this.raw = this.version, this
                }, e.inc = et, e.diff = rt, e.compareIdentifiers = it;
                var nt = /^[0-9]+$/;

                function it(t, e) {
                    var r = nt.test(t),
                        n = nt.test(e);
                    return r && n && (t = +t, e = +e), t === e ? 0 : r && !n ? -1 : n && !r ? 1 : t < e ? -1 : 1
                }

                function st(t, e) {
                    return it(e, t)
                }

                function ot(t, e) {
                    return new tt(t, e).major
                }

                function at(t, e) {
                    return new tt(t, e).minor
                }

                function ut(t, e) {
                    return new tt(t, e).patch
                }

                function ct(t, e, r) {
                    return new tt(t, r).compare(new tt(e, r))
                }

                function ht(t, e) {
                    return ct(t, e, !0)
                }

                function lt(t, e, r) {
                    return ct(e, t, r)
                }

                function dt(t, r) {
                    return t.sort((function(t, n) {
                        return e.compare(t, n, r)
                    }))
                }

                function ft(t, r) {
                    return t.sort((function(t, n) {
                        return e.rcompare(t, n, r)
                    }))
                }

                function pt(t, e, r) {
                    return ct(t, e, r) > 0
                }

                function gt(t, e, r) {
                    return ct(t, e, r) < 0
                }

                function vt(t, e, r) {
                    return 0 === ct(t, e, r)
                }

                function mt(t, e, r) {
                    return 0 !== ct(t, e, r)
                }

                function yt(t, e, r) {
                    return ct(t, e, r) >= 0
                }

                function wt(t, e, r) {
                    return ct(t, e, r) <= 0
                }

                function bt(t, e, r, n) {
                    switch (e) {
                        case "===":
                            return "object" === typeof t && (t = t.version), "object" === typeof r && (r = r.version), t === r;
                        case "!==":
                            return "object" === typeof t && (t = t.version), "object" === typeof r && (r = r.version), t !== r;
                        case "":
                        case "=":
                        case "==":
                            return vt(t, r, n);
                        case "!=":
                            return mt(t, r, n);
                        case ">":
                            return pt(t, r, n);
                        case ">=":
                            return yt(t, r, n);
                        case "<":
                            return gt(t, r, n);
                        case "<=":
                            return wt(t, r, n);
                        default:
                            throw new TypeError("Invalid operator: " + e)
                    }
                }

                function Ct(t, e) {
                    if (e && "object" === typeof e || (e = {
                            loose: !!e,
                            includePrerelease: !1
                        }), t instanceof Ct) {
                        if (t.loose === !!e.loose) return t;
                        t = t.value
                    }
                    if (!(this instanceof Ct)) return new Ct(t, e);
                    n("comparator", t, e), this.options = e, this.loose = !!e.loose, this.parse(t), this.semver === At ? this.value = "" : this.value = this.operator + this.semver.version, n("comp", this)
                }
                e.rcompareIdentifiers = st, e.major = ot, e.minor = at, e.patch = ut, e.compare = ct, e.compareLoose = ht, e.rcompare = lt, e.sort = dt, e.rsort = ft, e.gt = pt, e.lt = gt, e.eq = vt, e.neq = mt, e.gte = yt, e.lte = wt, e.cmp = bt, e.Comparator = Ct;
                var At = {};

                function Bt(t, e) {
                    if (e && "object" === typeof e || (e = {
                            loose: !!e,
                            includePrerelease: !1
                        }), t instanceof Bt) return t.loose === !!e.loose && t.includePrerelease === !!e.includePrerelease ? t : new Bt(t.raw, e);
                    if (t instanceof Ct) return new Bt(t.value, e);
                    if (!(this instanceof Bt)) return new Bt(t, e);
                    if (this.options = e, this.loose = !!e.loose, this.includePrerelease = !!e.includePrerelease, this.raw = t, this.set = t.split(/\s*\|\|\s*/).map((function(t) {
                            return this.parseRange(t.trim())
                        }), this).filter((function(t) {
                            return t.length
                        })), !this.set.length) throw new TypeError("Invalid SemVer Range: " + t);
                    this.format()
                }

                function Ft(t, e) {
                    return new Bt(t, e).set.map((function(t) {
                        return t.map((function(t) {
                            return t.value
                        })).join(" ").trim().split(" ")
                    }))
                }

                function Et(t, e) {
                    return n("comp", t, e), t = Mt(t, e), n("caret", t), t = _t(t, e), n("tildes", t), t = St(t, e), n("xrange", t), t = Nt(t, e), n("stars", t), t
                }

                function xt(t) {
                    return !t || "x" === t.toLowerCase() || "*" === t
                }

                function _t(t, e) {
                    return t.trim().split(/\s+/).map((function(t) {
                        return kt(t, e)
                    })).join(" ")
                }

                function kt(t, e) {
                    var r = e.loose ? a[U] : a[O];
                    return t.replace(r, (function(e, r, i, s, o) {
                        var a;
                        return n("tilde", t, e, r, i, s, o), xt(r) ? a = "" : xt(i) ? a = ">=" + r + ".0.0 <" + (+r + 1) + ".0.0" : xt(s) ? a = ">=" + r + "." + i + ".0 <" + r + "." + (+i + 1) + ".0" : o ? (n("replaceTilde pr", o), a = ">=" + r + "." + i + "." + s + "-" + o + " <" + r + "." + (+i + 1) + ".0") : a = ">=" + r + "." + i + "." + s + " <" + r + "." + (+i + 1) + ".0", n("tilde return", a), a
                    }))
                }

                function Mt(t, e) {
                    return t.trim().split(/\s+/).map((function(t) {
                        return Dt(t, e)
                    })).join(" ")
                }

                function Dt(t, e) {
                    n("caret", t, e);
                    var r = e.loose ? a[q] : a[L];
                    return t.replace(r, (function(e, r, i, s, o) {
                        var a;
                        return n("caret", t, e, r, i, s, o), xt(r) ? a = "" : xt(i) ? a = ">=" + r + ".0.0 <" + (+r + 1) + ".0.0" : xt(s) ? a = "0" === r ? ">=" + r + "." + i + ".0 <" + r + "." + (+i + 1) + ".0" : ">=" + r + "." + i + ".0 <" + (+r + 1) + ".0.0" : o ? (n("replaceCaret pr", o), a = "0" === r ? "0" === i ? ">=" + r + "." + i + "." + s + "-" + o + " <" + r + "." + i + "." + (+s + 1) : ">=" + r + "." + i + "." + s + "-" + o + " <" + r + "." + (+i + 1) + ".0" : ">=" + r + "." + i + "." + s + "-" + o + " <" + (+r + 1) + ".0.0") : (n("no pr"), a = "0" === r ? "0" === i ? ">=" + r + "." + i + "." + s + " <" + r + "." + i + "." + (+s + 1) : ">=" + r + "." + i + "." + s + " <" + r + "." + (+i + 1) + ".0" : ">=" + r + "." + i + "." + s + " <" + (+r + 1) + ".0.0"), n("caret return", a), a
                    }))
                }

                function St(t, e) {
                    return n("replaceXRanges", t, e), t.split(/\s+/).map((function(t) {
                        return It(t, e)
                    })).join(" ")
                }

                function It(t, e) {
                    t = t.trim();
                    var r = e.loose ? a[S] : a[D];
                    return t.replace(r, (function(e, r, i, s, o, a) {
                        n("xRange", t, e, r, i, s, o, a);
                        var u = xt(i),
                            c = u || xt(s),
                            h = c || xt(o),
                            l = h;
                        return "=" === r && l && (r = ""), u ? e = ">" === r || "<" === r ? "<0.0.0" : "*" : r && l ? (c && (s = 0), o = 0, ">" === r ? (r = ">=", c ? (i = +i + 1, s = 0, o = 0) : (s = +s + 1, o = 0)) : "<=" === r && (r = "<", c ? i = +i + 1 : s = +s + 1), e = r + i + "." + s + "." + o) : c ? e = ">=" + i + ".0.0 <" + (+i + 1) + ".0.0" : h && (e = ">=" + i + "." + s + ".0 <" + i + "." + (+s + 1) + ".0"), n("xRange return", e), e
                    }))
                }

                function Nt(t, e) {
                    return n("replaceStars", t, e), t.trim().replace(a[$], "")
                }

                function Tt(t, e, r, n, i, s, o, a, u, c, h, l, d) {
                    return e = xt(r) ? "" : xt(n) ? ">=" + r + ".0.0" : xt(i) ? ">=" + r + "." + n + ".0" : ">=" + e, a = xt(u) ? "" : xt(c) ? "<" + (+u + 1) + ".0.0" : xt(h) ? "<" + u + "." + (+c + 1) + ".0" : l ? "<=" + u + "." + c + "." + h + "-" + l : "<=" + a, (e + " " + a).trim()
                }

                function Pt(t, e, r) {
                    for (var i = 0; i < t.length; i++)
                        if (!t[i].test(e)) return !1;
                    if (e.prerelease.length && !r.includePrerelease) {
                        for (i = 0; i < t.length; i++)
                            if (n(t[i].semver), t[i].semver !== At && t[i].semver.prerelease.length > 0) {
                                var s = t[i].semver;
                                if (s.major === e.major && s.minor === e.minor && s.patch === e.patch) return !0
                            }
                        return !1
                    }
                    return !0
                }

                function Ot(t, e, r) {
                    try {
                        e = new Bt(e, r)
                    } catch (n) {
                        return !1
                    }
                    return e.test(t)
                }

                function Ut(t, e, r) {
                    var n = null,
                        i = null;
                    try {
                        var s = new Bt(e, r)
                    } catch (o) {
                        return null
                    }
                    return t.forEach((function(t) {
                        s.test(t) && (n && -1 !== i.compare(t) || (n = t, i = new tt(n, r)))
                    })), n
                }

                function jt(t, e, r) {
                    var n = null,
                        i = null;
                    try {
                        var s = new Bt(e, r)
                    } catch (o) {
                        return null
                    }
                    return t.forEach((function(t) {
                        s.test(t) && (n && 1 !== i.compare(t) || (n = t, i = new tt(n, r)))
                    })), n
                }

                function Wt(t, e) {
                    t = new Bt(t, e);
                    var r = new tt("0.0.0");
                    if (t.test(r)) return r;
                    if (r = new tt("0.0.0-0"), t.test(r)) return r;
                    r = null;
                    for (var n = 0; n < t.set.length; ++n) {
                        var i = t.set[n];
                        i.forEach((function(t) {
                            var e = new tt(t.semver.version);
                            switch (t.operator) {
                                case ">":
                                    0 === e.prerelease.length ? e.patch++ : e.prerelease.push(0), e.raw = e.format();
                                case "":
                                case ">=":
                                    r && !pt(r, e) || (r = e);
                                    break;
                                case "<":
                                case "<=":
                                    break;
                                default:
                                    throw new Error("Unexpected operation: " + t.operator)
                            }
                        }))
                    }
                    return r && t.test(r) ? r : null
                }

                function Rt(t, e) {
                    try {
                        return new Bt(t, e).range || "*"
                    } catch (r) {
                        return null
                    }
                }

                function Lt(t, e, r) {
                    return Kt(t, e, "<", r)
                }

                function qt(t, e, r) {
                    return Kt(t, e, ">", r)
                }

                function Kt(t, e, r, n) {
                    var i, s, o, a, u;
                    switch (t = new tt(t, n), e = new Bt(e, n), r) {
                        case ">":
                            i = pt, s = wt, o = gt, a = ">", u = ">=";
                            break;
                        case "<":
                            i = gt, s = yt, o = pt, a = "<", u = "<=";
                            break;
                        default:
                            throw new TypeError('Must provide a hilo val of "<" or ">"')
                    }
                    if (Ot(t, e, n)) return !1;
                    for (var c = 0; c < e.set.length; ++c) {
                        var h = e.set[c],
                            l = null,
                            d = null;
                        if (h.forEach((function(t) {
                                t.semver === At && (t = new Ct(">=0.0.0")), l = l || t, d = d || t, i(t.semver, l.semver, n) ? l = t : o(t.semver, d.semver, n) && (d = t)
                            })), l.operator === a || l.operator === u) return !1;
                        if ((!d.operator || d.operator === a) && s(t, d.semver)) return !1;
                        if (d.operator === u && o(t, d.semver)) return !1
                    }
                    return !0
                }

                function Ht(t, e) {
                    var r = Y(t, e);
                    return r && r.prerelease.length ? r.prerelease : null
                }

                function Vt(t, e, r) {
                    return t = new Bt(t, r), e = new Bt(e, r), t.intersects(e)
                }

                function Jt(t) {
                    if (t instanceof tt) return t;
                    if ("string" !== typeof t) return null;
                    var e = t.match(a[I]);
                    return null == e ? null : Y(e[1] + "." + (e[2] || "0") + "." + (e[3] || "0"))
                }
                Ct.prototype.parse = function(t) {
                    var e = this.options.loose ? a[K] : a[H],
                        r = t.match(e);
                    if (!r) throw new TypeError("Invalid comparator: " + t);
                    this.operator = r[1], "=" === this.operator && (this.operator = ""), r[2] ? this.semver = new tt(r[2], this.options.loose) : this.semver = At
                }, Ct.prototype.toString = function() {
                    return this.value
                }, Ct.prototype.test = function(t) {
                    return n("Comparator.test", t, this.options.loose), this.semver === At || ("string" === typeof t && (t = new tt(t, this.options)), bt(t, this.operator, this.semver, this.options))
                }, Ct.prototype.intersects = function(t, e) {
                    if (!(t instanceof Ct)) throw new TypeError("a Comparator is required");
                    var r;
                    if (e && "object" === typeof e || (e = {
                            loose: !!e,
                            includePrerelease: !1
                        }), "" === this.operator) return r = new Bt(t.value, e), Ot(this.value, r, e);
                    if ("" === t.operator) return r = new Bt(this.value, e), Ot(t.semver, r, e);
                    var n = (">=" === this.operator || ">" === this.operator) && (">=" === t.operator || ">" === t.operator),
                        i = ("<=" === this.operator || "<" === this.operator) && ("<=" === t.operator || "<" === t.operator),
                        s = this.semver.version === t.semver.version,
                        o = (">=" === this.operator || "<=" === this.operator) && (">=" === t.operator || "<=" === t.operator),
                        a = bt(this.semver, "<", t.semver, e) && (">=" === this.operator || ">" === this.operator) && ("<=" === t.operator || "<" === t.operator),
                        u = bt(this.semver, ">", t.semver, e) && ("<=" === this.operator || "<" === this.operator) && (">=" === t.operator || ">" === t.operator);
                    return n || i || s && o || a || u
                }, e.Range = Bt, Bt.prototype.format = function() {
                    return this.range = this.set.map((function(t) {
                        return t.join(" ").trim()
                    })).join("||").trim(), this.range
                }, Bt.prototype.toString = function() {
                    return this.range
                }, Bt.prototype.parseRange = function(t) {
                    var e = this.options.loose;
                    t = t.trim();
                    var r = e ? a[G] : a[z];
                    t = t.replace(r, Tt), n("hyphen replace", t), t = t.replace(a[V], J), n("comparator trim", t, a[V]), t = t.replace(a[T], P), t = t.replace(a[W], R), t = t.split(/\s+/).join(" ");
                    var i = e ? a[K] : a[H],
                        s = t.split(" ").map((function(t) {
                            return Et(t, this.options)
                        }), this).join(" ").split(/\s+/);
                    return this.options.loose && (s = s.filter((function(t) {
                        return !!t.match(i)
                    }))), s = s.map((function(t) {
                        return new Ct(t, this.options)
                    }), this), s
                }, Bt.prototype.intersects = function(t, e) {
                    if (!(t instanceof Bt)) throw new TypeError("a Range is required");
                    return this.set.some((function(r) {
                        return r.every((function(r) {
                            return t.set.some((function(t) {
                                return t.every((function(t) {
                                    return r.intersects(t, e)
                                }))
                            }))
                        }))
                    }))
                }, e.toComparators = Ft, Bt.prototype.test = function(t) {
                    if (!t) return !1;
                    "string" === typeof t && (t = new tt(t, this.options));
                    for (var e = 0; e < this.set.length; e++)
                        if (Pt(this.set[e], t, this.options)) return !0;
                    return !1
                }, e.satisfies = Ot, e.maxSatisfying = Ut, e.minSatisfying = jt, e.minVersion = Wt, e.validRange = Rt, e.ltr = Lt, e.gtr = qt, e.outside = Kt, e.prerelease = Ht, e.intersects = Vt, e.coerce = Jt
            }).call(this, r("4362"))
        },
        "8f3b": function(t, e, r) {
            (function(e) {
                const n = r("1c46"),
                    i = 2147483647,
                    s = 5e3;

                function o(t, r, s, o, a, u, c) {
                    if (0 === s || 0 !== (s & s - 1)) throw Error("N must be > 0 and a power of 2");
                    if (s > i / 128 / o) throw Error("Parameter N is too large");
                    if (o > i / 128 / a) throw Error("Parameter r is too large");
                    let h, l = e.alloc(256 * o),
                        d = e.alloc(128 * o * s),
                        f = new Int32Array(16),
                        p = new Int32Array(16),
                        g = e.alloc(64),
                        v = n.pbkdf2Sync(t, r, 1, 128 * a * o, "sha256");
                    if (c) {
                        let t = a * s * 2,
                            e = 0;
                        h = function() {
                            ++e, e % 1e3 === 0 && c({
                                current: e,
                                total: t,
                                percent: e / t * 100
                            })
                        }
                    }
                    return {
                        XY: l,
                        V: d,
                        B32: f,
                        x: p,
                        _X: g,
                        B: v,
                        tickCallback: h
                    }
                }
                async function a(t, e, r, n, i, o, a, u, h, l, f) {
                    f = f || s;
                    let p, g = 0,
                        v = 128 * r;
                    for (t.copy(o, g, e, e + v), p = 0; p < n; p++) o.copy(i, p * v, g, g + v), p % f === 0 && await new Promise(t => setImmediate(t)), c(o, g, v, r, a, u, h), l && l();
                    for (p = 0; p < n; p++) {
                        let t = g + 64 * (2 * r - 1),
                            e = o.readUInt32LE(t) & n - 1;
                        d(i, e * v, o, g, v), p % f === 0 && await new Promise(t => setImmediate(t)), c(o, g, v, r, a, u, h), l && l()
                    }
                    o.copy(t, e, g, g + v)
                }

                function u(t, e, r, n, i, s, o, a, u, h) {
                    let l, f = 0,
                        p = 128 * r;
                    for (t.copy(s, f, e, e + p), l = 0; l < n; l++) s.copy(i, l * p, f, f + p), c(s, f, p, r, o, a, u), h && h();
                    for (l = 0; l < n; l++) {
                        let t = f + 64 * (2 * r - 1),
                            e = s.readUInt32LE(t) & n - 1;
                        d(i, e * p, s, f, p), c(s, f, p, r, o, a, u), h && h()
                    }
                    s.copy(t, e, f, f + p)
                }

                function c(t, e, r, n, i, s, o) {
                    let a;
                    for (f(t, e + 64 * (2 * n - 1), i, 0, 64), a = 0; a < 2 * n; a++) d(t, 64 * a, i, 0, 64), l(i, s, o), f(i, 0, t, r + 64 * a, 64);
                    for (a = 0; a < n; a++) f(t, r + 2 * a * 64, t, e + 64 * a, 64);
                    for (a = 0; a < n; a++) f(t, r + 64 * (2 * a + 1), t, e + 64 * (a + n), 64)
                }

                function h(t, e) {
                    return t << e | t >>> 32 - e
                }

                function l(t, e, r) {
                    let n;
                    for (n = 0; n < 16; n++) e[n] = (255 & t[4 * n + 0]) << 0, e[n] |= (255 & t[4 * n + 1]) << 8, e[n] |= (255 & t[4 * n + 2]) << 16, e[n] |= (255 & t[4 * n + 3]) << 24;
                    for (f(e, 0, r, 0, 16), n = 8; n > 0; n -= 2) r[4] ^= h(r[0] + r[12], 7), r[8] ^= h(r[4] + r[0], 9), r[12] ^= h(r[8] + r[4], 13), r[0] ^= h(r[12] + r[8], 18), r[9] ^= h(r[5] + r[1], 7), r[13] ^= h(r[9] + r[5], 9), r[1] ^= h(r[13] + r[9], 13), r[5] ^= h(r[1] + r[13], 18), r[14] ^= h(r[10] + r[6], 7), r[2] ^= h(r[14] + r[10], 9), r[6] ^= h(r[2] + r[14], 13), r[10] ^= h(r[6] + r[2], 18), r[3] ^= h(r[15] + r[11], 7), r[7] ^= h(r[3] + r[15], 9), r[11] ^= h(r[7] + r[3], 13), r[15] ^= h(r[11] + r[7], 18), r[1] ^= h(r[0] + r[3], 7), r[2] ^= h(r[1] + r[0], 9), r[3] ^= h(r[2] + r[1], 13), r[0] ^= h(r[3] + r[2], 18), r[6] ^= h(r[5] + r[4], 7), r[7] ^= h(r[6] + r[5], 9), r[4] ^= h(r[7] + r[6], 13), r[5] ^= h(r[4] + r[7], 18), r[11] ^= h(r[10] + r[9], 7), r[8] ^= h(r[11] + r[10], 9), r[9] ^= h(r[8] + r[11], 13), r[10] ^= h(r[9] + r[8], 18), r[12] ^= h(r[15] + r[14], 7), r[13] ^= h(r[12] + r[15], 9), r[14] ^= h(r[13] + r[12], 13), r[15] ^= h(r[14] + r[13], 18);
                    for (n = 0; n < 16; ++n) e[n] = r[n] + e[n];
                    for (n = 0; n < 16; n++) {
                        let r = 4 * n;
                        t[r + 0] = e[n] >> 0 & 255, t[r + 1] = e[n] >> 8 & 255, t[r + 2] = e[n] >> 16 & 255, t[r + 3] = e[n] >> 24 & 255
                    }
                }

                function d(t, e, r, n, i) {
                    for (let s = 0; s < i; s++) r[n + s] ^= t[e + s]
                }

                function f(t, r, n, i, s) {
                    if (e.isBuffer(t) && e.isBuffer(n)) t.copy(n, i, r, r + s);
                    else
                        while (s--) n[i++] = t[r++]
                }
                t.exports = {
                    checkAndInit: o,
                    smix: a,
                    smixSync: u
                }
            }).call(this, r("b639").Buffer)
        },
        "8f88": function(t, e) {
            class r {
                constructor(t) {
                    this.masterchainBlocks = {}, this.shardchainBlocks = {}, this.logFunction = t
                }
                async insertShardBlocks(t) {
                    for (const {
                            workchain: e,
                            shardId: r,
                            shardBlockNumber: n
                        } of t) void 0 === this.shardchainBlocks[e + "_" + r + "_" + n] && (this.logFunction && this.logFunction("insert shard " + e + " " + r + " " + n), this.shardchainBlocks[e + "_" + r + "_" + n] = !1)
                }
                async insertBlocks(t, e) {
                    if (this.logFunction && this.logFunction("mc processed " + t), void 0 !== this.masterchainBlocks[t]) throw new Error("mc already exists " + t);
                    this.masterchainBlocks[t] = !0, await this.insertShardBlocks(e)
                }
                async getLastMasterchainBlockNumber() {
                    const t = Object.keys(this.masterchainBlocks).map(t => Number(t)).sort((t, e) => e - t);
                    return t[0]
                }
                async setBlockProcessed(t, e, r, n) {
                    if (this.logFunction && this.logFunction("shard processed " + t + " " + e + " " + r), void 0 === this.shardchainBlocks[t + "_" + e + "_" + r]) throw new Error("shard not exists " + t + "_" + e + "_" + r);
                    this.shardchainBlocks[t + "_" + e + "_" + r] = !0, await this.insertShardBlocks(n)
                }
                async getUnprocessedShardBlock() {
                    for (let t in this.shardchainBlocks)
                        if (!1 === this.shardchainBlocks[t]) {
                            const e = t.split("_");
                            return {
                                workchain: Number(e[0]),
                                shardId: e[1],
                                shardBlockNumber: Number(e[2])
                            }
                        }
                }
            }
            t.exports = {
                InMemoryBlockStorage: r
            }
        },
        9277: function(t, e, r) {
            const {
                Cell: n
            } = r("41b0"), i = (t, e) => {
                if (32 !== e.length) throw new Error("invalid publicKey length");
                t.bits.writeBytes(e)
            }, s = (t, e) => {
                if (64 !== e.length) throw new Error("invalid signature length");
                t.bits.writeBytes(e)
            }, o = t => {
                const e = new n;
                return s(e, t), e
            }, a = (t, e) => {
                if (e) {
                    if (t.bits.writeBit(1), t.refs.length >= 4) throw new Error("refs overflow");
                    t.refs.push(e)
                } else t.bits.writeBit(0)
            }, u = a, c = 1768843636, h = 1131179891, l = 1128492404, d = 1433289580, f = 1130915665, p = 1131168622, g = 1130910580, v = 1741148801, m = 235282626, y = 1433884798, w = 2040604399, b = 521476815, C = 143567410, A = 1727459433, B = 625158801, F = -572749638, E = t => {
                const e = new n;
                return e.bits.writeUint(v, 32), e.bits.writeCoins(t.coinsA), e.bits.writeCoins(t.coinsB), e
            }, x = t => {
                const e = new n;
                return e.bits.writeUint(c, 32), e.bits.writeUint(t.channelId, 128), e.bits.writeCoins(t.balanceA), e.bits.writeCoins(t.balanceB), e
            }, _ = t => {
                const e = new n;
                return e.bits.writeUint(h, 32), e.bits.writeUint(t.channelId, 128), e.bits.writeCoins(t.balanceA), e.bits.writeCoins(t.balanceB), e.bits.writeUint(t.seqnoA, 64), e.bits.writeUint(t.seqnoB, 64), e
            }, k = t => {
                const e = new n;
                return e.bits.writeUint(l, 32), e.bits.writeUint(t.channelId, 128), e.bits.writeUint(t.seqnoA, 64), e.bits.writeUint(t.seqnoB, 64), e
            }, M = t => {
                const e = new n;
                return e.bits.writeCoins(t.amount), e.writeCell(t.condition), e
            }, D = t => {
                const e = new n;
                return e.bits.writeUint(t.seqno, 64), e.bits.writeCoins(t.sentCoins), u(e, t.conditionals), e
            }, S = t => {
                const e = new n;
                return e.bits.writeUint(g, 32), e.bits.writeUint(t.channelId, 128), e.writeCell(t.semiChannelBody), a(e, t.counterpartySemiChannelBody), e
            }, I = t => {
                const e = new n;
                return s(e, t.signature), e.writeCell(t.state), e
            }, N = t => {
                const e = new n;
                return e.bits.writeUint(d, 32), e.bits.writeUint(t.channelId, 128), e.refs[0] = t.signedSemiChannelStateA, e.refs[1] = t.signedSemiChannelStateB, e
            }, T = t => {
                const e = new n;
                return e.bits.writeUint(f, 32), e.bits.writeUint(t.channelId, 128), e.refs[0] = t.signedSemiChannelStateA, e.refs[1] = t.signedSemiChannelStateB, e
            }, P = t => {
                const e = new n;
                return e.bits.writeUint(p, 32), e.bits.writeUint(t.channelId, 128), u(e, t.conditionalsToSettle), e
            }, O = () => {
                const t = new n;
                return t.bits.writeUint(B, 32), t
            }, U = t => {
                const e = new n;
                return e.bits.writeUint(t.op, 32), e.bits.writeBit(t.isA), s(e, t.signature), e.writeCell(t.cell), e
            }, j = t => {
                const e = new n;
                return e.bits.writeUint(t.op, 32), e.refs[0] = o(t.signatureA), e.refs[1] = o(t.signatureB), e.writeCell(t.cell), e
            };
            t.exports = {
                writePublicKey: i,
                writeSignature: s,
                createSignatureCell: o,
                tag_init: c,
                tag_cooperative_close: h,
                tag_cooperative_commit: l,
                tag_start_uncooperative_close: d,
                tag_challenge_state: f,
                tag_settle_conditionals: p,
                tag_state: g,
                op_top_up_balance: v,
                op_init_channel: m,
                op_cooperative_close: y,
                op_cooperative_commit: w,
                op_start_uncooperative_close: b,
                op_challenge_quarantined_state: C,
                op_settle_conditionals: A,
                op_finish_uncooperative_close: B,
                op_channel_closed: F,
                createTopUpBalance: E,
                createInitChannelBody: x,
                createCooperativeCloseChannelBody: _,
                createCooperativeCommitBody: k,
                createConditionalPayment: M,
                createSemiChannelBody: D,
                createSemiChannelState: S,
                createSignedSemiChannelState: I,
                createStartUncooperativeCloseBody: N,
                createChallengeQuarantinedStateBody: T,
                createSettleConditionalsBody: P,
                createFinishUncooperativeClose: O,
                createOneSignature: U,
                createTwoSignature: j
            }
        },
        "95e6": function(t, e, r) {
            const {
                HighloadWalletContractV3: n
            } = r("d064"), {
                HighloadQueryId: i
            } = r("ea6c");
            t.exports.default = {
                HighloadQueryId: i,
                HighloadWalletContractV3: n,
                all: {
                    "highload-3": n
                },
                list: [n]
            }
        },
        9992: function(t, e, r) {
            const {
                Cell: n
            } = r("41b0"), {
                WalletContract: i
            } = r("df0c");
            class s extends i {
                constructor(t, e) {
                    e.code = n.oneFromBoc("B5EE9C72410101010044000084FF0020DDA4F260810200D71820D70B1FED44D0D31FD3FFD15112BAF2A122F901541044F910F2A2F80001D31F3120D74A96D307D402FB00DED1A4C8CB1FCBFFC9ED5441FDF089"), super(t, e)
                }
                getName() {
                    return "simpleR1"
                }
            }
            class o extends i {
                constructor(t, e) {
                    e.code = n.oneFromBoc("B5EE9C724101010100530000A2FF0020DD2082014C97BA9730ED44D0D70B1FE0A4F260810200D71820D70B1FED44D0D31FD3FFD15112BAF2A122F901541044F910F2A2F80001D31F3120D74A96D307D402FB00DED1A4C8CB1FCBFFC9ED54D0E2786F"), super(t, e)
                }
                getName() {
                    return "simpleR2"
                }
            }
            class a extends i {
                constructor(t, e) {
                    e.code = n.oneFromBoc("B5EE9C7241010101005F0000BAFF0020DD2082014C97BA218201339CBAB19C71B0ED44D0D31FD70BFFE304E0A4F260810200D71820D70B1FED44D0D31FD3FFD15112BAF2A122F901541044F910F2A2F80001D31F3120D74A96D307D402FB00DED1A4C8CB1FCBFFC9ED54B5B86E42"), super(t, e)
                }
                getName() {
                    return "simpleR3"
                }
            }
            t.exports = {
                SimpleWalletContractR1: s,
                SimpleWalletContractR2: o,
                SimpleWalletContractR3: a
            }
        },
        "9a3b": function(t, e, r) {
            r("5cc6");
            const {
                Cell: n
            } = r("41b0"), {
                Address: i,
                BN: s,
                bytesToHex: o
            } = r("1afa"), {
                WalletContract: a
            } = r("df0c"), {
                parseAddress: u
            } = r("cdcf"), {
                Contract: c
            } = r("38a0"), h = 268, l = "b5ee9c7241021c010003fb000114ff00f4a413f4bcf2c80b01020120030203b8f28308d71820d31fd31fd31f02f823bbf264ed44d0d31fd31fd3ff305abaf2a15033baf2a202f9014033f910f2a3f800db3c20d74ac0018e99ed44ed45ed47915bed67ed65ed648e82db3ced41edf101f2ff9130e2f841a4f861db3c1b1413020148110402012008050201200706020db9846db3cdb3c81b1a0129ba462db3cf845f846f847f848f849f84af84bf84481b0201200e090201620d0a02016a0c0b012fa2c76cf3e9100723281f2fff2743e112040423d029be84c61b000fa25fb513435c2c7e014bad346d9e36fc22470d4080847a4937d29910ce6903e9ff9837812801b7810148987159f318401b02016e100f0019af1df6a26840106b90eb858fc00019adce76a26840206b90eb85ffc003acd06c2220d749c160915be001d0d3030171b0915be0fa4030db3c01d31fd33ff84b5240c705238210a7733acdbab08ea46c12db3c8210f7733acd01708018c8cb055004cf1623fa0213cb6acb1fcb3fc98040fb00e30e1b141201cef84a5240c7050382107258a69bba13b08ed18e2c01fa407fc8ca0002fa4401c8ca07cbffc9d0f8441023810108f441f86420d74ac200209501d430d001deb312e68210f258a69b32708018c8cb055004cf1623fa0213cb6acb1fcb3fc98040fb00db3c925f03e2130066f848f847f846f845c8cb3fcb1fcb1fcb1ff849fa02f84acf16f84bcf16c9f844f843f842f841c8cb1fcb1fcbfff400ccc9ed54025cd307d4d1f823db3c20c2008e9b22c003f2e06421d0d303fa4031fa40f84a5220c705b3925f04e30d9130e201fb001a1503fa21fa4401c8ca07cbffc9d0f844810108f40a6fa1318f5f330172b0c002f2e06501fa003171d721fa0031fa0031d33f31d31f31d30001c000f2e066d3000193d430d0de2171db3c8e2a31d31f302082104e73744bba21821047657424bab121821056744370bab1018210566f7465bab1f2e067e30e70925f03e220c200191716000e9372fb029130e202ea0170db3c8e6d20d749c2008e63d31f21c00022830bbab122811001bab122821047d54391bab1228210595f07bcbab122821069fb306cbab1228210566f7465bab122821056744370bab1f2e06701c00021d749c200b08e15d3073020c06421c077b121c044b101c057b1f2e0689130e29130e2e30d1918001ad31f308210566f7465baf2e067004401fa4401c3ff925b70e001f833206e925b70e0d020d7498307b9925b70e0d70bffba0060f845f846a05210bc923070e0f845f848a05210b99330f849e0f849f849f84513a1f847a904f846f847a9041023a984a1007eed44d0d31f01f861d31f01f862d3ff01f863f40401f864d401d0d33f01f865d31f01f866d31f01f867d31f01f868fa0001f869fa4001f86afa4001f86bd1d10a20c6a7";
            class d extends a {
                constructor(t, e) {
                    e.code = n.oneFromBoc(l), super(t, e), this.options.walletId || (this.options.walletId = h + this.options.wc), this.methods.getPublicKey = this.getPublicKey.bind(this), this.methods.getWalletId = this.getWalletId.bind(this), this.methods.getLockedAmount = this.getLockedAmount.bind(this), this.methods.getVestingData = this.getVestingData.bind(this), this.methods.getWhitelist = this.getWhitelist.bind(this)
                }
                getName() {
                    return "vesting-1"
                }
                createSigningMessage(t, e, r) {
                    t = t || 0, e = e || Math.floor(Date.now() / 1e3) + 60;
                    const i = new n;
                    if (i.bits.writeUint(this.options.walletId, 32), 0 === t)
                        for (let n = 0; n < 32; n++) i.bits.writeBit(1);
                    else i.bits.writeUint(e, 32);
                    return i.bits.writeUint(t, 32), i
                }
                createDataCell() {
                    if (0 !== this.options.walletId && !this.options.walletId) throw new Error("no walletId");
                    if (!this.options.publicKey) throw new Error("no publicKey");
                    if (!(this.options.publicKey instanceof Uint8Array)) throw new Error("publicKey not Uint8Array");
                    if (0 !== this.options.vestingStartTime && !this.options.vestingStartTime) throw new Error("no vestingStartTime");
                    if (this.options.vestingTotalDuration <= 0) throw new Error("vestingTotalDuration cant be zero or negative");
                    if (!this.options.vestingTotalDuration) throw new Error("no vestingTotalDuration");
                    if (this.options.vestingTotalDuration > 2 ** 32 - 1) throw new Error("vestingTotalDuration > 2^32 - 1");
                    if (this.options.unlockPeriod <= 0) throw new Error("unlockPeriod cant be zero or negative");
                    if (!this.options.unlockPeriod) throw new Error("no unlockPeriod");
                    if (this.options.unlockPeriod > this.options.vestingTotalDuration) throw new Error("unlockPeriod > vestingTotalDuration");
                    if (0 !== this.options.cliffDuration && !this.options.cliffDuration) throw new Error("no cliffDuration");
                    if (this.options.cliffDuration < 0) throw new Error("cliffDuration cant be negative");
                    if (this.options.cliffDuration >= this.options.vestingTotalDuration) throw new Error("cliffDuration >= vestingTotalDuration");
                    const t = new s(this.options.vestingTotalDuration).div(new s(this.options.unlockPeriod)).mul(new s(this.options.unlockPeriod));
                    if (!t.eq(new s(this.options.vestingTotalDuration))) throw new Error("vestingTotalDuration mod unlockPeriod != 0");
                    const e = new s(this.options.cliffDuration).div(new s(this.options.unlockPeriod)).mul(new s(this.options.unlockPeriod));
                    if (!e.eq(new s(this.options.cliffDuration))) throw new Error("cliffDuration mod unlockPeriod != 0");
                    if (!this.options.vestingTotalAmount) throw new Error("no vestingTotalAmount");
                    if (!this.options.vestingTotalAmount.gt(new s(0))) throw new Error("vestingTotalAmount cant be zero");
                    if (!this.options.vestingSenderAddress) throw new Error("no vestingSenderAddress");
                    if (!(this.options.vestingSenderAddress instanceof i)) throw new Error("vestingSenderAddress not Address");
                    if (!this.options.ownerAddress) throw new Error("no ownerAddress");
                    if (!(this.options.ownerAddress instanceof i)) throw new Error("ownerAddress not Address");
                    const r = new n;
                    r.bits.writeUint(0, 32), r.bits.writeUint(this.options.walletId, 32), r.bits.writeUint(new s(o(this.options.publicKey), 16), 256), r.bits.writeBit(!1);
                    const a = new n;
                    return a.bits.writeUint(this.options.vestingStartTime, 64), a.bits.writeUint(this.options.vestingTotalDuration, 32), a.bits.writeUint(this.options.unlockPeriod, 32), a.bits.writeUint(this.options.cliffDuration, 32), a.bits.writeCoins(this.options.vestingTotalAmount), a.bits.writeAddress(new i(this.options.vestingSenderAddress)), a.bits.writeAddress(new i(this.options.ownerAddress)), r.refs[0] = a, r
                }
                createAddWhitelistBody(t) {
                    const {
                        addresses: e,
                        queryId: r
                    } = t, i = new n;
                    i.bits.writeUint(1918412443, 32), i.bits.writeUint(r || 0, 64), i.bits.writeAddress(e[0]);
                    let s = null;
                    for (let o = e.length - 1; o >= 1; o--) {
                        const t = new n;
                        t.bits.writeAddress(e[o]), s && (t.refs[0] = s), s = t
                    }
                    return s && (i.refs[0] = s), i
                }
                createInternalTransfer(t) {
                    const e = new n;
                    return e.bits.writeUint(2809346765, 32), e.bits.writeUint(t.queryId || 0, 64), e.bits.writeUint8(t.sendMode || 3), e.refs.push(c.createOutMsg(t.address, t.amount, t.payload)), e
                }
                async getPublicKey() {
                    const t = await this.getAddress();
                    return this.provider.call2(t.toString(), "get_public_key")
                }
                async getWalletId() {
                    const t = await this.getAddress();
                    return this.provider.call2(t.toString(), "get_subwallet_id")
                }
                async getLockedAmount(t) {
                    const e = await this.getAddress();
                    return this.provider.call2(e.toString(), "get_locked_amount", [
                        ["num", t]
                    ])
                }
                async getVestingData() {
                    const t = await this.getAddress(),
                        e = await this.provider.call2(t.toString(), "get_vesting_data"),
                        r = e[0].toNumber(),
                        n = e[1].toNumber(),
                        i = e[2].toNumber(),
                        s = e[3].toNumber(),
                        o = e[4],
                        a = u(e[5]),
                        c = u(e[6]),
                        h = e[7];
                    return {
                        vestingStartTime: r,
                        vestingTotalDuration: n,
                        unlockPeriod: i,
                        cliffDuration: s,
                        vestingTotalAmount: o,
                        vestingSenderAddress: a,
                        ownerAddress: c,
                        whitelistCell: h
                    }
                }
                async getWhitelist() {
                    const t = await this.getAddress(),
                        e = await this.provider.call2(t.toString(), "get_whitelist"),
                        r = [];
                    for (const n of e) {
                        if (2 !== n.length) throw new Error("invalid whitelist result");
                        const t = n[0],
                            e = n[1],
                            s = new i(t.toString(10) + ":" + e.toString(16).padStart(64, "0"));
                        r.push(s)
                    }
                    return r
                }
            }
            d.WALLET_ID_BASE = h, d.codeHex = l, t.exports = {
                VestingWalletV1: d
            }
        },
        "9ab4": function(t, e, r) {
            "use strict";
            r.r(e), r.d(e, "__extends", (function() {
                return i
            })), r.d(e, "__assign", (function() {
                return s
            })), r.d(e, "__rest", (function() {
                return o
            })), r.d(e, "__decorate", (function() {
                return a
            })), r.d(e, "__param", (function() {
                return u
            })), r.d(e, "__metadata", (function() {
                return c
            })), r.d(e, "__awaiter", (function() {
                return h
            })), r.d(e, "__generator", (function() {
                return l
            })), r.d(e, "__createBinding", (function() {
                return d
            })), r.d(e, "__exportStar", (function() {
                return f
            })), r.d(e, "__values", (function() {
                return p
            })), r.d(e, "__read", (function() {
                return g
            })), r.d(e, "__spread", (function() {
                return v
            })), r.d(e, "__spreadArrays", (function() {
                return m
            })), r.d(e, "__await", (function() {
                return y
            })), r.d(e, "__asyncGenerator", (function() {
                return w
            })), r.d(e, "__asyncDelegator", (function() {
                return b
            })), r.d(e, "__asyncValues", (function() {
                return C
            })), r.d(e, "__makeTemplateObject", (function() {
                return A
            })), r.d(e, "__importStar", (function() {
                return B
            })), r.d(e, "__importDefault", (function() {
                return F
            })), r.d(e, "__classPrivateFieldGet", (function() {
                return E
            })), r.d(e, "__classPrivateFieldSet", (function() {
                return x
            }));
            /*! *****************************************************************************
            Copyright (c) Microsoft Corporation.

            Permission to use, copy, modify, and/or distribute this software for any
            purpose with or without fee is hereby granted.

            THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
            REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
            AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
            INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
            LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
            OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
            PERFORMANCE OF THIS SOFTWARE.
            ***************************************************************************** */
            var n = function(t, e) {
                return n = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function(t, e) {
                    t.__proto__ = e
                } || function(t, e) {
                    for (var r in e) e.hasOwnProperty(r) && (t[r] = e[r])
                }, n(t, e)
            };

            function i(t, e) {
                function r() {
                    this.constructor = t
                }
                n(t, e), t.prototype = null === e ? Object.create(e) : (r.prototype = e.prototype, new r)
            }
            var s = function() {
                return s = Object.assign || function(t) {
                    for (var e, r = 1, n = arguments.length; r < n; r++)
                        for (var i in e = arguments[r], e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
                    return t
                }, s.apply(this, arguments)
            };

            function o(t, e) {
                var r = {};
                for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && e.indexOf(n) < 0 && (r[n] = t[n]);
                if (null != t && "function" === typeof Object.getOwnPropertySymbols) {
                    var i = 0;
                    for (n = Object.getOwnPropertySymbols(t); i < n.length; i++) e.indexOf(n[i]) < 0 && Object.prototype.propertyIsEnumerable.call(t, n[i]) && (r[n[i]] = t[n[i]])
                }
                return r
            }

            function a(t, e, r, n) {
                var i, s = arguments.length,
                    o = s < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, r) : n;
                if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) o = Reflect.decorate(t, e, r, n);
                else
                    for (var a = t.length - 1; a >= 0; a--)(i = t[a]) && (o = (s < 3 ? i(o) : s > 3 ? i(e, r, o) : i(e, r)) || o);
                return s > 3 && o && Object.defineProperty(e, r, o), o
            }

            function u(t, e) {
                return function(r, n) {
                    e(r, n, t)
                }
            }

            function c(t, e) {
                if ("object" === typeof Reflect && "function" === typeof Reflect.metadata) return Reflect.metadata(t, e)
            }

            function h(t, e, r, n) {
                function i(t) {
                    return t instanceof r ? t : new r((function(e) {
                        e(t)
                    }))
                }
                return new(r || (r = Promise))((function(r, s) {
                    function o(t) {
                        try {
                            u(n.next(t))
                        } catch (e) {
                            s(e)
                        }
                    }

                    function a(t) {
                        try {
                            u(n["throw"](t))
                        } catch (e) {
                            s(e)
                        }
                    }

                    function u(t) {
                        t.done ? r(t.value) : i(t.value).then(o, a)
                    }
                    u((n = n.apply(t, e || [])).next())
                }))
            }

            function l(t, e) {
                var r, n, i, s, o = {
                    label: 0,
                    sent: function() {
                        if (1 & i[0]) throw i[1];
                        return i[1]
                    },
                    trys: [],
                    ops: []
                };
                return s = {
                    next: a(0),
                    throw: a(1),
                    return: a(2)
                }, "function" === typeof Symbol && (s[Symbol.iterator] = function() {
                    return this
                }), s;

                function a(t) {
                    return function(e) {
                        return u([t, e])
                    }
                }

                function u(s) {
                    if (r) throw new TypeError("Generator is already executing.");
                    while (o) try {
                        if (r = 1, n && (i = 2 & s[0] ? n["return"] : s[0] ? n["throw"] || ((i = n["return"]) && i.call(n), 0) : n.next) && !(i = i.call(n, s[1])).done) return i;
                        switch (n = 0, i && (s = [2 & s[0], i.value]), s[0]) {
                            case 0:
                            case 1:
                                i = s;
                                break;
                            case 4:
                                return o.label++, {
                                    value: s[1],
                                    done: !1
                                };
                            case 5:
                                o.label++, n = s[1], s = [0];
                                continue;
                            case 7:
                                s = o.ops.pop(), o.trys.pop();
                                continue;
                            default:
                                if (i = o.trys, !(i = i.length > 0 && i[i.length - 1]) && (6 === s[0] || 2 === s[0])) {
                                    o = 0;
                                    continue
                                }
                                if (3 === s[0] && (!i || s[1] > i[0] && s[1] < i[3])) {
                                    o.label = s[1];
                                    break
                                }
                                if (6 === s[0] && o.label < i[1]) {
                                    o.label = i[1], i = s;
                                    break
                                }
                                if (i && o.label < i[2]) {
                                    o.label = i[2], o.ops.push(s);
                                    break
                                }
                                i[2] && o.ops.pop(), o.trys.pop();
                                continue
                        }
                        s = e.call(t, o)
                    } catch (a) {
                        s = [6, a], n = 0
                    } finally {
                        r = i = 0
                    }
                    if (5 & s[0]) throw s[1];
                    return {
                        value: s[0] ? s[1] : void 0,
                        done: !0
                    }
                }
            }

            function d(t, e, r, n) {
                void 0 === n && (n = r), t[n] = e[r]
            }

            function f(t, e) {
                for (var r in t) "default" === r || e.hasOwnProperty(r) || (e[r] = t[r])
            }

            function p(t) {
                var e = "function" === typeof Symbol && Symbol.iterator,
                    r = e && t[e],
                    n = 0;
                if (r) return r.call(t);
                if (t && "number" === typeof t.length) return {
                    next: function() {
                        return t && n >= t.length && (t = void 0), {
                            value: t && t[n++],
                            done: !t
                        }
                    }
                };
                throw new TypeError(e ? "Object is not iterable." : "Symbol.iterator is not defined.")
            }

            function g(t, e) {
                var r = "function" === typeof Symbol && t[Symbol.iterator];
                if (!r) return t;
                var n, i, s = r.call(t),
                    o = [];
                try {
                    while ((void 0 === e || e-- > 0) && !(n = s.next()).done) o.push(n.value)
                } catch (a) {
                    i = {
                        error: a
                    }
                } finally {
                    try {
                        n && !n.done && (r = s["return"]) && r.call(s)
                    } finally {
                        if (i) throw i.error
                    }
                }
                return o
            }

            function v() {
                for (var t = [], e = 0; e < arguments.length; e++) t = t.concat(g(arguments[e]));
                return t
            }

            function m() {
                for (var t = 0, e = 0, r = arguments.length; e < r; e++) t += arguments[e].length;
                var n = Array(t),
                    i = 0;
                for (e = 0; e < r; e++)
                    for (var s = arguments[e], o = 0, a = s.length; o < a; o++, i++) n[i] = s[o];
                return n
            }

            function y(t) {
                return this instanceof y ? (this.v = t, this) : new y(t)
            }

            function w(t, e, r) {
                if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
                var n, i = r.apply(t, e || []),
                    s = [];
                return n = {}, o("next"), o("throw"), o("return"), n[Symbol.asyncIterator] = function() {
                    return this
                }, n;

                function o(t) {
                    i[t] && (n[t] = function(e) {
                        return new Promise((function(r, n) {
                            s.push([t, e, r, n]) > 1 || a(t, e)
                        }))
                    })
                }

                function a(t, e) {
                    try {
                        u(i[t](e))
                    } catch (r) {
                        l(s[0][3], r)
                    }
                }

                function u(t) {
                    t.value instanceof y ? Promise.resolve(t.value.v).then(c, h) : l(s[0][2], t)
                }

                function c(t) {
                    a("next", t)
                }

                function h(t) {
                    a("throw", t)
                }

                function l(t, e) {
                    t(e), s.shift(), s.length && a(s[0][0], s[0][1])
                }
            }

            function b(t) {
                var e, r;
                return e = {}, n("next"), n("throw", (function(t) {
                    throw t
                })), n("return"), e[Symbol.iterator] = function() {
                    return this
                }, e;

                function n(n, i) {
                    e[n] = t[n] ? function(e) {
                        return (r = !r) ? {
                            value: y(t[n](e)),
                            done: "return" === n
                        } : i ? i(e) : e
                    } : i
                }
            }

            function C(t) {
                if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
                var e, r = t[Symbol.asyncIterator];
                return r ? r.call(t) : (t = "function" === typeof p ? p(t) : t[Symbol.iterator](), e = {}, n("next"), n("throw"), n("return"), e[Symbol.asyncIterator] = function() {
                    return this
                }, e);

                function n(r) {
                    e[r] = t[r] && function(e) {
                        return new Promise((function(n, s) {
                            e = t[r](e), i(n, s, e.done, e.value)
                        }))
                    }
                }

                function i(t, e, r, n) {
                    Promise.resolve(n).then((function(e) {
                        t({
                            value: e,
                            done: r
                        })
                    }), e)
                }
            }

            function A(t, e) {
                return Object.defineProperty ? Object.defineProperty(t, "raw", {
                    value: e
                }) : t.raw = e, t
            }

            function B(t) {
                if (t && t.__esModule) return t;
                var e = {};
                if (null != t)
                    for (var r in t) Object.hasOwnProperty.call(t, r) && (e[r] = t[r]);
                return e.default = t, e
            }

            function F(t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }

            function E(t, e) {
                if (!e.has(t)) throw new TypeError("attempted to get private field on non-instance");
                return e.get(t)
            }

            function x(t, e, r) {
                if (!e.has(t)) throw new TypeError("attempted to set private field on non-instance");
                return e.set(t, r), r
            }
        },
        "9e12": function(t, e, r) {
            "use strict";
            var n = r("1845");
            t.exports = n.isStandardBrowserEnv() ? function() {
                return {
                    write: function(t, e, r, i, s, o) {
                        var a = [];
                        a.push(t + "=" + encodeURIComponent(e)), n.isNumber(r) && a.push("expires=" + new Date(r).toGMTString()), n.isString(i) && a.push("path=" + i), n.isString(s) && a.push("domain=" + s), !0 === o && a.push("secure"), document.cookie = a.join("; ")
                    },
                    read: function(t) {
                        var e = document.cookie.match(new RegExp("(^|;\\s*)(" + t + ")=([^;]*)"));
                        return e ? decodeURIComponent(e[3]) : null
                    },
                    remove: function(t) {
                        this.write(t, "", Date.now() - 864e5)
                    }
                }
            }() : function() {
                return {
                    write: function() {},
                    read: function() {
                        return null
                    },
                    remove: function() {}
                }
            }()
        },
        "9f6a": function(t, e, r) {
            "use strict";
            (function(e) {
                const r = 2147483647;

                function n(t) {
                    const e = new Uint32Array([1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298]);
                    let r = 1779033703,
                        n = 3144134277,
                        i = 1013904242,
                        s = 2773480762,
                        o = 1359893119,
                        a = 2600822924,
                        u = 528734635,
                        c = 1541459225;
                    const h = new Uint32Array(64);

                    function l(t) {
                        let l = 0,
                            d = t.length;
                        while (d >= 64) {
                            let f, p, g, v, m, y = r,
                                w = n,
                                b = i,
                                C = s,
                                A = o,
                                B = a,
                                F = u,
                                E = c;
                            for (p = 0; p < 16; p++) g = l + 4 * p, h[p] = (255 & t[g]) << 24 | (255 & t[g + 1]) << 16 | (255 & t[g + 2]) << 8 | 255 & t[g + 3];
                            for (p = 16; p < 64; p++) f = h[p - 2], v = (f >>> 17 | f << 15) ^ (f >>> 19 | f << 13) ^ f >>> 10, f = h[p - 15], m = (f >>> 7 | f << 25) ^ (f >>> 18 | f << 14) ^ f >>> 3, h[p] = (v + h[p - 7] | 0) + (m + h[p - 16] | 0) | 0;
                            for (p = 0; p < 64; p++) v = (((A >>> 6 | A << 26) ^ (A >>> 11 | A << 21) ^ (A >>> 25 | A << 7)) + (A & B ^ ~A & F) | 0) + (E + (e[p] + h[p] | 0) | 0) | 0, m = ((y >>> 2 | y << 30) ^ (y >>> 13 | y << 19) ^ (y >>> 22 | y << 10)) + (y & w ^ y & b ^ w & b) | 0, E = F, F = B, B = A, A = C + v | 0, C = b, b = w, w = y, y = v + m | 0;
                            r = r + y | 0, n = n + w | 0, i = i + b | 0, s = s + C | 0, o = o + A | 0, a = a + B | 0, u = u + F | 0, c = c + E | 0, l += 64, d -= 64
                        }
                    }
                    l(t);
                    let d, f = t.length % 64,
                        p = t.length / 536870912 | 0,
                        g = t.length << 3,
                        v = f < 56 ? 56 : 120,
                        m = t.slice(t.length - f, t.length);
                    for (m.push(128), d = f + 1; d < v; d++) m.push(0);
                    return m.push(p >>> 24 & 255), m.push(p >>> 16 & 255), m.push(p >>> 8 & 255), m.push(p >>> 0 & 255), m.push(g >>> 24 & 255), m.push(g >>> 16 & 255), m.push(g >>> 8 & 255), m.push(g >>> 0 & 255), l(m), [r >>> 24 & 255, r >>> 16 & 255, r >>> 8 & 255, r >>> 0 & 255, n >>> 24 & 255, n >>> 16 & 255, n >>> 8 & 255, n >>> 0 & 255, i >>> 24 & 255, i >>> 16 & 255, i >>> 8 & 255, i >>> 0 & 255, s >>> 24 & 255, s >>> 16 & 255, s >>> 8 & 255, s >>> 0 & 255, o >>> 24 & 255, o >>> 16 & 255, o >>> 8 & 255, o >>> 0 & 255, a >>> 24 & 255, a >>> 16 & 255, a >>> 8 & 255, a >>> 0 & 255, u >>> 24 & 255, u >>> 16 & 255, u >>> 8 & 255, u >>> 0 & 255, c >>> 24 & 255, c >>> 16 & 255, c >>> 8 & 255, c >>> 0 & 255]
                }

                function i(t, e, r) {
                    t = t.length <= 64 ? t : n(t);
                    const i = 64 + e.length + 4,
                        s = new Array(i),
                        o = new Array(64);
                    let a, u = [];
                    for (a = 0; a < 64; a++) s[a] = 54;
                    for (a = 0; a < t.length; a++) s[a] ^= t[a];
                    for (a = 0; a < e.length; a++) s[64 + a] = e[a];
                    for (a = i - 4; a < i; a++) s[a] = 0;
                    for (a = 0; a < 64; a++) o[a] = 92;
                    for (a = 0; a < t.length; a++) o[a] ^= t[a];

                    function c() {
                        for (let t = i - 1; t >= i - 4; t--) {
                            if (s[t]++, s[t] <= 255) return;
                            s[t] = 0
                        }
                    }
                    while (r >= 32) c(), u = u.concat(n(o.concat(n(s)))), r -= 32;
                    return r > 0 && (c(), u = u.concat(n(o.concat(n(s))).slice(0, r))), u
                }

                function s(t, e, r, n, i) {
                    let s;
                    for (c(t, 16 * (2 * r - 1), i, 0, 16), s = 0; s < 2 * r; s++) u(t, 16 * s, i, 16), a(i, n), c(i, 0, t, e + 16 * s, 16);
                    for (s = 0; s < r; s++) c(t, e + 2 * s * 16, t, 16 * s, 16);
                    for (s = 0; s < r; s++) c(t, e + 16 * (2 * s + 1), t, 16 * (s + r), 16)
                }

                function o(t, e) {
                    return t << e | t >>> 32 - e
                }

                function a(t, e) {
                    c(t, 0, e, 0, 16);
                    for (let r = 8; r > 0; r -= 2) e[4] ^= o(e[0] + e[12], 7), e[8] ^= o(e[4] + e[0], 9), e[12] ^= o(e[8] + e[4], 13), e[0] ^= o(e[12] + e[8], 18), e[9] ^= o(e[5] + e[1], 7), e[13] ^= o(e[9] + e[5], 9), e[1] ^= o(e[13] + e[9], 13), e[5] ^= o(e[1] + e[13], 18), e[14] ^= o(e[10] + e[6], 7), e[2] ^= o(e[14] + e[10], 9), e[6] ^= o(e[2] + e[14], 13), e[10] ^= o(e[6] + e[2], 18), e[3] ^= o(e[15] + e[11], 7), e[7] ^= o(e[3] + e[15], 9), e[11] ^= o(e[7] + e[3], 13), e[15] ^= o(e[11] + e[7], 18), e[1] ^= o(e[0] + e[3], 7), e[2] ^= o(e[1] + e[0], 9), e[3] ^= o(e[2] + e[1], 13), e[0] ^= o(e[3] + e[2], 18), e[6] ^= o(e[5] + e[4], 7), e[7] ^= o(e[6] + e[5], 9), e[4] ^= o(e[7] + e[6], 13), e[5] ^= o(e[4] + e[7], 18), e[11] ^= o(e[10] + e[9], 7), e[8] ^= o(e[11] + e[10], 9), e[9] ^= o(e[8] + e[11], 13), e[10] ^= o(e[9] + e[8], 18), e[12] ^= o(e[15] + e[14], 7), e[13] ^= o(e[12] + e[15], 9), e[14] ^= o(e[13] + e[12], 13), e[15] ^= o(e[14] + e[13], 18);
                    for (let r = 0; r < 16; ++r) t[r] += e[r]
                }

                function u(t, e, r, n) {
                    for (let i = 0; i < n; i++) r[i] ^= t[e + i]
                }

                function c(t, e, r, n, i) {
                    while (i--) r[n++] = t[e++]
                }

                function h(t) {
                    if (!t || "number" !== typeof t.length) return !1;
                    for (let e = 0; e < t.length; e++) {
                        const r = t[e];
                        if ("number" !== typeof r || r % 1 || r < 0 || r >= 256) return !1
                    }
                    return !0
                }

                function l(t, e) {
                    if ("number" !== typeof t || t % 1) throw new Error("invalid " + e);
                    return t
                }

                function d(t, e, n, o, a, d, f) {
                    if (n = l(n, "N"), o = l(o, "r"), a = l(a, "p"), d = l(d, "dkLen"), 0 === n || 0 !== (n & n - 1)) throw new Error("N must be power of 2");
                    if (n > r / 128 / o) throw new Error("N too large");
                    if (o > r / 128 / a) throw new Error("r too large");
                    if (!h(t)) throw new Error("password must be an array or buffer");
                    if (t = Array.prototype.slice.call(t), !h(e)) throw new Error("salt must be an array or buffer");
                    e = Array.prototype.slice.call(e);
                    let p = i(t, e, 128 * a * o);
                    const g = new Uint32Array(32 * a * o);
                    for (let r = 0; r < g.length; r++) {
                        const t = 4 * r;
                        g[r] = (255 & p[t + 3]) << 24 | (255 & p[t + 2]) << 16 | (255 & p[t + 1]) << 8 | (255 & p[t + 0]) << 0
                    }
                    const v = new Uint32Array(64 * o),
                        m = new Uint32Array(32 * o * n),
                        y = 32 * o,
                        w = new Uint32Array(16),
                        b = new Uint32Array(16),
                        C = a * n * 2;
                    let A, B, F = 0,
                        E = null,
                        x = !1,
                        _ = 0,
                        k = 0;
                    const M = f ? parseInt(1e3 / o) : 4294967295,
                        D = "undefined" !== typeof setImmediate ? setImmediate : setTimeout,
                        S = function() {
                            if (x) return f(new Error("cancelled"), F / C);
                            let e;
                            switch (_) {
                                case 0:
                                    B = 32 * k * o, c(g, B, v, 0, y), _ = 1, A = 0;
                                case 1:
                                    e = n - A, e > M && (e = M);
                                    for (let t = 0; t < e; t++) c(v, 0, m, (A + t) * y, y), s(v, y, o, w, b);
                                    if (A += e, F += e, f) {
                                        const t = parseInt(1e3 * F / C);
                                        if (t !== E) {
                                            if (x = f(null, F / C), x) break;
                                            E = t
                                        }
                                    }
                                    if (A < n) break;
                                    A = 0, _ = 2;
                                case 2:
                                    e = n - A, e > M && (e = M);
                                    for (let t = 0; t < e; t++) {
                                        const t = 16 * (2 * o - 1),
                                            e = v[t] & n - 1;
                                        u(m, e * y, v, y), s(v, y, o, w, b)
                                    }
                                    if (A += e, F += e, f) {
                                        const t = parseInt(1e3 * F / C);
                                        if (t !== E) {
                                            if (x = f(null, F / C), x) break;
                                            E = t
                                        }
                                    }
                                    if (A < n) break;
                                    if (c(v, 0, g, B, y), k++, k < a) {
                                        _ = 0;
                                        break
                                    }
                                    p = [];
                                    for (let t = 0; t < g.length; t++) p.push(g[t] >> 0 & 255), p.push(g[t] >> 8 & 255), p.push(g[t] >> 16 & 255), p.push(g[t] >> 24 & 255);
                                    const r = i(t, p, d);
                                    return f && f(null, 1, r), r
                            }
                            f && D(S)
                        };
                    if (!f)
                        while (1) {
                            const t = S();
                            if (void 0 != t) return t
                        }
                    S()
                }
                const f = {
                    scrypt: function(t, e, r, n, i, s, o) {
                        return new Promise((function(a, u) {
                            let c = 0;
                            o && o(0), d(t, e, r, n, i, s, (function(t, e, r) {
                                if (t) u(t);
                                else if (r) o && 1 !== c && o(1), a(new Uint8Array(r));
                                else if (o && e !== c) return c = e, o(e)
                            }))
                        }))
                    },
                    syncScrypt: function(t, e, r, n, i, s) {
                        return new Uint8Array(d(t, e, r, n, i, s))
                    }
                };
                t.exports = f
            })()
        },
        a00c: function(t, e, r) {
            (function(e) {
                r("5cc6"), r("84c3"), r("fb2c");
                const n = r("cb82"),
                    i = r("af3b"),
                    s = r("70c1"),
                    o = "undefined" !== typeof self && self.crypto && self.crypto.subtle;
                let a = null;

                function u(t) {
                    return o ? crypto.subtle.digest("SHA-256", t) : a.subtle.digest({
                        name: "SHA-256"
                    }, t)
                }

                function c(t) {
                    if (!n.isBN(t) && "string" !== typeof t) throw new Error("Please pass numbers as strings or BN objects to avoid precision errors.");
                    return s.toWei(t, "gwei")
                }

                function h(t) {
                    if (!n.isBN(t) && "string" !== typeof t) throw new Error("Please pass numbers as strings or BN objects to avoid precision errors.");
                    return s.fromWei(t, "gwei")
                }
                o || (a = r("8658"));
                const l = [],
                    d = {};
                for (let t = 0; t <= 255; t++) {
                    let e = t.toString(16);
                    e.length < 2 && (e = "0" + e), l.push(e), d[e] = t
                }

                function f(t) {
                    const e = [];
                    for (let r = 0; r < t.byteLength; r++) e.push(l[t[r]]);
                    return e.join("")
                }

                function p(t) {
                    t = t.toLowerCase();
                    const e = t.length;
                    if (e % 2 !== 0) throw "hex string must have length a multiple of 2";
                    const r = e / 2,
                        n = new Uint8Array(r);
                    for (let i = 0; i < r; i++) {
                        const e = 2 * i,
                            r = t.substring(e, e + 2);
                        if (!d.hasOwnProperty(r)) throw new Error("invalid hex character " + r);
                        n[i] = d[r]
                    }
                    return n
                }

                function g(t, e = 1) {
                    let r, n;
                    1 === e && (r = new ArrayBuffer(t.length), n = new Uint8Array(r)), 2 === e && (r = new ArrayBuffer(2 * t.length), n = new Uint16Array(r)), 4 === e && (r = new ArrayBuffer(4 * t.length), n = new Uint32Array(r));
                    for (let i = 0, s = t.length; i < s; i++) n[i] = t.charCodeAt(i);
                    return new Uint8Array(n.buffer)
                }

                function v(t, e) {
                    const r = 2197175160;
                    t ^= 4294967295;
                    for (let n = 0; n < e.length; n++) t ^= e[n], t = 1 & t ? t >>> 1 ^ r : t >>> 1, t = 1 & t ? t >>> 1 ^ r : t >>> 1, t = 1 & t ? t >>> 1 ^ r : t >>> 1, t = 1 & t ? t >>> 1 ^ r : t >>> 1, t = 1 & t ? t >>> 1 ^ r : t >>> 1, t = 1 & t ? t >>> 1 ^ r : t >>> 1, t = 1 & t ? t >>> 1 ^ r : t >>> 1, t = 1 & t ? t >>> 1 ^ r : t >>> 1;
                    return 4294967295 ^ t
                }

                function m(t) {
                    const e = v(0, t),
                        r = new ArrayBuffer(4),
                        n = new DataView(r);
                    return n.setUint32(0, e, !1), new Uint8Array(r).reverse()
                }

                function y(t) {
                    const e = 4129;
                    let r = 0;
                    const n = new Uint8Array(t.length + 2);
                    n.set(t);
                    for (let i of n) {
                        let t = 128;
                        while (t > 0) r <<= 1, i & t && (r += 1), t >>= 1, r > 65535 && (r &= 65535, r ^= e)
                    }
                    return new Uint8Array([Math.floor(r / 256), r % 256])
                }

                function w(t, e) {
                    const r = new Uint8Array(t.length + e.length);
                    return r.set(t), r.set(e, t.length), r
                }

                function b(t, e) {
                    return t.toString() === e.toString()
                }
                const C = (() => {
                    const t = [],
                        e = "A".charCodeAt(0),
                        r = "a".charCodeAt(0),
                        n = "0".charCodeAt(0);
                    for (let i = 0; i < 26; ++i) t.push(String.fromCharCode(e + i));
                    for (let i = 0; i < 26; ++i) t.push(String.fromCharCode(r + i));
                    for (let i = 0; i < 10; ++i) t.push(String.fromCharCode(n + i));
                    return t.push("+"), t.push("/"), t
                })();

                function A(t) {
                    let e, r = "";
                    const n = t.length;
                    for (e = 2; e < n; e += 3) r += C[t[e - 2] >> 2], r += C[(3 & t[e - 2]) << 4 | t[e - 1] >> 4], r += C[(15 & t[e - 1]) << 2 | t[e] >> 6], r += C[63 & t[e]];
                    return e === n + 1 && (r += C[t[e - 2] >> 2], r += C[(3 & t[e - 2]) << 4], r += "=="), e === n && (r += C[t[e - 2] >> 2], r += C[(3 & t[e - 2]) << 4 | t[e - 1] >> 4], r += C[(15 & t[e - 1]) << 2], r += "="), r
                }

                function B(t) {
                    return "undefined" === typeof self ? e.from(t, "base64").toString("binary") : atob(t)
                }

                function F(t) {
                    return "undefined" === typeof self ? e.from(t, "binary").toString("base64") : btoa(t)
                }

                function E(t) {
                    const e = B(t),
                        r = e.length,
                        n = new Uint8Array(r);
                    for (let i = 0; i < r; i++) n[i] = e.charCodeAt(i);
                    return n
                }

                function x(t, e) {
                    let r = 0;
                    for (let n = 0; n < t; n++) r *= 256, r += e[n];
                    return r
                }

                function _(t) {
                    return i.sign.keyPair.fromSeed(t)
                }

                function k() {
                    return i.sign.keyPair()
                }

                function M() {
                    return i.sign.keyPair().secretKey.slice(0, 32)
                }
                t.exports = {
                    BN: n,
                    nacl: i,
                    sha256: u,
                    fromNano: h,
                    toNano: c,
                    bytesToHex: f,
                    hexToBytes: p,
                    stringToBytes: g,
                    crc32c: m,
                    crc16: y,
                    concatBytes: w,
                    bytesToBase64: A,
                    base64ToBytes: E,
                    base64toString: B,
                    stringToBase64: F,
                    compareBytes: b,
                    readNBytesUIntFromArray: x,
                    keyPairFromSeed: _,
                    newKeyPair: k,
                    newSeed: M
                }
            }).call(this, r("b639").Buffer)
        },
        a255: function(t, e, r) {
            var n = r("3fb5"),
                i = r("b672"),
                s = r("8707").Buffer,
                o = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298],
                a = new Array(64);

            function u() {
                this.init(), this._w = a, i.call(this, 64, 56)
            }

            function c(t, e, r) {
                return r ^ t & (e ^ r)
            }

            function h(t, e, r) {
                return t & e | r & (t | e)
            }

            function l(t) {
                return (t >>> 2 | t << 30) ^ (t >>> 13 | t << 19) ^ (t >>> 22 | t << 10)
            }

            function d(t) {
                return (t >>> 6 | t << 26) ^ (t >>> 11 | t << 21) ^ (t >>> 25 | t << 7)
            }

            function f(t) {
                return (t >>> 7 | t << 25) ^ (t >>> 18 | t << 14) ^ t >>> 3
            }

            function p(t) {
                return (t >>> 17 | t << 15) ^ (t >>> 19 | t << 13) ^ t >>> 10
            }
            n(u, i), u.prototype.init = function() {
                return this._a = 1779033703, this._b = 3144134277, this._c = 1013904242, this._d = 2773480762, this._e = 1359893119, this._f = 2600822924, this._g = 528734635, this._h = 1541459225, this
            }, u.prototype._update = function(t) {
                for (var e = this._w, r = 0 | this._a, n = 0 | this._b, i = 0 | this._c, s = 0 | this._d, a = 0 | this._e, u = 0 | this._f, g = 0 | this._g, v = 0 | this._h, m = 0; m < 16; ++m) e[m] = t.readInt32BE(4 * m);
                for (; m < 64; ++m) e[m] = p(e[m - 2]) + e[m - 7] + f(e[m - 15]) + e[m - 16] | 0;
                for (var y = 0; y < 64; ++y) {
                    var w = v + d(a) + c(a, u, g) + o[y] + e[y] | 0,
                        b = l(r) + h(r, n, i) | 0;
                    v = g, g = u, u = a, a = s + w | 0, s = i, i = n, n = r, r = w + b | 0
                }
                this._a = r + this._a | 0, this._b = n + this._b | 0, this._c = i + this._c | 0, this._d = s + this._d | 0, this._e = a + this._e | 0, this._f = u + this._f | 0, this._g = g + this._g | 0, this._h = v + this._h | 0
            }, u.prototype._hash = function() {
                var t = s.allocUnsafe(32);
                return t.writeInt32BE(this._a, 0), t.writeInt32BE(this._b, 4), t.writeInt32BE(this._c, 8), t.writeInt32BE(this._d, 12), t.writeInt32BE(this._e, 16), t.writeInt32BE(this._f, 20), t.writeInt32BE(this._g, 24), t.writeInt32BE(this._h, 28), t
            }, t.exports = u
        },
        a3a5: function(t, e, r) {
            const {
                BN: n,
                Address: i,
                bytesToHex: s
            } = r("1afa"), {
                BitString: o
            } = r("5a63");
            class a {
                constructor(t, e, r) {
                    this.array = t, this.length = e, this.readCursor = 0, this.refs = r, this.refCursor = 0
                }
                getFreeBits() {
                    return this.length - this.readCursor
                }
                checkRange(t) {
                    if (t > this.length) throw Error("BitString overflow")
                }
                get(t) {
                    return this.checkRange(t), (this.array[t / 8 | 0] & 1 << 7 - t % 8) > 0
                }
                loadBit() {
                    const t = this.get(this.readCursor);
                    return this.readCursor++, t
                }
                loadBits(t) {
                    const e = new o(t);
                    for (let r = 0; r < t; r++) e.writeBit(this.loadBit());
                    return e.array
                }
                loadUint(t) {
                    if (t < 1) throw "Incorrect bitLength";
                    let e = "";
                    for (let r = 0; r < t; r++) e += this.loadBit() ? "1" : "0";
                    return new n(e, 2)
                }
                loadInt(t) {
                    if (t < 1) throw "Incorrect bitLength";
                    const e = this.loadBit();
                    if (1 === t) return new n(e ? -1 : 0);
                    let r = this.loadUint(t - 1);
                    if (e) {
                        const e = new n(2),
                            i = e.pow(new n(t - 1));
                        r = r.sub(i)
                    }
                    return r
                }
                loadVarUint(t) {
                    const e = this.loadUint(new n(t).toString(2).length - 1);
                    return 0 === e.toNumber() ? new n(0) : this.loadUint(8 * e)
                }
                loadCoins() {
                    return this.loadVarUint(16)
                }
                loadAddress() {
                    const t = this.loadUint(2);
                    if (0 === t.toNumber()) return null;
                    if (2 !== t.toNumber()) throw new Error("unsupported address type");
                    if (this.loadBit()) throw new Error("unsupported address type");
                    const e = this.loadInt(8).toNumber(),
                        r = this.loadBits(256);
                    return new i(e + ":" + s(r))
                }
                loadRef() {
                    if (this.refCursor >= 4) throw new Error("refs overflow");
                    const t = this.refs[this.refCursor];
                    return this.refCursor++, t
                }
            }
            t.exports = {
                Slice: a
            }
        },
        a55b: function(t, e, r) {
            t.exports = r("bb0b")
        },
        a664: function(t, e, r) {
            "use strict";
            t.exports = function(t) {
                return function(e) {
                    return t.apply(null, e)
                }
            }
        },
        aa4f: function(t, e, r) {
            r("fd87"), r("5cc6");
            const {
                crc16: n,
                hexToBytes: i,
                bytesToHex: s,
                stringToBytes: o,
                base64toString: a,
                stringToBase64: u
            } = r("a00c"), c = 17, h = 81, l = 128;

            function d(t) {
                if (48 !== t.length) throw new Error("User-friendly address should contain strictly 48 characters");
                const e = o(a(t));
                if (36 !== e.length) throw "Unknown address type: byte length is not equal to 36";
                const r = e.slice(0, 34),
                    i = e.slice(34, 36),
                    s = n(r);
                if (s[0] !== i[0] || s[1] !== i[1]) throw "Wrong crc16 hashsum";
                let u = r[0],
                    d = !1,
                    f = !1;
                if (u & l && (d = !0, u ^= l), u !== c && u !== h) throw "Unknown address tag";
                f = u === c;
                let p = null;
                if (p = 255 === r[1] ? -1 : r[1], 0 !== p && -1 !== p) throw new Error("Invalid address wc " + p);
                const g = r.slice(2, 34);
                return {
                    isTestOnly: d,
                    isBounceable: f,
                    workchain: p,
                    hashPart: g
                }
            }
            class f {
                static isValid(t) {
                    try {
                        return new f(t), !0
                    } catch (e) {
                        return !1
                    }
                }
                constructor(t) {
                    if (null == t) throw "Invalid address";
                    if (t instanceof f) return this.wc = t.wc, this.hashPart = t.hashPart, this.isTestOnly = t.isTestOnly, this.isUserFriendly = t.isUserFriendly, this.isBounceable = t.isBounceable, void(this.isUrlSafe = t.isUrlSafe);
                    if (this.isUrlSafe = !0, t.search(/\-/) > 0 || t.search(/_/) > 0 ? t = t.replace(/\-/g, "+").replace(/_/g, "/") : this.isUrlSafe = !1, t.indexOf(":") > -1) {
                        const e = t.split(":");
                        if (2 !== e.length) throw new Error("Invalid address " + t);
                        const r = parseInt(e[0]);
                        if (0 !== r && -1 !== r) throw new Error("Invalid address wc " + t);
                        const n = e[1];
                        if (64 !== n.length) throw new Error("Invalid address hex " + t);
                        this.isUserFriendly = !1, this.wc = r, this.hashPart = i(n), this.isTestOnly = !1, this.isBounceable = !1
                    } else {
                        this.isUserFriendly = !0;
                        const e = d(t);
                        this.wc = e.workchain, this.hashPart = e.hashPart, this.isTestOnly = e.isTestOnly, this.isBounceable = e.isBounceable
                    }
                }
                toString(t, e, r, i) {
                    if (void 0 === t && (t = this.isUserFriendly), void 0 === e && (e = this.isUrlSafe), void 0 === r && (r = this.isBounceable), void 0 === i && (i = this.isTestOnly), t) {
                        let t = r ? c : h;
                        i && (t |= l);
                        const s = new Int8Array(34);
                        s[0] = t, s[1] = this.wc, s.set(this.hashPart, 2);
                        const o = new Uint8Array(36);
                        o.set(s), o.set(n(s), 34);
                        let a = u(String.fromCharCode.apply(null, new Uint8Array(o)));
                        return e && (a = a.replace(/\+/g, "-").replace(/\//g, "_")), a
                    }
                    return this.wc + ":" + s(this.hashPart)
                }
            }
            t.exports.default = f
        },
        ad92: function(t, e, r) {
            "use strict";
            (function(e) {
                var n = r("1845"),
                    i = r("f4b0"),
                    s = r("c360"),
                    o = {
                        "Content-Type": "application/x-www-form-urlencoded"
                    };

                function a(t, e) {
                    !n.isUndefined(t) && n.isUndefined(t["Content-Type"]) && (t["Content-Type"] = e)
                }

                function u() {
                    var t;
                    return ("undefined" !== typeof XMLHttpRequest || "undefined" !== typeof e && "[object process]" === Object.prototype.toString.call(e)) && (t = r("ec84")), t
                }

                function c(t, e, r) {
                    if (n.isString(t)) try {
                        return (e || JSON.parse)(t), n.trim(t)
                    } catch (i) {
                        if ("SyntaxError" !== i.name) throw i
                    }
                    return (r || JSON.stringify)(t)
                }
                var h = {
                    transitional: {
                        silentJSONParsing: !0,
                        forcedJSONParsing: !0,
                        clarifyTimeoutError: !1
                    },
                    adapter: u(),
                    transformRequest: [function(t, e) {
                        return i(e, "Accept"), i(e, "Content-Type"), n.isFormData(t) || n.isArrayBuffer(t) || n.isBuffer(t) || n.isStream(t) || n.isFile(t) || n.isBlob(t) ? t : n.isArrayBufferView(t) ? t.buffer : n.isURLSearchParams(t) ? (a(e, "application/x-www-form-urlencoded;charset=utf-8"), t.toString()) : n.isObject(t) || e && "application/json" === e["Content-Type"] ? (a(e, "application/json"), c(t)) : t
                    }],
                    transformResponse: [function(t) {
                        var e = this.transitional || h.transitional,
                            r = e && e.silentJSONParsing,
                            i = e && e.forcedJSONParsing,
                            o = !r && "json" === this.responseType;
                        if (o || i && n.isString(t) && t.length) try {
                            return JSON.parse(t)
                        } catch (a) {
                            if (o) {
                                if ("SyntaxError" === a.name) throw s(a, this, "E_JSON_PARSE");
                                throw a
                            }
                        }
                        return t
                    }],
                    timeout: 0,
                    xsrfCookieName: "XSRF-TOKEN",
                    xsrfHeaderName: "X-XSRF-TOKEN",
                    maxContentLength: -1,
                    maxBodyLength: -1,
                    validateStatus: function(t) {
                        return t >= 200 && t < 300
                    },
                    headers: {
                        common: {
                            Accept: "application/json, text/plain, */*"
                        }
                    }
                };
                n.forEach(["delete", "get", "head"], (function(t) {
                    h.headers[t] = {}
                })), n.forEach(["post", "put", "patch"], (function(t) {
                    h.headers[t] = n.merge(o)
                })), t.exports = h
            }).call(this, r("4362"))
        },
        af3b: function(t, e, r) {
            r("4a9b"), r("143c"), r("5cc6"), r("84c3"),
                function(t) {
                    "use strict";
                    var e = function(t) {
                            var e, r = new Float64Array(16);
                            if (t)
                                for (e = 0; e < t.length; e++) r[e] = t[e];
                            return r
                        },
                        n = function() {
                            throw new Error("no PRNG")
                        },
                        i = new Uint8Array(16),
                        s = new Uint8Array(32);
                    s[0] = 9;
                    var o = e(),
                        a = e([1]),
                        u = e([56129, 1]),
                        c = e([30883, 4953, 19914, 30187, 55467, 16705, 2637, 112, 59544, 30585, 16505, 36039, 65139, 11119, 27886, 20995]),
                        h = e([61785, 9906, 39828, 60374, 45398, 33411, 5274, 224, 53552, 61171, 33010, 6542, 64743, 22239, 55772, 9222]),
                        l = e([54554, 36645, 11616, 51542, 42930, 38181, 51040, 26924, 56412, 64982, 57905, 49316, 21502, 52590, 14035, 8553]),
                        d = e([26200, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214]),
                        f = e([41136, 18958, 6951, 50414, 58488, 44335, 6150, 12099, 55207, 15867, 153, 11085, 57099, 20417, 9344, 11139]);

                    function p(t, e, r, n) {
                        t[e] = r >> 24 & 255, t[e + 1] = r >> 16 & 255, t[e + 2] = r >> 8 & 255, t[e + 3] = 255 & r, t[e + 4] = n >> 24 & 255, t[e + 5] = n >> 16 & 255, t[e + 6] = n >> 8 & 255, t[e + 7] = 255 & n
                    }

                    function g(t, e, r, n, i) {
                        var s, o = 0;
                        for (s = 0; s < i; s++) o |= t[e + s] ^ r[n + s];
                        return (1 & o - 1 >>> 8) - 1
                    }

                    function v(t, e, r, n) {
                        return g(t, e, r, n, 16)
                    }

                    function m(t, e, r, n) {
                        return g(t, e, r, n, 32)
                    }

                    function y(t, e, r, n) {
                        for (var i, s = 255 & n[0] | (255 & n[1]) << 8 | (255 & n[2]) << 16 | (255 & n[3]) << 24, o = 255 & r[0] | (255 & r[1]) << 8 | (255 & r[2]) << 16 | (255 & r[3]) << 24, a = 255 & r[4] | (255 & r[5]) << 8 | (255 & r[6]) << 16 | (255 & r[7]) << 24, u = 255 & r[8] | (255 & r[9]) << 8 | (255 & r[10]) << 16 | (255 & r[11]) << 24, c = 255 & r[12] | (255 & r[13]) << 8 | (255 & r[14]) << 16 | (255 & r[15]) << 24, h = 255 & n[4] | (255 & n[5]) << 8 | (255 & n[6]) << 16 | (255 & n[7]) << 24, l = 255 & e[0] | (255 & e[1]) << 8 | (255 & e[2]) << 16 | (255 & e[3]) << 24, d = 255 & e[4] | (255 & e[5]) << 8 | (255 & e[6]) << 16 | (255 & e[7]) << 24, f = 255 & e[8] | (255 & e[9]) << 8 | (255 & e[10]) << 16 | (255 & e[11]) << 24, p = 255 & e[12] | (255 & e[13]) << 8 | (255 & e[14]) << 16 | (255 & e[15]) << 24, g = 255 & n[8] | (255 & n[9]) << 8 | (255 & n[10]) << 16 | (255 & n[11]) << 24, v = 255 & r[16] | (255 & r[17]) << 8 | (255 & r[18]) << 16 | (255 & r[19]) << 24, m = 255 & r[20] | (255 & r[21]) << 8 | (255 & r[22]) << 16 | (255 & r[23]) << 24, y = 255 & r[24] | (255 & r[25]) << 8 | (255 & r[26]) << 16 | (255 & r[27]) << 24, w = 255 & r[28] | (255 & r[29]) << 8 | (255 & r[30]) << 16 | (255 & r[31]) << 24, b = 255 & n[12] | (255 & n[13]) << 8 | (255 & n[14]) << 16 | (255 & n[15]) << 24, C = s, A = o, B = a, F = u, E = c, x = h, _ = l, k = d, M = f, D = p, S = g, I = v, N = m, T = y, P = w, O = b, U = 0; U < 20; U += 2) i = C + N | 0, E ^= i << 7 | i >>> 25, i = E + C | 0, M ^= i << 9 | i >>> 23, i = M + E | 0, N ^= i << 13 | i >>> 19, i = N + M | 0, C ^= i << 18 | i >>> 14, i = x + A | 0, D ^= i << 7 | i >>> 25, i = D + x | 0, T ^= i << 9 | i >>> 23, i = T + D | 0, A ^= i << 13 | i >>> 19, i = A + T | 0, x ^= i << 18 | i >>> 14, i = S + _ | 0, P ^= i << 7 | i >>> 25, i = P + S | 0, B ^= i << 9 | i >>> 23, i = B + P | 0, _ ^= i << 13 | i >>> 19, i = _ + B | 0, S ^= i << 18 | i >>> 14, i = O + I | 0, F ^= i << 7 | i >>> 25, i = F + O | 0, k ^= i << 9 | i >>> 23, i = k + F | 0, I ^= i << 13 | i >>> 19, i = I + k | 0, O ^= i << 18 | i >>> 14, i = C + F | 0, A ^= i << 7 | i >>> 25, i = A + C | 0, B ^= i << 9 | i >>> 23, i = B + A | 0, F ^= i << 13 | i >>> 19, i = F + B | 0, C ^= i << 18 | i >>> 14, i = x + E | 0, _ ^= i << 7 | i >>> 25, i = _ + x | 0, k ^= i << 9 | i >>> 23, i = k + _ | 0, E ^= i << 13 | i >>> 19, i = E + k | 0, x ^= i << 18 | i >>> 14, i = S + D | 0, I ^= i << 7 | i >>> 25, i = I + S | 0, M ^= i << 9 | i >>> 23, i = M + I | 0, D ^= i << 13 | i >>> 19, i = D + M | 0, S ^= i << 18 | i >>> 14, i = O + P | 0, N ^= i << 7 | i >>> 25, i = N + O | 0, T ^= i << 9 | i >>> 23, i = T + N | 0, P ^= i << 13 | i >>> 19, i = P + T | 0, O ^= i << 18 | i >>> 14;
                        C = C + s | 0, A = A + o | 0, B = B + a | 0, F = F + u | 0, E = E + c | 0, x = x + h | 0, _ = _ + l | 0, k = k + d | 0, M = M + f | 0, D = D + p | 0, S = S + g | 0, I = I + v | 0, N = N + m | 0, T = T + y | 0, P = P + w | 0, O = O + b | 0, t[0] = C >>> 0 & 255, t[1] = C >>> 8 & 255, t[2] = C >>> 16 & 255, t[3] = C >>> 24 & 255, t[4] = A >>> 0 & 255, t[5] = A >>> 8 & 255, t[6] = A >>> 16 & 255, t[7] = A >>> 24 & 255, t[8] = B >>> 0 & 255, t[9] = B >>> 8 & 255, t[10] = B >>> 16 & 255, t[11] = B >>> 24 & 255, t[12] = F >>> 0 & 255, t[13] = F >>> 8 & 255, t[14] = F >>> 16 & 255, t[15] = F >>> 24 & 255, t[16] = E >>> 0 & 255, t[17] = E >>> 8 & 255, t[18] = E >>> 16 & 255, t[19] = E >>> 24 & 255, t[20] = x >>> 0 & 255, t[21] = x >>> 8 & 255, t[22] = x >>> 16 & 255, t[23] = x >>> 24 & 255, t[24] = _ >>> 0 & 255, t[25] = _ >>> 8 & 255, t[26] = _ >>> 16 & 255, t[27] = _ >>> 24 & 255, t[28] = k >>> 0 & 255, t[29] = k >>> 8 & 255, t[30] = k >>> 16 & 255, t[31] = k >>> 24 & 255, t[32] = M >>> 0 & 255, t[33] = M >>> 8 & 255, t[34] = M >>> 16 & 255, t[35] = M >>> 24 & 255, t[36] = D >>> 0 & 255, t[37] = D >>> 8 & 255, t[38] = D >>> 16 & 255, t[39] = D >>> 24 & 255, t[40] = S >>> 0 & 255, t[41] = S >>> 8 & 255, t[42] = S >>> 16 & 255, t[43] = S >>> 24 & 255, t[44] = I >>> 0 & 255, t[45] = I >>> 8 & 255, t[46] = I >>> 16 & 255, t[47] = I >>> 24 & 255, t[48] = N >>> 0 & 255, t[49] = N >>> 8 & 255, t[50] = N >>> 16 & 255, t[51] = N >>> 24 & 255, t[52] = T >>> 0 & 255, t[53] = T >>> 8 & 255, t[54] = T >>> 16 & 255, t[55] = T >>> 24 & 255, t[56] = P >>> 0 & 255, t[57] = P >>> 8 & 255, t[58] = P >>> 16 & 255, t[59] = P >>> 24 & 255, t[60] = O >>> 0 & 255, t[61] = O >>> 8 & 255, t[62] = O >>> 16 & 255, t[63] = O >>> 24 & 255
                    }

                    function w(t, e, r, n) {
                        for (var i, s = 255 & n[0] | (255 & n[1]) << 8 | (255 & n[2]) << 16 | (255 & n[3]) << 24, o = 255 & r[0] | (255 & r[1]) << 8 | (255 & r[2]) << 16 | (255 & r[3]) << 24, a = 255 & r[4] | (255 & r[5]) << 8 | (255 & r[6]) << 16 | (255 & r[7]) << 24, u = 255 & r[8] | (255 & r[9]) << 8 | (255 & r[10]) << 16 | (255 & r[11]) << 24, c = 255 & r[12] | (255 & r[13]) << 8 | (255 & r[14]) << 16 | (255 & r[15]) << 24, h = 255 & n[4] | (255 & n[5]) << 8 | (255 & n[6]) << 16 | (255 & n[7]) << 24, l = 255 & e[0] | (255 & e[1]) << 8 | (255 & e[2]) << 16 | (255 & e[3]) << 24, d = 255 & e[4] | (255 & e[5]) << 8 | (255 & e[6]) << 16 | (255 & e[7]) << 24, f = 255 & e[8] | (255 & e[9]) << 8 | (255 & e[10]) << 16 | (255 & e[11]) << 24, p = 255 & e[12] | (255 & e[13]) << 8 | (255 & e[14]) << 16 | (255 & e[15]) << 24, g = 255 & n[8] | (255 & n[9]) << 8 | (255 & n[10]) << 16 | (255 & n[11]) << 24, v = 255 & r[16] | (255 & r[17]) << 8 | (255 & r[18]) << 16 | (255 & r[19]) << 24, m = 255 & r[20] | (255 & r[21]) << 8 | (255 & r[22]) << 16 | (255 & r[23]) << 24, y = 255 & r[24] | (255 & r[25]) << 8 | (255 & r[26]) << 16 | (255 & r[27]) << 24, w = 255 & r[28] | (255 & r[29]) << 8 | (255 & r[30]) << 16 | (255 & r[31]) << 24, b = 255 & n[12] | (255 & n[13]) << 8 | (255 & n[14]) << 16 | (255 & n[15]) << 24, C = s, A = o, B = a, F = u, E = c, x = h, _ = l, k = d, M = f, D = p, S = g, I = v, N = m, T = y, P = w, O = b, U = 0; U < 20; U += 2) i = C + N | 0, E ^= i << 7 | i >>> 25, i = E + C | 0, M ^= i << 9 | i >>> 23, i = M + E | 0, N ^= i << 13 | i >>> 19, i = N + M | 0, C ^= i << 18 | i >>> 14, i = x + A | 0, D ^= i << 7 | i >>> 25, i = D + x | 0, T ^= i << 9 | i >>> 23, i = T + D | 0, A ^= i << 13 | i >>> 19, i = A + T | 0, x ^= i << 18 | i >>> 14, i = S + _ | 0, P ^= i << 7 | i >>> 25, i = P + S | 0, B ^= i << 9 | i >>> 23, i = B + P | 0, _ ^= i << 13 | i >>> 19, i = _ + B | 0, S ^= i << 18 | i >>> 14, i = O + I | 0, F ^= i << 7 | i >>> 25, i = F + O | 0, k ^= i << 9 | i >>> 23, i = k + F | 0, I ^= i << 13 | i >>> 19, i = I + k | 0, O ^= i << 18 | i >>> 14, i = C + F | 0, A ^= i << 7 | i >>> 25, i = A + C | 0, B ^= i << 9 | i >>> 23, i = B + A | 0, F ^= i << 13 | i >>> 19, i = F + B | 0, C ^= i << 18 | i >>> 14, i = x + E | 0, _ ^= i << 7 | i >>> 25, i = _ + x | 0, k ^= i << 9 | i >>> 23, i = k + _ | 0, E ^= i << 13 | i >>> 19, i = E + k | 0, x ^= i << 18 | i >>> 14, i = S + D | 0, I ^= i << 7 | i >>> 25, i = I + S | 0, M ^= i << 9 | i >>> 23, i = M + I | 0, D ^= i << 13 | i >>> 19, i = D + M | 0, S ^= i << 18 | i >>> 14, i = O + P | 0, N ^= i << 7 | i >>> 25, i = N + O | 0, T ^= i << 9 | i >>> 23, i = T + N | 0, P ^= i << 13 | i >>> 19, i = P + T | 0, O ^= i << 18 | i >>> 14;
                        t[0] = C >>> 0 & 255, t[1] = C >>> 8 & 255, t[2] = C >>> 16 & 255, t[3] = C >>> 24 & 255, t[4] = x >>> 0 & 255, t[5] = x >>> 8 & 255, t[6] = x >>> 16 & 255, t[7] = x >>> 24 & 255, t[8] = S >>> 0 & 255, t[9] = S >>> 8 & 255, t[10] = S >>> 16 & 255, t[11] = S >>> 24 & 255, t[12] = O >>> 0 & 255, t[13] = O >>> 8 & 255, t[14] = O >>> 16 & 255, t[15] = O >>> 24 & 255, t[16] = _ >>> 0 & 255, t[17] = _ >>> 8 & 255, t[18] = _ >>> 16 & 255, t[19] = _ >>> 24 & 255, t[20] = k >>> 0 & 255, t[21] = k >>> 8 & 255, t[22] = k >>> 16 & 255, t[23] = k >>> 24 & 255, t[24] = M >>> 0 & 255, t[25] = M >>> 8 & 255, t[26] = M >>> 16 & 255, t[27] = M >>> 24 & 255, t[28] = D >>> 0 & 255, t[29] = D >>> 8 & 255, t[30] = D >>> 16 & 255, t[31] = D >>> 24 & 255
                    }

                    function b(t, e, r, n) {
                        y(t, e, r, n)
                    }

                    function C(t, e, r, n) {
                        w(t, e, r, n)
                    }
                    var A = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);

                    function B(t, e, r, n, i, s, o) {
                        var a, u, c = new Uint8Array(16),
                            h = new Uint8Array(64);
                        for (u = 0; u < 16; u++) c[u] = 0;
                        for (u = 0; u < 8; u++) c[u] = s[u];
                        while (i >= 64) {
                            for (b(h, c, o, A), u = 0; u < 64; u++) t[e + u] = r[n + u] ^ h[u];
                            for (a = 1, u = 8; u < 16; u++) a = a + (255 & c[u]) | 0, c[u] = 255 & a, a >>>= 8;
                            i -= 64, e += 64, n += 64
                        }
                        if (i > 0)
                            for (b(h, c, o, A), u = 0; u < i; u++) t[e + u] = r[n + u] ^ h[u];
                        return 0
                    }

                    function F(t, e, r, n, i) {
                        var s, o, a = new Uint8Array(16),
                            u = new Uint8Array(64);
                        for (o = 0; o < 16; o++) a[o] = 0;
                        for (o = 0; o < 8; o++) a[o] = n[o];
                        while (r >= 64) {
                            for (b(u, a, i, A), o = 0; o < 64; o++) t[e + o] = u[o];
                            for (s = 1, o = 8; o < 16; o++) s = s + (255 & a[o]) | 0, a[o] = 255 & s, s >>>= 8;
                            r -= 64, e += 64
                        }
                        if (r > 0)
                            for (b(u, a, i, A), o = 0; o < r; o++) t[e + o] = u[o];
                        return 0
                    }

                    function E(t, e, r, n, i) {
                        var s = new Uint8Array(32);
                        C(s, n, i, A);
                        for (var o = new Uint8Array(8), a = 0; a < 8; a++) o[a] = n[a + 16];
                        return F(t, e, r, o, s)
                    }

                    function x(t, e, r, n, i, s, o) {
                        var a = new Uint8Array(32);
                        C(a, s, o, A);
                        for (var u = new Uint8Array(8), c = 0; c < 8; c++) u[c] = s[c + 16];
                        return B(t, e, r, n, i, u, a)
                    }
                    var _ = function(t) {
                        var e, r, n, i, s, o, a, u;
                        this.buffer = new Uint8Array(16), this.r = new Uint16Array(10), this.h = new Uint16Array(10), this.pad = new Uint16Array(8), this.leftover = 0, this.fin = 0, e = 255 & t[0] | (255 & t[1]) << 8, this.r[0] = 8191 & e, r = 255 & t[2] | (255 & t[3]) << 8, this.r[1] = 8191 & (e >>> 13 | r << 3), n = 255 & t[4] | (255 & t[5]) << 8, this.r[2] = 7939 & (r >>> 10 | n << 6), i = 255 & t[6] | (255 & t[7]) << 8, this.r[3] = 8191 & (n >>> 7 | i << 9), s = 255 & t[8] | (255 & t[9]) << 8, this.r[4] = 255 & (i >>> 4 | s << 12), this.r[5] = s >>> 1 & 8190, o = 255 & t[10] | (255 & t[11]) << 8, this.r[6] = 8191 & (s >>> 14 | o << 2), a = 255 & t[12] | (255 & t[13]) << 8, this.r[7] = 8065 & (o >>> 11 | a << 5), u = 255 & t[14] | (255 & t[15]) << 8, this.r[8] = 8191 & (a >>> 8 | u << 8), this.r[9] = u >>> 5 & 127, this.pad[0] = 255 & t[16] | (255 & t[17]) << 8, this.pad[1] = 255 & t[18] | (255 & t[19]) << 8, this.pad[2] = 255 & t[20] | (255 & t[21]) << 8, this.pad[3] = 255 & t[22] | (255 & t[23]) << 8, this.pad[4] = 255 & t[24] | (255 & t[25]) << 8, this.pad[5] = 255 & t[26] | (255 & t[27]) << 8, this.pad[6] = 255 & t[28] | (255 & t[29]) << 8, this.pad[7] = 255 & t[30] | (255 & t[31]) << 8
                    };

                    function k(t, e, r, n, i, s) {
                        var o = new _(s);
                        return o.update(r, n, i), o.finish(t, e), 0
                    }

                    function M(t, e, r, n, i, s) {
                        var o = new Uint8Array(16);
                        return k(o, 0, r, n, i, s), v(t, e, o, 0)
                    }

                    function D(t, e, r, n, i) {
                        var s;
                        if (r < 32) return -1;
                        for (x(t, 0, e, 0, r, n, i), k(t, 16, t, 32, r - 32, t), s = 0; s < 16; s++) t[s] = 0;
                        return 0
                    }

                    function S(t, e, r, n, i) {
                        var s, o = new Uint8Array(32);
                        if (r < 32) return -1;
                        if (E(o, 0, 32, n, i), 0 !== M(e, 16, e, 32, r - 32, o)) return -1;
                        for (x(t, 0, e, 0, r, n, i), s = 0; s < 32; s++) t[s] = 0;
                        return 0
                    }

                    function I(t, e) {
                        var r;
                        for (r = 0; r < 16; r++) t[r] = 0 | e[r]
                    }

                    function N(t) {
                        var e, r, n = 1;
                        for (e = 0; e < 16; e++) r = t[e] + n + 65535, n = Math.floor(r / 65536), t[e] = r - 65536 * n;
                        t[0] += n - 1 + 37 * (n - 1)
                    }

                    function T(t, e, r) {
                        for (var n, i = ~(r - 1), s = 0; s < 16; s++) n = i & (t[s] ^ e[s]), t[s] ^= n, e[s] ^= n
                    }

                    function P(t, r) {
                        var n, i, s, o = e(),
                            a = e();
                        for (n = 0; n < 16; n++) a[n] = r[n];
                        for (N(a), N(a), N(a), i = 0; i < 2; i++) {
                            for (o[0] = a[0] - 65517, n = 1; n < 15; n++) o[n] = a[n] - 65535 - (o[n - 1] >> 16 & 1), o[n - 1] &= 65535;
                            o[15] = a[15] - 32767 - (o[14] >> 16 & 1), s = o[15] >> 16 & 1, o[14] &= 65535, T(a, o, 1 - s)
                        }
                        for (n = 0; n < 16; n++) t[2 * n] = 255 & a[n], t[2 * n + 1] = a[n] >> 8
                    }

                    function O(t, e) {
                        var r = new Uint8Array(32),
                            n = new Uint8Array(32);
                        return P(r, t), P(n, e), m(r, 0, n, 0)
                    }

                    function U(t) {
                        var e = new Uint8Array(32);
                        return P(e, t), 1 & e[0]
                    }

                    function j(t, e) {
                        var r;
                        for (r = 0; r < 16; r++) t[r] = e[2 * r] + (e[2 * r + 1] << 8);
                        t[15] &= 32767
                    }

                    function W(t, e, r) {
                        for (var n = 0; n < 16; n++) t[n] = e[n] + r[n]
                    }

                    function R(t, e, r) {
                        for (var n = 0; n < 16; n++) t[n] = e[n] - r[n]
                    }

                    function L(t, e, r) {
                        var n, i, s = 0,
                            o = 0,
                            a = 0,
                            u = 0,
                            c = 0,
                            h = 0,
                            l = 0,
                            d = 0,
                            f = 0,
                            p = 0,
                            g = 0,
                            v = 0,
                            m = 0,
                            y = 0,
                            w = 0,
                            b = 0,
                            C = 0,
                            A = 0,
                            B = 0,
                            F = 0,
                            E = 0,
                            x = 0,
                            _ = 0,
                            k = 0,
                            M = 0,
                            D = 0,
                            S = 0,
                            I = 0,
                            N = 0,
                            T = 0,
                            P = 0,
                            O = r[0],
                            U = r[1],
                            j = r[2],
                            W = r[3],
                            R = r[4],
                            L = r[5],
                            q = r[6],
                            K = r[7],
                            H = r[8],
                            V = r[9],
                            J = r[10],
                            z = r[11],
                            G = r[12],
                            $ = r[13],
                            Z = r[14],
                            Y = r[15];
                        n = e[0], s += n * O, o += n * U, a += n * j, u += n * W, c += n * R, h += n * L, l += n * q, d += n * K, f += n * H, p += n * V, g += n * J, v += n * z, m += n * G, y += n * $, w += n * Z, b += n * Y, n = e[1], o += n * O, a += n * U, u += n * j, c += n * W, h += n * R, l += n * L, d += n * q, f += n * K, p += n * H, g += n * V, v += n * J, m += n * z, y += n * G, w += n * $, b += n * Z, C += n * Y, n = e[2], a += n * O, u += n * U, c += n * j, h += n * W, l += n * R, d += n * L, f += n * q, p += n * K, g += n * H, v += n * V, m += n * J, y += n * z, w += n * G, b += n * $, C += n * Z, A += n * Y, n = e[3], u += n * O, c += n * U, h += n * j, l += n * W, d += n * R, f += n * L, p += n * q, g += n * K, v += n * H, m += n * V, y += n * J, w += n * z, b += n * G, C += n * $, A += n * Z, B += n * Y, n = e[4], c += n * O, h += n * U, l += n * j, d += n * W, f += n * R, p += n * L, g += n * q, v += n * K, m += n * H, y += n * V, w += n * J, b += n * z, C += n * G, A += n * $, B += n * Z, F += n * Y, n = e[5], h += n * O, l += n * U, d += n * j, f += n * W, p += n * R, g += n * L, v += n * q, m += n * K, y += n * H, w += n * V, b += n * J, C += n * z, A += n * G, B += n * $, F += n * Z, E += n * Y, n = e[6], l += n * O, d += n * U, f += n * j, p += n * W, g += n * R, v += n * L, m += n * q, y += n * K, w += n * H, b += n * V, C += n * J, A += n * z, B += n * G, F += n * $, E += n * Z, x += n * Y, n = e[7], d += n * O, f += n * U, p += n * j, g += n * W, v += n * R, m += n * L, y += n * q, w += n * K, b += n * H, C += n * V, A += n * J, B += n * z, F += n * G, E += n * $, x += n * Z, _ += n * Y, n = e[8], f += n * O, p += n * U, g += n * j, v += n * W, m += n * R, y += n * L, w += n * q, b += n * K, C += n * H, A += n * V, B += n * J, F += n * z, E += n * G, x += n * $, _ += n * Z, k += n * Y, n = e[9], p += n * O, g += n * U, v += n * j, m += n * W, y += n * R, w += n * L, b += n * q, C += n * K, A += n * H, B += n * V, F += n * J, E += n * z, x += n * G, _ += n * $, k += n * Z, M += n * Y, n = e[10], g += n * O, v += n * U, m += n * j, y += n * W, w += n * R, b += n * L, C += n * q, A += n * K, B += n * H, F += n * V, E += n * J, x += n * z, _ += n * G, k += n * $, M += n * Z, D += n * Y, n = e[11], v += n * O, m += n * U, y += n * j, w += n * W, b += n * R, C += n * L, A += n * q, B += n * K, F += n * H, E += n * V, x += n * J, _ += n * z, k += n * G, M += n * $, D += n * Z, S += n * Y, n = e[12], m += n * O, y += n * U, w += n * j, b += n * W, C += n * R, A += n * L, B += n * q, F += n * K, E += n * H, x += n * V, _ += n * J, k += n * z, M += n * G, D += n * $, S += n * Z, I += n * Y, n = e[13], y += n * O, w += n * U, b += n * j, C += n * W, A += n * R, B += n * L, F += n * q, E += n * K, x += n * H, _ += n * V, k += n * J, M += n * z, D += n * G, S += n * $, I += n * Z, N += n * Y, n = e[14], w += n * O, b += n * U, C += n * j, A += n * W, B += n * R, F += n * L, E += n * q, x += n * K, _ += n * H, k += n * V, M += n * J, D += n * z, S += n * G, I += n * $, N += n * Z, T += n * Y, n = e[15], b += n * O, C += n * U, A += n * j, B += n * W, F += n * R, E += n * L, x += n * q, _ += n * K, k += n * H, M += n * V, D += n * J, S += n * z, I += n * G, N += n * $, T += n * Z, P += n * Y, s += 38 * C, o += 38 * A, a += 38 * B, u += 38 * F, c += 38 * E, h += 38 * x, l += 38 * _, d += 38 * k, f += 38 * M, p += 38 * D, g += 38 * S, v += 38 * I, m += 38 * N, y += 38 * T, w += 38 * P, i = 1, n = s + i + 65535, i = Math.floor(n / 65536), s = n - 65536 * i, n = o + i + 65535, i = Math.floor(n / 65536), o = n - 65536 * i, n = a + i + 65535, i = Math.floor(n / 65536), a = n - 65536 * i, n = u + i + 65535, i = Math.floor(n / 65536), u = n - 65536 * i, n = c + i + 65535, i = Math.floor(n / 65536), c = n - 65536 * i, n = h + i + 65535, i = Math.floor(n / 65536), h = n - 65536 * i, n = l + i + 65535, i = Math.floor(n / 65536), l = n - 65536 * i, n = d + i + 65535, i = Math.floor(n / 65536), d = n - 65536 * i, n = f + i + 65535, i = Math.floor(n / 65536), f = n - 65536 * i, n = p + i + 65535, i = Math.floor(n / 65536), p = n - 65536 * i, n = g + i + 65535, i = Math.floor(n / 65536), g = n - 65536 * i, n = v + i + 65535, i = Math.floor(n / 65536), v = n - 65536 * i, n = m + i + 65535, i = Math.floor(n / 65536), m = n - 65536 * i, n = y + i + 65535, i = Math.floor(n / 65536), y = n - 65536 * i, n = w + i + 65535, i = Math.floor(n / 65536), w = n - 65536 * i, n = b + i + 65535, i = Math.floor(n / 65536), b = n - 65536 * i, s += i - 1 + 37 * (i - 1), i = 1, n = s + i + 65535, i = Math.floor(n / 65536), s = n - 65536 * i, n = o + i + 65535, i = Math.floor(n / 65536), o = n - 65536 * i, n = a + i + 65535, i = Math.floor(n / 65536), a = n - 65536 * i, n = u + i + 65535, i = Math.floor(n / 65536), u = n - 65536 * i, n = c + i + 65535, i = Math.floor(n / 65536), c = n - 65536 * i, n = h + i + 65535, i = Math.floor(n / 65536), h = n - 65536 * i, n = l + i + 65535, i = Math.floor(n / 65536), l = n - 65536 * i, n = d + i + 65535, i = Math.floor(n / 65536), d = n - 65536 * i, n = f + i + 65535, i = Math.floor(n / 65536), f = n - 65536 * i, n = p + i + 65535, i = Math.floor(n / 65536), p = n - 65536 * i, n = g + i + 65535, i = Math.floor(n / 65536), g = n - 65536 * i, n = v + i + 65535, i = Math.floor(n / 65536), v = n - 65536 * i, n = m + i + 65535, i = Math.floor(n / 65536), m = n - 65536 * i, n = y + i + 65535, i = Math.floor(n / 65536), y = n - 65536 * i, n = w + i + 65535, i = Math.floor(n / 65536), w = n - 65536 * i, n = b + i + 65535, i = Math.floor(n / 65536), b = n - 65536 * i, s += i - 1 + 37 * (i - 1), t[0] = s, t[1] = o, t[2] = a, t[3] = u, t[4] = c, t[5] = h, t[6] = l, t[7] = d, t[8] = f, t[9] = p, t[10] = g, t[11] = v, t[12] = m, t[13] = y, t[14] = w, t[15] = b
                    }

                    function q(t, e) {
                        L(t, e, e)
                    }

                    function K(t, r) {
                        var n, i = e();
                        for (n = 0; n < 16; n++) i[n] = r[n];
                        for (n = 253; n >= 0; n--) q(i, i), 2 !== n && 4 !== n && L(i, i, r);
                        for (n = 0; n < 16; n++) t[n] = i[n]
                    }

                    function H(t, r) {
                        var n, i = e();
                        for (n = 0; n < 16; n++) i[n] = r[n];
                        for (n = 250; n >= 0; n--) q(i, i), 1 !== n && L(i, i, r);
                        for (n = 0; n < 16; n++) t[n] = i[n]
                    }

                    function V(t, r, n) {
                        var i, s, o = new Uint8Array(32),
                            a = new Float64Array(80),
                            c = e(),
                            h = e(),
                            l = e(),
                            d = e(),
                            f = e(),
                            p = e();
                        for (s = 0; s < 31; s++) o[s] = r[s];
                        for (o[31] = 127 & r[31] | 64, o[0] &= 248, j(a, n), s = 0; s < 16; s++) h[s] = a[s], d[s] = c[s] = l[s] = 0;
                        for (c[0] = d[0] = 1, s = 254; s >= 0; --s) i = o[s >>> 3] >>> (7 & s) & 1, T(c, h, i), T(l, d, i), W(f, c, l), R(c, c, l), W(l, h, d), R(h, h, d), q(d, f), q(p, c), L(c, l, c), L(l, h, f), W(f, c, l), R(c, c, l), q(h, c), R(l, d, p), L(c, l, u), W(c, c, d), L(l, l, c), L(c, d, p), L(d, h, a), q(h, f), T(c, h, i), T(l, d, i);
                        for (s = 0; s < 16; s++) a[s + 16] = c[s], a[s + 32] = l[s], a[s + 48] = h[s], a[s + 64] = d[s];
                        var g = a.subarray(32),
                            v = a.subarray(16);
                        return K(g, g), L(v, v, g), P(t, v), 0
                    }

                    function J(t, e) {
                        return V(t, e, s)
                    }

                    function z(t, e) {
                        return n(e, 32), J(t, e)
                    }

                    function G(t, e, r) {
                        var n = new Uint8Array(32);
                        return V(n, r, e), C(t, i, n, A)
                    }
                    _.prototype.blocks = function(t, e, r) {
                        var n, i, s, o, a, u, c, h, l, d, f, p, g, v, m, y, w, b, C, A = this.fin ? 0 : 2048,
                            B = this.h[0],
                            F = this.h[1],
                            E = this.h[2],
                            x = this.h[3],
                            _ = this.h[4],
                            k = this.h[5],
                            M = this.h[6],
                            D = this.h[7],
                            S = this.h[8],
                            I = this.h[9],
                            N = this.r[0],
                            T = this.r[1],
                            P = this.r[2],
                            O = this.r[3],
                            U = this.r[4],
                            j = this.r[5],
                            W = this.r[6],
                            R = this.r[7],
                            L = this.r[8],
                            q = this.r[9];
                        while (r >= 16) n = 255 & t[e + 0] | (255 & t[e + 1]) << 8, B += 8191 & n, i = 255 & t[e + 2] | (255 & t[e + 3]) << 8, F += 8191 & (n >>> 13 | i << 3), s = 255 & t[e + 4] | (255 & t[e + 5]) << 8, E += 8191 & (i >>> 10 | s << 6), o = 255 & t[e + 6] | (255 & t[e + 7]) << 8, x += 8191 & (s >>> 7 | o << 9), a = 255 & t[e + 8] | (255 & t[e + 9]) << 8, _ += 8191 & (o >>> 4 | a << 12), k += a >>> 1 & 8191, u = 255 & t[e + 10] | (255 & t[e + 11]) << 8, M += 8191 & (a >>> 14 | u << 2), c = 255 & t[e + 12] | (255 & t[e + 13]) << 8, D += 8191 & (u >>> 11 | c << 5), h = 255 & t[e + 14] | (255 & t[e + 15]) << 8, S += 8191 & (c >>> 8 | h << 8), I += h >>> 5 | A, l = 0, d = l, d += B * N, d += F * (5 * q), d += E * (5 * L), d += x * (5 * R), d += _ * (5 * W), l = d >>> 13, d &= 8191, d += k * (5 * j), d += M * (5 * U), d += D * (5 * O), d += S * (5 * P), d += I * (5 * T), l += d >>> 13, d &= 8191, f = l, f += B * T, f += F * N, f += E * (5 * q), f += x * (5 * L), f += _ * (5 * R), l = f >>> 13, f &= 8191, f += k * (5 * W), f += M * (5 * j), f += D * (5 * U), f += S * (5 * O), f += I * (5 * P), l += f >>> 13, f &= 8191, p = l, p += B * P, p += F * T, p += E * N, p += x * (5 * q), p += _ * (5 * L), l = p >>> 13, p &= 8191, p += k * (5 * R), p += M * (5 * W), p += D * (5 * j), p += S * (5 * U), p += I * (5 * O), l += p >>> 13, p &= 8191, g = l, g += B * O, g += F * P, g += E * T, g += x * N, g += _ * (5 * q), l = g >>> 13, g &= 8191, g += k * (5 * L), g += M * (5 * R), g += D * (5 * W), g += S * (5 * j), g += I * (5 * U), l += g >>> 13, g &= 8191, v = l, v += B * U, v += F * O, v += E * P, v += x * T, v += _ * N, l = v >>> 13, v &= 8191, v += k * (5 * q), v += M * (5 * L), v += D * (5 * R), v += S * (5 * W), v += I * (5 * j), l += v >>> 13, v &= 8191, m = l, m += B * j, m += F * U, m += E * O, m += x * P, m += _ * T, l = m >>> 13, m &= 8191, m += k * N, m += M * (5 * q), m += D * (5 * L), m += S * (5 * R), m += I * (5 * W), l += m >>> 13, m &= 8191, y = l, y += B * W, y += F * j, y += E * U, y += x * O, y += _ * P, l = y >>> 13, y &= 8191, y += k * T, y += M * N, y += D * (5 * q), y += S * (5 * L), y += I * (5 * R), l += y >>> 13, y &= 8191, w = l, w += B * R, w += F * W, w += E * j, w += x * U, w += _ * O, l = w >>> 13, w &= 8191, w += k * P, w += M * T, w += D * N, w += S * (5 * q), w += I * (5 * L), l += w >>> 13, w &= 8191, b = l, b += B * L, b += F * R, b += E * W, b += x * j, b += _ * U, l = b >>> 13, b &= 8191, b += k * O, b += M * P, b += D * T, b += S * N, b += I * (5 * q), l += b >>> 13, b &= 8191, C = l, C += B * q, C += F * L, C += E * R, C += x * W, C += _ * j, l = C >>> 13, C &= 8191, C += k * U, C += M * O, C += D * P, C += S * T, C += I * N, l += C >>> 13, C &= 8191, l = (l << 2) + l | 0, l = l + d | 0, d = 8191 & l, l >>>= 13, f += l, B = d, F = f, E = p, x = g, _ = v, k = m, M = y, D = w, S = b, I = C, e += 16, r -= 16;
                        this.h[0] = B, this.h[1] = F, this.h[2] = E, this.h[3] = x, this.h[4] = _, this.h[5] = k, this.h[6] = M, this.h[7] = D, this.h[8] = S, this.h[9] = I
                    }, _.prototype.finish = function(t, e) {
                        var r, n, i, s, o = new Uint16Array(10);
                        if (this.leftover) {
                            for (s = this.leftover, this.buffer[s++] = 1; s < 16; s++) this.buffer[s] = 0;
                            this.fin = 1, this.blocks(this.buffer, 0, 16)
                        }
                        for (r = this.h[1] >>> 13, this.h[1] &= 8191, s = 2; s < 10; s++) this.h[s] += r, r = this.h[s] >>> 13, this.h[s] &= 8191;
                        for (this.h[0] += 5 * r, r = this.h[0] >>> 13, this.h[0] &= 8191, this.h[1] += r, r = this.h[1] >>> 13, this.h[1] &= 8191, this.h[2] += r, o[0] = this.h[0] + 5, r = o[0] >>> 13, o[0] &= 8191, s = 1; s < 10; s++) o[s] = this.h[s] + r, r = o[s] >>> 13, o[s] &= 8191;
                        for (o[9] -= 8192, n = (1 ^ r) - 1, s = 0; s < 10; s++) o[s] &= n;
                        for (n = ~n, s = 0; s < 10; s++) this.h[s] = this.h[s] & n | o[s];
                        for (this.h[0] = 65535 & (this.h[0] | this.h[1] << 13), this.h[1] = 65535 & (this.h[1] >>> 3 | this.h[2] << 10), this.h[2] = 65535 & (this.h[2] >>> 6 | this.h[3] << 7), this.h[3] = 65535 & (this.h[3] >>> 9 | this.h[4] << 4), this.h[4] = 65535 & (this.h[4] >>> 12 | this.h[5] << 1 | this.h[6] << 14), this.h[5] = 65535 & (this.h[6] >>> 2 | this.h[7] << 11), this.h[6] = 65535 & (this.h[7] >>> 5 | this.h[8] << 8), this.h[7] = 65535 & (this.h[8] >>> 8 | this.h[9] << 5), i = this.h[0] + this.pad[0], this.h[0] = 65535 & i, s = 1; s < 8; s++) i = (this.h[s] + this.pad[s] | 0) + (i >>> 16) | 0, this.h[s] = 65535 & i;
                        t[e + 0] = this.h[0] >>> 0 & 255, t[e + 1] = this.h[0] >>> 8 & 255, t[e + 2] = this.h[1] >>> 0 & 255, t[e + 3] = this.h[1] >>> 8 & 255, t[e + 4] = this.h[2] >>> 0 & 255, t[e + 5] = this.h[2] >>> 8 & 255, t[e + 6] = this.h[3] >>> 0 & 255, t[e + 7] = this.h[3] >>> 8 & 255, t[e + 8] = this.h[4] >>> 0 & 255, t[e + 9] = this.h[4] >>> 8 & 255, t[e + 10] = this.h[5] >>> 0 & 255, t[e + 11] = this.h[5] >>> 8 & 255, t[e + 12] = this.h[6] >>> 0 & 255, t[e + 13] = this.h[6] >>> 8 & 255, t[e + 14] = this.h[7] >>> 0 & 255, t[e + 15] = this.h[7] >>> 8 & 255
                    }, _.prototype.update = function(t, e, r) {
                        var n, i;
                        if (this.leftover) {
                            for (i = 16 - this.leftover, i > r && (i = r), n = 0; n < i; n++) this.buffer[this.leftover + n] = t[e + n];
                            if (r -= i, e += i, this.leftover += i, this.leftover < 16) return;
                            this.blocks(this.buffer, 0, 16), this.leftover = 0
                        }
                        if (r >= 16 && (i = r - r % 16, this.blocks(t, e, i), e += i, r -= i), r) {
                            for (n = 0; n < r; n++) this.buffer[this.leftover + n] = t[e + n];
                            this.leftover += r
                        }
                    };
                    var $ = D,
                        Z = S;

                    function Y(t, e, r, n, i, s) {
                        var o = new Uint8Array(32);
                        return G(o, i, s), $(t, e, r, n, o)
                    }

                    function X(t, e, r, n, i, s) {
                        var o = new Uint8Array(32);
                        return G(o, i, s), Z(t, e, r, n, o)
                    }
                    var Q = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591];

                    function tt(t, e, r, n) {
                        var i, s, o, a, u, c, h, l, d, f, p, g, v, m, y, w, b, C, A, B, F, E, x, _, k, M, D = new Int32Array(16),
                            S = new Int32Array(16),
                            I = t[0],
                            N = t[1],
                            T = t[2],
                            P = t[3],
                            O = t[4],
                            U = t[5],
                            j = t[6],
                            W = t[7],
                            R = e[0],
                            L = e[1],
                            q = e[2],
                            K = e[3],
                            H = e[4],
                            V = e[5],
                            J = e[6],
                            z = e[7],
                            G = 0;
                        while (n >= 128) {
                            for (A = 0; A < 16; A++) B = 8 * A + G, D[A] = r[B + 0] << 24 | r[B + 1] << 16 | r[B + 2] << 8 | r[B + 3], S[A] = r[B + 4] << 24 | r[B + 5] << 16 | r[B + 6] << 8 | r[B + 7];
                            for (A = 0; A < 80; A++)
                                if (i = I, s = N, o = T, a = P, u = O, c = U, h = j, l = W, d = R, f = L, p = q, g = K, v = H, m = V, y = J, w = z, F = W, E = z, x = 65535 & E, _ = E >>> 16, k = 65535 & F, M = F >>> 16, F = (O >>> 14 | H << 18) ^ (O >>> 18 | H << 14) ^ (H >>> 9 | O << 23), E = (H >>> 14 | O << 18) ^ (H >>> 18 | O << 14) ^ (O >>> 9 | H << 23), x += 65535 & E, _ += E >>> 16, k += 65535 & F, M += F >>> 16, F = O & U ^ ~O & j, E = H & V ^ ~H & J, x += 65535 & E, _ += E >>> 16, k += 65535 & F, M += F >>> 16, F = Q[2 * A], E = Q[2 * A + 1], x += 65535 & E, _ += E >>> 16, k += 65535 & F, M += F >>> 16, F = D[A % 16], E = S[A % 16], x += 65535 & E, _ += E >>> 16, k += 65535 & F, M += F >>> 16, _ += x >>> 16, k += _ >>> 16, M += k >>> 16, b = 65535 & k | M << 16, C = 65535 & x | _ << 16, F = b, E = C, x = 65535 & E, _ = E >>> 16, k = 65535 & F, M = F >>> 16, F = (I >>> 28 | R << 4) ^ (R >>> 2 | I << 30) ^ (R >>> 7 | I << 25), E = (R >>> 28 | I << 4) ^ (I >>> 2 | R << 30) ^ (I >>> 7 | R << 25), x += 65535 & E, _ += E >>> 16, k += 65535 & F, M += F >>> 16, F = I & N ^ I & T ^ N & T, E = R & L ^ R & q ^ L & q, x += 65535 & E, _ += E >>> 16, k += 65535 & F, M += F >>> 16, _ += x >>> 16, k += _ >>> 16, M += k >>> 16, l = 65535 & k | M << 16, w = 65535 & x | _ << 16, F = a, E = g, x = 65535 & E, _ = E >>> 16, k = 65535 & F, M = F >>> 16, F = b, E = C, x += 65535 & E, _ += E >>> 16, k += 65535 & F, M += F >>> 16, _ += x >>> 16, k += _ >>> 16, M += k >>> 16, a = 65535 & k | M << 16, g = 65535 & x | _ << 16, N = i, T = s, P = o, O = a, U = u, j = c, W = h, I = l, L = d, q = f, K = p, H = g, V = v, J = m, z = y, R = w, A % 16 === 15)
                                    for (B = 0; B < 16; B++) F = D[B], E = S[B], x = 65535 & E, _ = E >>> 16, k = 65535 & F, M = F >>> 16, F = D[(B + 9) % 16], E = S[(B + 9) % 16], x += 65535 & E, _ += E >>> 16, k += 65535 & F, M += F >>> 16, b = D[(B + 1) % 16], C = S[(B + 1) % 16], F = (b >>> 1 | C << 31) ^ (b >>> 8 | C << 24) ^ b >>> 7, E = (C >>> 1 | b << 31) ^ (C >>> 8 | b << 24) ^ (C >>> 7 | b << 25), x += 65535 & E, _ += E >>> 16, k += 65535 & F, M += F >>> 16, b = D[(B + 14) % 16], C = S[(B + 14) % 16], F = (b >>> 19 | C << 13) ^ (C >>> 29 | b << 3) ^ b >>> 6, E = (C >>> 19 | b << 13) ^ (b >>> 29 | C << 3) ^ (C >>> 6 | b << 26), x += 65535 & E, _ += E >>> 16, k += 65535 & F, M += F >>> 16, _ += x >>> 16, k += _ >>> 16, M += k >>> 16, D[B] = 65535 & k | M << 16, S[B] = 65535 & x | _ << 16;
                            F = I, E = R, x = 65535 & E, _ = E >>> 16, k = 65535 & F, M = F >>> 16, F = t[0], E = e[0], x += 65535 & E, _ += E >>> 16, k += 65535 & F, M += F >>> 16, _ += x >>> 16, k += _ >>> 16, M += k >>> 16, t[0] = I = 65535 & k | M << 16, e[0] = R = 65535 & x | _ << 16, F = N, E = L, x = 65535 & E, _ = E >>> 16, k = 65535 & F, M = F >>> 16, F = t[1], E = e[1], x += 65535 & E, _ += E >>> 16, k += 65535 & F, M += F >>> 16, _ += x >>> 16, k += _ >>> 16, M += k >>> 16, t[1] = N = 65535 & k | M << 16, e[1] = L = 65535 & x | _ << 16, F = T, E = q, x = 65535 & E, _ = E >>> 16, k = 65535 & F, M = F >>> 16, F = t[2], E = e[2], x += 65535 & E, _ += E >>> 16, k += 65535 & F, M += F >>> 16, _ += x >>> 16, k += _ >>> 16, M += k >>> 16, t[2] = T = 65535 & k | M << 16, e[2] = q = 65535 & x | _ << 16, F = P, E = K, x = 65535 & E, _ = E >>> 16, k = 65535 & F, M = F >>> 16, F = t[3], E = e[3], x += 65535 & E, _ += E >>> 16, k += 65535 & F, M += F >>> 16, _ += x >>> 16, k += _ >>> 16, M += k >>> 16, t[3] = P = 65535 & k | M << 16, e[3] = K = 65535 & x | _ << 16, F = O, E = H, x = 65535 & E, _ = E >>> 16, k = 65535 & F, M = F >>> 16, F = t[4], E = e[4], x += 65535 & E, _ += E >>> 16, k += 65535 & F, M += F >>> 16, _ += x >>> 16, k += _ >>> 16, M += k >>> 16, t[4] = O = 65535 & k | M << 16, e[4] = H = 65535 & x | _ << 16, F = U, E = V, x = 65535 & E, _ = E >>> 16, k = 65535 & F, M = F >>> 16, F = t[5], E = e[5], x += 65535 & E, _ += E >>> 16, k += 65535 & F, M += F >>> 16, _ += x >>> 16, k += _ >>> 16, M += k >>> 16, t[5] = U = 65535 & k | M << 16, e[5] = V = 65535 & x | _ << 16, F = j, E = J, x = 65535 & E, _ = E >>> 16, k = 65535 & F, M = F >>> 16, F = t[6], E = e[6], x += 65535 & E, _ += E >>> 16, k += 65535 & F, M += F >>> 16, _ += x >>> 16, k += _ >>> 16, M += k >>> 16, t[6] = j = 65535 & k | M << 16, e[6] = J = 65535 & x | _ << 16, F = W, E = z, x = 65535 & E, _ = E >>> 16, k = 65535 & F, M = F >>> 16, F = t[7], E = e[7], x += 65535 & E, _ += E >>> 16, k += 65535 & F, M += F >>> 16, _ += x >>> 16, k += _ >>> 16, M += k >>> 16, t[7] = W = 65535 & k | M << 16, e[7] = z = 65535 & x | _ << 16, G += 128, n -= 128
                        }
                        return n
                    }

                    function et(t, e, r) {
                        var n, i = new Int32Array(8),
                            s = new Int32Array(8),
                            o = new Uint8Array(256),
                            a = r;
                        for (i[0] = 1779033703, i[1] = 3144134277, i[2] = 1013904242, i[3] = 2773480762, i[4] = 1359893119, i[5] = 2600822924, i[6] = 528734635, i[7] = 1541459225, s[0] = 4089235720, s[1] = 2227873595, s[2] = 4271175723, s[3] = 1595750129, s[4] = 2917565137, s[5] = 725511199, s[6] = 4215389547, s[7] = 327033209, tt(i, s, e, r), r %= 128, n = 0; n < r; n++) o[n] = e[a - r + n];
                        for (o[r] = 128, r = 256 - 128 * (r < 112 ? 1 : 0), o[r - 9] = 0, p(o, r - 8, a / 536870912 | 0, a << 3), tt(i, s, o, r), n = 0; n < 8; n++) p(t, 8 * n, i[n], s[n]);
                        return 0
                    }

                    function rt(t, r) {
                        var n = e(),
                            i = e(),
                            s = e(),
                            o = e(),
                            a = e(),
                            u = e(),
                            c = e(),
                            l = e(),
                            d = e();
                        R(n, t[1], t[0]), R(d, r[1], r[0]), L(n, n, d), W(i, t[0], t[1]), W(d, r[0], r[1]), L(i, i, d), L(s, t[3], r[3]), L(s, s, h), L(o, t[2], r[2]), W(o, o, o), R(a, i, n), R(u, o, s), W(c, o, s), W(l, i, n), L(t[0], a, u), L(t[1], l, c), L(t[2], c, u), L(t[3], a, l)
                    }

                    function nt(t, e, r) {
                        var n;
                        for (n = 0; n < 4; n++) T(t[n], e[n], r)
                    }

                    function it(t, r) {
                        var n = e(),
                            i = e(),
                            s = e();
                        K(s, r[2]), L(n, r[0], s), L(i, r[1], s), P(t, i), t[31] ^= U(n) << 7
                    }

                    function st(t, e, r) {
                        var n, i;
                        for (I(t[0], o), I(t[1], a), I(t[2], a), I(t[3], o), i = 255; i >= 0; --i) n = r[i / 8 | 0] >> (7 & i) & 1, nt(t, e, n), rt(e, t), rt(t, t), nt(t, e, n)
                    }

                    function ot(t, r) {
                        var n = [e(), e(), e(), e()];
                        I(n[0], l), I(n[1], d), I(n[2], a), L(n[3], l, d), st(t, n, r)
                    }

                    function at(t, r, i) {
                        var s, o = new Uint8Array(64),
                            a = [e(), e(), e(), e()];
                        for (i || n(r, 32), et(o, r, 32), o[0] &= 248, o[31] &= 127, o[31] |= 64, ot(a, o), it(t, a), s = 0; s < 32; s++) r[s + 32] = t[s];
                        return 0
                    }
                    var ut = new Float64Array([237, 211, 245, 92, 26, 99, 18, 88, 214, 156, 247, 162, 222, 249, 222, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16]);

                    function ct(t, e) {
                        var r, n, i, s;
                        for (n = 63; n >= 32; --n) {
                            for (r = 0, i = n - 32, s = n - 12; i < s; ++i) e[i] += r - 16 * e[n] * ut[i - (n - 32)], r = Math.floor((e[i] + 128) / 256), e[i] -= 256 * r;
                            e[i] += r, e[n] = 0
                        }
                        for (r = 0, i = 0; i < 32; i++) e[i] += r - (e[31] >> 4) * ut[i], r = e[i] >> 8, e[i] &= 255;
                        for (i = 0; i < 32; i++) e[i] -= r * ut[i];
                        for (n = 0; n < 32; n++) e[n + 1] += e[n] >> 8, t[n] = 255 & e[n]
                    }

                    function ht(t) {
                        var e, r = new Float64Array(64);
                        for (e = 0; e < 64; e++) r[e] = t[e];
                        for (e = 0; e < 64; e++) t[e] = 0;
                        ct(t, r)
                    }

                    function lt(t, r, n, i) {
                        var s, o, a = new Uint8Array(64),
                            u = new Uint8Array(64),
                            c = new Uint8Array(64),
                            h = new Float64Array(64),
                            l = [e(), e(), e(), e()];
                        et(a, i, 32), a[0] &= 248, a[31] &= 127, a[31] |= 64;
                        var d = n + 64;
                        for (s = 0; s < n; s++) t[64 + s] = r[s];
                        for (s = 0; s < 32; s++) t[32 + s] = a[32 + s];
                        for (et(c, t.subarray(32), n + 32), ht(c), ot(l, c), it(t, l), s = 32; s < 64; s++) t[s] = i[s];
                        for (et(u, t, n + 64), ht(u), s = 0; s < 64; s++) h[s] = 0;
                        for (s = 0; s < 32; s++) h[s] = c[s];
                        for (s = 0; s < 32; s++)
                            for (o = 0; o < 32; o++) h[s + o] += u[s] * a[o];
                        return ct(t.subarray(32), h), d
                    }

                    function dt(t, r) {
                        var n = e(),
                            i = e(),
                            s = e(),
                            u = e(),
                            h = e(),
                            l = e(),
                            d = e();
                        return I(t[2], a), j(t[1], r), q(s, t[1]), L(u, s, c), R(s, s, t[2]), W(u, t[2], u), q(h, u), q(l, h), L(d, l, h), L(n, d, s), L(n, n, u), H(n, n), L(n, n, s), L(n, n, u), L(n, n, u), L(t[0], n, u), q(i, t[0]), L(i, i, u), O(i, s) && L(t[0], t[0], f), q(i, t[0]), L(i, i, u), O(i, s) ? -1 : (U(t[0]) === r[31] >> 7 && R(t[0], o, t[0]), L(t[3], t[0], t[1]), 0)
                    }

                    function ft(t, r, n, i) {
                        var s, o = new Uint8Array(32),
                            a = new Uint8Array(64),
                            u = [e(), e(), e(), e()],
                            c = [e(), e(), e(), e()];
                        if (n < 64) return -1;
                        if (dt(c, i)) return -1;
                        for (s = 0; s < n; s++) t[s] = r[s];
                        for (s = 0; s < 32; s++) t[s + 32] = i[s];
                        if (et(a, t, n), ht(a), st(u, c, a), ot(c, r.subarray(32)), rt(u, c), it(o, u), n -= 64, m(r, 0, o, 0)) {
                            for (s = 0; s < n; s++) t[s] = 0;
                            return -1
                        }
                        for (s = 0; s < n; s++) t[s] = r[s + 64];
                        return n
                    }
                    var pt = 32,
                        gt = 24,
                        vt = 32,
                        mt = 16,
                        yt = 32,
                        wt = 32,
                        bt = 32,
                        Ct = 32,
                        At = 32,
                        Bt = gt,
                        Ft = vt,
                        Et = mt,
                        xt = 64,
                        _t = 32,
                        kt = 64,
                        Mt = 32,
                        Dt = 64;

                    function St(t, e) {
                        if (t.length !== pt) throw new Error("bad key size");
                        if (e.length !== gt) throw new Error("bad nonce size")
                    }

                    function It(t, e) {
                        if (t.length !== bt) throw new Error("bad public key size");
                        if (e.length !== Ct) throw new Error("bad secret key size")
                    }

                    function Nt() {
                        for (var t = 0; t < arguments.length; t++)
                            if (!(arguments[t] instanceof Uint8Array)) throw new TypeError("unexpected type, use Uint8Array")
                    }

                    function Tt(t) {
                        for (var e = 0; e < t.length; e++) t[e] = 0
                    }
                    t.lowlevel = {
                            crypto_core_hsalsa20: C,
                            crypto_stream_xor: x,
                            crypto_stream: E,
                            crypto_stream_salsa20_xor: B,
                            crypto_stream_salsa20: F,
                            crypto_onetimeauth: k,
                            crypto_onetimeauth_verify: M,
                            crypto_verify_16: v,
                            crypto_verify_32: m,
                            crypto_secretbox: D,
                            crypto_secretbox_open: S,
                            crypto_scalarmult: V,
                            crypto_scalarmult_base: J,
                            crypto_box_beforenm: G,
                            crypto_box_afternm: $,
                            crypto_box: Y,
                            crypto_box_open: X,
                            crypto_box_keypair: z,
                            crypto_hash: et,
                            crypto_sign: lt,
                            crypto_sign_keypair: at,
                            crypto_sign_open: ft,
                            crypto_secretbox_KEYBYTES: pt,
                            crypto_secretbox_NONCEBYTES: gt,
                            crypto_secretbox_ZEROBYTES: vt,
                            crypto_secretbox_BOXZEROBYTES: mt,
                            crypto_scalarmult_BYTES: yt,
                            crypto_scalarmult_SCALARBYTES: wt,
                            crypto_box_PUBLICKEYBYTES: bt,
                            crypto_box_SECRETKEYBYTES: Ct,
                            crypto_box_BEFORENMBYTES: At,
                            crypto_box_NONCEBYTES: Bt,
                            crypto_box_ZEROBYTES: Ft,
                            crypto_box_BOXZEROBYTES: Et,
                            crypto_sign_BYTES: xt,
                            crypto_sign_PUBLICKEYBYTES: _t,
                            crypto_sign_SECRETKEYBYTES: kt,
                            crypto_sign_SEEDBYTES: Mt,
                            crypto_hash_BYTES: Dt,
                            gf: e,
                            D: c,
                            L: ut,
                            pack25519: P,
                            unpack25519: j,
                            M: L,
                            A: W,
                            S: q,
                            Z: R,
                            pow2523: H,
                            add: rt,
                            set25519: I,
                            modL: ct,
                            scalarmult: st,
                            scalarbase: ot
                        }, t.randomBytes = function(t) {
                            var e = new Uint8Array(t);
                            return n(e, t), e
                        }, t.secretbox = function(t, e, r) {
                            Nt(t, e, r), St(r, e);
                            for (var n = new Uint8Array(vt + t.length), i = new Uint8Array(n.length), s = 0; s < t.length; s++) n[s + vt] = t[s];
                            return D(i, n, n.length, e, r), i.subarray(mt)
                        }, t.secretbox.open = function(t, e, r) {
                            Nt(t, e, r), St(r, e);
                            for (var n = new Uint8Array(mt + t.length), i = new Uint8Array(n.length), s = 0; s < t.length; s++) n[s + mt] = t[s];
                            return n.length < 32 || 0 !== S(i, n, n.length, e, r) ? null : i.subarray(vt)
                        }, t.secretbox.keyLength = pt, t.secretbox.nonceLength = gt, t.secretbox.overheadLength = mt, t.scalarMult = function(t, e) {
                            if (Nt(t, e), t.length !== wt) throw new Error("bad n size");
                            if (e.length !== yt) throw new Error("bad p size");
                            var r = new Uint8Array(yt);
                            return V(r, t, e), r
                        }, t.scalarMult.base = function(t) {
                            if (Nt(t), t.length !== wt) throw new Error("bad n size");
                            var e = new Uint8Array(yt);
                            return J(e, t), e
                        }, t.scalarMult.scalarLength = wt, t.scalarMult.groupElementLength = yt, t.box = function(e, r, n, i) {
                            var s = t.box.before(n, i);
                            return t.secretbox(e, r, s)
                        }, t.box.before = function(t, e) {
                            Nt(t, e), It(t, e);
                            var r = new Uint8Array(At);
                            return G(r, t, e), r
                        }, t.box.after = t.secretbox, t.box.open = function(e, r, n, i) {
                            var s = t.box.before(n, i);
                            return t.secretbox.open(e, r, s)
                        }, t.box.open.after = t.secretbox.open, t.box.keyPair = function() {
                            var t = new Uint8Array(bt),
                                e = new Uint8Array(Ct);
                            return z(t, e), {
                                publicKey: t,
                                secretKey: e
                            }
                        }, t.box.keyPair.fromSecretKey = function(t) {
                            if (Nt(t), t.length !== Ct) throw new Error("bad secret key size");
                            var e = new Uint8Array(bt);
                            return J(e, t), {
                                publicKey: e,
                                secretKey: new Uint8Array(t)
                            }
                        }, t.box.publicKeyLength = bt, t.box.secretKeyLength = Ct, t.box.sharedKeyLength = At, t.box.nonceLength = Bt, t.box.overheadLength = t.secretbox.overheadLength, t.sign = function(t, e) {
                            if (Nt(t, e), e.length !== kt) throw new Error("bad secret key size");
                            var r = new Uint8Array(xt + t.length);
                            return lt(r, t, t.length, e), r
                        }, t.sign.open = function(t, e) {
                            if (Nt(t, e), e.length !== _t) throw new Error("bad public key size");
                            var r = new Uint8Array(t.length),
                                n = ft(r, t, t.length, e);
                            if (n < 0) return null;
                            for (var i = new Uint8Array(n), s = 0; s < i.length; s++) i[s] = r[s];
                            return i
                        }, t.sign.detached = function(e, r) {
                            for (var n = t.sign(e, r), i = new Uint8Array(xt), s = 0; s < i.length; s++) i[s] = n[s];
                            return i
                        }, t.sign.detached.verify = function(t, e, r) {
                            if (Nt(t, e, r), e.length !== xt) throw new Error("bad signature size");
                            if (r.length !== _t) throw new Error("bad public key size");
                            var n, i = new Uint8Array(xt + t.length),
                                s = new Uint8Array(xt + t.length);
                            for (n = 0; n < xt; n++) i[n] = e[n];
                            for (n = 0; n < t.length; n++) i[n + xt] = t[n];
                            return ft(s, i, i.length, r) >= 0
                        }, t.sign.keyPair = function() {
                            var t = new Uint8Array(_t),
                                e = new Uint8Array(kt);
                            return at(t, e), {
                                publicKey: t,
                                secretKey: e
                            }
                        }, t.sign.keyPair.fromSecretKey = function(t) {
                            if (Nt(t), t.length !== kt) throw new Error("bad secret key size");
                            for (var e = new Uint8Array(_t), r = 0; r < e.length; r++) e[r] = t[32 + r];
                            return {
                                publicKey: e,
                                secretKey: new Uint8Array(t)
                            }
                        }, t.sign.keyPair.fromSeed = function(t) {
                            if (Nt(t), t.length !== Mt) throw new Error("bad seed size");
                            for (var e = new Uint8Array(_t), r = new Uint8Array(kt), n = 0; n < 32; n++) r[n] = t[n];
                            return at(e, r, !0), {
                                publicKey: e,
                                secretKey: r
                            }
                        }, t.sign.publicKeyLength = _t, t.sign.secretKeyLength = kt, t.sign.seedLength = Mt, t.sign.signatureLength = xt, t.hash = function(t) {
                            Nt(t);
                            var e = new Uint8Array(Dt);
                            return et(e, t, t.length), e
                        }, t.hash.hashLength = Dt, t.verify = function(t, e) {
                            return Nt(t, e), 0 !== t.length && 0 !== e.length && (t.length === e.length && 0 === g(t, 0, e, 0, t.length))
                        }, t.setPRNG = function(t) {
                            n = t
                        },
                        function() {
                            var e = "undefined" !== typeof self ? self.crypto || self.msCrypto : null;
                            if (e && e.getRandomValues) {
                                var n = 65536;
                                t.setPRNG((function(t, r) {
                                    var i, s = new Uint8Array(r);
                                    for (i = 0; i < r; i += n) e.getRandomValues(s.subarray(i, i + Math.min(r - i, n)));
                                    for (i = 0; i < r; i++) t[i] = s[i];
                                    Tt(s)
                                }))
                            } else e = r(34), e && e.randomBytes && t.setPRNG((function(t, r) {
                                var n, i = e.randomBytes(r);
                                for (n = 0; n < r; n++) t[n] = i[n];
                                Tt(i)
                            }))
                        }()
                }(t.exports ? t.exports : self.nacl = self.nacl || {})
        },
        aff3: function(t, e, r) {
            "use strict";
            var n = r("1845"),
                i = ["age", "authorization", "content-length", "content-type", "etag", "expires", "from", "host", "if-modified-since", "if-unmodified-since", "last-modified", "location", "max-forwards", "proxy-authorization", "referer", "retry-after", "user-agent"];
            t.exports = function(t) {
                var e, r, s, o = {};
                return t ? (n.forEach(t.split("\n"), (function(t) {
                    if (s = t.indexOf(":"), e = n.trim(t.substr(0, s)).toLowerCase(), r = n.trim(t.substr(s + 1)), e) {
                        if (o[e] && i.indexOf(e) >= 0) return;
                        o[e] = "set-cookie" === e ? (o[e] ? o[e] : []).concat([r]) : o[e] ? o[e] + ", " + r : r
                    }
                })), o) : o
            }
        },
        b11e: function(t, e, r) {
            r("5cc6");
            const {
                hexToBytes: n,
                bytesToHex: i
            } = r("a00c");
            class s {
                static isValid(t) {
                    try {
                        return new s(t), !0
                    } catch (e) {
                        return !1
                    }
                }
                constructor(t) {
                    if (null == t) throw "Invalid address";
                    if (t instanceof s) this.bytes = t.bytes;
                    else if (t instanceof Uint8Array) {
                        if (32 !== t.length) throw new Error("invalid adnl bytes length");
                        this.bytes = t
                    } else {
                        if ("string" !== typeof t) throw new Error("unsupported type");
                        if (64 !== t.length) throw new Error("invalid adnl hex length");
                        this.bytes = n(t)
                    }
                }
                toHex() {
                    let t = i(this.bytes);
                    while (t.length < 64) t = "0" + t;
                    return t
                }
            }
            t.exports.default = s
        },
        b4b6: function(t, e, r) {
            "use strict";

            function n(t, e, r) {
                return e <= t && t <= r
            }

            function i(t) {
                if (void 0 === t) return {};
                if (t === Object(t)) return t;
                throw TypeError("Could not convert argument to dictionary")
            }

            function s(t) {
                var e = String(t),
                    r = e.length,
                    n = 0,
                    i = [];
                while (n < r) {
                    var s = e.charCodeAt(n);
                    if (s < 55296 || s > 57343) i.push(s);
                    else if (56320 <= s && s <= 57343) i.push(65533);
                    else if (55296 <= s && s <= 56319)
                        if (n === r - 1) i.push(65533);
                        else {
                            var o = t.charCodeAt(n + 1);
                            if (56320 <= o && o <= 57343) {
                                var a = 1023 & s,
                                    u = 1023 & o;
                                i.push(65536 + (a << 10) + u), n += 1
                            } else i.push(65533)
                        }
                    n += 1
                }
                return i
            }

            function o(t) {
                for (var e = "", r = 0; r < t.length; ++r) {
                    var n = t[r];
                    n <= 65535 ? e += String.fromCharCode(n) : (n -= 65536, e += String.fromCharCode(55296 + (n >> 10), 56320 + (1023 & n)))
                }
                return e
            }
            r.r(e), r.d(e, "TextEncoder", (function() {
                return g
            })), r.d(e, "TextDecoder", (function() {
                return p
            }));
            var a = -1;

            function u(t) {
                this.tokens = [].slice.call(t)
            }
            u.prototype = {
                endOfStream: function() {
                    return !this.tokens.length
                },
                read: function() {
                    return this.tokens.length ? this.tokens.shift() : a
                },
                prepend: function(t) {
                    if (Array.isArray(t)) {
                        var e = t;
                        while (e.length) this.tokens.unshift(e.pop())
                    } else this.tokens.unshift(t)
                },
                push: function(t) {
                    if (Array.isArray(t)) {
                        var e = t;
                        while (e.length) this.tokens.push(e.shift())
                    } else this.tokens.push(t)
                }
            };
            var c = -1;

            function h(t, e) {
                if (t) throw TypeError("Decoder error");
                return e || 65533
            }

            function l() {}

            function d() {}
            l.prototype = {
                handler: function(t, e) {}
            }, d.prototype = {
                handler: function(t, e) {}
            };
            var f = "utf-8";

            function p(t, e) {
                if (!(this instanceof p)) return new p(t, e);
                if (t = void 0 !== t ? String(t).toLowerCase() : f, t !== f) throw new Error("Encoding not supported. Only utf-8 is supported");
                e = i(e), this._streaming = !1, this._BOMseen = !1, this._decoder = null, this._fatal = Boolean(e["fatal"]), this._ignoreBOM = Boolean(e["ignoreBOM"]), Object.defineProperty(this, "encoding", {
                    value: "utf-8"
                }), Object.defineProperty(this, "fatal", {
                    value: this._fatal
                }), Object.defineProperty(this, "ignoreBOM", {
                    value: this._ignoreBOM
                })
            }

            function g(t, e) {
                if (!(this instanceof g)) return new g(t, e);
                if (t = void 0 !== t ? String(t).toLowerCase() : f, t !== f) throw new Error("Encoding not supported. Only utf-8 is supported");
                e = i(e), this._streaming = !1, this._encoder = null, this._options = {
                    fatal: Boolean(e["fatal"])
                }, Object.defineProperty(this, "encoding", {
                    value: "utf-8"
                })
            }

            function v(t) {
                var e = t.fatal,
                    r = 0,
                    i = 0,
                    s = 0,
                    o = 128,
                    u = 191;
                this.handler = function(t, l) {
                    if (l === a && 0 !== s) return s = 0, h(e);
                    if (l === a) return c;
                    if (0 === s) {
                        if (n(l, 0, 127)) return l;
                        if (n(l, 194, 223)) s = 1, r = l - 192;
                        else if (n(l, 224, 239)) 224 === l && (o = 160), 237 === l && (u = 159), s = 2, r = l - 224;
                        else {
                            if (!n(l, 240, 244)) return h(e);
                            240 === l && (o = 144), 244 === l && (u = 143), s = 3, r = l - 240
                        }
                        return r <<= 6 * s, null
                    }
                    if (!n(l, o, u)) return r = s = i = 0, o = 128, u = 191, t.prepend(l), h(e);
                    if (o = 128, u = 191, i += 1, r += l - 128 << 6 * (s - i), i !== s) return null;
                    var d = r;
                    return r = s = i = 0, d
                }
            }

            function m(t) {
                t.fatal;
                this.handler = function(t, e) {
                    if (e === a) return c;
                    if (n(e, 0, 127)) return e;
                    var r, i;
                    n(e, 128, 2047) ? (r = 1, i = 192) : n(e, 2048, 65535) ? (r = 2, i = 224) : n(e, 65536, 1114111) && (r = 3, i = 240);
                    var s = [(e >> 6 * r) + i];
                    while (r > 0) {
                        var o = e >> 6 * (r - 1);
                        s.push(128 | 63 & o), r -= 1
                    }
                    return s
                }
            }
            p.prototype = {
                decode: function(t, e) {
                    var r;
                    r = "object" === typeof t && t instanceof ArrayBuffer ? new Uint8Array(t) : "object" === typeof t && "buffer" in t && t.buffer instanceof ArrayBuffer ? new Uint8Array(t.buffer, t.byteOffset, t.byteLength) : new Uint8Array(0), e = i(e), this._streaming || (this._decoder = new v({
                        fatal: this._fatal
                    }), this._BOMseen = !1), this._streaming = Boolean(e["stream"]);
                    var n, s = new u(r),
                        a = [];
                    while (!s.endOfStream()) {
                        if (n = this._decoder.handler(s, s.read()), n === c) break;
                        null !== n && (Array.isArray(n) ? a.push.apply(a, n) : a.push(n))
                    }
                    if (!this._streaming) {
                        do {
                            if (n = this._decoder.handler(s, s.read()), n === c) break;
                            null !== n && (Array.isArray(n) ? a.push.apply(a, n) : a.push(n))
                        } while (!s.endOfStream());
                        this._decoder = null
                    }
                    return a.length && (-1 === ["utf-8"].indexOf(this.encoding) || this._ignoreBOM || this._BOMseen || (65279 === a[0] ? (this._BOMseen = !0, a.shift()) : this._BOMseen = !0)), o(a)
                }
            }, g.prototype = {
                encode: function(t, e) {
                    t = t ? String(t) : "", e = i(e), this._streaming || (this._encoder = new m(this._options)), this._streaming = Boolean(e["stream"]);
                    var r, n = [],
                        o = new u(s(t));
                    while (!o.endOfStream()) {
                        if (r = this._encoder.handler(o, o.read()), r === c) break;
                        Array.isArray(r) ? n.push.apply(n, r) : n.push(r)
                    }
                    if (!this._streaming) {
                        while (1) {
                            if (r = this._encoder.handler(o, o.read()), r === c) break;
                            Array.isArray(r) ? n.push.apply(n, r) : n.push(r)
                        }
                        this._encoder = null
                    }
                    return new Uint8Array(n)
                }
            }
        },
        b672: function(t, e, r) {
            var n = r("8707").Buffer;

            function i(t, e) {
                this._block = n.alloc(t), this._finalSize = e, this._blockSize = t, this._len = 0
            }
            i.prototype.update = function(t, e) {
                "string" === typeof t && (e = e || "utf8", t = n.from(t, e));
                for (var r = this._block, i = this._blockSize, s = t.length, o = this._len, a = 0; a < s;) {
                    for (var u = o % i, c = Math.min(s - a, i - u), h = 0; h < c; h++) r[u + h] = t[a + h];
                    o += c, a += c, o % i === 0 && this._update(r)
                }
                return this._len += s, this
            }, i.prototype.digest = function(t) {
                var e = this._len % this._blockSize;
                this._block[e] = 128, this._block.fill(0, e + 1), e >= this._finalSize && (this._update(this._block), this._block.fill(0));
                var r = 8 * this._len;
                if (r <= 4294967295) this._block.writeUInt32BE(r, this._blockSize - 4);
                else {
                    var n = (4294967295 & r) >>> 0,
                        i = (r - n) / 4294967296;
                    this._block.writeUInt32BE(i, this._blockSize - 8), this._block.writeUInt32BE(n, this._blockSize - 4)
                }
                this._update(this._block);
                var s = this._hash();
                return t ? s.toString(t) : s
            }, i.prototype._update = function() {
                throw new Error("_update must be implemented by subclass")
            }, t.exports = i
        },
        b7ff: function(t, e, r) {
            "use strict";
            var n = Object.prototype.hasOwnProperty,
                i = "~";

            function s() {}

            function o(t, e, r) {
                this.fn = t, this.context = e, this.once = r || !1
            }

            function a(t, e, r, n, s) {
                if ("function" !== typeof r) throw new TypeError("The listener must be a function");
                var a = new o(r, n || t, s),
                    u = i ? i + e : e;
                return t._events[u] ? t._events[u].fn ? t._events[u] = [t._events[u], a] : t._events[u].push(a) : (t._events[u] = a, t._eventsCount++), t
            }

            function u(t, e) {
                0 === --t._eventsCount ? t._events = new s : delete t._events[e]
            }

            function c() {
                this._events = new s, this._eventsCount = 0
            }
            Object.create && (s.prototype = Object.create(null), (new s).__proto__ || (i = !1)), c.prototype.eventNames = function() {
                var t, e, r = [];
                if (0 === this._eventsCount) return r;
                for (e in t = this._events) n.call(t, e) && r.push(i ? e.slice(1) : e);
                return Object.getOwnPropertySymbols ? r.concat(Object.getOwnPropertySymbols(t)) : r
            }, c.prototype.listeners = function(t) {
                var e = i ? i + t : t,
                    r = this._events[e];
                if (!r) return [];
                if (r.fn) return [r.fn];
                for (var n = 0, s = r.length, o = new Array(s); n < s; n++) o[n] = r[n].fn;
                return o
            }, c.prototype.listenerCount = function(t) {
                var e = i ? i + t : t,
                    r = this._events[e];
                return r ? r.fn ? 1 : r.length : 0
            }, c.prototype.emit = function(t, e, r, n, s, o) {
                var a = i ? i + t : t;
                if (!this._events[a]) return !1;
                var u, c, h = this._events[a],
                    l = arguments.length;
                if (h.fn) {
                    switch (h.once && this.removeListener(t, h.fn, void 0, !0), l) {
                        case 1:
                            return h.fn.call(h.context), !0;
                        case 2:
                            return h.fn.call(h.context, e), !0;
                        case 3:
                            return h.fn.call(h.context, e, r), !0;
                        case 4:
                            return h.fn.call(h.context, e, r, n), !0;
                        case 5:
                            return h.fn.call(h.context, e, r, n, s), !0;
                        case 6:
                            return h.fn.call(h.context, e, r, n, s, o), !0
                    }
                    for (c = 1, u = new Array(l - 1); c < l; c++) u[c - 1] = arguments[c];
                    h.fn.apply(h.context, u)
                } else {
                    var d, f = h.length;
                    for (c = 0; c < f; c++) switch (h[c].once && this.removeListener(t, h[c].fn, void 0, !0), l) {
                        case 1:
                            h[c].fn.call(h[c].context);
                            break;
                        case 2:
                            h[c].fn.call(h[c].context, e);
                            break;
                        case 3:
                            h[c].fn.call(h[c].context, e, r);
                            break;
                        case 4:
                            h[c].fn.call(h[c].context, e, r, n);
                            break;
                        default:
                            if (!u)
                                for (d = 1, u = new Array(l - 1); d < l; d++) u[d - 1] = arguments[d];
                            h[c].fn.apply(h[c].context, u)
                    }
                }
                return !0
            }, c.prototype.on = function(t, e, r) {
                return a(this, t, e, r, !1)
            }, c.prototype.once = function(t, e, r) {
                return a(this, t, e, r, !0)
            }, c.prototype.removeListener = function(t, e, r, n) {
                var s = i ? i + t : t;
                if (!this._events[s]) return this;
                if (!e) return u(this, s), this;
                var o = this._events[s];
                if (o.fn) o.fn !== e || n && !o.once || r && o.context !== r || u(this, s);
                else {
                    for (var a = 0, c = [], h = o.length; a < h; a++)(o[a].fn !== e || n && !o[a].once || r && o[a].context !== r) && c.push(o[a]);
                    c.length ? this._events[s] = 1 === c.length ? c[0] : c : u(this, s)
                }
                return this
            }, c.prototype.removeAllListeners = function(t) {
                var e;
                return t ? (e = i ? i + t : t, this._events[e] && u(this, e)) : (this._events = new s, this._eventsCount = 0), this
            }, c.prototype.off = c.prototype.removeListener, c.prototype.addListener = c.prototype.on, c.prefixed = i, c.EventEmitter = c, t.exports = c
        },
        b837: function(t, e, r) {
            var n = r("3fb5"),
                i = r("4fd1"),
                s = r("b672"),
                o = r("8707").Buffer,
                a = new Array(160);

            function u() {
                this.init(), this._w = a, s.call(this, 128, 112)
            }
            n(u, i), u.prototype.init = function() {
                return this._ah = 3418070365, this._bh = 1654270250, this._ch = 2438529370, this._dh = 355462360, this._eh = 1731405415, this._fh = 2394180231, this._gh = 3675008525, this._hh = 1203062813, this._al = 3238371032, this._bl = 914150663, this._cl = 812702999, this._dl = 4144912697, this._el = 4290775857, this._fl = 1750603025, this._gl = 1694076839, this._hl = 3204075428, this
            }, u.prototype._hash = function() {
                var t = o.allocUnsafe(48);

                function e(e, r, n) {
                    t.writeInt32BE(e, n), t.writeInt32BE(r, n + 4)
                }
                return e(this._ah, this._al, 0), e(this._bh, this._bl, 8), e(this._ch, this._cl, 16), e(this._dh, this._dl, 24), e(this._eh, this._el, 32), e(this._fh, this._fl, 40), t
            }, t.exports = u
        },
        b8fa: function(t, e) {
            t.exports = function(t) {
                return !(!t || "string" === typeof t) && (t instanceof Array || Array.isArray(t) || t.length >= 0 && (t.splice instanceof Function || Object.getOwnPropertyDescriptor(t, t.length - 1) && "String" !== t.constructor.name))
            }
        },
        bb0b: function(t, e, r) {
            "use strict";
            var n = r("1845"),
                i = r("6012"),
                s = r("74b3"),
                o = r("cd67"),
                a = r("ad92");

            function u(t) {
                var e = new s(t),
                    r = i(s.prototype.request, e);
                return n.extend(r, s.prototype, e), n.extend(r, e), r.create = function(e) {
                    return u(o(t, e))
                }, r
            }
            var c = u(a);
            c.Axios = s, c.Cancel = r("4b6c"), c.CancelToken = r("4b36"), c.isCancel = r("3bdc"), c.VERSION = r("8bac").version, c.all = function(t) {
                return Promise.all(t)
            }, c.spread = r("a664"), c.isAxiosError = r("65e1"), t.exports = c, t.exports.default = c
        },
        bfb7: function(t, e, r) {
            "use strict";
            var n = r("1845"),
                i = r("ad92");
            t.exports = function(t, e, r) {
                var s = this || i;
                return n.forEach(r, (function(r) {
                    t = r.call(s, t, e)
                })), t
            }
        },
        c360: function(t, e, r) {
            "use strict";
            t.exports = function(t, e, r, n, i) {
                return t.config = e, r && (t.code = r), t.request = n, t.response = i, t.isAxiosError = !0, t.toJSON = function() {
                    return {
                        message: this.message,
                        name: this.name,
                        description: this.description,
                        number: this.number,
                        fileName: this.fileName,
                        lineNumber: this.lineNumber,
                        columnNumber: this.columnNumber,
                        stack: this.stack,
                        config: this.config,
                        code: this.code,
                        status: this.response && this.response.status ? this.response.status : null
                    }
                }, t
            }
        },
        c3ee: function(t, e, r) {
            "use strict";
            var n = r("8bac").version,
                i = {};
            ["object", "boolean", "number", "function", "string", "symbol"].forEach((function(t, e) {
                i[t] = function(r) {
                    return typeof r === t || "a" + (e < 1 ? "n " : " ") + t
                }
            }));
            var s = {};

            function o(t, e, r) {
                if ("object" !== typeof t) throw new TypeError("options must be an object");
                var n = Object.keys(t),
                    i = n.length;
                while (i-- > 0) {
                    var s = n[i],
                        o = e[s];
                    if (o) {
                        var a = t[s],
                            u = void 0 === a || o(a, s, t);
                        if (!0 !== u) throw new TypeError("option " + s + " must be " + u)
                    } else if (!0 !== r) throw Error("Unknown option " + s)
                }
            }
            i.transitional = function(t, e, r) {
                function i(t, e) {
                    return "[Axios v" + n + "] Transitional option '" + t + "'" + e + (r ? ". " + r : "")
                }
                return function(r, n, o) {
                    if (!1 === t) throw new Error(i(n, " has been removed" + (e ? " in " + e : "")));
                    return e && !s[n] && (s[n] = !0, console.warn(i(n, " has been deprecated since v" + e + " and will be removed in the near future"))), !t || t(r, n, o)
                }
            }, t.exports = {
                assertOptions: o,
                validators: i
            }
        },
        c486: function(t, e, r) {
            const n = r("1c46"),
                {
                    checkAndInit: i,
                    smix: s
                } = r("8f3b");
            async function o(t, e, r, o, a, u, c, h) {
                const {
                    XY: l,
                    V: d,
                    B32: f,
                    x: p,
                    _X: g,
                    B: v,
                    tickCallback: m
                } = i(t, e, r, o, a, u, c);
                for (var y = 0; y < a; y++) await s(v, 128 * y * o, o, r, d, l, g, f, p, m, h);
                return n.pbkdf2Sync(t, v, 1, u, "sha256")
            }
            t.exports = o
        },
        c8f2: function(t, e, r) {
            var n = r("f138");
            "undefined" !== typeof window && "undefined" === typeof window.tp && (window.tp = n), t.exports = n
        },
        cb82: function(t, e, r) {
            (function(t) {
                r("bf19"),
                    function(t, e) {
                        "use strict";

                        function n(t, e) {
                            if (!t) throw new Error(e || "Assertion failed")
                        }

                        function i(t, e) {
                            t.super_ = e;
                            var r = function() {};
                            r.prototype = e.prototype, t.prototype = new r, t.prototype.constructor = t
                        }

                        function s(t, e, r) {
                            if (s.isBN(t)) return t;
                            this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== t && ("le" !== e && "be" !== e || (r = e, e = 10), this._init(t || 0, e || 10, r || "be"))
                        }
                        var o;
                        "object" === typeof t ? t.exports = s : e.BN = s, s.BN = s, s.wordSize = 26;
                        try {
                            o = r(33).Buffer
                        } catch (M) {}

                        function a(t, e, r) {
                            for (var i = 0, s = Math.min(t.length, r), o = 0, a = e; a < s; a++) {
                                var u, c = t.charCodeAt(a) - 48;
                                i <<= 4, u = c >= 49 && c <= 54 ? c - 49 + 10 : c >= 17 && c <= 22 ? c - 17 + 10 : c, i |= u, o |= u
                            }
                            return n(!(240 & o), "Invalid character in " + t), i
                        }

                        function u(t, e, r, i) {
                            for (var s = 0, o = 0, a = Math.min(t.length, r), u = e; u < a; u++) {
                                var c = t.charCodeAt(u) - 48;
                                s *= i, o = c >= 49 ? c - 49 + 10 : c >= 17 ? c - 17 + 10 : c, n(c >= 0 && o < i, "Invalid character"), s += o
                            }
                            return s
                        }

                        function c(t, e) {
                            t.words = e.words, t.length = e.length, t.negative = e.negative, t.red = e.red
                        }

                        function h() {
                            return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">"
                        }
                        s.isBN = function(t) {
                            return t instanceof s || null !== t && "object" === typeof t && t.constructor.wordSize === s.wordSize && Array.isArray(t.words)
                        }, s.max = function(t, e) {
                            return t.cmp(e) > 0 ? t : e
                        }, s.min = function(t, e) {
                            return t.cmp(e) < 0 ? t : e
                        }, s.prototype._init = function(t, e, r) {
                            if ("number" === typeof t) return this._initNumber(t, e, r);
                            if ("object" === typeof t) return this._initArray(t, e, r);
                            "hex" === e && (e = 16), n(e === (0 | e) && e >= 2 && e <= 36), t = t.toString().replace(/\s+/g, "");
                            var i = 0;
                            "-" === t[0] && i++, 16 === e ? this._parseHex(t, i) : this._parseBase(t, e, i), "-" === t[0] && (this.negative = 1), this._strip(), "le" === r && this._initArray(this.toArray(), e, r)
                        }, s.prototype._initNumber = function(t, e, r) {
                            t < 0 && (this.negative = 1, t = -t), t < 67108864 ? (this.words = [67108863 & t], this.length = 1) : t < 4503599627370496 ? (this.words = [67108863 & t, t / 67108864 & 67108863], this.length = 2) : (n(t < 9007199254740992), this.words = [67108863 & t, t / 67108864 & 67108863, 1], this.length = 3), "le" === r && this._initArray(this.toArray(), e, r)
                        }, s.prototype._initArray = function(t, e, r) {
                            if (n("number" === typeof t.length), t.length <= 0) return this.words = [0], this.length = 1, this;
                            this.length = Math.ceil(t.length / 3), this.words = new Array(this.length);
                            for (var i = 0; i < this.length; i++) this.words[i] = 0;
                            var s, o, a = 0;
                            if ("be" === r)
                                for (i = t.length - 1, s = 0; i >= 0; i -= 3) o = t[i] | t[i - 1] << 8 | t[i - 2] << 16, this.words[s] |= o << a & 67108863, this.words[s + 1] = o >>> 26 - a & 67108863, a += 24, a >= 26 && (a -= 26, s++);
                            else if ("le" === r)
                                for (i = 0, s = 0; i < t.length; i += 3) o = t[i] | t[i + 1] << 8 | t[i + 2] << 16, this.words[s] |= o << a & 67108863, this.words[s + 1] = o >>> 26 - a & 67108863, a += 24, a >= 26 && (a -= 26, s++);
                            return this._strip()
                        }, s.prototype._parseHex = function(t, e) {
                            this.length = Math.ceil((t.length - e) / 6), this.words = new Array(this.length);
                            for (var r = 0; r < this.length; r++) this.words[r] = 0;
                            var n, i, s = 0;
                            for (r = t.length - 6, n = 0; r >= e; r -= 6) i = a(t, r, r + 6), this.words[n] |= i << s & 67108863, this.words[n + 1] |= i >>> 26 - s & 4194303, s += 24, s >= 26 && (s -= 26, n++);
                            r + 6 !== e && (i = a(t, e, r + 6), this.words[n] |= i << s & 67108863, this.words[n + 1] |= i >>> 26 - s & 4194303), this._strip()
                        }, s.prototype._parseBase = function(t, e, r) {
                            this.words = [0], this.length = 1;
                            for (var n = 0, i = 1; i <= 67108863; i *= e) n++;
                            n--, i = i / e | 0;
                            for (var s = t.length - r, o = s % n, a = Math.min(s, s - o) + r, c = 0, h = r; h < a; h += n) c = u(t, h, h + n, e), this.imuln(i), this.words[0] + c < 67108864 ? this.words[0] += c : this._iaddn(c);
                            if (0 !== o) {
                                var l = 1;
                                for (c = u(t, h, t.length, e), h = 0; h < o; h++) l *= e;
                                this.imuln(l), this.words[0] + c < 67108864 ? this.words[0] += c : this._iaddn(c)
                            }
                        }, s.prototype.copy = function(t) {
                            t.words = new Array(this.length);
                            for (var e = 0; e < this.length; e++) t.words[e] = this.words[e];
                            t.length = this.length, t.negative = this.negative, t.red = this.red
                        }, s.prototype._move = function(t) {
                            c(t, this)
                        }, s.prototype.clone = function() {
                            var t = new s(null);
                            return this.copy(t), t
                        }, s.prototype._expand = function(t) {
                            while (this.length < t) this.words[this.length++] = 0;
                            return this
                        }, s.prototype._strip = function() {
                            while (this.length > 1 && 0 === this.words[this.length - 1]) this.length--;
                            return this._normSign()
                        }, s.prototype._normSign = function() {
                            return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this
                        }, "undefined" !== typeof Symbol && "function" === typeof Symbol.for ? s.prototype[Symbol.for("nodejs.util.inspect.custom")] = h : s.prototype.inspect = h;
                        var l = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"],
                            d = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                            f = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
                        s.prototype.toString = function(t, e) {
                            var r;
                            if (t = t || 10, e = 0 | e || 1, 16 === t || "hex" === t) {
                                r = "";
                                for (var i = 0, s = 0, o = 0; o < this.length; o++) {
                                    var a = this.words[o],
                                        u = (16777215 & (a << i | s)).toString(16);
                                    s = a >>> 24 - i & 16777215, r = 0 !== s || o !== this.length - 1 ? l[6 - u.length] + u + r : u + r, i += 2, i >= 26 && (i -= 26, o--)
                                }
                                0 !== s && (r = s.toString(16) + r);
                                while (r.length % e !== 0) r = "0" + r;
                                return 0 !== this.negative && (r = "-" + r), r
                            }
                            if (t === (0 | t) && t >= 2 && t <= 36) {
                                var c = d[t],
                                    h = f[t];
                                r = "";
                                var p = this.clone();
                                p.negative = 0;
                                while (!p.isZero()) {
                                    var g = p.modrn(h).toString(t);
                                    p = p.idivn(h), r = p.isZero() ? g + r : l[c - g.length] + g + r
                                }
                                this.isZero() && (r = "0" + r);
                                while (r.length % e !== 0) r = "0" + r;
                                return 0 !== this.negative && (r = "-" + r), r
                            }
                            n(!1, "Base should be between 2 and 36")
                        }, s.prototype.toNumber = function() {
                            var t = this.words[0];
                            return 2 === this.length ? t += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && n(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -t : t
                        }, s.prototype.toJSON = function() {
                            return this.toString(16, 2)
                        }, o && (s.prototype.toBuffer = function(t, e) {
                            return this.toArrayLike(o, t, e)
                        }), s.prototype.toArray = function(t, e) {
                            return this.toArrayLike(Array, t, e)
                        };
                        var p = function(t, e) {
                            return t.allocUnsafe ? t.allocUnsafe(e) : new t(e)
                        };

                        function g(t) {
                            for (var e = new Array(t.bitLength()), r = 0; r < e.length; r++) {
                                var n = r / 26 | 0,
                                    i = r % 26;
                                e[r] = t.words[n] >>> i & 1
                            }
                            return e
                        }

                        function v(t, e, r) {
                            r.negative = e.negative ^ t.negative;
                            var n = t.length + e.length | 0;
                            r.length = n, n = n - 1 | 0;
                            var i = 0 | t.words[0],
                                s = 0 | e.words[0],
                                o = i * s,
                                a = 67108863 & o,
                                u = o / 67108864 | 0;
                            r.words[0] = a;
                            for (var c = 1; c < n; c++) {
                                for (var h = u >>> 26, l = 67108863 & u, d = Math.min(c, e.length - 1), f = Math.max(0, c - t.length + 1); f <= d; f++) {
                                    var p = c - f | 0;
                                    i = 0 | t.words[p], s = 0 | e.words[f], o = i * s + l, h += o / 67108864 | 0, l = 67108863 & o
                                }
                                r.words[c] = 0 | l, u = 0 | h
                            }
                            return 0 !== u ? r.words[c] = 0 | u : r.length--, r._strip()
                        }
                        s.prototype.toArrayLike = function(t, e, r) {
                            this._strip();
                            var i = this.byteLength(),
                                s = r || Math.max(1, i);
                            n(i <= s, "byte array longer than desired length"), n(s > 0, "Requested array length <= 0");
                            var o = p(t, s),
                                a = "le" === e ? "LE" : "BE";
                            return this["_toArrayLike" + a](o, i), o
                        }, s.prototype._toArrayLikeLE = function(t, e) {
                            for (var r = 0, n = 0, i = 0, s = 0; i < this.length; i++) {
                                var o = this.words[i] << s | n;
                                t[r++] = 255 & o, r < t.length && (t[r++] = o >> 8 & 255), r < t.length && (t[r++] = o >> 16 & 255), 6 === s ? (r < t.length && (t[r++] = o >> 24 & 255), n = 0, s = 0) : (n = o >>> 24, s += 2)
                            }
                            if (r < t.length) {
                                t[r++] = n;
                                while (r < t.length) t[r++] = 0
                            }
                        }, s.prototype._toArrayLikeBE = function(t, e) {
                            for (var r = t.length - 1, n = 0, i = 0, s = 0; i < this.length; i++) {
                                var o = this.words[i] << s | n;
                                t[r--] = 255 & o, r >= 0 && (t[r--] = o >> 8 & 255), r >= 0 && (t[r--] = o >> 16 & 255), 6 === s ? (r >= 0 && (t[r--] = o >> 24 & 255), n = 0, s = 0) : (n = o >>> 24, s += 2)
                            }
                            if (r >= 0) {
                                t[r--] = n;
                                while (r >= 0) t[r--] = 0
                            }
                        }, Math.clz32 ? s.prototype._countBits = function(t) {
                            return 32 - Math.clz32(t)
                        } : s.prototype._countBits = function(t) {
                            var e = t,
                                r = 0;
                            return e >= 4096 && (r += 13, e >>>= 13), e >= 64 && (r += 7, e >>>= 7), e >= 8 && (r += 4, e >>>= 4), e >= 2 && (r += 2, e >>>= 2), r + e
                        }, s.prototype._zeroBits = function(t) {
                            if (0 === t) return 26;
                            var e = t,
                                r = 0;
                            return 0 === (8191 & e) && (r += 13, e >>>= 13), 0 === (127 & e) && (r += 7, e >>>= 7), 0 === (15 & e) && (r += 4, e >>>= 4), 0 === (3 & e) && (r += 2, e >>>= 2), 0 === (1 & e) && r++, r
                        }, s.prototype.bitLength = function() {
                            var t = this.words[this.length - 1],
                                e = this._countBits(t);
                            return 26 * (this.length - 1) + e
                        }, s.prototype.zeroBits = function() {
                            if (this.isZero()) return 0;
                            for (var t = 0, e = 0; e < this.length; e++) {
                                var r = this._zeroBits(this.words[e]);
                                if (t += r, 26 !== r) break
                            }
                            return t
                        }, s.prototype.byteLength = function() {
                            return Math.ceil(this.bitLength() / 8)
                        }, s.prototype.toTwos = function(t) {
                            return 0 !== this.negative ? this.abs().inotn(t).iaddn(1) : this.clone()
                        }, s.prototype.fromTwos = function(t) {
                            return this.testn(t - 1) ? this.notn(t).iaddn(1).ineg() : this.clone()
                        }, s.prototype.isNeg = function() {
                            return 0 !== this.negative
                        }, s.prototype.neg = function() {
                            return this.clone().ineg()
                        }, s.prototype.ineg = function() {
                            return this.isZero() || (this.negative ^= 1), this
                        }, s.prototype.iuor = function(t) {
                            while (this.length < t.length) this.words[this.length++] = 0;
                            for (var e = 0; e < t.length; e++) this.words[e] = this.words[e] | t.words[e];
                            return this._strip()
                        }, s.prototype.ior = function(t) {
                            return n(0 === (this.negative | t.negative)), this.iuor(t)
                        }, s.prototype.or = function(t) {
                            return this.length > t.length ? this.clone().ior(t) : t.clone().ior(this)
                        }, s.prototype.uor = function(t) {
                            return this.length > t.length ? this.clone().iuor(t) : t.clone().iuor(this)
                        }, s.prototype.iuand = function(t) {
                            var e;
                            e = this.length > t.length ? t : this;
                            for (var r = 0; r < e.length; r++) this.words[r] = this.words[r] & t.words[r];
                            return this.length = e.length, this._strip()
                        }, s.prototype.iand = function(t) {
                            return n(0 === (this.negative | t.negative)), this.iuand(t)
                        }, s.prototype.and = function(t) {
                            return this.length > t.length ? this.clone().iand(t) : t.clone().iand(this)
                        }, s.prototype.uand = function(t) {
                            return this.length > t.length ? this.clone().iuand(t) : t.clone().iuand(this)
                        }, s.prototype.iuxor = function(t) {
                            var e, r;
                            this.length > t.length ? (e = this, r = t) : (e = t, r = this);
                            for (var n = 0; n < r.length; n++) this.words[n] = e.words[n] ^ r.words[n];
                            if (this !== e)
                                for (; n < e.length; n++) this.words[n] = e.words[n];
                            return this.length = e.length, this._strip()
                        }, s.prototype.ixor = function(t) {
                            return n(0 === (this.negative | t.negative)), this.iuxor(t)
                        }, s.prototype.xor = function(t) {
                            return this.length > t.length ? this.clone().ixor(t) : t.clone().ixor(this)
                        }, s.prototype.uxor = function(t) {
                            return this.length > t.length ? this.clone().iuxor(t) : t.clone().iuxor(this)
                        }, s.prototype.inotn = function(t) {
                            n("number" === typeof t && t >= 0);
                            var e = 0 | Math.ceil(t / 26),
                                r = t % 26;
                            this._expand(e), r > 0 && e--;
                            for (var i = 0; i < e; i++) this.words[i] = 67108863 & ~this.words[i];
                            return r > 0 && (this.words[i] = ~this.words[i] & 67108863 >> 26 - r), this._strip()
                        }, s.prototype.notn = function(t) {
                            return this.clone().inotn(t)
                        }, s.prototype.setn = function(t, e) {
                            n("number" === typeof t && t >= 0);
                            var r = t / 26 | 0,
                                i = t % 26;
                            return this._expand(r + 1), this.words[r] = e ? this.words[r] | 1 << i : this.words[r] & ~(1 << i), this._strip()
                        }, s.prototype.iadd = function(t) {
                            var e, r, n;
                            if (0 !== this.negative && 0 === t.negative) return this.negative = 0, e = this.isub(t), this.negative ^= 1, this._normSign();
                            if (0 === this.negative && 0 !== t.negative) return t.negative = 0, e = this.isub(t), t.negative = 1, e._normSign();
                            this.length > t.length ? (r = this, n = t) : (r = t, n = this);
                            for (var i = 0, s = 0; s < n.length; s++) e = (0 | r.words[s]) + (0 | n.words[s]) + i, this.words[s] = 67108863 & e, i = e >>> 26;
                            for (; 0 !== i && s < r.length; s++) e = (0 | r.words[s]) + i, this.words[s] = 67108863 & e, i = e >>> 26;
                            if (this.length = r.length, 0 !== i) this.words[this.length] = i, this.length++;
                            else if (r !== this)
                                for (; s < r.length; s++) this.words[s] = r.words[s];
                            return this
                        }, s.prototype.add = function(t) {
                            var e;
                            return 0 !== t.negative && 0 === this.negative ? (t.negative = 0, e = this.sub(t), t.negative ^= 1, e) : 0 === t.negative && 0 !== this.negative ? (this.negative = 0, e = t.sub(this), this.negative = 1, e) : this.length > t.length ? this.clone().iadd(t) : t.clone().iadd(this)
                        }, s.prototype.isub = function(t) {
                            if (0 !== t.negative) {
                                t.negative = 0;
                                var e = this.iadd(t);
                                return t.negative = 1, e._normSign()
                            }
                            if (0 !== this.negative) return this.negative = 0, this.iadd(t), this.negative = 1, this._normSign();
                            var r, n, i = this.cmp(t);
                            if (0 === i) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
                            i > 0 ? (r = this, n = t) : (r = t, n = this);
                            for (var s = 0, o = 0; o < n.length; o++) e = (0 | r.words[o]) - (0 | n.words[o]) + s, s = e >> 26, this.words[o] = 67108863 & e;
                            for (; 0 !== s && o < r.length; o++) e = (0 | r.words[o]) + s, s = e >> 26, this.words[o] = 67108863 & e;
                            if (0 === s && o < r.length && r !== this)
                                for (; o < r.length; o++) this.words[o] = r.words[o];
                            return this.length = Math.max(this.length, o), r !== this && (this.negative = 1), this._strip()
                        }, s.prototype.sub = function(t) {
                            return this.clone().isub(t)
                        };
                        var m = function(t, e, r) {
                            var n, i, s, o = t.words,
                                a = e.words,
                                u = r.words,
                                c = 0,
                                h = 0 | o[0],
                                l = 8191 & h,
                                d = h >>> 13,
                                f = 0 | o[1],
                                p = 8191 & f,
                                g = f >>> 13,
                                v = 0 | o[2],
                                m = 8191 & v,
                                y = v >>> 13,
                                w = 0 | o[3],
                                b = 8191 & w,
                                C = w >>> 13,
                                A = 0 | o[4],
                                B = 8191 & A,
                                F = A >>> 13,
                                E = 0 | o[5],
                                x = 8191 & E,
                                _ = E >>> 13,
                                k = 0 | o[6],
                                M = 8191 & k,
                                D = k >>> 13,
                                S = 0 | o[7],
                                I = 8191 & S,
                                N = S >>> 13,
                                T = 0 | o[8],
                                P = 8191 & T,
                                O = T >>> 13,
                                U = 0 | o[9],
                                j = 8191 & U,
                                W = U >>> 13,
                                R = 0 | a[0],
                                L = 8191 & R,
                                q = R >>> 13,
                                K = 0 | a[1],
                                H = 8191 & K,
                                V = K >>> 13,
                                J = 0 | a[2],
                                z = 8191 & J,
                                G = J >>> 13,
                                $ = 0 | a[3],
                                Z = 8191 & $,
                                Y = $ >>> 13,
                                X = 0 | a[4],
                                Q = 8191 & X,
                                tt = X >>> 13,
                                et = 0 | a[5],
                                rt = 8191 & et,
                                nt = et >>> 13,
                                it = 0 | a[6],
                                st = 8191 & it,
                                ot = it >>> 13,
                                at = 0 | a[7],
                                ut = 8191 & at,
                                ct = at >>> 13,
                                ht = 0 | a[8],
                                lt = 8191 & ht,
                                dt = ht >>> 13,
                                ft = 0 | a[9],
                                pt = 8191 & ft,
                                gt = ft >>> 13;
                            r.negative = t.negative ^ e.negative, r.length = 19, n = Math.imul(l, L), i = Math.imul(l, q), i = i + Math.imul(d, L) | 0, s = Math.imul(d, q);
                            var vt = (c + n | 0) + ((8191 & i) << 13) | 0;
                            c = (s + (i >>> 13) | 0) + (vt >>> 26) | 0, vt &= 67108863, n = Math.imul(p, L), i = Math.imul(p, q), i = i + Math.imul(g, L) | 0, s = Math.imul(g, q), n = n + Math.imul(l, H) | 0, i = i + Math.imul(l, V) | 0, i = i + Math.imul(d, H) | 0, s = s + Math.imul(d, V) | 0;
                            var mt = (c + n | 0) + ((8191 & i) << 13) | 0;
                            c = (s + (i >>> 13) | 0) + (mt >>> 26) | 0, mt &= 67108863, n = Math.imul(m, L), i = Math.imul(m, q), i = i + Math.imul(y, L) | 0, s = Math.imul(y, q), n = n + Math.imul(p, H) | 0, i = i + Math.imul(p, V) | 0, i = i + Math.imul(g, H) | 0, s = s + Math.imul(g, V) | 0, n = n + Math.imul(l, z) | 0, i = i + Math.imul(l, G) | 0, i = i + Math.imul(d, z) | 0, s = s + Math.imul(d, G) | 0;
                            var yt = (c + n | 0) + ((8191 & i) << 13) | 0;
                            c = (s + (i >>> 13) | 0) + (yt >>> 26) | 0, yt &= 67108863, n = Math.imul(b, L), i = Math.imul(b, q), i = i + Math.imul(C, L) | 0, s = Math.imul(C, q), n = n + Math.imul(m, H) | 0, i = i + Math.imul(m, V) | 0, i = i + Math.imul(y, H) | 0, s = s + Math.imul(y, V) | 0, n = n + Math.imul(p, z) | 0, i = i + Math.imul(p, G) | 0, i = i + Math.imul(g, z) | 0, s = s + Math.imul(g, G) | 0, n = n + Math.imul(l, Z) | 0, i = i + Math.imul(l, Y) | 0, i = i + Math.imul(d, Z) | 0, s = s + Math.imul(d, Y) | 0;
                            var wt = (c + n | 0) + ((8191 & i) << 13) | 0;
                            c = (s + (i >>> 13) | 0) + (wt >>> 26) | 0, wt &= 67108863, n = Math.imul(B, L), i = Math.imul(B, q), i = i + Math.imul(F, L) | 0, s = Math.imul(F, q), n = n + Math.imul(b, H) | 0, i = i + Math.imul(b, V) | 0, i = i + Math.imul(C, H) | 0, s = s + Math.imul(C, V) | 0, n = n + Math.imul(m, z) | 0, i = i + Math.imul(m, G) | 0, i = i + Math.imul(y, z) | 0, s = s + Math.imul(y, G) | 0, n = n + Math.imul(p, Z) | 0, i = i + Math.imul(p, Y) | 0, i = i + Math.imul(g, Z) | 0, s = s + Math.imul(g, Y) | 0, n = n + Math.imul(l, Q) | 0, i = i + Math.imul(l, tt) | 0, i = i + Math.imul(d, Q) | 0, s = s + Math.imul(d, tt) | 0;
                            var bt = (c + n | 0) + ((8191 & i) << 13) | 0;
                            c = (s + (i >>> 13) | 0) + (bt >>> 26) | 0, bt &= 67108863, n = Math.imul(x, L), i = Math.imul(x, q), i = i + Math.imul(_, L) | 0, s = Math.imul(_, q), n = n + Math.imul(B, H) | 0, i = i + Math.imul(B, V) | 0, i = i + Math.imul(F, H) | 0, s = s + Math.imul(F, V) | 0, n = n + Math.imul(b, z) | 0, i = i + Math.imul(b, G) | 0, i = i + Math.imul(C, z) | 0, s = s + Math.imul(C, G) | 0, n = n + Math.imul(m, Z) | 0, i = i + Math.imul(m, Y) | 0, i = i + Math.imul(y, Z) | 0, s = s + Math.imul(y, Y) | 0, n = n + Math.imul(p, Q) | 0, i = i + Math.imul(p, tt) | 0, i = i + Math.imul(g, Q) | 0, s = s + Math.imul(g, tt) | 0, n = n + Math.imul(l, rt) | 0, i = i + Math.imul(l, nt) | 0, i = i + Math.imul(d, rt) | 0, s = s + Math.imul(d, nt) | 0;
                            var Ct = (c + n | 0) + ((8191 & i) << 13) | 0;
                            c = (s + (i >>> 13) | 0) + (Ct >>> 26) | 0, Ct &= 67108863, n = Math.imul(M, L), i = Math.imul(M, q), i = i + Math.imul(D, L) | 0, s = Math.imul(D, q), n = n + Math.imul(x, H) | 0, i = i + Math.imul(x, V) | 0, i = i + Math.imul(_, H) | 0, s = s + Math.imul(_, V) | 0, n = n + Math.imul(B, z) | 0, i = i + Math.imul(B, G) | 0, i = i + Math.imul(F, z) | 0, s = s + Math.imul(F, G) | 0, n = n + Math.imul(b, Z) | 0, i = i + Math.imul(b, Y) | 0, i = i + Math.imul(C, Z) | 0, s = s + Math.imul(C, Y) | 0, n = n + Math.imul(m, Q) | 0, i = i + Math.imul(m, tt) | 0, i = i + Math.imul(y, Q) | 0, s = s + Math.imul(y, tt) | 0, n = n + Math.imul(p, rt) | 0, i = i + Math.imul(p, nt) | 0, i = i + Math.imul(g, rt) | 0, s = s + Math.imul(g, nt) | 0, n = n + Math.imul(l, st) | 0, i = i + Math.imul(l, ot) | 0, i = i + Math.imul(d, st) | 0, s = s + Math.imul(d, ot) | 0;
                            var At = (c + n | 0) + ((8191 & i) << 13) | 0;
                            c = (s + (i >>> 13) | 0) + (At >>> 26) | 0, At &= 67108863, n = Math.imul(I, L), i = Math.imul(I, q), i = i + Math.imul(N, L) | 0, s = Math.imul(N, q), n = n + Math.imul(M, H) | 0, i = i + Math.imul(M, V) | 0, i = i + Math.imul(D, H) | 0, s = s + Math.imul(D, V) | 0, n = n + Math.imul(x, z) | 0, i = i + Math.imul(x, G) | 0, i = i + Math.imul(_, z) | 0, s = s + Math.imul(_, G) | 0, n = n + Math.imul(B, Z) | 0, i = i + Math.imul(B, Y) | 0, i = i + Math.imul(F, Z) | 0, s = s + Math.imul(F, Y) | 0, n = n + Math.imul(b, Q) | 0, i = i + Math.imul(b, tt) | 0, i = i + Math.imul(C, Q) | 0, s = s + Math.imul(C, tt) | 0, n = n + Math.imul(m, rt) | 0, i = i + Math.imul(m, nt) | 0, i = i + Math.imul(y, rt) | 0, s = s + Math.imul(y, nt) | 0, n = n + Math.imul(p, st) | 0, i = i + Math.imul(p, ot) | 0, i = i + Math.imul(g, st) | 0, s = s + Math.imul(g, ot) | 0, n = n + Math.imul(l, ut) | 0, i = i + Math.imul(l, ct) | 0, i = i + Math.imul(d, ut) | 0, s = s + Math.imul(d, ct) | 0;
                            var Bt = (c + n | 0) + ((8191 & i) << 13) | 0;
                            c = (s + (i >>> 13) | 0) + (Bt >>> 26) | 0, Bt &= 67108863, n = Math.imul(P, L), i = Math.imul(P, q), i = i + Math.imul(O, L) | 0, s = Math.imul(O, q), n = n + Math.imul(I, H) | 0, i = i + Math.imul(I, V) | 0, i = i + Math.imul(N, H) | 0, s = s + Math.imul(N, V) | 0, n = n + Math.imul(M, z) | 0, i = i + Math.imul(M, G) | 0, i = i + Math.imul(D, z) | 0, s = s + Math.imul(D, G) | 0, n = n + Math.imul(x, Z) | 0, i = i + Math.imul(x, Y) | 0, i = i + Math.imul(_, Z) | 0, s = s + Math.imul(_, Y) | 0, n = n + Math.imul(B, Q) | 0, i = i + Math.imul(B, tt) | 0, i = i + Math.imul(F, Q) | 0, s = s + Math.imul(F, tt) | 0, n = n + Math.imul(b, rt) | 0, i = i + Math.imul(b, nt) | 0, i = i + Math.imul(C, rt) | 0, s = s + Math.imul(C, nt) | 0, n = n + Math.imul(m, st) | 0, i = i + Math.imul(m, ot) | 0, i = i + Math.imul(y, st) | 0, s = s + Math.imul(y, ot) | 0, n = n + Math.imul(p, ut) | 0, i = i + Math.imul(p, ct) | 0, i = i + Math.imul(g, ut) | 0, s = s + Math.imul(g, ct) | 0, n = n + Math.imul(l, lt) | 0, i = i + Math.imul(l, dt) | 0, i = i + Math.imul(d, lt) | 0, s = s + Math.imul(d, dt) | 0;
                            var Ft = (c + n | 0) + ((8191 & i) << 13) | 0;
                            c = (s + (i >>> 13) | 0) + (Ft >>> 26) | 0, Ft &= 67108863, n = Math.imul(j, L), i = Math.imul(j, q), i = i + Math.imul(W, L) | 0, s = Math.imul(W, q), n = n + Math.imul(P, H) | 0, i = i + Math.imul(P, V) | 0, i = i + Math.imul(O, H) | 0, s = s + Math.imul(O, V) | 0, n = n + Math.imul(I, z) | 0, i = i + Math.imul(I, G) | 0, i = i + Math.imul(N, z) | 0, s = s + Math.imul(N, G) | 0, n = n + Math.imul(M, Z) | 0, i = i + Math.imul(M, Y) | 0, i = i + Math.imul(D, Z) | 0, s = s + Math.imul(D, Y) | 0, n = n + Math.imul(x, Q) | 0, i = i + Math.imul(x, tt) | 0, i = i + Math.imul(_, Q) | 0, s = s + Math.imul(_, tt) | 0, n = n + Math.imul(B, rt) | 0, i = i + Math.imul(B, nt) | 0, i = i + Math.imul(F, rt) | 0, s = s + Math.imul(F, nt) | 0, n = n + Math.imul(b, st) | 0, i = i + Math.imul(b, ot) | 0, i = i + Math.imul(C, st) | 0, s = s + Math.imul(C, ot) | 0, n = n + Math.imul(m, ut) | 0, i = i + Math.imul(m, ct) | 0, i = i + Math.imul(y, ut) | 0, s = s + Math.imul(y, ct) | 0, n = n + Math.imul(p, lt) | 0, i = i + Math.imul(p, dt) | 0, i = i + Math.imul(g, lt) | 0, s = s + Math.imul(g, dt) | 0, n = n + Math.imul(l, pt) | 0, i = i + Math.imul(l, gt) | 0, i = i + Math.imul(d, pt) | 0, s = s + Math.imul(d, gt) | 0;
                            var Et = (c + n | 0) + ((8191 & i) << 13) | 0;
                            c = (s + (i >>> 13) | 0) + (Et >>> 26) | 0, Et &= 67108863, n = Math.imul(j, H), i = Math.imul(j, V), i = i + Math.imul(W, H) | 0, s = Math.imul(W, V), n = n + Math.imul(P, z) | 0, i = i + Math.imul(P, G) | 0, i = i + Math.imul(O, z) | 0, s = s + Math.imul(O, G) | 0, n = n + Math.imul(I, Z) | 0, i = i + Math.imul(I, Y) | 0, i = i + Math.imul(N, Z) | 0, s = s + Math.imul(N, Y) | 0, n = n + Math.imul(M, Q) | 0, i = i + Math.imul(M, tt) | 0, i = i + Math.imul(D, Q) | 0, s = s + Math.imul(D, tt) | 0, n = n + Math.imul(x, rt) | 0, i = i + Math.imul(x, nt) | 0, i = i + Math.imul(_, rt) | 0, s = s + Math.imul(_, nt) | 0, n = n + Math.imul(B, st) | 0, i = i + Math.imul(B, ot) | 0, i = i + Math.imul(F, st) | 0, s = s + Math.imul(F, ot) | 0, n = n + Math.imul(b, ut) | 0, i = i + Math.imul(b, ct) | 0, i = i + Math.imul(C, ut) | 0, s = s + Math.imul(C, ct) | 0, n = n + Math.imul(m, lt) | 0, i = i + Math.imul(m, dt) | 0, i = i + Math.imul(y, lt) | 0, s = s + Math.imul(y, dt) | 0, n = n + Math.imul(p, pt) | 0, i = i + Math.imul(p, gt) | 0, i = i + Math.imul(g, pt) | 0, s = s + Math.imul(g, gt) | 0;
                            var xt = (c + n | 0) + ((8191 & i) << 13) | 0;
                            c = (s + (i >>> 13) | 0) + (xt >>> 26) | 0, xt &= 67108863, n = Math.imul(j, z), i = Math.imul(j, G), i = i + Math.imul(W, z) | 0, s = Math.imul(W, G), n = n + Math.imul(P, Z) | 0, i = i + Math.imul(P, Y) | 0, i = i + Math.imul(O, Z) | 0, s = s + Math.imul(O, Y) | 0, n = n + Math.imul(I, Q) | 0, i = i + Math.imul(I, tt) | 0, i = i + Math.imul(N, Q) | 0, s = s + Math.imul(N, tt) | 0, n = n + Math.imul(M, rt) | 0, i = i + Math.imul(M, nt) | 0, i = i + Math.imul(D, rt) | 0, s = s + Math.imul(D, nt) | 0, n = n + Math.imul(x, st) | 0, i = i + Math.imul(x, ot) | 0, i = i + Math.imul(_, st) | 0, s = s + Math.imul(_, ot) | 0, n = n + Math.imul(B, ut) | 0, i = i + Math.imul(B, ct) | 0, i = i + Math.imul(F, ut) | 0, s = s + Math.imul(F, ct) | 0, n = n + Math.imul(b, lt) | 0, i = i + Math.imul(b, dt) | 0, i = i + Math.imul(C, lt) | 0, s = s + Math.imul(C, dt) | 0, n = n + Math.imul(m, pt) | 0, i = i + Math.imul(m, gt) | 0, i = i + Math.imul(y, pt) | 0, s = s + Math.imul(y, gt) | 0;
                            var _t = (c + n | 0) + ((8191 & i) << 13) | 0;
                            c = (s + (i >>> 13) | 0) + (_t >>> 26) | 0, _t &= 67108863, n = Math.imul(j, Z), i = Math.imul(j, Y), i = i + Math.imul(W, Z) | 0, s = Math.imul(W, Y), n = n + Math.imul(P, Q) | 0, i = i + Math.imul(P, tt) | 0, i = i + Math.imul(O, Q) | 0, s = s + Math.imul(O, tt) | 0, n = n + Math.imul(I, rt) | 0, i = i + Math.imul(I, nt) | 0, i = i + Math.imul(N, rt) | 0, s = s + Math.imul(N, nt) | 0, n = n + Math.imul(M, st) | 0, i = i + Math.imul(M, ot) | 0, i = i + Math.imul(D, st) | 0, s = s + Math.imul(D, ot) | 0, n = n + Math.imul(x, ut) | 0, i = i + Math.imul(x, ct) | 0, i = i + Math.imul(_, ut) | 0, s = s + Math.imul(_, ct) | 0, n = n + Math.imul(B, lt) | 0, i = i + Math.imul(B, dt) | 0, i = i + Math.imul(F, lt) | 0, s = s + Math.imul(F, dt) | 0, n = n + Math.imul(b, pt) | 0, i = i + Math.imul(b, gt) | 0, i = i + Math.imul(C, pt) | 0, s = s + Math.imul(C, gt) | 0;
                            var kt = (c + n | 0) + ((8191 & i) << 13) | 0;
                            c = (s + (i >>> 13) | 0) + (kt >>> 26) | 0, kt &= 67108863, n = Math.imul(j, Q), i = Math.imul(j, tt), i = i + Math.imul(W, Q) | 0, s = Math.imul(W, tt), n = n + Math.imul(P, rt) | 0, i = i + Math.imul(P, nt) | 0, i = i + Math.imul(O, rt) | 0, s = s + Math.imul(O, nt) | 0, n = n + Math.imul(I, st) | 0, i = i + Math.imul(I, ot) | 0, i = i + Math.imul(N, st) | 0, s = s + Math.imul(N, ot) | 0, n = n + Math.imul(M, ut) | 0, i = i + Math.imul(M, ct) | 0, i = i + Math.imul(D, ut) | 0, s = s + Math.imul(D, ct) | 0, n = n + Math.imul(x, lt) | 0, i = i + Math.imul(x, dt) | 0, i = i + Math.imul(_, lt) | 0, s = s + Math.imul(_, dt) | 0, n = n + Math.imul(B, pt) | 0, i = i + Math.imul(B, gt) | 0, i = i + Math.imul(F, pt) | 0, s = s + Math.imul(F, gt) | 0;
                            var Mt = (c + n | 0) + ((8191 & i) << 13) | 0;
                            c = (s + (i >>> 13) | 0) + (Mt >>> 26) | 0, Mt &= 67108863, n = Math.imul(j, rt), i = Math.imul(j, nt), i = i + Math.imul(W, rt) | 0, s = Math.imul(W, nt), n = n + Math.imul(P, st) | 0, i = i + Math.imul(P, ot) | 0, i = i + Math.imul(O, st) | 0, s = s + Math.imul(O, ot) | 0, n = n + Math.imul(I, ut) | 0, i = i + Math.imul(I, ct) | 0, i = i + Math.imul(N, ut) | 0, s = s + Math.imul(N, ct) | 0, n = n + Math.imul(M, lt) | 0, i = i + Math.imul(M, dt) | 0, i = i + Math.imul(D, lt) | 0, s = s + Math.imul(D, dt) | 0, n = n + Math.imul(x, pt) | 0, i = i + Math.imul(x, gt) | 0, i = i + Math.imul(_, pt) | 0, s = s + Math.imul(_, gt) | 0;
                            var Dt = (c + n | 0) + ((8191 & i) << 13) | 0;
                            c = (s + (i >>> 13) | 0) + (Dt >>> 26) | 0, Dt &= 67108863, n = Math.imul(j, st), i = Math.imul(j, ot), i = i + Math.imul(W, st) | 0, s = Math.imul(W, ot), n = n + Math.imul(P, ut) | 0, i = i + Math.imul(P, ct) | 0, i = i + Math.imul(O, ut) | 0, s = s + Math.imul(O, ct) | 0, n = n + Math.imul(I, lt) | 0, i = i + Math.imul(I, dt) | 0, i = i + Math.imul(N, lt) | 0, s = s + Math.imul(N, dt) | 0, n = n + Math.imul(M, pt) | 0, i = i + Math.imul(M, gt) | 0, i = i + Math.imul(D, pt) | 0, s = s + Math.imul(D, gt) | 0;
                            var St = (c + n | 0) + ((8191 & i) << 13) | 0;
                            c = (s + (i >>> 13) | 0) + (St >>> 26) | 0, St &= 67108863, n = Math.imul(j, ut), i = Math.imul(j, ct), i = i + Math.imul(W, ut) | 0, s = Math.imul(W, ct), n = n + Math.imul(P, lt) | 0, i = i + Math.imul(P, dt) | 0, i = i + Math.imul(O, lt) | 0, s = s + Math.imul(O, dt) | 0, n = n + Math.imul(I, pt) | 0, i = i + Math.imul(I, gt) | 0, i = i + Math.imul(N, pt) | 0, s = s + Math.imul(N, gt) | 0;
                            var It = (c + n | 0) + ((8191 & i) << 13) | 0;
                            c = (s + (i >>> 13) | 0) + (It >>> 26) | 0, It &= 67108863, n = Math.imul(j, lt), i = Math.imul(j, dt), i = i + Math.imul(W, lt) | 0, s = Math.imul(W, dt), n = n + Math.imul(P, pt) | 0, i = i + Math.imul(P, gt) | 0, i = i + Math.imul(O, pt) | 0, s = s + Math.imul(O, gt) | 0;
                            var Nt = (c + n | 0) + ((8191 & i) << 13) | 0;
                            c = (s + (i >>> 13) | 0) + (Nt >>> 26) | 0, Nt &= 67108863, n = Math.imul(j, pt), i = Math.imul(j, gt), i = i + Math.imul(W, pt) | 0, s = Math.imul(W, gt);
                            var Tt = (c + n | 0) + ((8191 & i) << 13) | 0;
                            return c = (s + (i >>> 13) | 0) + (Tt >>> 26) | 0, Tt &= 67108863, u[0] = vt, u[1] = mt, u[2] = yt, u[3] = wt, u[4] = bt, u[5] = Ct, u[6] = At, u[7] = Bt, u[8] = Ft, u[9] = Et, u[10] = xt, u[11] = _t, u[12] = kt, u[13] = Mt, u[14] = Dt, u[15] = St, u[16] = It, u[17] = Nt, u[18] = Tt, 0 !== c && (u[19] = c, r.length++), r
                        };

                        function y(t, e, r) {
                            r.negative = e.negative ^ t.negative, r.length = t.length + e.length;
                            for (var n = 0, i = 0, s = 0; s < r.length - 1; s++) {
                                var o = i;
                                i = 0;
                                for (var a = 67108863 & n, u = Math.min(s, e.length - 1), c = Math.max(0, s - t.length + 1); c <= u; c++) {
                                    var h = s - c,
                                        l = 0 | t.words[h],
                                        d = 0 | e.words[c],
                                        f = l * d,
                                        p = 67108863 & f;
                                    o = o + (f / 67108864 | 0) | 0, p = p + a | 0, a = 67108863 & p, o = o + (p >>> 26) | 0, i += o >>> 26, o &= 67108863
                                }
                                r.words[s] = a, n = o, o = i
                            }
                            return 0 !== n ? r.words[s] = n : r.length--, r._strip()
                        }

                        function w(t, e, r) {
                            return y(t, e, r)
                        }

                        function b(t, e) {
                            this.x = t, this.y = e
                        }
                        Math.imul || (m = v), s.prototype.mulTo = function(t, e) {
                            var r, n = this.length + t.length;
                            return r = 10 === this.length && 10 === t.length ? m(this, t, e) : n < 63 ? v(this, t, e) : n < 1024 ? y(this, t, e) : w(this, t, e), r
                        }, b.prototype.makeRBT = function(t) {
                            for (var e = new Array(t), r = s.prototype._countBits(t) - 1, n = 0; n < t; n++) e[n] = this.revBin(n, r, t);
                            return e
                        }, b.prototype.revBin = function(t, e, r) {
                            if (0 === t || t === r - 1) return t;
                            for (var n = 0, i = 0; i < e; i++) n |= (1 & t) << e - i - 1, t >>= 1;
                            return n
                        }, b.prototype.permute = function(t, e, r, n, i, s) {
                            for (var o = 0; o < s; o++) n[o] = e[t[o]], i[o] = r[t[o]]
                        }, b.prototype.transform = function(t, e, r, n, i, s) {
                            this.permute(s, t, e, r, n, i);
                            for (var o = 1; o < i; o <<= 1)
                                for (var a = o << 1, u = Math.cos(2 * Math.PI / a), c = Math.sin(2 * Math.PI / a), h = 0; h < i; h += a)
                                    for (var l = u, d = c, f = 0; f < o; f++) {
                                        var p = r[h + f],
                                            g = n[h + f],
                                            v = r[h + f + o],
                                            m = n[h + f + o],
                                            y = l * v - d * m;
                                        m = l * m + d * v, v = y, r[h + f] = p + v, n[h + f] = g + m, r[h + f + o] = p - v, n[h + f + o] = g - m, f !== a && (y = u * l - c * d, d = u * d + c * l, l = y)
                                    }
                        }, b.prototype.guessLen13b = function(t, e) {
                            var r = 1 | Math.max(e, t),
                                n = 1 & r,
                                i = 0;
                            for (r = r / 2 | 0; r; r >>>= 1) i++;
                            return 1 << i + 1 + n
                        }, b.prototype.conjugate = function(t, e, r) {
                            if (!(r <= 1))
                                for (var n = 0; n < r / 2; n++) {
                                    var i = t[n];
                                    t[n] = t[r - n - 1], t[r - n - 1] = i, i = e[n], e[n] = -e[r - n - 1], e[r - n - 1] = -i
                                }
                        }, b.prototype.normalize13b = function(t, e) {
                            for (var r = 0, n = 0; n < e / 2; n++) {
                                var i = 8192 * Math.round(t[2 * n + 1] / e) + Math.round(t[2 * n] / e) + r;
                                t[n] = 67108863 & i, r = i < 67108864 ? 0 : i / 67108864 | 0
                            }
                            return t
                        }, b.prototype.convert13b = function(t, e, r, i) {
                            for (var s = 0, o = 0; o < e; o++) s += 0 | t[o], r[2 * o] = 8191 & s, s >>>= 13, r[2 * o + 1] = 8191 & s, s >>>= 13;
                            for (o = 2 * e; o < i; ++o) r[o] = 0;
                            n(0 === s), n(0 === (-8192 & s))
                        }, b.prototype.stub = function(t) {
                            for (var e = new Array(t), r = 0; r < t; r++) e[r] = 0;
                            return e
                        }, b.prototype.mulp = function(t, e, r) {
                            var n = 2 * this.guessLen13b(t.length, e.length),
                                i = this.makeRBT(n),
                                s = this.stub(n),
                                o = new Array(n),
                                a = new Array(n),
                                u = new Array(n),
                                c = new Array(n),
                                h = new Array(n),
                                l = new Array(n),
                                d = r.words;
                            d.length = n, this.convert13b(t.words, t.length, o, n), this.convert13b(e.words, e.length, c, n), this.transform(o, s, a, u, n, i), this.transform(c, s, h, l, n, i);
                            for (var f = 0; f < n; f++) {
                                var p = a[f] * h[f] - u[f] * l[f];
                                u[f] = a[f] * l[f] + u[f] * h[f], a[f] = p
                            }
                            return this.conjugate(a, u, n), this.transform(a, u, d, s, n, i), this.conjugate(d, s, n), this.normalize13b(d, n), r.negative = t.negative ^ e.negative, r.length = t.length + e.length, r._strip()
                        }, s.prototype.mul = function(t) {
                            var e = new s(null);
                            return e.words = new Array(this.length + t.length), this.mulTo(t, e)
                        }, s.prototype.mulf = function(t) {
                            var e = new s(null);
                            return e.words = new Array(this.length + t.length), w(this, t, e)
                        }, s.prototype.imul = function(t) {
                            return this.clone().mulTo(t, this)
                        }, s.prototype.imuln = function(t) {
                            var e = t < 0;
                            e && (t = -t), n("number" === typeof t), n(t < 67108864);
                            for (var r = 0, i = 0; i < this.length; i++) {
                                var s = (0 | this.words[i]) * t,
                                    o = (67108863 & s) + (67108863 & r);
                                r >>= 26, r += s / 67108864 | 0, r += o >>> 26, this.words[i] = 67108863 & o
                            }
                            return 0 !== r && (this.words[i] = r, this.length++), e ? this.ineg() : this
                        }, s.prototype.muln = function(t) {
                            return this.clone().imuln(t)
                        }, s.prototype.sqr = function() {
                            return this.mul(this)
                        }, s.prototype.isqr = function() {
                            return this.imul(this.clone())
                        }, s.prototype.pow = function(t) {
                            var e = g(t);
                            if (0 === e.length) return new s(1);
                            for (var r = this, n = 0; n < e.length; n++, r = r.sqr())
                                if (0 !== e[n]) break;
                            if (++n < e.length)
                                for (var i = r.sqr(); n < e.length; n++, i = i.sqr()) 0 !== e[n] && (r = r.mul(i));
                            return r
                        }, s.prototype.iushln = function(t) {
                            n("number" === typeof t && t >= 0);
                            var e, r = t % 26,
                                i = (t - r) / 26,
                                s = 67108863 >>> 26 - r << 26 - r;
                            if (0 !== r) {
                                var o = 0;
                                for (e = 0; e < this.length; e++) {
                                    var a = this.words[e] & s,
                                        u = (0 | this.words[e]) - a << r;
                                    this.words[e] = u | o, o = a >>> 26 - r
                                }
                                o && (this.words[e] = o, this.length++)
                            }
                            if (0 !== i) {
                                for (e = this.length - 1; e >= 0; e--) this.words[e + i] = this.words[e];
                                for (e = 0; e < i; e++) this.words[e] = 0;
                                this.length += i
                            }
                            return this._strip()
                        }, s.prototype.ishln = function(t) {
                            return n(0 === this.negative), this.iushln(t)
                        }, s.prototype.iushrn = function(t, e, r) {
                            var i;
                            n("number" === typeof t && t >= 0), i = e ? (e - e % 26) / 26 : 0;
                            var s = t % 26,
                                o = Math.min((t - s) / 26, this.length),
                                a = 67108863 ^ 67108863 >>> s << s,
                                u = r;
                            if (i -= o, i = Math.max(0, i), u) {
                                for (var c = 0; c < o; c++) u.words[c] = this.words[c];
                                u.length = o
                            }
                            if (0 === o);
                            else if (this.length > o)
                                for (this.length -= o, c = 0; c < this.length; c++) this.words[c] = this.words[c + o];
                            else this.words[0] = 0, this.length = 1;
                            var h = 0;
                            for (c = this.length - 1; c >= 0 && (0 !== h || c >= i); c--) {
                                var l = 0 | this.words[c];
                                this.words[c] = h << 26 - s | l >>> s, h = l & a
                            }
                            return u && 0 !== h && (u.words[u.length++] = h), 0 === this.length && (this.words[0] = 0, this.length = 1), this._strip()
                        }, s.prototype.ishrn = function(t, e, r) {
                            return n(0 === this.negative), this.iushrn(t, e, r)
                        }, s.prototype.shln = function(t) {
                            return this.clone().ishln(t)
                        }, s.prototype.ushln = function(t) {
                            return this.clone().iushln(t)
                        }, s.prototype.shrn = function(t) {
                            return this.clone().ishrn(t)
                        }, s.prototype.ushrn = function(t) {
                            return this.clone().iushrn(t)
                        }, s.prototype.testn = function(t) {
                            n("number" === typeof t && t >= 0);
                            var e = t % 26,
                                r = (t - e) / 26,
                                i = 1 << e;
                            if (this.length <= r) return !1;
                            var s = this.words[r];
                            return !!(s & i)
                        }, s.prototype.imaskn = function(t) {
                            n("number" === typeof t && t >= 0);
                            var e = t % 26,
                                r = (t - e) / 26;
                            if (n(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r) return this;
                            if (0 !== e && r++, this.length = Math.min(r, this.length), 0 !== e) {
                                var i = 67108863 ^ 67108863 >>> e << e;
                                this.words[this.length - 1] &= i
                            }
                            return this._strip()
                        }, s.prototype.maskn = function(t) {
                            return this.clone().imaskn(t)
                        }, s.prototype.iaddn = function(t) {
                            return n("number" === typeof t), n(t < 67108864), t < 0 ? this.isubn(-t) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) <= t ? (this.words[0] = t - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(t), this.negative = 1, this) : this._iaddn(t)
                        }, s.prototype._iaddn = function(t) {
                            this.words[0] += t;
                            for (var e = 0; e < this.length && this.words[e] >= 67108864; e++) this.words[e] -= 67108864, e === this.length - 1 ? this.words[e + 1] = 1 : this.words[e + 1]++;
                            return this.length = Math.max(this.length, e + 1), this
                        }, s.prototype.isubn = function(t) {
                            if (n("number" === typeof t), n(t < 67108864), t < 0) return this.iaddn(-t);
                            if (0 !== this.negative) return this.negative = 0, this.iaddn(t), this.negative = 1, this;
                            if (this.words[0] -= t, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
                            else
                                for (var e = 0; e < this.length && this.words[e] < 0; e++) this.words[e] += 67108864, this.words[e + 1] -= 1;
                            return this._strip()
                        }, s.prototype.addn = function(t) {
                            return this.clone().iaddn(t)
                        }, s.prototype.subn = function(t) {
                            return this.clone().isubn(t)
                        }, s.prototype.iabs = function() {
                            return this.negative = 0, this
                        }, s.prototype.abs = function() {
                            return this.clone().iabs()
                        }, s.prototype._ishlnsubmul = function(t, e, r) {
                            var i, s, o = t.length + r;
                            this._expand(o);
                            var a = 0;
                            for (i = 0; i < t.length; i++) {
                                s = (0 | this.words[i + r]) + a;
                                var u = (0 | t.words[i]) * e;
                                s -= 67108863 & u, a = (s >> 26) - (u / 67108864 | 0), this.words[i + r] = 67108863 & s
                            }
                            for (; i < this.length - r; i++) s = (0 | this.words[i + r]) + a, a = s >> 26, this.words[i + r] = 67108863 & s;
                            if (0 === a) return this._strip();
                            for (n(-1 === a), a = 0, i = 0; i < this.length; i++) s = -(0 | this.words[i]) + a, a = s >> 26, this.words[i] = 67108863 & s;
                            return this.negative = 1, this._strip()
                        }, s.prototype._wordDiv = function(t, e) {
                            var r = this.length - t.length,
                                n = this.clone(),
                                i = t,
                                o = 0 | i.words[i.length - 1],
                                a = this._countBits(o);
                            r = 26 - a, 0 !== r && (i = i.ushln(r), n.iushln(r), o = 0 | i.words[i.length - 1]);
                            var u, c = n.length - i.length;
                            if ("mod" !== e) {
                                u = new s(null), u.length = c + 1, u.words = new Array(u.length);
                                for (var h = 0; h < u.length; h++) u.words[h] = 0
                            }
                            var l = n.clone()._ishlnsubmul(i, 1, c);
                            0 === l.negative && (n = l, u && (u.words[c] = 1));
                            for (var d = c - 1; d >= 0; d--) {
                                var f = 67108864 * (0 | n.words[i.length + d]) + (0 | n.words[i.length + d - 1]);
                                f = Math.min(f / o | 0, 67108863), n._ishlnsubmul(i, f, d);
                                while (0 !== n.negative) f--, n.negative = 0, n._ishlnsubmul(i, 1, d), n.isZero() || (n.negative ^= 1);
                                u && (u.words[d] = f)
                            }
                            return u && u._strip(), n._strip(), "div" !== e && 0 !== r && n.iushrn(r), {
                                div: u || null,
                                mod: n
                            }
                        }, s.prototype.divmod = function(t, e, r) {
                            return n(!t.isZero()), this.isZero() ? {
                                div: new s(0),
                                mod: new s(0)
                            } : 0 !== this.negative && 0 === t.negative ? (a = this.neg().divmod(t, e), "mod" !== e && (i = a.div.neg()), "div" !== e && (o = a.mod.neg(), r && 0 !== o.negative && o.iadd(t)), {
                                div: i,
                                mod: o
                            }) : 0 === this.negative && 0 !== t.negative ? (a = this.divmod(t.neg(), e), "mod" !== e && (i = a.div.neg()), {
                                div: i,
                                mod: a.mod
                            }) : 0 !== (this.negative & t.negative) ? (a = this.neg().divmod(t.neg(), e), "div" !== e && (o = a.mod.neg(), r && 0 !== o.negative && o.isub(t)), {
                                div: a.div,
                                mod: o
                            }) : t.length > this.length || this.cmp(t) < 0 ? {
                                div: new s(0),
                                mod: this
                            } : 1 === t.length ? "div" === e ? {
                                div: this.divn(t.words[0]),
                                mod: null
                            } : "mod" === e ? {
                                div: null,
                                mod: new s(this.modrn(t.words[0]))
                            } : {
                                div: this.divn(t.words[0]),
                                mod: new s(this.modrn(t.words[0]))
                            } : this._wordDiv(t, e);
                            var i, o, a
                        }, s.prototype.div = function(t) {
                            return this.divmod(t, "div", !1).div
                        }, s.prototype.mod = function(t) {
                            return this.divmod(t, "mod", !1).mod
                        }, s.prototype.umod = function(t) {
                            return this.divmod(t, "mod", !0).mod
                        }, s.prototype.divRound = function(t) {
                            var e = this.divmod(t);
                            if (e.mod.isZero()) return e.div;
                            var r = 0 !== e.div.negative ? e.mod.isub(t) : e.mod,
                                n = t.ushrn(1),
                                i = t.andln(1),
                                s = r.cmp(n);
                            return s < 0 || 1 === i && 0 === s ? e.div : 0 !== e.div.negative ? e.div.isubn(1) : e.div.iaddn(1)
                        }, s.prototype.modrn = function(t) {
                            var e = t < 0;
                            e && (t = -t), n(t <= 67108863);
                            for (var r = (1 << 26) % t, i = 0, s = this.length - 1; s >= 0; s--) i = (r * i + (0 | this.words[s])) % t;
                            return e ? -i : i
                        }, s.prototype.modn = function(t) {
                            return this.modrn(t)
                        }, s.prototype.idivn = function(t) {
                            var e = t < 0;
                            e && (t = -t), n(t <= 67108863);
                            for (var r = 0, i = this.length - 1; i >= 0; i--) {
                                var s = (0 | this.words[i]) + 67108864 * r;
                                this.words[i] = s / t | 0, r = s % t
                            }
                            return this._strip(), e ? this.ineg() : this
                        }, s.prototype.divn = function(t) {
                            return this.clone().idivn(t)
                        }, s.prototype.egcd = function(t) {
                            n(0 === t.negative), n(!t.isZero());
                            var e = this,
                                r = t.clone();
                            e = 0 !== e.negative ? e.umod(t) : e.clone();
                            var i = new s(1),
                                o = new s(0),
                                a = new s(0),
                                u = new s(1),
                                c = 0;
                            while (e.isEven() && r.isEven()) e.iushrn(1), r.iushrn(1), ++c;
                            var h = r.clone(),
                                l = e.clone();
                            while (!e.isZero()) {
                                for (var d = 0, f = 1; 0 === (e.words[0] & f) && d < 26; ++d, f <<= 1);
                                if (d > 0) {
                                    e.iushrn(d);
                                    while (d-- > 0)(i.isOdd() || o.isOdd()) && (i.iadd(h), o.isub(l)), i.iushrn(1), o.iushrn(1)
                                }
                                for (var p = 0, g = 1; 0 === (r.words[0] & g) && p < 26; ++p, g <<= 1);
                                if (p > 0) {
                                    r.iushrn(p);
                                    while (p-- > 0)(a.isOdd() || u.isOdd()) && (a.iadd(h), u.isub(l)), a.iushrn(1), u.iushrn(1)
                                }
                                e.cmp(r) >= 0 ? (e.isub(r), i.isub(a), o.isub(u)) : (r.isub(e), a.isub(i), u.isub(o))
                            }
                            return {
                                a: a,
                                b: u,
                                gcd: r.iushln(c)
                            }
                        }, s.prototype._invmp = function(t) {
                            n(0 === t.negative), n(!t.isZero());
                            var e = this,
                                r = t.clone();
                            e = 0 !== e.negative ? e.umod(t) : e.clone();
                            var i, o = new s(1),
                                a = new s(0),
                                u = r.clone();
                            while (e.cmpn(1) > 0 && r.cmpn(1) > 0) {
                                for (var c = 0, h = 1; 0 === (e.words[0] & h) && c < 26; ++c, h <<= 1);
                                if (c > 0) {
                                    e.iushrn(c);
                                    while (c-- > 0) o.isOdd() && o.iadd(u), o.iushrn(1)
                                }
                                for (var l = 0, d = 1; 0 === (r.words[0] & d) && l < 26; ++l, d <<= 1);
                                if (l > 0) {
                                    r.iushrn(l);
                                    while (l-- > 0) a.isOdd() && a.iadd(u), a.iushrn(1)
                                }
                                e.cmp(r) >= 0 ? (e.isub(r), o.isub(a)) : (r.isub(e), a.isub(o))
                            }
                            return i = 0 === e.cmpn(1) ? o : a, i.cmpn(0) < 0 && i.iadd(t), i
                        }, s.prototype.gcd = function(t) {
                            if (this.isZero()) return t.abs();
                            if (t.isZero()) return this.abs();
                            var e = this.clone(),
                                r = t.clone();
                            e.negative = 0, r.negative = 0;
                            for (var n = 0; e.isEven() && r.isEven(); n++) e.iushrn(1), r.iushrn(1);
                            do {
                                while (e.isEven()) e.iushrn(1);
                                while (r.isEven()) r.iushrn(1);
                                var i = e.cmp(r);
                                if (i < 0) {
                                    var s = e;
                                    e = r, r = s
                                } else if (0 === i || 0 === r.cmpn(1)) break;
                                e.isub(r)
                            } while (1);
                            return r.iushln(n)
                        }, s.prototype.invm = function(t) {
                            return this.egcd(t).a.umod(t)
                        }, s.prototype.isEven = function() {
                            return 0 === (1 & this.words[0])
                        }, s.prototype.isOdd = function() {
                            return 1 === (1 & this.words[0])
                        }, s.prototype.andln = function(t) {
                            return this.words[0] & t
                        }, s.prototype.bincn = function(t) {
                            n("number" === typeof t);
                            var e = t % 26,
                                r = (t - e) / 26,
                                i = 1 << e;
                            if (this.length <= r) return this._expand(r + 1), this.words[r] |= i, this;
                            for (var s = i, o = r; 0 !== s && o < this.length; o++) {
                                var a = 0 | this.words[o];
                                a += s, s = a >>> 26, a &= 67108863, this.words[o] = a
                            }
                            return 0 !== s && (this.words[o] = s, this.length++), this
                        }, s.prototype.isZero = function() {
                            return 1 === this.length && 0 === this.words[0]
                        }, s.prototype.cmpn = function(t) {
                            var e, r = t < 0;
                            if (0 !== this.negative && !r) return -1;
                            if (0 === this.negative && r) return 1;
                            if (this._strip(), this.length > 1) e = 1;
                            else {
                                r && (t = -t), n(t <= 67108863, "Number is too big");
                                var i = 0 | this.words[0];
                                e = i === t ? 0 : i < t ? -1 : 1
                            }
                            return 0 !== this.negative ? 0 | -e : e
                        }, s.prototype.cmp = function(t) {
                            if (0 !== this.negative && 0 === t.negative) return -1;
                            if (0 === this.negative && 0 !== t.negative) return 1;
                            var e = this.ucmp(t);
                            return 0 !== this.negative ? 0 | -e : e
                        }, s.prototype.ucmp = function(t) {
                            if (this.length > t.length) return 1;
                            if (this.length < t.length) return -1;
                            for (var e = 0, r = this.length - 1; r >= 0; r--) {
                                var n = 0 | this.words[r],
                                    i = 0 | t.words[r];
                                if (n !== i) {
                                    n < i ? e = -1 : n > i && (e = 1);
                                    break
                                }
                            }
                            return e
                        }, s.prototype.gtn = function(t) {
                            return 1 === this.cmpn(t)
                        }, s.prototype.gt = function(t) {
                            return 1 === this.cmp(t)
                        }, s.prototype.gten = function(t) {
                            return this.cmpn(t) >= 0
                        }, s.prototype.gte = function(t) {
                            return this.cmp(t) >= 0
                        }, s.prototype.ltn = function(t) {
                            return -1 === this.cmpn(t)
                        }, s.prototype.lt = function(t) {
                            return -1 === this.cmp(t)
                        }, s.prototype.lten = function(t) {
                            return this.cmpn(t) <= 0
                        }, s.prototype.lte = function(t) {
                            return this.cmp(t) <= 0
                        }, s.prototype.eqn = function(t) {
                            return 0 === this.cmpn(t)
                        }, s.prototype.eq = function(t) {
                            return 0 === this.cmp(t)
                        }, s.red = function(t) {
                            return new _(t)
                        }, s.prototype.toRed = function(t) {
                            return n(!this.red, "Already a number in reduction context"), n(0 === this.negative, "red works only with positives"), t.convertTo(this)._forceRed(t)
                        }, s.prototype.fromRed = function() {
                            return n(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this)
                        }, s.prototype._forceRed = function(t) {
                            return this.red = t, this
                        }, s.prototype.forceRed = function(t) {
                            return n(!this.red, "Already a number in reduction context"), this._forceRed(t)
                        }, s.prototype.redAdd = function(t) {
                            return n(this.red, "redAdd works only with red numbers"), this.red.add(this, t)
                        }, s.prototype.redIAdd = function(t) {
                            return n(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t)
                        }, s.prototype.redSub = function(t) {
                            return n(this.red, "redSub works only with red numbers"), this.red.sub(this, t)
                        }, s.prototype.redISub = function(t) {
                            return n(this.red, "redISub works only with red numbers"), this.red.isub(this, t)
                        }, s.prototype.redShl = function(t) {
                            return n(this.red, "redShl works only with red numbers"), this.red.shl(this, t)
                        }, s.prototype.redMul = function(t) {
                            return n(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.mul(this, t)
                        }, s.prototype.redIMul = function(t) {
                            return n(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.imul(this, t)
                        }, s.prototype.redSqr = function() {
                            return n(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this)
                        }, s.prototype.redISqr = function() {
                            return n(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this)
                        }, s.prototype.redSqrt = function() {
                            return n(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this)
                        }, s.prototype.redInvm = function() {
                            return n(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this)
                        }, s.prototype.redNeg = function() {
                            return n(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this)
                        }, s.prototype.redPow = function(t) {
                            return n(this.red && !t.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t)
                        };
                        var C = {
                            k256: null,
                            p224: null,
                            p192: null,
                            p25519: null
                        };

                        function A(t, e) {
                            this.name = t, this.p = new s(e, 16), this.n = this.p.bitLength(), this.k = new s(1).iushln(this.n).isub(this.p), this.tmp = this._tmp()
                        }

                        function B() {
                            A.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")
                        }

                        function F() {
                            A.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")
                        }

                        function E() {
                            A.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")
                        }

                        function x() {
                            A.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")
                        }

                        function _(t) {
                            if ("string" === typeof t) {
                                var e = s._prime(t);
                                this.m = e.p, this.prime = e
                            } else n(t.gtn(1), "modulus must be greater than 1"), this.m = t, this.prime = null
                        }

                        function k(t) {
                            _.call(this, t), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new s(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv)
                        }
                        A.prototype._tmp = function() {
                            var t = new s(null);
                            return t.words = new Array(Math.ceil(this.n / 13)), t
                        }, A.prototype.ireduce = function(t) {
                            var e, r = t;
                            do {
                                this.split(r, this.tmp), r = this.imulK(r), r = r.iadd(this.tmp), e = r.bitLength()
                            } while (e > this.n);
                            var n = e < this.n ? -1 : r.ucmp(this.p);
                            return 0 === n ? (r.words[0] = 0, r.length = 1) : n > 0 ? r.isub(this.p) : r._strip(), r
                        }, A.prototype.split = function(t, e) {
                            t.iushrn(this.n, 0, e)
                        }, A.prototype.imulK = function(t) {
                            return t.imul(this.k)
                        }, i(B, A), B.prototype.split = function(t, e) {
                            for (var r = 4194303, n = Math.min(t.length, 9), i = 0; i < n; i++) e.words[i] = t.words[i];
                            if (e.length = n, t.length <= 9) return t.words[0] = 0, void(t.length = 1);
                            var s = t.words[9];
                            for (e.words[e.length++] = s & r, i = 10; i < t.length; i++) {
                                var o = 0 | t.words[i];
                                t.words[i - 10] = (o & r) << 4 | s >>> 22, s = o
                            }
                            s >>>= 22, t.words[i - 10] = s, 0 === s && t.length > 10 ? t.length -= 10 : t.length -= 9
                        }, B.prototype.imulK = function(t) {
                            t.words[t.length] = 0, t.words[t.length + 1] = 0, t.length += 2;
                            for (var e = 0, r = 0; r < t.length; r++) {
                                var n = 0 | t.words[r];
                                e += 977 * n, t.words[r] = 67108863 & e, e = 64 * n + (e / 67108864 | 0)
                            }
                            return 0 === t.words[t.length - 1] && (t.length--, 0 === t.words[t.length - 1] && t.length--), t
                        }, i(F, A), i(E, A), i(x, A), x.prototype.imulK = function(t) {
                            for (var e = 0, r = 0; r < t.length; r++) {
                                var n = 19 * (0 | t.words[r]) + e,
                                    i = 67108863 & n;
                                n >>>= 26, t.words[r] = i, e = n
                            }
                            return 0 !== e && (t.words[t.length++] = e), t
                        }, s._prime = function(t) {
                            if (C[t]) return C[t];
                            var e;
                            if ("k256" === t) e = new B;
                            else if ("p224" === t) e = new F;
                            else if ("p192" === t) e = new E;
                            else {
                                if ("p25519" !== t) throw new Error("Unknown prime " + t);
                                e = new x
                            }
                            return C[t] = e, e
                        }, _.prototype._verify1 = function(t) {
                            n(0 === t.negative, "red works only with positives"), n(t.red, "red works only with red numbers")
                        }, _.prototype._verify2 = function(t, e) {
                            n(0 === (t.negative | e.negative), "red works only with positives"), n(t.red && t.red === e.red, "red works only with red numbers")
                        }, _.prototype.imod = function(t) {
                            return this.prime ? this.prime.ireduce(t)._forceRed(this) : (c(t, t.umod(this.m)._forceRed(this)), t)
                        }, _.prototype.neg = function(t) {
                            return t.isZero() ? t.clone() : this.m.sub(t)._forceRed(this)
                        }, _.prototype.add = function(t, e) {
                            this._verify2(t, e);
                            var r = t.add(e);
                            return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this)
                        }, _.prototype.iadd = function(t, e) {
                            this._verify2(t, e);
                            var r = t.iadd(e);
                            return r.cmp(this.m) >= 0 && r.isub(this.m), r
                        }, _.prototype.sub = function(t, e) {
                            this._verify2(t, e);
                            var r = t.sub(e);
                            return r.cmpn(0) < 0 && r.iadd(this.m), r._forceRed(this)
                        }, _.prototype.isub = function(t, e) {
                            this._verify2(t, e);
                            var r = t.isub(e);
                            return r.cmpn(0) < 0 && r.iadd(this.m), r
                        }, _.prototype.shl = function(t, e) {
                            return this._verify1(t), this.imod(t.ushln(e))
                        }, _.prototype.imul = function(t, e) {
                            return this._verify2(t, e), this.imod(t.imul(e))
                        }, _.prototype.mul = function(t, e) {
                            return this._verify2(t, e), this.imod(t.mul(e))
                        }, _.prototype.isqr = function(t) {
                            return this.imul(t, t.clone())
                        }, _.prototype.sqr = function(t) {
                            return this.mul(t, t)
                        }, _.prototype.sqrt = function(t) {
                            if (t.isZero()) return t.clone();
                            var e = this.m.andln(3);
                            if (n(e % 2 === 1), 3 === e) {
                                var r = this.m.add(new s(1)).iushrn(2);
                                return this.pow(t, r)
                            }
                            var i = this.m.subn(1),
                                o = 0;
                            while (!i.isZero() && 0 === i.andln(1)) o++, i.iushrn(1);
                            n(!i.isZero());
                            var a = new s(1).toRed(this),
                                u = a.redNeg(),
                                c = this.m.subn(1).iushrn(1),
                                h = this.m.bitLength();
                            h = new s(2 * h * h).toRed(this);
                            while (0 !== this.pow(h, c).cmp(u)) h.redIAdd(u);
                            var l = this.pow(h, i),
                                d = this.pow(t, i.addn(1).iushrn(1)),
                                f = this.pow(t, i),
                                p = o;
                            while (0 !== f.cmp(a)) {
                                for (var g = f, v = 0; 0 !== g.cmp(a); v++) g = g.redSqr();
                                n(v < p);
                                var m = this.pow(l, new s(1).iushln(p - v - 1));
                                d = d.redMul(m), l = m.redSqr(), f = f.redMul(l), p = v
                            }
                            return d
                        }, _.prototype.invm = function(t) {
                            var e = t._invmp(this.m);
                            return 0 !== e.negative ? (e.negative = 0, this.imod(e).redNeg()) : this.imod(e)
                        }, _.prototype.pow = function(t, e) {
                            if (e.isZero()) return new s(1).toRed(this);
                            if (0 === e.cmpn(1)) return t.clone();
                            var r = 4,
                                n = new Array(1 << r);
                            n[0] = new s(1).toRed(this), n[1] = t;
                            for (var i = 2; i < n.length; i++) n[i] = this.mul(n[i - 1], t);
                            var o = n[0],
                                a = 0,
                                u = 0,
                                c = e.bitLength() % 26;
                            for (0 === c && (c = 26), i = e.length - 1; i >= 0; i--) {
                                for (var h = e.words[i], l = c - 1; l >= 0; l--) {
                                    var d = h >> l & 1;
                                    o !== n[0] && (o = this.sqr(o)), 0 !== d || 0 !== a ? (a <<= 1, a |= d, u++, (u === r || 0 === i && 0 === l) && (o = this.mul(o, n[a]), u = 0, a = 0)) : u = 0
                                }
                                c = 26
                            }
                            return o
                        }, _.prototype.convertTo = function(t) {
                            var e = t.umod(this.m);
                            return e === t ? e.clone() : e
                        }, _.prototype.convertFrom = function(t) {
                            var e = t.clone();
                            return e.red = null, e
                        }, s.mont = function(t) {
                            return new k(t)
                        }, i(k, _), k.prototype.convertTo = function(t) {
                            return this.imod(t.ushln(this.shift))
                        }, k.prototype.convertFrom = function(t) {
                            var e = this.imod(t.mul(this.rinv));
                            return e.red = null, e
                        }, k.prototype.imul = function(t, e) {
                            if (t.isZero() || e.isZero()) return t.words[0] = 0, t.length = 1, t;
                            var r = t.imul(e),
                                n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                                i = r.isub(n).iushrn(this.shift),
                                s = i;
                            return i.cmp(this.m) >= 0 ? s = i.isub(this.m) : i.cmpn(0) < 0 && (s = i.iadd(this.m)), s._forceRed(this)
                        }, k.prototype.mul = function(t, e) {
                            if (t.isZero() || e.isZero()) return new s(0)._forceRed(this);
                            var r = t.mul(e),
                                n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                                i = r.isub(n).iushrn(this.shift),
                                o = i;
                            return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this)
                        }, k.prototype.invm = function(t) {
                            var e = this.imod(t._invmp(this.m).mul(this.r2));
                            return e._forceRed(this)
                        }
                    }(t, this)
            }).call(this, r("62e4")(t))
        },
        cd67: function(t, e, r) {
            "use strict";
            var n = r("1845");
            t.exports = function(t, e) {
                e = e || {};
                var r = {};

                function i(t, e) {
                    return n.isPlainObject(t) && n.isPlainObject(e) ? n.merge(t, e) : n.isPlainObject(e) ? n.merge({}, e) : n.isArray(e) ? e.slice() : e
                }

                function s(r) {
                    return n.isUndefined(e[r]) ? n.isUndefined(t[r]) ? void 0 : i(void 0, t[r]) : i(t[r], e[r])
                }

                function o(t) {
                    if (!n.isUndefined(e[t])) return i(void 0, e[t])
                }

                function a(r) {
                    return n.isUndefined(e[r]) ? n.isUndefined(t[r]) ? void 0 : i(void 0, t[r]) : i(void 0, e[r])
                }

                function u(r) {
                    return r in e ? i(t[r], e[r]) : r in t ? i(void 0, t[r]) : void 0
                }
                var c = {
                    url: o,
                    method: o,
                    data: o,
                    baseURL: a,
                    transformRequest: a,
                    transformResponse: a,
                    paramsSerializer: a,
                    timeout: a,
                    timeoutMessage: a,
                    withCredentials: a,
                    adapter: a,
                    responseType: a,
                    xsrfCookieName: a,
                    xsrfHeaderName: a,
                    onUploadProgress: a,
                    onDownloadProgress: a,
                    decompress: a,
                    maxContentLength: a,
                    maxBodyLength: a,
                    transport: a,
                    httpAgent: a,
                    httpsAgent: a,
                    cancelToken: a,
                    socketPath: a,
                    responseEncoding: a,
                    validateStatus: u
                };
                return n.forEach(Object.keys(t).concat(Object.keys(e)), (function(t) {
                    var e = c[t] || s,
                        i = e(t);
                    n.isUndefined(i) && e !== u || (r[t] = i)
                })), r
            }
        },
        cdcf: function(t, e, r) {
            r("5cc6");
            const {
                Address: n
            } = r("1afa"), {
                Cell: i
            } = r("41b0"), s = 0, o = 1, a = 0, u = 1, c = t => (new TextEncoder).encode(encodeURI(t)), h = t => (new TextDecoder).decode(t), l = t => {
                const e = new i;
                return e.bits.writeUint(u, 8), e.bits.writeBytes(c(t)), e
            }, d = t => {
                if (t.bits.array[0] !== u) throw new Error("no OFFCHAIN_CONTENT_PREFIX");
                let e = 0,
                    r = t;
                while (r) e += r.bits.array.length, r = r.refs[0];
                const n = new Uint8Array(e);
                e = 0, r = t;
                while (r) n.set(r.bits.array, e), e += r.bits.array.length, r = r.refs[0];
                return h(n.slice(1))
            }, f = (t, e, r) => {
                let n = BigInt(0);
                for (let i = 0; i < r; i++) n *= BigInt(2), n += BigInt(t.get(e + i));
                return n
            }, p = t => {
                let e = f(t.bits, 3, 8);
                e > BigInt(127) && (e -= BigInt(256));
                const r = f(t.bits, 11, 256);
                if (e.toString(10) + ":" + r.toString(16) === "0:0") return null;
                const i = e.toString(10) + ":" + r.toString(16).padStart(64, "0");
                return new n(i)
            }, g = async (t, e) => {
                const r = await t.call2(e, "royalty_params"),
                    n = r[0].toNumber(),
                    i = r[1].toNumber(),
                    s = n / i,
                    o = p(r[2]);
                return {
                    royalty: s,
                    royaltyBase: i,
                    royaltyFactor: n,
                    royaltyAddress: o
                }
            };
            t.exports = {
                SNAKE_DATA_PREFIX: s,
                CHUNK_DATA_PREFIX: o,
                ONCHAIN_CONTENT_PREFIX: a,
                OFFCHAIN_CONTENT_PREFIX: u,
                parseAddress: p,
                serializeUri: c,
                parseUri: h,
                createOffchainUriCell: l,
                parseOffchainUriCell: d,
                getRoyaltyParams: g
            }
        },
        cf59: function(t, e, r) {
            const {
                Contract: n
            } = r("38a0"), {
                Cell: i
            } = r("41b0"), {
                Address: s
            } = r("1afa"), {
                parseAddress: o
            } = r("cdcf"), {
                dnsResolve: a
            } = r("e101"), {
                parseOffchainUriCell: u
            } = r("cdcf");
            class c extends n {
                constructor(t, e) {
                    if (e.wc = 0, e.code = e.code, super(t, e), !e.collectionContent && !e.address) throw new Error("required collectionContent cell");
                    this.methods.getCollectionData = this.getCollectionData.bind(this), this.methods.getNftItemAddressByIndex = this.getNftItemAddressByIndex.bind(this), this.methods.getNftItemContent = this.getNftItemContent.bind(this), this.methods.resolve = this.resolve.bind(this)
                }
                createDataCell() {
                    const t = new i;
                    return t.refs[0] = this.options.collectionContent, t.refs[1] = i.oneFromBoc(this.options.dnsItemCodeHex), t
                }
                async getCollectionData() {
                    const t = await this.getAddress(),
                        e = await this.provider.call2(t.toString(), "get_collection_data"),
                        r = e[0].toNumber(),
                        n = e[1],
                        i = u(n);
                    return {
                        collectionContentUri: i,
                        collectionContent: n,
                        ownerAddress: null,
                        nextItemIndex: r
                    }
                }
                async getNftItemContent(t) {
                    const e = await t.getData();
                    return e
                }
                async getNftItemAddressByIndex(t) {
                    const e = await this.getAddress(),
                        r = await this.provider.call2(e.toString(), "get_nft_address_by_index", [
                            ["num", t.toString()]
                        ]);
                    return o(r)
                }
                async resolve(t, e, r) {
                    const n = await this.getAddress();
                    return a(this.provider, n.toString(), t, e, r)
                }
            }
            t.exports = {
                DnsCollection: c
            }
        },
        d017: function(t, e, r) {
            "use strict";
            var n = r("1845");

            function i() {
                this.handlers = []
            }
            i.prototype.use = function(t, e, r) {
                return this.handlers.push({
                    fulfilled: t,
                    rejected: e,
                    synchronous: !!r && r.synchronous,
                    runWhen: r ? r.runWhen : null
                }), this.handlers.length - 1
            }, i.prototype.eject = function(t) {
                this.handlers[t] && (this.handlers[t] = null)
            }, i.prototype.forEach = function(t) {
                n.forEach(this.handlers, (function(e) {
                    null !== e && t(e)
                }))
            }, t.exports = i
        },
        d01b: function(t, e, r) {
            (function(e) {
                t.exports = function(t) {
                    var e = {};

                    function r(n) {
                        if (e[n]) return e[n].exports;
                        var i = e[n] = {
                            i: n,
                            l: !1,
                            exports: {}
                        };
                        return t[n].call(i.exports, i, i.exports, r), i.l = !0, i.exports
                    }
                    return r.m = t, r.c = e, r.d = function(t, e, n) {
                        r.o(t, e) || Object.defineProperty(t, e, {
                            enumerable: !0,
                            get: n
                        })
                    }, r.r = function(t) {
                        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
                            value: "Module"
                        }), Object.defineProperty(t, "__esModule", {
                            value: !0
                        })
                    }, r.t = function(t, e) {
                        if (1 & e && (t = r(t)), 8 & e) return t;
                        if (4 & e && "object" == typeof t && t && t.__esModule) return t;
                        var n = Object.create(null);
                        if (r.r(n), Object.defineProperty(n, "default", {
                                enumerable: !0,
                                value: t
                            }), 2 & e && "string" != typeof t)
                            for (var i in t) r.d(n, i, function(e) {
                                return t[e]
                            }.bind(null, i));
                        return n
                    }, r.n = function(t) {
                        var e = t && t.__esModule ? function() {
                            return t.default
                        } : function() {
                            return t
                        };
                        return r.d(e, "a", e), e
                    }, r.o = function(t, e) {
                        return Object.prototype.hasOwnProperty.call(t, e)
                    }, r.p = "", r(r.s = 22)
                }([function(t, e) {
                    t.exports = r("a34a")
                }, function(t, e) {
                    t.exports = r("c973")
                }, function(t, e) {
                    t.exports = r("970b")
                }, function(t, e) {
                    t.exports = r("5bc3")
                }, function(t, e) {
                    t.exports = r("9523")
                }, function(t, e) {
                    t.exports = r("1553")
                }, function(t, e) {
                    t.exports = r("c030")
                }, function(t, e) {
                    t.exports = r("7037")
                }, function(t, e) {
                    t.exports = r("448a")
                }, function(t, e) {
                    t.exports = r("278c")
                }, function(t, e) {
                    t.exports = r("901e")
                }, function(t, e) {
                    t.exports = r("3c96")
                }, function(t, e) {
                    t.exports = r("8d61")
                }, function(t, e) {
                    t.exports = r("3337")
                }, function(t, e) {
                    t.exports = r("36c6")
                }, function(t, e) {
                    t.exports = r("ed6d")
                }, function(t, e) {
                    t.exports = r("6b58")
                }, function(t, e) {
                    t.exports = r("a55b")
                }, function(t, e) {
                    t.exports = r("f90c")
                }, function(t, e) {
                    t.exports = r("b7ff")
                }, function(t) {
                    t.exports = JSON.parse('{"a":"4.1.0"}')
                }, function(t, e) {
                    t.exports = r("b383")
                }, function(t, r, n) {
                    "use strict";
                    n.r(r), n.d(r, "default", (function() {
                        return Te
                    }));
                    var i = {};
                    n.r(i), n.d(i, "byte2hexStr", (function() {
                        return T
                    })), n.d(i, "bytesToString", (function() {
                        return P
                    })), n.d(i, "hextoString", (function() {
                        return O
                    })), n.d(i, "byteArray2hexStr", (function() {
                        return U
                    })), n.d(i, "base64DecodeFromString", (function() {
                        return j
                    })), n.d(i, "base64EncodeToString", (function() {
                        return W
                    }));
                    var s = {};
                    n.r(s), n.d(s, "bin2String", (function() {
                        return K
                    })), n.d(s, "arrayEquals", (function() {
                        return H
                    })), n.d(s, "stringToBytes", (function() {
                        return V
                    })), n.d(s, "byte2hexStr", (function() {
                        return T
                    })), n.d(s, "bytesToString", (function() {
                        return P
                    })), n.d(s, "hextoString", (function() {
                        return O
                    })), n.d(s, "byteArray2hexStr", (function() {
                        return U
                    })), n.d(s, "base64DecodeFromString", (function() {
                        return j
                    })), n.d(s, "base64EncodeToString", (function() {
                        return W
                    })), n.d(s, "hexChar2byte", (function() {
                        return J
                    })), n.d(s, "isHexChar", (function() {
                        return z
                    })), n.d(s, "hexStr2byteArray", (function() {
                        return G
                    })), n.d(s, "strToDate", (function() {
                        return $
                    })), n.d(s, "isNumber", (function() {
                        return Z
                    })), n.d(s, "getStringType", (function() {
                        return Y
                    }));
                    var o = {};
                    n.r(o), n.d(o, "encode58", (function() {
                        return et
                    })), n.d(o, "decode58", (function() {
                        return rt
                    }));
                    var a = {};
                    n.r(a), n.d(a, "keccak256", (function() {
                        return st
                    })), n.d(a, "sha256", (function() {
                        return ot
                    })), n.d(a, "toUtf8Bytes", (function() {
                        return at
                    })), n.d(a, "toUtf8String", (function() {
                        return ut
                    })), n.d(a, "recoverAddress", (function() {
                        return ct
                    })), n.d(a, "SigningKey", (function() {
                        return ht
                    })), n.d(a, "AbiCoder", (function() {
                        return lt
                    })), n.d(a, "Interface", (function() {
                        return dt
                    })), n.d(a, "FormatTypes", (function() {
                        return ft
                    })), n.d(a, "arrayify", (function() {
                        return pt
                    }));
                    var u = {};
                    n.r(u), n.d(u, "getBase58CheckAddress", (function() {
                        return gt
                    })), n.d(u, "decodeBase58Address", (function() {
                        return vt
                    })), n.d(u, "signTransaction", (function() {
                        return mt
                    })), n.d(u, "arrayToBase64String", (function() {
                        return yt
                    })), n.d(u, "signBytes", (function() {
                        return wt
                    })), n.d(u, "getRowBytesFromTransactionBase64", (function() {
                        return bt
                    })), n.d(u, "genPriKey", (function() {
                        return Ct
                    })), n.d(u, "computeAddress", (function() {
                        return At
                    })), n.d(u, "getAddressFromPriKey", (function() {
                        return Bt
                    })), n.d(u, "decode58Check", (function() {
                        return Ft
                    })), n.d(u, "isAddressValid", (function() {
                        return Et
                    })), n.d(u, "getBase58CheckAddressFromPriKeyBase64String", (function() {
                        return xt
                    })), n.d(u, "getHexStrAddressFromPriKeyBase64String", (function() {
                        return _t
                    })), n.d(u, "getAddressFromPriKeyBase64String", (function() {
                        return kt
                    })), n.d(u, "getPubKeyFromPriKey", (function() {
                        return Mt
                    })), n.d(u, "ECKeySign", (function() {
                        return Dt
                    })), n.d(u, "SHA256", (function() {
                        return St
                    })), n.d(u, "passwordToAddress", (function() {
                        return It
                    })), n.d(u, "pkToAddress", (function() {
                        return Nt
                    }));
                    var c = {};
                    n.r(c), n.d(c, "generateAccount", (function() {
                        return Tt
                    }));
                    var h = {};
                    n.r(h), n.d(h, "decodeParams", (function() {
                        return jt
                    })), n.d(h, "encodeParams", (function() {
                        return Wt
                    })), n.d(h, "encodeParamsV2ByABI", (function() {
                        return qt
                    })), n.d(h, "decodeParamsV2ByABI", (function() {
                        return Kt
                    }));
                    var l = n(1),
                        d = n.n(l),
                        f = n(7),
                        p = n.n(f),
                        g = n(2),
                        v = n.n(g),
                        m = n(3),
                        y = n.n(m),
                        w = n(11),
                        b = n.n(w),
                        C = n(15),
                        A = n.n(C),
                        B = n(16),
                        F = n.n(B),
                        E = n(14),
                        x = n.n(E),
                        _ = n(4),
                        k = n.n(_),
                        M = n(0),
                        D = n.n(M),
                        S = n(17),
                        I = n.n(S);

                    function N() {
                        var t = this;
                        this._keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", this.encode = function(e) {
                            for (var r, n, i, s, o, a, u, c = "", h = 0; h < e.length;) s = (r = e.charCodeAt(h++)) >> 2, o = (3 & r) << 4 | (n = e.charCodeAt(h++)) >> 4, a = (15 & n) << 2 | (i = e.charCodeAt(h++)) >> 6, u = 63 & i, isNaN(n) ? a = u = 64 : isNaN(i) && (u = 64), c = c + t._keyStr.charAt(s) + t._keyStr.charAt(o) + t._keyStr.charAt(a) + t._keyStr.charAt(u);
                            return c
                        }, this.encodeIgnoreUtf8 = function(e) {
                            for (var r, n, i, s, o, a, u, c = "", h = 0; h < e.length;) s = (r = e[h++]) >> 2, o = (3 & r) << 4 | (n = e[h++]) >> 4, a = (15 & n) << 2 | (i = e[h++]) >> 6, u = 63 & i, isNaN(n) ? a = u = 64 : isNaN(i) && (u = 64), c = c + t._keyStr.charAt(s) + t._keyStr.charAt(o) + t._keyStr.charAt(a) + t._keyStr.charAt(u);
                            return c
                        }, this.decode = function(e) {
                            var r, n, i, s, o, a, u = "",
                                c = 0;
                            for (e = e.replace(/[^A-Za-z0-9\+\/\=]/g, ""); c < e.length;) r = t._keyStr.indexOf(e.charAt(c++)) << 2 | (s = t._keyStr.indexOf(e.charAt(c++))) >> 4, n = (15 & s) << 4 | (o = t._keyStr.indexOf(e.charAt(c++))) >> 2, i = (3 & o) << 6 | (a = t._keyStr.indexOf(e.charAt(c++))), u += String.fromCharCode(r), 64 != o && (u += String.fromCharCode(n)), 64 != a && (u += String.fromCharCode(i));
                            return t._utf8_decode(u)
                        }, this.decodeToByteArray = function(e) {
                            var r, n, i, s, o, a, u = "",
                                c = 0;
                            for (e = e.replace(/[^A-Za-z0-9\+\/\=]/g, ""); c < e.length;) r = t._keyStr.indexOf(e.charAt(c++)) << 2 | (s = t._keyStr.indexOf(e.charAt(c++))) >> 4, n = (15 & s) << 4 | (o = t._keyStr.indexOf(e.charAt(c++))) >> 2, i = (3 & o) << 6 | (a = t._keyStr.indexOf(e.charAt(c++))), u += String.fromCharCode(r), 64 != o && (u += String.fromCharCode(n)), 64 != a && (u += String.fromCharCode(i));
                            return t._out2ByteArray(u)
                        }, this._out2ByteArray = function(t) {
                            for (var e = new Array(t.length), r = 0, n = 0; r < t.length;) n = t.charCodeAt(r), e[r] = n, r++;
                            return e
                        }, this._utf8_encode = function(t) {
                            t = t.replace(/\r\n/g, "\n");
                            for (var e = "", r = 0; r < t.length; r++) {
                                var n = t.charCodeAt(r);
                                n < 128 ? e += String.fromCharCode(n) : n > 127 && n < 2048 ? (e += String.fromCharCode(n >> 6 | 192), e += String.fromCharCode(63 & n | 128)) : (e += String.fromCharCode(n >> 12 | 224), e += String.fromCharCode(n >> 6 & 63 | 128), e += String.fromCharCode(63 & n | 128))
                            }
                            return e
                        }, this._utf8_decode = function(t) {
                            for (var e = "", r = 0, n = 0, i = 0, s = 0; r < t.length;)(n = t.charCodeAt(r)) < 128 ? (e += String.fromCharCode(n), r++) : n > 191 && n < 224 ? (i = t.charCodeAt(r + 1), e += String.fromCharCode((31 & n) << 6 | 63 & i), r += 2) : (i = t.charCodeAt(r + 1), s = t.charCodeAt(r + 2), e += String.fromCharCode((15 & n) << 12 | (63 & i) << 6 | 63 & s), r += 3);
                            return e
                        }
                    }

                    function T(t) {
                        if ("number" != typeof t) throw new Error("Input must be a number");
                        if (t < 0 || t > 255) throw new Error("Input must be a byte");
                        var e = "";
                        return e += "0123456789ABCDEF".charAt(t >> 4), e + "0123456789ABCDEF".charAt(15 & t)
                    }

                    function P(t) {
                        if ("string" == typeof t) return t;
                        for (var e = "", r = 0; r < t.length; r++) {
                            var n = t[r].toString(2),
                                i = n.match(/^1+?(?=0)/);
                            if (i && 8 === n.length) {
                                for (var s = i[0].length, o = t[r].toString(2).slice(7 - s), a = 1; a < s; a++) o += t[a + r].toString(2).slice(2);
                                e += String.fromCharCode(parseInt(o, 2)), r += s - 1
                            } else e += String.fromCharCode(t[r])
                        }
                        return e
                    }

                    function O(t) {
                        for (var e = t.replace(/^0x/, "").split(""), r = "", n = 0; n < e.length / 2; n++) {
                            var i = "0x".concat(e[2 * n]).concat(e[2 * n + 1]);
                            r += String.fromCharCode(i)
                        }
                        return r
                    }

                    function U(t) {
                        for (var e = "", r = 0; r < t.length; r++) e += T(t[r]);
                        return e
                    }

                    function j(t) {
                        return (new N).decodeToByteArray(t)
                    }

                    function W(t) {
                        return (new N).encodeIgnoreUtf8(t)
                    }
                    var R = n(8),
                        L = n.n(R),
                        q = /^(41)/;

                    function K(t) {
                        return P(t)
                    }

                    function H(t, e, r) {
                        if (t.length != e.length) return !1;
                        var n;
                        for (n = 0; n < t.length; n++)
                            if (r) {
                                if (t[n] != e[n]) return !1
                            } else if (JSON.stringify(t[n]) != JSON.stringify(e[n])) return !1;
                        return !0
                    }

                    function V(t) {
                        if ("string" != typeof t) throw new Error("The passed string is not a string");
                        var e, r, n = new Array;
                        e = t.length;
                        for (var i = 0; i < e; i++)(r = t.charCodeAt(i)) >= 65536 && r <= 1114111 ? (n.push(r >> 18 & 7 | 240), n.push(r >> 12 & 63 | 128), n.push(r >> 6 & 63 | 128), n.push(63 & r | 128)) : r >= 2048 && r <= 65535 ? (n.push(r >> 12 & 15 | 224), n.push(r >> 6 & 63 | 128), n.push(63 & r | 128)) : r >= 128 && r <= 2047 ? (n.push(r >> 6 & 31 | 192), n.push(63 & r | 128)) : n.push(255 & r);
                        return n
                    }

                    function J(t) {
                        var e;
                        if (t >= "A" && t <= "F" ? e = t.charCodeAt(0) - "A".charCodeAt(0) + 10 : t >= "a" && t <= "f" ? e = t.charCodeAt(0) - "a".charCodeAt(0) + 10 : t >= "0" && t <= "9" && (e = t.charCodeAt(0) - "0".charCodeAt(0)), "number" == typeof e) return e;
                        throw new Error("The passed hex char is not a valid hex char")
                    }

                    function z(t) {
                        return t >= "A" && t <= "F" || t >= "a" && t <= "f" || t >= "0" && t <= "9" ? 1 : 0
                    }

                    function G(t) {
                        var e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                        if ("string" != typeof t) throw new Error("The passed string is not a string");
                        var r = t.length;
                        e && r % 2 && (t = "0".concat(t), r++);
                        for (var n = Array(), i = 0, s = 0, o = 0, a = 0; a < r; a++) {
                            var u = t.charAt(a);
                            if (!z(u)) throw new Error("The passed hex char is not a valid hex string");
                            i <<= 4, i += J(u), 0 == ++s % 2 && (n[o++] = i, i = 0)
                        }
                        return n
                    }

                    function $(t) {
                        if (!/^\d{4}-\d{2}-\d{2}( \d{2}-\d{2}-\d{2}|)/.test(t)) throw new Error("The passed date string is not valid");
                        var e = t.split(" "),
                            r = e[0].split("-"),
                            n = parseInt(r[0], 10),
                            i = parseInt(r[1], 10) - 1,
                            s = parseInt(r[2], 10);
                        if (e.length > 1) {
                            var o = e[1].split("-"),
                                a = parseInt(o[0], 10),
                                u = parseInt(o[1], 10),
                                c = parseInt(o[2], 10);
                            return new Date(n, i, s, a, u, c)
                        }
                        return new Date(n, i, s)
                    }

                    function Z(t) {
                        return t >= "0" && t <= "9" ? 1 : 0
                    }

                    function Y(t) {
                        if (null == t) return -1;
                        if ("string" != typeof t) return -1;
                        if (0 == t.length || "" == t) return -1;
                        var e = 0;
                        if (40 == t.length)
                            for (; e < 40; e++)
                                if (!z(t.charAt(e))) break;
                        if (40 == e) return 1;
                        for (e = 0; e < t.length; e++)
                            if (!Z(t.charAt(e))) break;
                        if (e == t.length) return 2;
                        for (e = 0; e < t.length; e++)
                            if (t.charAt(e) > " ") return 3;
                        return -1
                    }
                    for (var X = "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz", Q = {}, tt = 0; tt < X.length; tt++) Q[X.charAt(tt)] = tt;

                    function et(t) {
                        if (0 === t.length) return "";
                        var e, r, n = [0];
                        for (e = 0; e < t.length; e++) {
                            for (r = 0; r < n.length; r++) n[r] <<= 8;
                            n[0] += t[e];
                            var i = 0;
                            for (r = 0; r < n.length; ++r) n[r] += i, i = n[r] / 58 | 0, n[r] %= 58;
                            for (; i;) n.push(i % 58), i = i / 58 | 0
                        }
                        for (e = 0; 0 === t[e] && e < t.length - 1; e++) n.push(0);
                        return n.reverse().map((function(t) {
                            return X[t]
                        })).join("")
                    }

                    function rt(t) {
                        if (0 === t.length) return [];
                        var e, r, n = [0];
                        for (e = 0; e < t.length; e++) {
                            var i = t[e];
                            if (!(i in Q)) throw new Error("Non-base58 character");
                            for (r = 0; r < n.length; r++) n[r] *= 58;
                            n[0] += Q[i];
                            var s = 0;
                            for (r = 0; r < n.length; ++r) n[r] += s, s = n[r] >> 8, n[r] &= 255;
                            for (; s;) n.push(255 & s), s >>= 8
                        }
                        for (e = 0;
                            "1" === t[e] && e < t.length - 1; e++) n.push(0);
                        return n.reverse()
                    }
                    var nt = n(13),
                        it = n(6),
                        st = it.utils.keccak256,
                        ot = it.utils.sha256,
                        at = it.utils.toUtf8Bytes,
                        ut = it.utils.toUtf8String,
                        ct = it.utils.recoverAddress,
                        ht = it.utils.SigningKey,
                        lt = it.utils.AbiCoder,
                        dt = it.utils.Interface,
                        ft = it.utils.FormatTypes,
                        pt = it.utils.arrayify;

                    function gt(t) {
                        var e = St(t),
                            r = St(e).slice(0, 4);
                        return et(r = t.concat(r))
                    }

                    function vt(t) {
                        if ("string" != typeof t) return !1;
                        if (t.length <= 4) return !1;
                        var e = rt(t);
                        if (t.length <= 4) return !1;
                        var r = e.length - 4,
                            n = e.slice(r),
                            i = St(e = e.slice(0, r)),
                            s = St(i).slice(0, 4);
                        if (n[0] == s[0] && n[1] == s[1] && n[2] == s[2] && n[3] == s[3]) return e;
                        throw new Error("Invalid address provided")
                    }

                    function mt(t, e) {
                        "string" == typeof t && (t = G(t));
                        var r = Dt(G(e.txID), t);
                        return Array.isArray(e.signature) ? e.signature.includes(r) || e.signature.push(r) : e.signature = [r], e
                    }

                    function yt(t) {
                        return btoa(String.fromCharCode.apply(String, L()(t)))
                    }

                    function wt(t, e) {
                        return "string" == typeof t && (t = G(t)), Dt(St(e), t)
                    }

                    function bt(t) {
                        var e = j(t);
                        return proto.protocol.Transaction.deserializeBinary(e).getRawData().serializeBinary()
                    }

                    function Ct() {
                        for (var t = new nt.ec("secp256k1").genKeyPair().getPrivate().toString("hex"); t.length < 64;) t = "0".concat(t);
                        return G(t)
                    }

                    function At(t) {
                        return 65 === t.length && (t = t.slice(1)), G("41" + st(t).toString().substring(2).substring(24))
                    }

                    function Bt(t) {
                        return At(Mt(t))
                    }

                    function Ft(t) {
                        var e = rt(t);
                        if (e.length <= 4) return !1;
                        var r = e.slice(0, e.length - 4),
                            n = St(r),
                            i = St(n);
                        return i[0] === e[r.length] && i[1] === e[r.length + 1] && i[2] === e[r.length + 2] && i[3] === e[r.length + 3] && r
                    }

                    function Et(t) {
                        if ("string" != typeof t) return !1;
                        if (34 !== t.length) return !1;
                        var e = rt(t);
                        if (25 !== e.length) return !1;
                        if (65 !== e[0]) return !1;
                        var r = e.slice(21),
                            n = St(e = e.slice(0, 21)),
                            i = St(n).slice(0, 4);
                        return r[0] == i[0] && r[1] == i[1] && r[2] == i[2] && r[3] == i[3]
                    }

                    function xt(t) {
                        return gt(At(Mt(j(t))))
                    }

                    function _t(t) {
                        return U(At(Mt(j(t))))
                    }

                    function kt(t) {
                        return W(At(Mt(j(t))))
                    }

                    function Mt(t) {
                        for (var e = new nt.ec("secp256k1").keyFromPrivate(t, "bytes").getPublic(), r = e.x, n = e.y, i = r.toString("hex"); i.length < 64;) i = "0".concat(i);
                        for (var s = n.toString("hex"); s.length < 64;) s = "0".concat(s);
                        return G("04".concat(i).concat(s))
                    }

                    function Dt(t, e) {
                        for (var r = new nt.ec("secp256k1").keyFromPrivate(e, "bytes").sign(t), n = r.r, i = r.s, s = r.recoveryParam, o = n.toString("hex"); o.length < 64;) o = "0".concat(o);
                        for (var a = i.toString("hex"); a.length < 64;) a = "0".concat(a);
                        return o + a + T(s)
                    }

                    function St(t) {
                        var e = U(t);
                        return G(ot("0x" + e).replace(/^0x/, ""))
                    }

                    function It(t) {
                        return gt(Bt(j(t)))
                    }

                    function Nt(t) {
                        var e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                            r = G(t, e),
                            n = Bt(r);
                        return gt(n)
                    }

                    function Tt() {
                        var t = Ct(),
                            e = Mt(t),
                            r = Bt(t);
                        return {
                            privateKey: U(t),
                            publicKey: U(e),
                            address: {
                                base58: gt(r),
                                hex: U(r)
                            }
                        }
                    }
                    var Pt = new lt;

                    function Ot(t) {
                        return Te.address.toHex(t).replace(q, "0x")
                    }

                    function Ut(t) {
                        if ("[object Object]" !== Object.prototype.toString.call(t) && "[object Array]" !== Object.prototype.toString.call(t)) return t;
                        var e, r = (e = t, Array.isArray(e) ? [] : {});
                        return Object.keys(t).forEach((function(e) {
                            return r[e] = t[e] instanceof Object && !t[e]._isBigNumber ? Ut(t[e]) : t[e]
                        })), r
                    }

                    function jt(t, e, r, n) {
                        if (r && "boolean" != typeof r || (n = r, r = e, e = t, t = []), n && r.replace(/^0x/, "").length % 64 == 8 && (r = "0x" + r.replace(/^0x/, "").substring(8)), r.replace(/^0x/, "").length % 64) throw new Error("The encoded string is not valid. Its length must be a multiple of 64.");
                        return e = e.map((function(t) {
                            return /trcToken/.test(t) && (t = t.replace(/trcToken/, "uint256")), t
                        })), Pt.decode(e, r).reduce((function(r, n, i) {
                            return "address" == e[i] && (n = "41" + n.substr(2).toLowerCase()), t.length ? r[t[i]] = n : r.push(n), r
                        }), t.length ? {} : [])
                    }

                    function Wt(t, e) {
                        for (var r = 0; r < t.length; r++) "address" === t[r] && (e[r] = Te.address.toHex(e[r]).replace(q, "0x"));
                        return Pt.encode(t, e)
                    }

                    function Rt(t) {
                        var e = t.match(/([a-zA-Z0-9])(\[.*\])/);
                        return e ? e[2] : ""
                    }

                    function Lt(t) {
                        return (Rt(t).match(/\]\[/g) || []).length + 1
                    }

                    function qt(t, e) {
                        var r = [],
                            n = function t(e) {
                                if (e && 0 === e.type.indexOf("tuple") && e.components) {
                                    var r = e.components.map((function(e) {
                                        return t(e)
                                    }));
                                    return "tuple(".concat(r.join(","), ")").concat(Rt(e.type))
                                }
                                return /trcToken/.test(e.type) ? e.type.replace(/trcToken/, "uint256") : e.type
                            },
                            i = function t(e) {
                                return Array.isArray(e) ? (e.forEach((function(r, n) {
                                    e[n] = t(r)
                                })), e) : Ot(e)
                            },
                            s = function t(e, r, n) {
                                n > 1 ? r.length && r.forEach((function(r) {
                                    t(e, r, n - 1)
                                })) : r.length && n && r.forEach((function(t) {
                                    o(e, t)
                                }))
                            },
                            o = function t() {
                                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                                    r = arguments.length > 1 ? arguments[1] : void 0;
                                e.length && e.forEach((function(e, n) {
                                    var o = e.type;
                                    if (r[n])
                                        if ("address" === o) r[n] = Ot(r[n]);
                                        else if ("address[" === o.match(/^([^\x5b]*)(\x5b|$)/)[0]) i(r[n]);
                                    else if (0 === o.indexOf("tuple"))
                                        if (Rt(o)) {
                                            var a = Lt(o);
                                            s(e.components, r[n], a)
                                        } else t(e.components, r[n])
                                }))
                            };
                        if (t.inputs && t.inputs.length)
                            for (var a = 0; a < t.inputs.length; a++) {
                                var u = t.inputs[a].type;
                                "bool" === u && "false" === e[a] && (e[a] = !1), r.push(0 === u.indexOf("tuple") ? n(t.inputs[a]) : u), e.length < r.length && e.push("")
                            }
                        return o(t.inputs, e),
                            function(t) {
                                for (var e = 0; e < t.length; e++) {
                                    var r = t[e];
                                    /trcToken/.test(r) && (t[e] = r.replace(/trcToken/, "uint256"))
                                }
                            }(r), Pt.encode(r, e)
                    }

                    function Kt(t, e) {
                        var r = function t(e) {
                                return Array.isArray(e) ? (e.forEach((function(r, n) {
                                    e[n] = t(r)
                                })), e) : Te.address.toHex(e)
                            },
                            n = function t(e, r, n) {
                                n > 1 ? r.length && r.forEach((function(r) {
                                    t(e, r, n - 1)
                                })) : r.length && n && r.forEach((function(t) {
                                    s(e, t)
                                }))
                            },
                            i = function t(e) {
                                if (e && 0 === e.type.indexOf("tuple") && e.components) {
                                    var r = e.components.map((function(e) {
                                        return t(e)
                                    }));
                                    return "tuple(".concat(r.join(","), ")").concat(Rt(e.type))
                                }
                                var n = e.name ? " ".concat(e.name) : "";
                                return /trcToken/.test(e.type) ? e.type.replace(/trcToken/, "uint256") + n : e.type + n
                            },
                            s = function t() {
                                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                                    i = arguments.length > 1 ? arguments[1] : void 0;
                                e.length && e.forEach((function(e, s) {
                                    var o = e.type,
                                        a = e.name;
                                    if (i[s])
                                        if ("address" === o) i[s] = Te.address.toHex(i[s]), a && (i[a] = Te.address.toHex(i[a]));
                                        else if ("address[" === o.match(/^([^\x5b]*)(\x5b|$)/)[0]) r(i[s]), a && r(i[a]);
                                    else if (0 === o.indexOf("tuple"))
                                        if (Rt(o)) {
                                            var u = Lt(o);
                                            n(e.components, i[s], u)
                                        } else t(e.components, i[s])
                                }))
                            };
                        if (t.outputs && t.outputs.length > 0) {
                            for (var o = [], a = 0; a < t.outputs.length; a++) {
                                var u = t.outputs[a].type,
                                    c = t.outputs[a].name ? " ".concat(t.outputs[a].name) : "";
                                o.push(0 === u.indexOf("tuple") ? i(t.outputs[a]) : u + c)
                            }! function(t) {
                                for (var e = 0; e < t.length; e++) {
                                    var r = t[e];
                                    /^trcToken/.test(r) && (t[e] = r.replace(/^trcToken/, "uint256"))
                                }
                            }(o), e && e.length || (e = new Uint8Array(32 * t.outputs.length));
                            var h = Ut(Pt.decode(o, e));
                            return s(t.outputs, h), h
                        }
                        return []
                    }
                    var Ht = n(18),
                        Vt = n.n(Ht),
                        Jt = n(10),
                        zt = n.n(Jt);

                    function Gt(t, e) {
                        var r = Object.keys(t);
                        if (Object.getOwnPropertySymbols) {
                            var n = Object.getOwnPropertySymbols(t);
                            e && (n = n.filter((function(e) {
                                return Object.getOwnPropertyDescriptor(t, e).enumerable
                            }))), r.push.apply(r, n)
                        }
                        return r
                    }

                    function $t(t) {
                        for (var e = 1; e < arguments.length; e++) {
                            var r = null != arguments[e] ? arguments[e] : {};
                            e % 2 ? Gt(Object(r), !0).forEach((function(e) {
                                k()(t, e, r[e])
                            })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : Gt(Object(r)).forEach((function(e) {
                                Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e))
                            }))
                        }
                        return t
                    }
                    var Zt = $t($t({}, {
                            isValidURL: function(t) {
                                return "string" == typeof t && Vt.a.isURL(t.toString(), {
                                    protocols: ["http", "https"],
                                    require_tld: !1
                                })
                            },
                            isObject: function(t) {
                                return t === Object(t) && "[object Array]" !== Object.prototype.toString.call(t)
                            },
                            isArray: function(t) {
                                return Array.isArray(t)
                            },
                            isJson: function(t) {
                                try {
                                    return !!JSON.parse(t)
                                } catch (t) {
                                    return !1
                                }
                            },
                            isBoolean: function(t) {
                                return "boolean" == typeof t
                            },
                            isBigNumber: function(t) {
                                return t && (t instanceof zt.a || t.constructor && "BigNumber" === t.constructor.name)
                            },
                            isString: function(t) {
                                return "string" == typeof t || t && t.constructor && "String" === t.constructor.name
                            },
                            isFunction: function(t) {
                                return "function" == typeof t
                            },
                            isHex: function(t) {
                                return "string" == typeof t && !isNaN(parseInt(t, 16)) && /^(0x|)[a-fA-F0-9]+$/.test(t)
                            },
                            isInteger: function(t) {
                                return null !== t && Number.isInteger(Number(t))
                            },
                            hasProperty: function(t, e) {
                                return Object.prototype.hasOwnProperty.call(t, e)
                            },
                            hasProperties: function(t) {
                                for (var e = this, r = arguments.length, n = new Array(r > 1 ? r - 1 : 0), i = 1; i < r; i++) n[i - 1] = arguments[i];
                                return n.length && !n.map((function(r) {
                                    return e.hasProperty(t, r)
                                })).includes(!1)
                            },
                            mapEvent: function(t) {
                                var e = {
                                    block: t.block_number,
                                    timestamp: t.block_timestamp,
                                    contract: t.contract_address,
                                    name: t.event_name,
                                    transaction: t.transaction_id,
                                    result: t.result,
                                    resourceNode: t.resource_Node || (t._unconfirmed ? "fullNode" : "solidityNode")
                                };
                                return t._unconfirmed && (e.unconfirmed = t._unconfirmed), t._fingerprint && (e.fingerprint = t._fingerprint), e
                            },
                            parseEvent: function(t, e) {
                                var r = e.inputs;
                                if (!t.result) return t;
                                if (this.isObject(t.result))
                                    for (var n = 0; n < r.length; n++) {
                                        var i = r[n];
                                        "address" == i.type && i.name in t.result && (t.result[i.name] = "41" + t.result[i.name].substr(2).toLowerCase())
                                    } else this.isArray(t.result) && (t.result = t.result.reduce((function(t, e, n) {
                                        var i = r[n],
                                            s = i.name;
                                        return "address" == i.type && (e = "41" + e.substr(2).toLowerCase()), t[s] = e, t
                                    }), {}));
                                return t
                            },
                            padLeft: function(t, e, r) {
                                for (var n = t.toString(); n.length < r;) n = e + n;
                                return n
                            },
                            isNotNullOrUndefined: function(t) {
                                return null != t
                            },
                            sleep: function() {
                                var t = arguments;
                                return d()(D.a.mark((function e() {
                                    var r;
                                    return D.a.wrap((function(e) {
                                        for (;;) switch (e.prev = e.next) {
                                            case 0:
                                                return r = t.length > 0 && void 0 !== t[0] ? t[0] : 1e3, e.abrupt("return", new Promise((function(t) {
                                                    return setTimeout(t, r)
                                                })));
                                            case 2:
                                            case "end":
                                                return e.stop()
                                        }
                                    }), e)
                                })))()
                            }
                        }), {}, {
                            code: s,
                            accounts: c,
                            base58: o,
                            bytes: i,
                            crypto: u,
                            abi: h,
                            ethersUtils: a
                        }),
                        Yt = {
                            HttpProvider: function() {
                                function t(e) {
                                    var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 3e4,
                                        n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
                                        i = arguments.length > 3 && void 0 !== arguments[3] && arguments[3],
                                        s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : {},
                                        o = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : "/";
                                    if (v()(this, t), !Zt.isValidURL(e)) throw new Error("Invalid URL provided to HttpProvider");
                                    if (isNaN(r) || r < 0) throw new Error("Invalid timeout duration provided");
                                    if (!Zt.isObject(s)) throw new Error("Invalid headers object provided");
                                    e = e.replace(/\/+$/, ""), this.host = e, this.timeout = r, this.user = n, this.password = i, this.headers = s, this.statusPage = o, this.instance = I.a.create({
                                        baseURL: e,
                                        timeout: r,
                                        headers: s,
                                        auth: n && {
                                            user: n,
                                            password: i
                                        }
                                    })
                                }
                                var e;
                                return y()(t, [{
                                    key: "setStatusPage",
                                    value: function() {
                                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "/";
                                        this.statusPage = t
                                    }
                                }, {
                                    key: "isConnected",
                                    value: (e = d()(D.a.mark((function t() {
                                        var e, r = arguments;
                                        return D.a.wrap((function(t) {
                                            for (;;) switch (t.prev = t.next) {
                                                case 0:
                                                    return e = r.length > 0 && void 0 !== r[0] ? r[0] : this.statusPage, t.abrupt("return", this.request(e).then((function(t) {
                                                        return Zt.hasProperties(t, "blockID", "block_header")
                                                    })).catch((function() {
                                                        return !1
                                                    })));
                                                case 2:
                                                case "end":
                                                    return t.stop()
                                            }
                                        }), t, this)
                                    }))), function() {
                                        return e.apply(this, arguments)
                                    })
                                }, {
                                    key: "request",
                                    value: function(t) {
                                        var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                                            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "get";
                                        return r = r.toLowerCase(), this.instance.request({
                                            data: "post" == r && Object.keys(e).length ? e : null,
                                            params: "get" == r && e,
                                            url: t,
                                            method: r
                                        }).then((function(t) {
                                            return t.data
                                        }))
                                    }
                                }]), t
                            }()
                        },
                        Xt = n(19),
                        Qt = n.n(Xt),
                        te = n(20),
                        ee = n(12),
                        re = n.n(ee),
                        ne = n(5),
                        ie = n.n(ne),
                        se = n(9),
                        oe = n.n(se);

                    function ae(t, e) {
                        var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                        if (!r) {
                            if (Array.isArray(t) || (r = function(t, e) {
                                    if (t) {
                                        if ("string" == typeof t) return ue(t, e);
                                        var r = Object.prototype.toString.call(t).slice(8, -1);
                                        return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? ue(t, e) : void 0
                                    }
                                }(t)) || e && t && "number" == typeof t.length) {
                                r && (t = r);
                                var n = 0,
                                    i = function() {};
                                return {
                                    s: i,
                                    n: function() {
                                        return n >= t.length ? {
                                            done: !0
                                        } : {
                                            done: !1,
                                            value: t[n++]
                                        }
                                    },
                                    e: function(t) {
                                        throw t
                                    },
                                    f: i
                                }
                            }
                            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                        }
                        var s, o = !0,
                            a = !1;
                        return {
                            s: function() {
                                r = r.call(t)
                            },
                            n: function() {
                                var t = r.next();
                                return o = t.done, t
                            },
                            e: function(t) {
                                a = !0, s = t
                            },
                            f: function() {
                                try {
                                    o || null == r.return || r.return()
                                } finally {
                                    if (a) throw s
                                }
                            }
                        }
                    }

                    function ue(t, e) {
                        (null == e || e > t.length) && (e = t.length);
                        for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
                        return n
                    }
                    var ce, he = function() {
                        function t() {
                            var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                            if (v()(this, t), !e || !e instanceof Te) throw new Error("Expected instance of TronWeb");
                            this.tronWeb = e
                        }
                        return y()(t, [{
                            key: "invalid",
                            value: function(t) {
                                return t.msg || "Invalid ".concat(t.name).concat("address" === t.type ? " address" : "", " provided")
                            }
                        }, {
                            key: "notPositive",
                            value: function(t) {
                                return "".concat(t.name, " must be a positive integer")
                            }
                        }, {
                            key: "notEqual",
                            value: function(t) {
                                return t.msg || "".concat(t.names[0], " can not be equal to ").concat(t.names[1])
                            }
                        }, {
                            key: "notValid",
                            value: function() {
                                var t, e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                                    r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new Function,
                                    n = {},
                                    i = !1,
                                    s = ae(e);
                                try {
                                    for (s.s(); !(t = s.n()).done;) {
                                        var o = t.value,
                                            a = o.name,
                                            u = o.names,
                                            c = o.value,
                                            h = o.type,
                                            l = o.gt,
                                            d = o.lt,
                                            f = o.gte,
                                            p = o.lte,
                                            g = (o.se, o.optional);
                                        if (!g || Zt.isNotNullOrUndefined(c) && ("boolean" === h || !1 !== c)) {
                                            switch (n[o.name] = o.value, h) {
                                                case "address":
                                                    this.tronWeb.isAddress(c) ? n[a] = this.tronWeb.address.toHex(c) : i = !0;
                                                    break;
                                                case "integer":
                                                    (!Zt.isInteger(c) || "number" == typeof l && c <= o.gt || "number" == typeof d && c >= o.lt || "number" == typeof f && c < o.gte || "number" == typeof p && c > o.lte) && (i = !0);
                                                    break;
                                                case "positive-integer":
                                                    if (!Zt.isInteger(c) || c <= 0) return void r(this.notPositive(o));
                                                    break;
                                                case "tokenId":
                                                    Zt.isString(c) && c.length || (i = !0);
                                                    break;
                                                case "notEmptyObject":
                                                    Zt.isObject(c) && Object.keys(c).length || (i = !0);
                                                    break;
                                                case "notEqual":
                                                    if (n[u[0]] === n[u[1]]) return r(this.notEqual(o)), !0;
                                                    break;
                                                case "resource":
                                                    ["BANDWIDTH", "ENERGY"].includes(c) || (i = !0);
                                                    break;
                                                case "url":
                                                    Zt.isValidURL(c) || (i = !0);
                                                    break;
                                                case "hex":
                                                    Zt.isHex(c) || (i = !0);
                                                    break;
                                                case "array":
                                                    Array.isArray(c) || (i = !0);
                                                    break;
                                                case "not-empty-string":
                                                    Zt.isString(c) && c.length || (i = !0);
                                                    break;
                                                case "boolean":
                                                    Zt.isBoolean(c) || (i = !0);
                                                    break;
                                                case "string":
                                                    (!Zt.isString(c) || "number" == typeof l && c.length <= o.gt || "number" == typeof d && c.length >= o.lt || "number" == typeof f && c.length < o.gte || "number" == typeof p && c.length > o.lte) && (i = !0)
                                            }
                                            if (i) return r(this.invalid(o)), !0
                                        }
                                    }
                                } catch (t) {
                                    s.e(t)
                                } finally {
                                    s.f()
                                }
                                return !1
                            }
                        }]), t
                    }();

                    function le(t, e) {
                        var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                        if (!r) {
                            if (Array.isArray(t) || (r = function(t, e) {
                                    if (t) {
                                        if ("string" == typeof t) return de(t, e);
                                        var r = Object.prototype.toString.call(t).slice(8, -1);
                                        return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? de(t, e) : void 0
                                    }
                                }(t)) || e && t && "number" == typeof t.length) {
                                r && (t = r);
                                var n = 0,
                                    i = function() {};
                                return {
                                    s: i,
                                    n: function() {
                                        return n >= t.length ? {
                                            done: !0
                                        } : {
                                            done: !1,
                                            value: t[n++]
                                        }
                                    },
                                    e: function(t) {
                                        throw t
                                    },
                                    f: i
                                }
                            }
                            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                        }
                        var s, o = !0,
                            a = !1;
                        return {
                            s: function() {
                                r = r.call(t)
                            },
                            n: function() {
                                var t = r.next();
                                return o = t.done, t
                            },
                            e: function(t) {
                                a = !0, s = t
                            },
                            f: function() {
                                try {
                                    o || null == r.return || r.return()
                                } finally {
                                    if (a) throw s
                                }
                            }
                        }
                    }

                    function de(t, e) {
                        (null == e || e > t.length) && (e = t.length);
                        for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
                        return n
                    }

                    function fe(t) {
                        return Te.address.toHex(t)
                    }

                    function pe(t) {
                        return ce.tronWeb.fromUtf8(t)
                    }

                    function ge(t, e) {
                        return t.Error ? e(t.Error) : t.result && t.result.message ? e(ce.tronWeb.toUtf8(t.result.message)) : e(null, t)
                    }
                    var ve = function() {
                        function t() {
                            var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                            if (v()(this, t), !e || !e instanceof Te) throw new Error("Expected instance of TronWeb");
                            ce = this, this.tronWeb = e, this.injectPromise = ie()(this), this.validator = new he(e)
                        }
                        var e, r, n, i;
                        return y()(t, [{
                            key: "sendTrx",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
                                    e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                                    r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.tronWeb.defaultAddress.hex,
                                    n = arguments.length > 3 ? arguments[3] : void 0,
                                    i = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];
                                if (Zt.isFunction(n) && (i = n, n = {}), Zt.isFunction(r) ? (i = r, r = this.tronWeb.defaultAddress.hex) : Zt.isObject(r) && (n = r, r = this.tronWeb.defaultAddress.hex), !i) return this.injectPromise(this.sendTrx, t, e, r, n);
                                if (e = parseInt(e), !this.validator.notValid([{
                                        name: "recipient",
                                        type: "address",
                                        value: t
                                    }, {
                                        name: "origin",
                                        type: "address",
                                        value: r
                                    }, {
                                        names: ["recipient", "origin"],
                                        type: "notEqual",
                                        msg: "Cannot transfer TRX to the same account"
                                    }, {
                                        name: "amount",
                                        type: "integer",
                                        gt: 0,
                                        value: e
                                    }], i)) {
                                    var s = {
                                        to_address: fe(t),
                                        owner_address: fe(r),
                                        amount: e
                                    };
                                    n && n.permissionId && (s.Permission_id = n.permissionId), this.tronWeb.fullNode.request("wallet/createtransaction", s, "post").then((function(t) {
                                        return ge(t, i)
                                    })).catch((function(t) {
                                        return i(t)
                                    }))
                                }
                            }
                        }, {
                            key: "sendToken",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
                                    e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                                    r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
                                    n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : this.tronWeb.defaultAddress.hex,
                                    i = arguments.length > 4 ? arguments[4] : void 0,
                                    s = arguments.length > 5 && void 0 !== arguments[5] && arguments[5];
                                if (Zt.isFunction(i) && (s = i, i = {}), Zt.isFunction(n) ? (s = n, n = this.tronWeb.defaultAddress.hex) : Zt.isObject(n) && (i = n, n = this.tronWeb.defaultAddress.hex), !s) return this.injectPromise(this.sendToken, t, e, r, n, i);
                                if (e = parseInt(e), !this.validator.notValid([{
                                        name: "recipient",
                                        type: "address",
                                        value: t
                                    }, {
                                        name: "origin",
                                        type: "address",
                                        value: n
                                    }, {
                                        names: ["recipient", "origin"],
                                        type: "notEqual",
                                        msg: "Cannot transfer tokens to the same account"
                                    }, {
                                        name: "amount",
                                        type: "integer",
                                        gt: 0,
                                        value: e
                                    }, {
                                        name: "token ID",
                                        type: "tokenId",
                                        value: r
                                    }], s)) {
                                    var o = {
                                        to_address: fe(t),
                                        owner_address: fe(n),
                                        asset_name: pe(r),
                                        amount: parseInt(e)
                                    };
                                    i && i.permissionId && (o.Permission_id = i.permissionId), this.tronWeb.fullNode.request("wallet/transferasset", o, "post").then((function(t) {
                                        return ge(t, s)
                                    })).catch((function(t) {
                                        return s(t)
                                    }))
                                }
                            }
                        }, {
                            key: "purchaseToken",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
                                    e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                                    r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
                                    n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : this.tronWeb.defaultAddress.hex,
                                    i = arguments.length > 4 ? arguments[4] : void 0,
                                    s = arguments.length > 5 && void 0 !== arguments[5] && arguments[5];
                                if (Zt.isFunction(i) && (s = i, i = {}), Zt.isFunction(n) ? (s = n, n = this.tronWeb.defaultAddress.hex) : Zt.isObject(n) && (i = n, n = this.tronWeb.defaultAddress.hex), !s) return this.injectPromise(this.purchaseToken, t, e, r, n, i);
                                if (!this.validator.notValid([{
                                        name: "buyer",
                                        type: "address",
                                        value: n
                                    }, {
                                        name: "issuer",
                                        type: "address",
                                        value: t
                                    }, {
                                        names: ["buyer", "issuer"],
                                        type: "notEqual",
                                        msg: "Cannot purchase tokens from same account"
                                    }, {
                                        name: "amount",
                                        type: "integer",
                                        gt: 0,
                                        value: r
                                    }, {
                                        name: "token ID",
                                        type: "tokenId",
                                        value: e
                                    }], s)) {
                                    var o = {
                                        to_address: fe(t),
                                        owner_address: fe(n),
                                        asset_name: pe(e),
                                        amount: parseInt(r)
                                    };
                                    i && i.permissionId && (o.Permission_id = i.permissionId), this.tronWeb.fullNode.request("wallet/participateassetissue", o, "post").then((function(t) {
                                        return ge(t, s)
                                    })).catch((function(t) {
                                        return s(t)
                                    }))
                                }
                            }
                        }, {
                            key: "freezeBalance",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
                                    e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 3,
                                    r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "BANDWIDTH",
                                    n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : this.tronWeb.defaultAddress.hex,
                                    i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : void 0,
                                    s = arguments.length > 5 ? arguments[5] : void 0,
                                    o = arguments.length > 6 && void 0 !== arguments[6] && arguments[6];
                                if (Zt.isFunction(s) && (o = s, s = {}), Zt.isFunction(i) ? (o = i, i = void 0) : Zt.isObject(i) && (s = i, i = void 0), Zt.isFunction(n) ? (o = n, n = this.tronWeb.defaultAddress.hex) : Zt.isObject(n) && (s = n, n = this.tronWeb.defaultAddress.hex), Zt.isFunction(e) && (o = e, e = 3), Zt.isFunction(r) && (o = r, r = "BANDWIDTH"), !o) return this.injectPromise(this.freezeBalance, t, e, r, n, i, s);
                                if (!this.validator.notValid([{
                                        name: "origin",
                                        type: "address",
                                        value: n
                                    }, {
                                        name: "receiver",
                                        type: "address",
                                        value: i,
                                        optional: !0
                                    }, {
                                        name: "amount",
                                        type: "integer",
                                        gt: 0,
                                        value: t
                                    }, {
                                        name: "duration",
                                        type: "integer",
                                        gte: 3,
                                        value: e
                                    }, {
                                        name: "resource",
                                        type: "resource",
                                        value: r,
                                        msg: 'Invalid resource provided: Expected "BANDWIDTH" or "ENERGY'
                                    }], o)) {
                                    var a = {
                                        owner_address: fe(n),
                                        frozen_balance: parseInt(t),
                                        frozen_duration: parseInt(e),
                                        resource: r
                                    };
                                    Zt.isNotNullOrUndefined(i) && fe(i) !== fe(n) && (a.receiver_address = fe(i)), s && s.permissionId && (a.Permission_id = s.permissionId), this.tronWeb.fullNode.request("wallet/freezebalance", a, "post").then((function(t) {
                                        return ge(t, o)
                                    })).catch((function(t) {
                                        return o(t)
                                    }))
                                }
                            }
                        }, {
                            key: "unfreezeBalance",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "BANDWIDTH",
                                    e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.tronWeb.defaultAddress.hex,
                                    r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0,
                                    n = arguments.length > 3 ? arguments[3] : void 0,
                                    i = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];
                                if (Zt.isFunction(n) && (i = n, n = {}), Zt.isFunction(r) ? (i = r, r = void 0) : Zt.isObject(r) && (n = r, r = void 0), Zt.isFunction(e) ? (i = e, e = this.tronWeb.defaultAddress.hex) : Zt.isObject(e) && (n = e, e = this.tronWeb.defaultAddress.hex), Zt.isFunction(t) && (i = t, t = "BANDWIDTH"), !i) return this.injectPromise(this.unfreezeBalance, t, e, r, n);
                                if (!this.validator.notValid([{
                                        name: "origin",
                                        type: "address",
                                        value: e
                                    }, {
                                        name: "receiver",
                                        type: "address",
                                        value: r,
                                        optional: !0
                                    }, {
                                        name: "resource",
                                        type: "resource",
                                        value: t,
                                        msg: 'Invalid resource provided: Expected "BANDWIDTH" or "ENERGY'
                                    }], i)) {
                                    var s = {
                                        owner_address: fe(e),
                                        resource: t
                                    };
                                    Zt.isNotNullOrUndefined(r) && fe(r) !== fe(e) && (s.receiver_address = fe(r)), n && n.permissionId && (s.Permission_id = n.permissionId), this.tronWeb.fullNode.request("wallet/unfreezebalance", s, "post").then((function(t) {
                                        return ge(t, i)
                                    })).catch((function(t) {
                                        return i(t)
                                    }))
                                }
                            }
                        }, {
                            key: "withdrawBlockRewards",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,
                                    e = arguments.length > 1 ? arguments[1] : void 0,
                                    r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                                if (Zt.isFunction(e) && (r = e, e = {}), Zt.isFunction(t) ? (r = t, t = this.tronWeb.defaultAddress.hex) : Zt.isObject(t) && (e = t, t = this.tronWeb.defaultAddress.hex), !r) return this.injectPromise(this.withdrawBlockRewards, t, e);
                                if (!this.validator.notValid([{
                                        name: "origin",
                                        type: "address",
                                        value: t
                                    }], r)) {
                                    var n = {
                                        owner_address: fe(t)
                                    };
                                    e && e.permissionId && (n.Permission_id = e.permissionId), this.tronWeb.fullNode.request("wallet/withdrawbalance", n, "post").then((function(t) {
                                        return ge(t, r)
                                    })).catch((function(t) {
                                        return r(t)
                                    }))
                                }
                            }
                        }, {
                            key: "applyForSR",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,
                                    e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                                    r = arguments.length > 2 ? arguments[2] : void 0,
                                    n = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
                                if (Zt.isFunction(r) && (n = r, r = {}), Zt.isObject(e) && Zt.isValidURL(t) && (r = e, e = t, t = this.tronWeb.defaultAddress.hex), !n) return this.injectPromise(this.applyForSR, t, e, r);
                                if (!this.validator.notValid([{
                                        name: "origin",
                                        type: "address",
                                        value: t
                                    }, {
                                        name: "url",
                                        type: "url",
                                        value: e,
                                        msg: "Invalid url provided"
                                    }], n)) {
                                    var i = {
                                        owner_address: fe(t),
                                        url: pe(e)
                                    };
                                    r && r.permissionId && (i.Permission_id = r.permissionId), this.tronWeb.fullNode.request("wallet/createwitness", i, "post").then((function(t) {
                                        return ge(t, n)
                                    })).catch((function(t) {
                                        return n(t)
                                    }))
                                }
                            }
                        }, {
                            key: "vote",
                            value: function() {
                                var t = this,
                                    e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                                    r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.tronWeb.defaultAddress.hex,
                                    n = arguments.length > 2 ? arguments[2] : void 0,
                                    i = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
                                if (Zt.isFunction(n) && (i = n, n = {}), Zt.isFunction(r) ? (i = r, r = this.tronWeb.defaultAddress.hex) : Zt.isObject(r) && (n = r, r = this.tronWeb.defaultAddress.hex), !i) return this.injectPromise(this.vote, e, r, n);
                                if (!this.validator.notValid([{
                                        name: "voter",
                                        type: "address",
                                        value: r
                                    }, {
                                        name: "votes",
                                        type: "notEmptyObject",
                                        value: e
                                    }], i)) {
                                    var s = !1;
                                    if (e = Object.entries(e).map((function(e) {
                                            var r = oe()(e, 2),
                                                n = r[0],
                                                i = r[1];
                                            if (!s) return t.validator.notValid([{
                                                name: "SR",
                                                type: "address",
                                                value: n
                                            }, {
                                                name: "vote count",
                                                type: "integer",
                                                gt: 0,
                                                value: i,
                                                msg: "Invalid vote count provided for SR: " + n
                                            }]) ? s = !0 : {
                                                vote_address: fe(n),
                                                vote_count: parseInt(i)
                                            }
                                        })), !s) {
                                        var o = {
                                            owner_address: fe(r),
                                            votes: e
                                        };
                                        n && n.permissionId && (o.Permission_id = n.permissionId), this.tronWeb.fullNode.request("wallet/votewitnessaccount", o, "post").then((function(t) {
                                            return ge(t, i)
                                        })).catch((function(t) {
                                            return i(t)
                                        }))
                                    }
                                }
                            }
                        }, {
                            key: "createSmartContract",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                                    e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.tronWeb.defaultAddress.hex,
                                    r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                                if (Zt.isFunction(e) && (r = e, e = this.tronWeb.defaultAddress.hex), !r) return this.injectPromise(this.createSmartContract, t, e);
                                var n = t.feeLimit || this.tronWeb.feeLimit,
                                    i = t.userFeePercentage;
                                "number" == typeof i || i || (i = 100);
                                var s = t.originEnergyLimit || 1e7,
                                    o = t.callValue || 0,
                                    a = t.tokenValue,
                                    u = t.tokenId || t.token_id,
                                    c = t.abi,
                                    h = void 0 !== c && c,
                                    l = t.bytecode,
                                    d = void 0 !== l && l,
                                    f = t.parameters,
                                    p = void 0 === f ? [] : f,
                                    g = t.name,
                                    v = void 0 === g ? "" : g;
                                if (h && Zt.isString(h)) try {
                                    h = JSON.parse(h)
                                } catch (t) {
                                    return r("Invalid options.abi provided")
                                }
                                if (h.entrys && (h = h.entrys), !Zt.isArray(h)) return r("Invalid options.abi provided");
                                var m = h.some((function(t) {
                                    return "constructor" === t.type && "payable" === t.stateMutability.toLowerCase()
                                }));
                                if (!this.validator.notValid([{
                                        name: "bytecode",
                                        type: "hex",
                                        value: d
                                    }, {
                                        name: "feeLimit",
                                        type: "integer",
                                        value: n,
                                        gt: 0
                                    }, {
                                        name: "callValue",
                                        type: "integer",
                                        value: o,
                                        gte: 0
                                    }, {
                                        name: "userFeePercentage",
                                        type: "integer",
                                        value: i,
                                        gte: 0,
                                        lte: 100
                                    }, {
                                        name: "originEnergyLimit",
                                        type: "integer",
                                        value: s,
                                        gte: 0,
                                        lte: 1e7
                                    }, {
                                        name: "parameters",
                                        type: "array",
                                        value: p
                                    }, {
                                        name: "issuer",
                                        type: "address",
                                        value: e
                                    }, {
                                        name: "tokenValue",
                                        type: "integer",
                                        value: a,
                                        gte: 0,
                                        optional: !0
                                    }, {
                                        name: "tokenId",
                                        type: "integer",
                                        value: u,
                                        gte: 0,
                                        optional: !0
                                    }], r)) {
                                    if (m && 0 == o && 0 == a) return r("When contract is payable, options.callValue or options.tokenValue must be a positive integer");
                                    if (!m && (o > 0 || a > 0)) return r("When contract is not payable, options.callValue and options.tokenValue must be 0");
                                    if (t.rawParameter && Zt.isString(t.rawParameter)) p = t.rawParameter.replace(/^(0x)/, "");
                                    else if (t.funcABIV2) p = qt(t.funcABIV2, t.parametersV2).replace(/^(0x)/, "");
                                    else {
                                        var y = h.find((function(t) {
                                            return "constructor" === t.type
                                        }));
                                        if (void 0 !== y && y) {
                                            var w = new lt,
                                                b = [],
                                                C = [];
                                            if (y = y.inputs, p.length != y.length) return r("constructor needs ".concat(y.length, " but ").concat(p.length, " provided"));
                                            for (var A = 0; A < p.length; A++) {
                                                var B = y[A].type,
                                                    F = p[A];
                                                if (!B || !Zt.isString(B) || !B.length) return r("Invalid parameter type provided: " + B);
                                                "address" === B ? F = fe(F).replace(q, "0x") : "address[" === B.match(/^([^\x5b]*)(\x5b|$)/)[0] ? F = F.map((function(t) {
                                                    return fe(t).replace(q, "0x")
                                                })) : /trcToken/.test(B) && (B = B.replace(/trcToken/, "uint256")), b.push(B), C.push(F)
                                            }
                                            try {
                                                p = w.encode(b, C).replace(/^(0x)/, "")
                                            } catch (t) {
                                                return r(t)
                                            }
                                        } else p = ""
                                    }
                                    var E = {
                                        owner_address: fe(e),
                                        fee_limit: parseInt(n),
                                        call_value: parseInt(o),
                                        consume_user_resource_percent: i,
                                        origin_energy_limit: s,
                                        abi: JSON.stringify(h),
                                        bytecode: d,
                                        parameter: p,
                                        name: v
                                    };
                                    Zt.isNotNullOrUndefined(a) && (E.call_token_value = parseInt(a)), Zt.isNotNullOrUndefined(u) && (E.token_id = parseInt(u)), t && t.permissionId && (E.Permission_id = t.permissionId), this.tronWeb.fullNode.request("wallet/deploycontract", E, "post").then((function(t) {
                                        return ge(t, r)
                                    })).catch((function(t) {
                                        return r(t)
                                    }))
                                }
                            }
                        }, {
                            key: "triggerSmartContract",
                            value: function() {
                                for (var t = arguments.length, e = new Array(t), r = 0; r < t; r++) e[r] = arguments[r];
                                return "object" !== p()(e[2]) && (e[2] = {
                                    feeLimit: e[2],
                                    callValue: e[3]
                                }, e.splice(3, 1)), this._triggerSmartContract.apply(this, e)
                            }
                        }, {
                            key: "triggerConstantContract",
                            value: function() {
                                for (var t = arguments.length, e = new Array(t), r = 0; r < t; r++) e[r] = arguments[r];
                                return e[2]._isConstant = !0, this.triggerSmartContract.apply(this, e)
                            }
                        }, {
                            key: "triggerConfirmedConstantContract",
                            value: function() {
                                for (var t = arguments.length, e = new Array(t), r = 0; r < t; r++) e[r] = arguments[r];
                                return e[2]._isConstant = !0, e[2].confirmed = !0, this.triggerSmartContract.apply(this, e)
                            }
                        }, {
                            key: "_triggerSmartContract",
                            value: function(t, e) {
                                var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
                                    n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : [],
                                    i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : this.tronWeb.defaultAddress.hex,
                                    s = arguments.length > 5 && void 0 !== arguments[5] && arguments[5];
                                if (Zt.isFunction(i) && (s = i, i = this.tronWeb.defaultAddress.hex), Zt.isFunction(n) && (s = n, n = []), !s) return this.injectPromise(this._triggerSmartContract, t, e, r, n, i);
                                var o = Object.assign({
                                        callValue: 0,
                                        feeLimit: this.tronWeb.feeLimit
                                    }, r),
                                    a = o.tokenValue,
                                    u = o.tokenId,
                                    c = o.callValue,
                                    h = o.feeLimit;
                                if (!this.validator.notValid([{
                                        name: "feeLimit",
                                        type: "integer",
                                        value: h,
                                        gt: 0
                                    }, {
                                        name: "callValue",
                                        type: "integer",
                                        value: c,
                                        gte: 0
                                    }, {
                                        name: "parameters",
                                        type: "array",
                                        value: n
                                    }, {
                                        name: "contract",
                                        type: "address",
                                        value: t
                                    }, {
                                        name: "issuer",
                                        type: "address",
                                        value: i,
                                        optional: !0
                                    }, {
                                        name: "tokenValue",
                                        type: "integer",
                                        value: a,
                                        gte: 0,
                                        optional: !0
                                    }, {
                                        name: "tokenId",
                                        type: "integer",
                                        value: u,
                                        gte: 0,
                                        optional: !0
                                    }], s)) {
                                    var l = {
                                        contract_address: fe(t),
                                        owner_address: fe(i)
                                    };
                                    if (e && Zt.isString(e)) {
                                        if (e = e.replace("/s*/g", ""), n.length) {
                                            for (var d = new lt, f = [], p = [], g = 0; g < n.length; g++) {
                                                var v = n[g],
                                                    m = v.type,
                                                    y = v.value;
                                                if (!m || !Zt.isString(m) || !m.length) return s("Invalid parameter type provided: " + m);
                                                "address" === m ? y = fe(y).replace(q, "0x") : "address[" === m.match(/^([^\x5b]*)(\x5b|$)/)[0] && (y = y.map((function(t) {
                                                    return fe(t).replace(q, "0x")
                                                }))), f.push(m), p.push(y)
                                            }
                                            try {
                                                f = f.map((function(t) {
                                                    return /trcToken/.test(t) && (t = t.replace(/trcToken/, "uint256")), t
                                                })), n = d.encode(f, p).replace(/^(0x)/, "")
                                            } catch (t) {
                                                return s(t)
                                            }
                                        } else n = "";
                                        r.funcABIV2 && (n = qt(r.funcABIV2, r.parametersV2).replace(/^(0x)/, "")), r.shieldedParameter && Zt.isString(r.shieldedParameter) && (n = r.shieldedParameter.replace(/^(0x)/, "")), r.rawParameter && Zt.isString(r.rawParameter) && (n = r.rawParameter.replace(/^(0x)/, "")), l.function_selector = e, l.parameter = n
                                    }
                                    r._isConstant || (l.call_value = parseInt(c), l.fee_limit = parseInt(h), Zt.isNotNullOrUndefined(a) && (l.call_token_value = parseInt(a)), Zt.isNotNullOrUndefined(u) && (l.token_id = parseInt(u))), r.permissionId && (l.Permission_id = r.permissionId), this.tronWeb[r.confirmed ? "solidityNode" : "fullNode"].request("wallet".concat(r.confirmed ? "solidity" : "", "/trigger").concat(r._isConstant ? "constant" : "smart", "contract"), l, "post").then((function(t) {
                                        return ge(t, s)
                                    })).catch((function(t) {
                                        return s(t)
                                    }))
                                }
                            }
                        }, {
                            key: "clearABI",
                            value: function(t) {
                                var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.tronWeb.defaultAddress.hex,
                                    r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                                if (!r) return this.injectPromise(this.clearABI, t, e);
                                if (!this.tronWeb.isAddress(t)) return r("Invalid contract address provided");
                                if (!this.tronWeb.isAddress(e)) return r("Invalid owner address provided");
                                var n = {
                                    contract_address: fe(t),
                                    owner_address: fe(e)
                                };
                                this.tronWeb.trx.cache.contracts[t] && delete this.tronWeb.trx.cache.contracts[t], this.tronWeb.fullNode.request("wallet/clearabi", n, "post").then((function(t) {
                                    return ge(t, r)
                                })).catch((function(t) {
                                    return r(t)
                                }))
                            }
                        }, {
                            key: "updateBrokerage",
                            value: function(t) {
                                var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.tronWeb.defaultAddress.hex,
                                    r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                                if (!r) return this.injectPromise(this.updateBrokerage, t, e);
                                if (!Zt.isNotNullOrUndefined(t)) return r("Invalid brokerage provided");
                                if (!Zt.isInteger(t) || t < 0 || t > 100) return r("Brokerage must be an integer between 0 and 100");
                                if (!this.tronWeb.isAddress(e)) return r("Invalid owner address provided");
                                var n = {
                                    brokerage: parseInt(t),
                                    owner_address: fe(e)
                                };
                                this.tronWeb.fullNode.request("wallet/updateBrokerage", n, "post").then((function(t) {
                                    return ge(t, r)
                                })).catch((function(t) {
                                    return r(t)
                                }))
                            }
                        }, {
                            key: "createToken",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                                    e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.tronWeb.defaultAddress.hex,
                                    r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                                if (Zt.isFunction(e) && (r = e, e = this.tronWeb.defaultAddress.hex), !r) return this.injectPromise(this.createToken, t, e);
                                var n = t.name,
                                    i = void 0 !== n && n,
                                    s = t.abbreviation,
                                    o = void 0 !== s && s,
                                    a = t.description,
                                    u = void 0 !== a && a,
                                    c = t.url,
                                    h = void 0 !== c && c,
                                    l = t.totalSupply,
                                    d = void 0 === l ? 0 : l,
                                    f = t.trxRatio,
                                    p = void 0 === f ? 1 : f,
                                    g = t.tokenRatio,
                                    v = void 0 === g ? 1 : g,
                                    m = t.saleStart,
                                    y = void 0 === m ? Date.now() : m,
                                    w = t.saleEnd,
                                    b = void 0 !== w && w,
                                    C = t.freeBandwidth,
                                    A = void 0 === C ? 0 : C,
                                    B = t.freeBandwidthLimit,
                                    F = void 0 === B ? 0 : B,
                                    E = t.frozenAmount,
                                    x = void 0 === E ? 0 : E,
                                    _ = t.frozenDuration,
                                    k = void 0 === _ ? 0 : _,
                                    M = t.voteScore,
                                    D = t.precision;
                                if (!this.validator.notValid([{
                                        name: "Supply amount",
                                        type: "positive-integer",
                                        value: d
                                    }, {
                                        name: "TRX ratio",
                                        type: "positive-integer",
                                        value: p
                                    }, {
                                        name: "Token ratio",
                                        type: "positive-integer",
                                        value: v
                                    }, {
                                        name: "token abbreviation",
                                        type: "not-empty-string",
                                        value: o
                                    }, {
                                        name: "token name",
                                        type: "not-empty-string",
                                        value: i
                                    }, {
                                        name: "token description",
                                        type: "not-empty-string",
                                        value: u
                                    }, {
                                        name: "token url",
                                        type: "url",
                                        value: h
                                    }, {
                                        name: "issuer",
                                        type: "address",
                                        value: e
                                    }, {
                                        name: "sale start timestamp",
                                        type: "integer",
                                        value: y,
                                        gte: Date.now()
                                    }, {
                                        name: "sale end timestamp",
                                        type: "integer",
                                        value: b,
                                        gt: y
                                    }, {
                                        name: "Free bandwidth amount",
                                        type: "integer",
                                        value: A,
                                        gte: 0
                                    }, {
                                        name: "Free bandwidth limit",
                                        type: "integer",
                                        value: F,
                                        gte: 0
                                    }, {
                                        name: "Frozen supply",
                                        type: "integer",
                                        value: x,
                                        gte: 0
                                    }, {
                                        name: "Frozen duration",
                                        type: "integer",
                                        value: k,
                                        gte: 0
                                    }], r)) {
                                    if (Zt.isNotNullOrUndefined(M) && (!Zt.isInteger(M) || M <= 0)) return r("voteScore must be a positive integer greater than 0");
                                    if (Zt.isNotNullOrUndefined(D) && (!Zt.isInteger(D) || D < 0 || D > 6)) return r("precision must be a positive integer >= 0 and <= 6");
                                    var S = {
                                        owner_address: fe(e),
                                        name: pe(i),
                                        abbr: pe(o),
                                        description: pe(u),
                                        url: pe(h),
                                        total_supply: parseInt(d),
                                        trx_num: parseInt(p),
                                        num: parseInt(v),
                                        start_time: parseInt(y),
                                        end_time: parseInt(b),
                                        free_asset_net_limit: parseInt(A),
                                        public_free_asset_net_limit: parseInt(F),
                                        frozen_supply: {
                                            frozen_amount: parseInt(x),
                                            frozen_days: parseInt(k)
                                        }
                                    };
                                    parseInt(x) > 0 || delete S.frozen_supply, D && !isNaN(parseInt(D)) && (S.precision = parseInt(D)), M && !isNaN(parseInt(M)) && (S.vote_score = parseInt(M)), t && t.permissionId && (S.Permission_id = t.permissionId), this.tronWeb.fullNode.request("wallet/createassetissue", S, "post").then((function(t) {
                                        return ge(t, r)
                                    })).catch((function(t) {
                                        return r(t)
                                    }))
                                }
                            }
                        }, {
                            key: "updateAccount",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
                                    e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.tronWeb.defaultAddress.hex,
                                    r = arguments.length > 2 ? arguments[2] : void 0,
                                    n = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
                                if (Zt.isFunction(r) && (n = r, r = {}), Zt.isFunction(e) ? (n = e, e = this.tronWeb.defaultAddress.hex) : Zt.isObject(e) && (r = e, e = this.tronWeb.defaultAddress.hex), !n) return this.injectPromise(this.updateAccount, t, e, r);
                                if (!this.validator.notValid([{
                                        name: "Name",
                                        type: "not-empty-string",
                                        value: t
                                    }, {
                                        name: "origin",
                                        type: "address",
                                        value: e
                                    }], n)) {
                                    var i = {
                                        account_name: pe(t),
                                        owner_address: fe(e)
                                    };
                                    r && r.permissionId && (i.Permission_id = r.permissionId), this.tronWeb.fullNode.request("wallet/updateaccount", i, "post").then((function(t) {
                                        return ge(t, n)
                                    })).catch((function(t) {
                                        return n(t)
                                    }))
                                }
                            }
                        }, {
                            key: "setAccountId",
                            value: function(t) {
                                var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.tronWeb.defaultAddress.hex,
                                    r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                                if (Zt.isFunction(e) && (r = e, e = this.tronWeb.defaultAddress.hex), !r) return this.injectPromise(this.setAccountId, t, e);
                                t && Zt.isString(t) && t.startsWith("0x") && (t = t.slice(2)), this.validator.notValid([{
                                    name: "accountId",
                                    type: "hex",
                                    value: t
                                }, {
                                    name: "accountId",
                                    type: "string",
                                    lte: 32,
                                    gte: 8,
                                    value: t
                                }, {
                                    name: "origin",
                                    type: "address",
                                    value: e
                                }], r) || this.tronWeb.fullNode.request("wallet/setaccountid", {
                                    account_id: t,
                                    owner_address: fe(e)
                                }, "post").then((function(t) {
                                    return ge(t, r)
                                })).catch((function(t) {
                                    return r(t)
                                }))
                            }
                        }, {
                            key: "updateToken",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                                    e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.tronWeb.defaultAddress.hex,
                                    r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                                if (Zt.isFunction(e) ? (r = e, e = this.tronWeb.defaultAddress.hex) : Zt.isObject(e) && (t = e, e = this.tronWeb.defaultAddress.hex), !r) return this.injectPromise(this.updateToken, t, e);
                                var n = t,
                                    i = n.description,
                                    s = void 0 !== i && i,
                                    o = n.url,
                                    a = void 0 !== o && o,
                                    u = n.freeBandwidth,
                                    c = void 0 === u ? 0 : u,
                                    h = n.freeBandwidthLimit,
                                    l = void 0 === h ? 0 : h;
                                if (!this.validator.notValid([{
                                        name: "token description",
                                        type: "not-empty-string",
                                        value: s
                                    }, {
                                        name: "token url",
                                        type: "url",
                                        value: a
                                    }, {
                                        name: "issuer",
                                        type: "address",
                                        value: e
                                    }, {
                                        name: "Free bandwidth amount",
                                        type: "positive-integer",
                                        value: c
                                    }, {
                                        name: "Free bandwidth limit",
                                        type: "positive-integer",
                                        value: l
                                    }], r)) {
                                    var d = {
                                        owner_address: fe(e),
                                        description: pe(s),
                                        url: pe(a),
                                        new_limit: parseInt(c),
                                        new_public_limit: parseInt(l)
                                    };
                                    t && t.permissionId && (d.Permission_id = t.permissionId), this.tronWeb.fullNode.request("wallet/updateasset", d, "post").then((function(t) {
                                        return ge(t, r)
                                    })).catch((function(t) {
                                        return r(t)
                                    }))
                                }
                            }
                        }, {
                            key: "sendAsset",
                            value: function() {
                                return this.sendToken.apply(this, arguments)
                            }
                        }, {
                            key: "purchaseAsset",
                            value: function() {
                                return this.purchaseToken.apply(this, arguments)
                            }
                        }, {
                            key: "createAsset",
                            value: function() {
                                return this.createToken.apply(this, arguments)
                            }
                        }, {
                            key: "updateAsset",
                            value: function() {
                                return this.updateToken.apply(this, arguments)
                            }
                        }, {
                            key: "createProposal",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
                                    e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.tronWeb.defaultAddress.hex,
                                    r = arguments.length > 2 ? arguments[2] : void 0,
                                    n = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
                                if (Zt.isFunction(r) && (n = r, r = {}), Zt.isFunction(e) ? (n = e, e = this.tronWeb.defaultAddress.hex) : Zt.isObject(e) && (r = e, e = this.tronWeb.defaultAddress.hex), !n) return this.injectPromise(this.createProposal, t, e, r);
                                if (!this.validator.notValid([{
                                        name: "issuer",
                                        type: "address",
                                        value: e
                                    }], n)) {
                                    var i = "Invalid proposal parameters provided";
                                    if (!t) return n(i);
                                    Zt.isArray(t) || (t = [t]);
                                    var s, o = le(t);
                                    try {
                                        for (o.s(); !(s = o.n()).done;) {
                                            var a = s.value;
                                            if (!Zt.isObject(a)) return n(i)
                                        }
                                    } catch (t) {
                                        o.e(t)
                                    } finally {
                                        o.f()
                                    }
                                    var u = {
                                        owner_address: fe(e),
                                        parameters: t
                                    };
                                    r && r.permissionId && (u.Permission_id = r.permissionId), this.tronWeb.fullNode.request("wallet/proposalcreate", u, "post").then((function(t) {
                                        return ge(t, n)
                                    })).catch((function(t) {
                                        return n(t)
                                    }))
                                }
                            }
                        }, {
                            key: "deleteProposal",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
                                    e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.tronWeb.defaultAddress.hex,
                                    r = arguments.length > 2 ? arguments[2] : void 0,
                                    n = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
                                if (Zt.isFunction(r) && (n = r, r = {}), Zt.isFunction(e) ? (n = e, e = this.tronWeb.defaultAddress.hex) : Zt.isObject(e) && (r = e, e = this.tronWeb.defaultAddress.hex), !n) return this.injectPromise(this.deleteProposal, t, e, r);
                                if (!this.validator.notValid([{
                                        name: "issuer",
                                        type: "address",
                                        value: e
                                    }, {
                                        name: "proposalID",
                                        type: "integer",
                                        value: t,
                                        gte: 0
                                    }], n)) {
                                    var i = {
                                        owner_address: fe(e),
                                        proposal_id: parseInt(t)
                                    };
                                    r && r.permissionId && (i.Permission_id = r.permissionId), this.tronWeb.fullNode.request("wallet/proposaldelete", i, "post").then((function(t) {
                                        return ge(t, n)
                                    })).catch((function(t) {
                                        return n(t)
                                    }))
                                }
                            }
                        }, {
                            key: "voteProposal",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
                                    e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                                    r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.tronWeb.defaultAddress.hex,
                                    n = arguments.length > 3 ? arguments[3] : void 0,
                                    i = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];
                                if (Zt.isFunction(n) && (i = n, n = {}), Zt.isFunction(r) ? (i = r, r = this.tronWeb.defaultAddress.hex) : Zt.isObject(r) && (n = r, r = this.tronWeb.defaultAddress.hex), !i) return this.injectPromise(this.voteProposal, t, e, r, n);
                                if (!this.validator.notValid([{
                                        name: "voter",
                                        type: "address",
                                        value: r
                                    }, {
                                        name: "proposalID",
                                        type: "integer",
                                        value: t,
                                        gte: 0
                                    }, {
                                        name: "has approval",
                                        type: "boolean",
                                        value: e
                                    }], i)) {
                                    var s = {
                                        owner_address: fe(r),
                                        proposal_id: parseInt(t),
                                        is_add_approval: e
                                    };
                                    n && n.permissionId && (s.Permission_id = n.permissionId), this.tronWeb.fullNode.request("wallet/proposalapprove", s, "post").then((function(t) {
                                        return ge(t, i)
                                    })).catch((function(t) {
                                        return i(t)
                                    }))
                                }
                            }
                        }, {
                            key: "createTRXExchange",
                            value: function(t, e, r) {
                                var n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : this.tronWeb.defaultAddress.hex,
                                    i = arguments.length > 4 ? arguments[4] : void 0,
                                    s = arguments.length > 5 && void 0 !== arguments[5] && arguments[5];
                                if (Zt.isFunction(i) && (s = i, i = {}), Zt.isFunction(n) ? (s = n, n = this.tronWeb.defaultAddress.hex) : Zt.isObject(n) && (i = n, n = this.tronWeb.defaultAddress.hex), !s) return this.injectPromise(this.createTRXExchange, t, e, r, n, i);
                                if (!this.validator.notValid([{
                                        name: "owner",
                                        type: "address",
                                        value: n
                                    }, {
                                        name: "token name",
                                        type: "not-empty-string",
                                        value: t
                                    }, {
                                        name: "token balance",
                                        type: "positive-integer",
                                        value: e
                                    }, {
                                        name: "trx balance",
                                        type: "positive-integer",
                                        value: r
                                    }], s)) {
                                    var o = {
                                        owner_address: fe(n),
                                        first_token_id: pe(t),
                                        first_token_balance: e,
                                        second_token_id: "5f",
                                        second_token_balance: r
                                    };
                                    i && i.permissionId && (o.Permission_id = i.permissionId), this.tronWeb.fullNode.request("wallet/exchangecreate", o, "post").then((function(t) {
                                        s(null, t)
                                    })).catch((function(t) {
                                        return s(t)
                                    }))
                                }
                            }
                        }, {
                            key: "createTokenExchange",
                            value: function(t, e, r, n) {
                                var i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : this.tronWeb.defaultAddress.hex,
                                    s = arguments.length > 5 ? arguments[5] : void 0,
                                    o = arguments.length > 6 && void 0 !== arguments[6] && arguments[6];
                                if (Zt.isFunction(s) && (o = s, s = {}), Zt.isFunction(i) ? (o = i, i = this.tronWeb.defaultAddress.hex) : Zt.isObject(i) && (s = i, i = this.tronWeb.defaultAddress.hex), !o) return this.injectPromise(this.createTokenExchange, t, e, r, n, i, s);
                                if (!this.validator.notValid([{
                                        name: "owner",
                                        type: "address",
                                        value: i
                                    }, {
                                        name: "first token name",
                                        type: "not-empty-string",
                                        value: t
                                    }, {
                                        name: "second token name",
                                        type: "not-empty-string",
                                        value: r
                                    }, {
                                        name: "first token balance",
                                        type: "positive-integer",
                                        value: e
                                    }, {
                                        name: "second token balance",
                                        type: "positive-integer",
                                        value: n
                                    }], o)) {
                                    var a = {
                                        owner_address: fe(i),
                                        first_token_id: pe(t),
                                        first_token_balance: e,
                                        second_token_id: pe(r),
                                        second_token_balance: n
                                    };
                                    s && s.permissionId && (a.Permission_id = s.permissionId), this.tronWeb.fullNode.request("wallet/exchangecreate", a, "post").then((function(t) {
                                        o(null, t)
                                    })).catch((function(t) {
                                        return o(t)
                                    }))
                                }
                            }
                        }, {
                            key: "injectExchangeTokens",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
                                    e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                                    r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
                                    n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : this.tronWeb.defaultAddress.hex,
                                    i = arguments.length > 4 ? arguments[4] : void 0,
                                    s = arguments.length > 5 && void 0 !== arguments[5] && arguments[5];
                                if (Zt.isFunction(i) && (s = i, i = {}), Zt.isFunction(n) ? (s = n, n = this.tronWeb.defaultAddress.hex) : Zt.isObject(n) && (i = n, n = this.tronWeb.defaultAddress.hex), !s) return this.injectPromise(this.injectExchangeTokens, t, e, r, n, i);
                                if (!this.validator.notValid([{
                                        name: "owner",
                                        type: "address",
                                        value: n
                                    }, {
                                        name: "token name",
                                        type: "not-empty-string",
                                        value: e
                                    }, {
                                        name: "token amount",
                                        type: "integer",
                                        value: r,
                                        gte: 1
                                    }, {
                                        name: "exchangeID",
                                        type: "integer",
                                        value: t,
                                        gte: 0
                                    }], s)) {
                                    var o = {
                                        owner_address: fe(n),
                                        exchange_id: parseInt(t),
                                        token_id: pe(e),
                                        quant: parseInt(r)
                                    };
                                    i && i.permissionId && (o.Permission_id = i.permissionId), this.tronWeb.fullNode.request("wallet/exchangeinject", o, "post").then((function(t) {
                                        return ge(t, s)
                                    })).catch((function(t) {
                                        return s(t)
                                    }))
                                }
                            }
                        }, {
                            key: "withdrawExchangeTokens",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
                                    e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                                    r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
                                    n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : this.tronWeb.defaultAddress.hex,
                                    i = arguments.length > 4 ? arguments[4] : void 0,
                                    s = arguments.length > 5 && void 0 !== arguments[5] && arguments[5];
                                if (Zt.isFunction(i) && (s = i, i = {}), Zt.isFunction(n) ? (s = n, n = this.tronWeb.defaultAddress.hex) : Zt.isObject(n) && (i = n, n = this.tronWeb.defaultAddress.hex), !s) return this.injectPromise(this.withdrawExchangeTokens, t, e, r, n, i);
                                if (!this.validator.notValid([{
                                        name: "owner",
                                        type: "address",
                                        value: n
                                    }, {
                                        name: "token name",
                                        type: "not-empty-string",
                                        value: e
                                    }, {
                                        name: "token amount",
                                        type: "integer",
                                        value: r,
                                        gte: 1
                                    }, {
                                        name: "exchangeID",
                                        type: "integer",
                                        value: t,
                                        gte: 0
                                    }], s)) {
                                    var o = {
                                        owner_address: fe(n),
                                        exchange_id: parseInt(t),
                                        token_id: pe(e),
                                        quant: parseInt(r)
                                    };
                                    i && i.permissionId && (o.Permission_id = i.permissionId), this.tronWeb.fullNode.request("wallet/exchangewithdraw", o, "post").then((function(t) {
                                        return ge(t, s)
                                    })).catch((function(t) {
                                        return s(t)
                                    }))
                                }
                            }
                        }, {
                            key: "tradeExchangeTokens",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
                                    e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                                    r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
                                    n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0,
                                    i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : this.tronWeb.defaultAddress.hex,
                                    s = arguments.length > 5 ? arguments[5] : void 0,
                                    o = arguments.length > 6 && void 0 !== arguments[6] && arguments[6];
                                if (Zt.isFunction(s) && (o = s, s = {}), Zt.isFunction(i) ? (o = i, i = this.tronWeb.defaultAddress.hex) : Zt.isObject(i) && (s = i, i = this.tronWeb.defaultAddress.hex), !o) return this.injectPromise(this.tradeExchangeTokens, t, e, r, n, i, s);
                                if (!this.validator.notValid([{
                                        name: "owner",
                                        type: "address",
                                        value: i
                                    }, {
                                        name: "token name",
                                        type: "not-empty-string",
                                        value: e
                                    }, {
                                        name: "tokenAmountSold",
                                        type: "integer",
                                        value: r,
                                        gte: 1
                                    }, {
                                        name: "tokenAmountExpected",
                                        type: "integer",
                                        value: n,
                                        gte: 1
                                    }, {
                                        name: "exchangeID",
                                        type: "integer",
                                        value: t,
                                        gte: 0
                                    }], o)) {
                                    var a = {
                                        owner_address: fe(i),
                                        exchange_id: parseInt(t),
                                        token_id: this.tronWeb.fromAscii(e),
                                        quant: parseInt(r),
                                        expected: parseInt(n)
                                    };
                                    s && s.permissionId && (a.Permission_id = s.permissionId), this.tronWeb.fullNode.request("wallet/exchangetransaction", a, "post").then((function(t) {
                                        return ge(t, o)
                                    })).catch((function(t) {
                                        return o(t)
                                    }))
                                }
                            }
                        }, {
                            key: "updateSetting",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
                                    e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                                    r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.tronWeb.defaultAddress.hex,
                                    n = arguments.length > 3 ? arguments[3] : void 0,
                                    i = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];
                                if (Zt.isFunction(n) && (i = n, n = {}), Zt.isFunction(r) ? (i = r, r = this.tronWeb.defaultAddress.hex) : Zt.isObject(r) && (n = r, r = this.tronWeb.defaultAddress.hex), !i) return this.injectPromise(this.updateSetting, t, e, r, n);
                                if (!this.validator.notValid([{
                                        name: "owner",
                                        type: "address",
                                        value: r
                                    }, {
                                        name: "contract",
                                        type: "address",
                                        value: t
                                    }, {
                                        name: "userFeePercentage",
                                        type: "integer",
                                        value: e,
                                        gte: 0,
                                        lte: 100
                                    }], i)) {
                                    var s = {
                                        owner_address: fe(r),
                                        contract_address: fe(t),
                                        consume_user_resource_percent: e
                                    };
                                    n && n.permissionId && (s.Permission_id = n.permissionId), this.tronWeb.fullNode.request("wallet/updatesetting", s, "post").then((function(t) {
                                        return ge(t, i)
                                    })).catch((function(t) {
                                        return i(t)
                                    }))
                                }
                            }
                        }, {
                            key: "updateEnergyLimit",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
                                    e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                                    r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.tronWeb.defaultAddress.hex,
                                    n = arguments.length > 3 ? arguments[3] : void 0,
                                    i = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];
                                if (Zt.isFunction(n) && (i = n, n = {}), Zt.isFunction(r) ? (i = r, r = this.tronWeb.defaultAddress.hex) : Zt.isObject(r) && (n = r, r = this.tronWeb.defaultAddress.hex), !i) return this.injectPromise(this.updateEnergyLimit, t, e, r, n);
                                if (!this.validator.notValid([{
                                        name: "owner",
                                        type: "address",
                                        value: r
                                    }, {
                                        name: "contract",
                                        type: "address",
                                        value: t
                                    }, {
                                        name: "originEnergyLimit",
                                        type: "integer",
                                        value: e,
                                        gte: 0,
                                        lte: 1e7
                                    }], i)) {
                                    var s = {
                                        owner_address: fe(r),
                                        contract_address: fe(t),
                                        origin_energy_limit: e
                                    };
                                    n && n.permissionId && (s.Permission_id = n.permissionId), this.tronWeb.fullNode.request("wallet/updateenergylimit", s, "post").then((function(t) {
                                        return ge(t, i)
                                    })).catch((function(t) {
                                        return i(t)
                                    }))
                                }
                            }
                        }, {
                            key: "checkPermissions",
                            value: function(t, e) {
                                if (t) {
                                    if (t.type !== e || !t.permission_name || !Zt.isString(t.permission_name) || !Zt.isInteger(t.threshold) || t.threshold < 1 || !t.keys) return !1;
                                    var r, n = le(t.keys);
                                    try {
                                        for (n.s(); !(r = n.n()).done;) {
                                            var i = r.value;
                                            if (!this.tronWeb.isAddress(i.address) || !Zt.isInteger(i.weight) || i.weight > t.threshold || i.weight < 1 || 2 === e && !t.operations) return !1
                                        }
                                    } catch (t) {
                                        n.e(t)
                                    } finally {
                                        n.f()
                                    }
                                }
                                return !0
                            }
                        }, {
                            key: "updateAccountPermissions",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,
                                    e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                                    r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
                                    n = arguments.length > 3 && void 0 !== arguments[3] && arguments[3],
                                    i = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];
                                if (Zt.isFunction(n) && (i = n, n = !1), Zt.isFunction(r) && (i = r, r = n = !1), Zt.isFunction(e) && (i = e, e = r = n = !1), !i) return this.injectPromise(this.updateAccountPermissions, t, e, r, n);
                                if (!this.tronWeb.isAddress(t)) return i("Invalid ownerAddress provided");
                                if (!this.checkPermissions(e, 0)) return i("Invalid ownerPermissions provided");
                                if (!this.checkPermissions(r, 1)) return i("Invalid witnessPermissions provided");
                                Array.isArray(n) || (n = [n]);
                                var s, o = le(n);
                                try {
                                    for (o.s(); !(s = o.n()).done;) {
                                        var a = s.value;
                                        if (!this.checkPermissions(a, 2)) return i("Invalid activesPermissions provided")
                                    }
                                } catch (t) {
                                    o.e(t)
                                } finally {
                                    o.f()
                                }
                                var u = {
                                    owner_address: t
                                };
                                e && (u.owner = e), r && (u.witness = r), n && (u.actives = 1 === n.length ? n[0] : n), this.tronWeb.fullNode.request("wallet/accountpermissionupdate", u, "post").then((function(t) {
                                    return ge(t, i)
                                })).catch((function(t) {
                                    return i(t)
                                }))
                            }
                        }, {
                            key: "newTxID",
                            value: (i = d()(D.a.mark((function t(e, r) {
                                return D.a.wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            if (r) {
                                                t.next = 2;
                                                break
                                            }
                                            return t.abrupt("return", this.injectPromise(this.newTxID, e));
                                        case 2:
                                            this.tronWeb.fullNode.request("wallet/getsignweight", e, "post").then((function(t) {
                                                t = t.transaction.transaction, "boolean" == typeof e.visible && (t.visible = e.visible), r(null, t)
                                            })).catch((function(t) {
                                                return r("Error generating a new transaction id.")
                                            }));
                                        case 3:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this)
                            }))), function(t, e) {
                                return i.apply(this, arguments)
                            })
                        }, {
                            key: "alterTransaction",
                            value: (n = d()(D.a.mark((function t(e) {
                                var r, n, i = arguments;
                                return D.a.wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            if (r = i.length > 1 && void 0 !== i[1] ? i[1] : {}, n = i.length > 2 && void 0 !== i[2] && i[2]) {
                                                t.next = 4;
                                                break
                                            }
                                            return t.abrupt("return", this.injectPromise(this.alterTransaction, e, r));
                                        case 4:
                                            if (!e.signature) {
                                                t.next = 6;
                                                break
                                            }
                                            return t.abrupt("return", n("You can not extend the expiration of a signed transaction."));
                                        case 6:
                                            if (!r.data) {
                                                t.next = 12;
                                                break
                                            }
                                            if ("hex" !== r.dataFormat && (r.data = this.tronWeb.toHex(r.data)), r.data = r.data.replace(/^0x/, ""), 0 !== r.data.length) {
                                                t.next = 11;
                                                break
                                            }
                                            return t.abrupt("return", n("Invalid data provided"));
                                        case 11:
                                            e.raw_data.data = r.data;
                                        case 12:
                                            if (!r.extension) {
                                                t.next = 17;
                                                break
                                            }
                                            if (r.extension = parseInt(1e3 * r.extension), !(isNaN(r.extension) || e.raw_data.expiration + r.extension <= Date.now() + 3e3)) {
                                                t.next = 16;
                                                break
                                            }
                                            return t.abrupt("return", n("Invalid extension provided"));
                                        case 16:
                                            e.raw_data.expiration += r.extension;
                                        case 17:
                                            this.newTxID(e, n);
                                        case 18:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this)
                            }))), function(t) {
                                return n.apply(this, arguments)
                            })
                        }, {
                            key: "extendExpiration",
                            value: (r = d()(D.a.mark((function t(e, r) {
                                var n, i = arguments;
                                return D.a.wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            if (n = i.length > 2 && void 0 !== i[2] && i[2]) {
                                                t.next = 3;
                                                break
                                            }
                                            return t.abrupt("return", this.injectPromise(this.extendExpiration, e, r));
                                        case 3:
                                            this.alterTransaction(e, {
                                                extension: r
                                            }, n);
                                        case 4:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this)
                            }))), function(t, e) {
                                return r.apply(this, arguments)
                            })
                        }, {
                            key: "addUpdateData",
                            value: (e = d()(D.a.mark((function t(e, r) {
                                var n, i, s = arguments;
                                return D.a.wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            if (n = s.length > 2 && void 0 !== s[2] ? s[2] : "utf8", i = s.length > 3 && void 0 !== s[3] && s[3], Zt.isFunction(n) && (i = n, n = "utf8"), i) {
                                                t.next = 5;
                                                break
                                            }
                                            return t.abrupt("return", this.injectPromise(this.addUpdateData, e, r, n));
                                        case 5:
                                            this.alterTransaction(e, {
                                                data: r,
                                                dataFormat: n
                                            }, i);
                                        case 6:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this)
                            }))), function(t, r) {
                                return e.apply(this, arguments)
                            })
                        }]), t
                    }();

                    function me(t, e) {
                        var r = Object.keys(t);
                        if (Object.getOwnPropertySymbols) {
                            var n = Object.getOwnPropertySymbols(t);
                            e && (n = n.filter((function(e) {
                                return Object.getOwnPropertyDescriptor(t, e).enumerable
                            }))), r.push.apply(r, n)
                        }
                        return r
                    }

                    function ye(t) {
                        for (var e = 1; e < arguments.length; e++) {
                            var r = null != arguments[e] ? arguments[e] : {};
                            e % 2 ? me(Object(r), !0).forEach((function(e) {
                                k()(t, e, r[e])
                            })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : me(Object(r)).forEach((function(e) {
                                Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e))
                            }))
                        }
                        return t
                    }

                    function we(t) {
                        return Te.address.toHex(t)
                    }
                    var be = function() {
                        function t() {
                            var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                            if (v()(this, t), !e || !e instanceof Te) throw new Error("Expected instance of TronWeb");
                            this.tronWeb = e, this.injectPromise = ie()(this), this.cache = {
                                contracts: {}
                            }, this.validator = new he(e)
                        }
                        var e, r, n, i, s, o, a, u, c, h, l, f, p, g, m, w, b;
                        return y()(t, [{
                            key: "_parseToken",
                            value: function(t) {
                                return ye(ye({}, t), {}, {
                                    name: this.tronWeb.toUtf8(t.name),
                                    abbr: t.abbr && this.tronWeb.toUtf8(t.abbr),
                                    description: t.description && this.tronWeb.toUtf8(t.description),
                                    url: t.url && this.tronWeb.toUtf8(t.url)
                                })
                            }
                        }, {
                            key: "getCurrentBlock",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                                if (!t) return this.injectPromise(this.getCurrentBlock);
                                this.tronWeb.fullNode.request("wallet/getnowblock").then((function(e) {
                                    t(null, e)
                                })).catch((function(e) {
                                    return t(e)
                                }))
                            }
                        }, {
                            key: "getConfirmedCurrentBlock",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                                if (!t) return this.injectPromise(this.getConfirmedCurrentBlock);
                                this.tronWeb.solidityNode.request("walletsolidity/getnowblock").then((function(e) {
                                    t(null, e)
                                })).catch((function(e) {
                                    return t(e)
                                }))
                            }
                        }, {
                            key: "getBlock",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultBlock,
                                    e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                                return Zt.isFunction(t) && (e = t, t = this.tronWeb.defaultBlock), e ? !1 === t ? e("No block identifier provided") : ("earliest" == t && (t = 0), "latest" == t ? this.getCurrentBlock(e) : isNaN(t) && Zt.isHex(t) ? this.getBlockByHash(t, e) : void this.getBlockByNumber(t, e)) : this.injectPromise(this.getBlock, t)
                            }
                        }, {
                            key: "getBlockByHash",
                            value: function(t) {
                                var e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                                if (!e) return this.injectPromise(this.getBlockByHash, t);
                                this.tronWeb.fullNode.request("wallet/getblockbyid", {
                                    value: t
                                }, "post").then((function(t) {
                                    if (!Object.keys(t).length) return e("Block not found");
                                    e(null, t)
                                })).catch((function(t) {
                                    return e(t)
                                }))
                            }
                        }, {
                            key: "getBlockByNumber",
                            value: function(t) {
                                var e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                                return e ? !Zt.isInteger(t) || t < 0 ? e("Invalid block number provided") : void this.tronWeb.fullNode.request("wallet/getblockbynum", {
                                    num: parseInt(t)
                                }, "post").then((function(t) {
                                    if (!Object.keys(t).length) return e("Block not found");
                                    e(null, t)
                                })).catch((function(t) {
                                    return e(t)
                                })) : this.injectPromise(this.getBlockByNumber, t)
                            }
                        }, {
                            key: "getBlockTransactionCount",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultBlock,
                                    e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                                if (Zt.isFunction(t) && (e = t, t = this.tronWeb.defaultBlock), !e) return this.injectPromise(this.getBlockTransactionCount, t);
                                this.getBlock(t).then((function(t) {
                                    var r = t.transactions;
                                    e(null, (void 0 === r ? [] : r).length)
                                })).catch((function(t) {
                                    return e(t)
                                }))
                            }
                        }, {
                            key: "getTransactionFromBlock",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultBlock,
                                    e = arguments.length > 1 ? arguments[1] : void 0,
                                    r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                                if (Zt.isFunction(e) && (r = e, e = 0), Zt.isFunction(t) && (r = t, t = this.tronWeb.defaultBlock), !r) return this.injectPromise(this.getTransactionFromBlock, t, e);
                                this.getBlock(t).then((function(t) {
                                    var n = t.transactions,
                                        i = void 0 !== n && n;
                                    i ? "number" == typeof e ? e >= 0 && e < i.length ? r(null, i[e]) : r("Invalid transaction index provided") : r(null, i) : r("Transaction not found in block")
                                })).catch((function(t) {
                                    return r(t)
                                }))
                            }
                        }, {
                            key: "getTransaction",
                            value: function(t) {
                                var e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                                if (!e) return this.injectPromise(this.getTransaction, t);
                                this.tronWeb.fullNode.request("wallet/gettransactionbyid", {
                                    value: t
                                }, "post").then((function(t) {
                                    if (!Object.keys(t).length) return e("Transaction not found");
                                    e(null, t)
                                })).catch((function(t) {
                                    return e(t)
                                }))
                            }
                        }, {
                            key: "getConfirmedTransaction",
                            value: function(t) {
                                var e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                                if (!e) return this.injectPromise(this.getConfirmedTransaction, t);
                                this.tronWeb.solidityNode.request("walletsolidity/gettransactionbyid", {
                                    value: t
                                }, "post").then((function(t) {
                                    if (!Object.keys(t).length) return e("Transaction not found");
                                    e(null, t)
                                })).catch((function(t) {
                                    return e(t)
                                }))
                            }
                        }, {
                            key: "getUnconfirmedTransactionInfo",
                            value: function(t) {
                                var e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                                return this._getTransactionInfoById(t, {
                                    confirmed: !1
                                }, e)
                            }
                        }, {
                            key: "getTransactionInfo",
                            value: function(t) {
                                var e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                                return this._getTransactionInfoById(t, {
                                    confirmed: !0
                                }, e)
                            }
                        }, {
                            key: "_getTransactionInfoById",
                            value: function(t, e) {
                                var r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                                if (!r) return this.injectPromise(this._getTransactionInfoById, t, e);
                                this.tronWeb[e.confirmed ? "solidityNode" : "fullNode"].request("wallet".concat(e.confirmed ? "solidity" : "", "/gettransactioninfobyid"), {
                                    value: t
                                }, "post").then((function(t) {
                                    r(null, t)
                                })).catch((function(t) {
                                    return r(t)
                                }))
                            }
                        }, {
                            key: "getTransactionsToAddress",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,
                                    e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 30,
                                    r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
                                    n = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
                                return Zt.isFunction(r) && (n = r, r = 0), Zt.isFunction(e) && (n = e, e = 30), n ? (t = this.tronWeb.address.toHex(t), this.getTransactionsRelated(t, "to", e, r, n)) : this.injectPromise(this.getTransactionsToAddress, t, e, r)
                            }
                        }, {
                            key: "getTransactionsFromAddress",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,
                                    e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 30,
                                    r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
                                    n = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
                                return Zt.isFunction(r) && (n = r, r = 0), Zt.isFunction(e) && (n = e, e = 30), n ? (t = this.tronWeb.address.toHex(t), this.getTransactionsRelated(t, "from", e, r, n)) : this.injectPromise(this.getTransactionsFromAddress, t, e, r)
                            }
                        }, {
                            key: "getTransactionsRelated",
                            value: (b = d()(D.a.mark((function t() {
                                var e, r, n, i, s, o, a, u, c, h = arguments;
                                return D.a.wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            if (e = h.length > 0 && void 0 !== h[0] ? h[0] : this.tronWeb.defaultAddress.hex, r = h.length > 1 && void 0 !== h[1] ? h[1] : "all", n = h.length > 2 && void 0 !== h[2] ? h[2] : 30, i = h.length > 3 && void 0 !== h[3] ? h[3] : 0, s = h.length > 4 && void 0 !== h[4] && h[4], Zt.isFunction(i) && (s = i, i = 0), Zt.isFunction(n) && (s = n, n = 30), Zt.isFunction(r) && (s = r, r = "all"), Zt.isFunction(e) && (s = e, e = this.tronWeb.defaultAddress.hex), s) {
                                                t.next = 11;
                                                break
                                            }
                                            return t.abrupt("return", this.injectPromise(this.getTransactionsRelated, e, r, n, i));
                                        case 11:
                                            if (["to", "from", "all"].includes(r)) {
                                                t.next = 13;
                                                break
                                            }
                                            return t.abrupt("return", s('Invalid direction provided: Expected "to", "from" or "all"'));
                                        case 13:
                                            if ("all" != r) {
                                                t.next = 27;
                                                break
                                            }
                                            return t.prev = 14, t.next = 17, Promise.all([this.getTransactionsRelated(e, "from", n, i), this.getTransactionsRelated(e, "to", n, i)]);
                                        case 17:
                                            return o = t.sent, a = oe()(o, 2), u = a[0], c = a[1], t.abrupt("return", s(null, [].concat(L()(u.map((function(t) {
                                                return t.direction = "from", t
                                            }))), L()(c.map((function(t) {
                                                return t.direction = "to", t
                                            })))).sort((function(t, e) {
                                                return e.raw_data.timestamp - t.raw_data.timestamp
                                            }))));
                                        case 24:
                                            return t.prev = 24, t.t0 = t.catch(14), t.abrupt("return", s(t.t0));
                                        case 27:
                                            if (this.tronWeb.isAddress(e)) {
                                                t.next = 29;
                                                break
                                            }
                                            return t.abrupt("return", s("Invalid address provided"));
                                        case 29:
                                            if (!(!Zt.isInteger(n) || n < 0 || i && n < 1)) {
                                                t.next = 31;
                                                break
                                            }
                                            return t.abrupt("return", s("Invalid limit provided"));
                                        case 31:
                                            if (Zt.isInteger(i) && !(i < 0)) {
                                                t.next = 33;
                                                break
                                            }
                                            return t.abrupt("return", s("Invalid offset provided"));
                                        case 33:
                                            e = this.tronWeb.address.toHex(e), this.tronWeb.solidityNode.request("walletextension/gettransactions".concat(r, "this"), {
                                                account: {
                                                    address: e
                                                },
                                                offset: i,
                                                limit: n
                                            }, "post").then((function(t) {
                                                var e = t.transaction;
                                                s(null, e)
                                            })).catch((function(t) {
                                                return s(t)
                                            }));
                                        case 35:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this, [
                                    [14, 24]
                                ])
                            }))), function() {
                                return b.apply(this, arguments)
                            })
                        }, {
                            key: "getAccount",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,
                                    e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                                return Zt.isFunction(t) && (e = t, t = this.tronWeb.defaultAddress.hex), e ? this.tronWeb.isAddress(t) ? (t = this.tronWeb.address.toHex(t), void this.tronWeb.solidityNode.request("walletsolidity/getaccount", {
                                    address: t
                                }, "post").then((function(t) {
                                    e(null, t)
                                })).catch((function(t) {
                                    return e(t)
                                }))) : e("Invalid address provided") : this.injectPromise(this.getAccount, t)
                            }
                        }, {
                            key: "getAccountById",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
                                    e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                                if (!e) return this.injectPromise(this.getAccountById, t);
                                this.getAccountInfoById(t, {
                                    confirmed: !0
                                }, e)
                            }
                        }, {
                            key: "getAccountInfoById",
                            value: function(t, e, r) {
                                this.validator.notValid([{
                                    name: "accountId",
                                    type: "hex",
                                    value: t
                                }, {
                                    name: "accountId",
                                    type: "string",
                                    lte: 32,
                                    gte: 8,
                                    value: t
                                }], r) || (t.startsWith("0x") && (t = t.slice(2)), this.tronWeb[e.confirmed ? "solidityNode" : "fullNode"].request("wallet".concat(e.confirmed ? "solidity" : "", "/getaccountbyid"), {
                                    account_id: t
                                }, "post").then((function(t) {
                                    r(null, t)
                                })).catch((function(t) {
                                    return r(t)
                                })))
                            }
                        }, {
                            key: "getBalance",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,
                                    e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                                if (Zt.isFunction(t) && (e = t, t = this.tronWeb.defaultAddress.hex), !e) return this.injectPromise(this.getBalance, t);
                                this.getAccount(t).then((function(t) {
                                    var r = t.balance;
                                    e(null, void 0 === r ? 0 : r)
                                })).catch((function(t) {
                                    return e(t)
                                }))
                            }
                        }, {
                            key: "getUnconfirmedAccount",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,
                                    e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                                return Zt.isFunction(t) && (e = t, t = this.tronWeb.defaultAddress.hex), e ? this.tronWeb.isAddress(t) ? (t = this.tronWeb.address.toHex(t), void this.tronWeb.fullNode.request("wallet/getaccount", {
                                    address: t
                                }, "post").then((function(t) {
                                    e(null, t)
                                })).catch((function(t) {
                                    return e(t)
                                }))) : e("Invalid address provided") : this.injectPromise(this.getUnconfirmedAccount, t)
                            }
                        }, {
                            key: "getUnconfirmedAccountById",
                            value: function(t) {
                                var e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                                if (!e) return this.injectPromise(this.getUnconfirmedAccountById, t);
                                this.getAccountInfoById(t, {
                                    confirmed: !1
                                }, e)
                            }
                        }, {
                            key: "getUnconfirmedBalance",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,
                                    e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                                if (Zt.isFunction(t) && (e = t, t = this.tronWeb.defaultAddress.hex), !e) return this.injectPromise(this.getUnconfirmedBalance, t);
                                this.getUnconfirmedAccount(t).then((function(t) {
                                    var r = t.balance;
                                    e(null, void 0 === r ? 0 : r)
                                })).catch((function(t) {
                                    return e(t)
                                }))
                            }
                        }, {
                            key: "getBandwidth",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,
                                    e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                                return Zt.isFunction(t) && (e = t, t = this.tronWeb.defaultAddress.hex), e ? this.tronWeb.isAddress(t) ? (t = this.tronWeb.address.toHex(t), void this.tronWeb.fullNode.request("wallet/getaccountnet", {
                                    address: t
                                }, "post").then((function(t) {
                                    var r = t.freeNetUsed,
                                        n = void 0 === r ? 0 : r,
                                        i = t.freeNetLimit,
                                        s = void 0 === i ? 0 : i,
                                        o = t.NetUsed,
                                        a = void 0 === o ? 0 : o,
                                        u = t.NetLimit;
                                    e(null, s - n + ((void 0 === u ? 0 : u) - a))
                                })).catch((function(t) {
                                    return e(t)
                                }))) : e("Invalid address provided") : this.injectPromise(this.getBandwidth, t)
                            }
                        }, {
                            key: "getTokensIssuedByAddress",
                            value: function() {
                                var t = this,
                                    e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,
                                    r = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                                return Zt.isFunction(e) && (r = e, e = this.tronWeb.defaultAddress.hex), r ? this.tronWeb.isAddress(e) ? (e = this.tronWeb.address.toHex(e), void this.tronWeb.fullNode.request("wallet/getassetissuebyaccount", {
                                    address: e
                                }, "post").then((function(e) {
                                    var n = e.assetIssue,
                                        i = void 0 !== n && n;
                                    if (!i) return r(null, {});
                                    var s = i.map((function(e) {
                                        return t._parseToken(e)
                                    })).reduce((function(t, e) {
                                        return t[e.name] = e, t
                                    }), {});
                                    r(null, s)
                                })).catch((function(t) {
                                    return r(t)
                                }))) : r("Invalid address provided") : this.injectPromise(this.getTokensIssuedByAddress, e)
                            }
                        }, {
                            key: "getTokenFromID",
                            value: function() {
                                var t = this,
                                    e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
                                    r = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                                return r ? (Zt.isInteger(e) && (e = e.toString()), Zt.isString(e) && e.length ? void this.tronWeb.fullNode.request("wallet/getassetissuebyname", {
                                    value: this.tronWeb.fromUtf8(e)
                                }, "post").then((function(e) {
                                    if (!e.name) return r("Token does not exist");
                                    r(null, t._parseToken(e))
                                })).catch((function(t) {
                                    return r(t)
                                })) : r("Invalid token ID provided")) : this.injectPromise(this.getTokenFromID, e)
                            }
                        }, {
                            key: "listNodes",
                            value: function() {
                                var t = this,
                                    e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                                if (!e) return this.injectPromise(this.listNodes);
                                this.tronWeb.fullNode.request("wallet/listnodes").then((function(r) {
                                    var n = r.nodes;
                                    e(null, (void 0 === n ? [] : n).map((function(e) {
                                        var r = e.address,
                                            n = r.host,
                                            i = r.port;
                                        return "".concat(t.tronWeb.toUtf8(n), ":").concat(i)
                                    })))
                                })).catch((function(t) {
                                    return e(t)
                                }))
                            }
                        }, {
                            key: "getBlockRange",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
                                    e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 30,
                                    r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                                return Zt.isFunction(e) && (r = e, e = 30), Zt.isFunction(t) && (r = t, t = 0), r ? !Zt.isInteger(t) || t < 0 ? r("Invalid start of range provided") : !Zt.isInteger(e) || e <= t ? r("Invalid end of range provided") : void this.tronWeb.fullNode.request("wallet/getblockbylimitnext", {
                                    startNum: parseInt(t),
                                    endNum: parseInt(e) + 1
                                }, "post").then((function(t) {
                                    var e = t.block;
                                    r(null, void 0 === e ? [] : e)
                                })).catch((function(t) {
                                    return r(t)
                                })) : this.injectPromise(this.getBlockRange, t, e)
                            }
                        }, {
                            key: "listSuperRepresentatives",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                                if (!t) return this.injectPromise(this.listSuperRepresentatives);
                                this.tronWeb.fullNode.request("wallet/listwitnesses").then((function(e) {
                                    var r = e.witnesses;
                                    t(null, void 0 === r ? [] : r)
                                })).catch((function(e) {
                                    return t(e)
                                }))
                            }
                        }, {
                            key: "listTokens",
                            value: function() {
                                var t = this,
                                    e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
                                    r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                                    n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                                return Zt.isFunction(r) && (n = r, r = 0), Zt.isFunction(e) && (n = e, e = 0), n ? !Zt.isInteger(e) || e < 0 || r && e < 1 ? n("Invalid limit provided") : !Zt.isInteger(r) || r < 0 ? n("Invalid offset provided") : e ? void this.tronWeb.fullNode.request("wallet/getpaginatedassetissuelist", {
                                    offset: parseInt(r),
                                    limit: parseInt(e)
                                }, "post").then((function(e) {
                                    var r = e.assetIssue;
                                    n(null, (void 0 === r ? [] : r).map((function(e) {
                                        return t._parseToken(e)
                                    })))
                                })).catch((function(t) {
                                    return n(t)
                                })) : this.tronWeb.fullNode.request("wallet/getassetissuelist").then((function(e) {
                                    var r = e.assetIssue;
                                    n(null, (void 0 === r ? [] : r).map((function(e) {
                                        return t._parseToken(e)
                                    })))
                                })).catch((function(t) {
                                    return n(t)
                                })) : this.injectPromise(this.listTokens, e, r)
                            }
                        }, {
                            key: "timeUntilNextVoteCycle",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                                if (!t) return this.injectPromise(this.timeUntilNextVoteCycle);
                                this.tronWeb.fullNode.request("wallet/getnextmaintenancetime").then((function(e) {
                                    var r = e.num,
                                        n = void 0 === r ? -1 : r;
                                    if (-1 == n) return t("Failed to get time until next vote cycle");
                                    t(null, Math.floor(n / 1e3))
                                })).catch((function(e) {
                                    return t(e)
                                }))
                            }
                        }, {
                            key: "getContract",
                            value: function(t) {
                                var e = this,
                                    r = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                                return r ? this.tronWeb.isAddress(t) ? void(this.cache.contracts[t] ? r(null, this.cache.contracts[t]) : (t = this.tronWeb.address.toHex(t), this.tronWeb.fullNode.request("wallet/getcontract", {
                                    value: t
                                }).then((function(n) {
                                    if (n.Error) return r("Contract does not exist");
                                    e.cache.contracts[t] = n, r(null, n)
                                })).catch((function(t) {
                                    return r(t)
                                })))) : r("Invalid contract address provided") : this.injectPromise(this.getContract, t)
                            }
                        }, {
                            key: "verifyMessage",
                            value: (w = d()(D.a.mark((function e() {
                                var r, n, i, s, o, a = arguments;
                                return D.a.wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            if (r = a.length > 0 && void 0 !== a[0] && a[0], n = a.length > 1 && void 0 !== a[1] && a[1], i = a.length > 2 && void 0 !== a[2] ? a[2] : this.tronWeb.defaultAddress.base58, s = !(a.length > 3 && void 0 !== a[3]) || a[3], o = a.length > 4 && void 0 !== a[4] && a[4], Zt.isFunction(i) && (o = i, i = this.tronWeb.defaultAddress.base58, s = !0), Zt.isFunction(s) && (o = s, s = !0), o) {
                                                e.next = 9;
                                                break
                                            }
                                            return e.abrupt("return", this.injectPromise(this.verifyMessage, r, n, i, s));
                                        case 9:
                                            if (Zt.isHex(r)) {
                                                e.next = 11;
                                                break
                                            }
                                            return e.abrupt("return", o("Expected hex message input"));
                                        case 11:
                                            if (!t.verifySignature(r, i, n, s)) {
                                                e.next = 13;
                                                break
                                            }
                                            return e.abrupt("return", o(null, !0));
                                        case 13:
                                            o("Signature does not match");
                                        case 14:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e, this)
                            }))), function() {
                                return w.apply(this, arguments)
                            })
                        }, {
                            key: "sign",
                            value: (m = d()(D.a.mark((function e() {
                                var r, n, i, s, o, a, u = arguments;
                                return D.a.wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            if (r = u.length > 0 && void 0 !== u[0] && u[0], n = u.length > 1 && void 0 !== u[1] ? u[1] : this.tronWeb.defaultPrivateKey, i = !(u.length > 2 && void 0 !== u[2]) || u[2], s = u.length > 3 && void 0 !== u[3] && u[3], o = u.length > 4 && void 0 !== u[4] && u[4], Zt.isFunction(s) && (o = s, s = !1), Zt.isFunction(i) && (o = i, i = !0, s = !1), Zt.isFunction(n) && (o = n, n = this.tronWeb.defaultPrivateKey, i = !0, s = !1), o) {
                                                e.next = 10;
                                                break
                                            }
                                            return e.abrupt("return", this.injectPromise(this.sign, r, n, i, s));
                                        case 10:
                                            if (!Zt.isString(r)) {
                                                e.next = 21;
                                                break
                                            }
                                            if (Zt.isHex(r)) {
                                                e.next = 13;
                                                break
                                            }
                                            return e.abrupt("return", o("Expected hex message input"));
                                        case 13:
                                            return e.prev = 13, a = t.signString(r, n, i), e.abrupt("return", o(null, a));
                                        case 18:
                                            e.prev = 18, e.t0 = e.catch(13), o(e.t0);
                                        case 21:
                                            if (Zt.isObject(r)) {
                                                e.next = 23;
                                                break
                                            }
                                            return e.abrupt("return", o("Invalid transaction provided"));
                                        case 23:
                                            if (s || !r.signature) {
                                                e.next = 25;
                                                break
                                            }
                                            return e.abrupt("return", o("Transaction is already signed"));
                                        case 25:
                                            if (e.prev = 25, s) {
                                                e.next = 30;
                                                break
                                            }
                                            if (this.tronWeb.address.toHex(this.tronWeb.address.fromPrivateKey(n)).toLowerCase() === this.tronWeb.address.toHex(r.raw_data.contract[0].parameter.value.owner_address)) {
                                                e.next = 30;
                                                break
                                            }
                                            return e.abrupt("return", o("Private key does not match address in transaction"));
                                        case 30:
                                            return e.abrupt("return", o(null, Zt.crypto.signTransaction(n, r)));
                                        case 33:
                                            e.prev = 33, e.t1 = e.catch(25), o(e.t1);
                                        case 36:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e, this, [
                                    [13, 18],
                                    [25, 33]
                                ])
                            }))), function() {
                                return m.apply(this, arguments)
                            })
                        }, {
                            key: "multiSign",
                            value: (g = d()(D.a.mark((function t() {
                                var e, r, n, i, s, o, a, u = arguments;
                                return D.a.wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            if (e = u.length > 0 && void 0 !== u[0] && u[0], r = u.length > 1 && void 0 !== u[1] ? u[1] : this.tronWeb.defaultPrivateKey, n = u.length > 2 && void 0 !== u[2] && u[2], i = u.length > 3 && void 0 !== u[3] && u[3], Zt.isFunction(n) && (i = n, n = 0), Zt.isFunction(r) && (i = r, r = this.tronWeb.defaultPrivateKey, n = 0), i) {
                                                t.next = 8;
                                                break
                                            }
                                            return t.abrupt("return", this.injectPromise(this.multiSign, e, r, n));
                                        case 8:
                                            if (Zt.isObject(e) && e.raw_data && e.raw_data.contract) {
                                                t.next = 10;
                                                break
                                            }
                                            return t.abrupt("return", i("Invalid transaction provided"));
                                        case 10:
                                            if (e.raw_data.contract[0].Permission_id || !(n > 0)) {
                                                t.next = 30;
                                                break
                                            }
                                            return e.raw_data.contract[0].Permission_id = n, s = this.tronWeb.address.toHex(this.tronWeb.address.fromPrivateKey(r)).toLowerCase(), t.next = 15, this.getSignWeight(e, n);
                                        case 15:
                                            if ("PERMISSION_ERROR" !== (o = t.sent).result.code) {
                                                t.next = 18;
                                                break
                                            }
                                            return t.abrupt("return", i(o.result.message));
                                        case 18:
                                            if (a = !1, o.permission.keys.map((function(t) {
                                                    t.address === s && (a = !0)
                                                })), a) {
                                                t.next = 22;
                                                break
                                            }
                                            return t.abrupt("return", i(r + " has no permission to sign"));
                                        case 22:
                                            if (!o.approved_list || -1 == o.approved_list.indexOf(s)) {
                                                t.next = 24;
                                                break
                                            }
                                            return t.abrupt("return", i(r + " already sign transaction"));
                                        case 24:
                                            if (!o.transaction || !o.transaction.transaction) {
                                                t.next = 29;
                                                break
                                            }
                                            e = o.transaction.transaction, n > 0 && (e.raw_data.contract[0].Permission_id = n), t.next = 30;
                                            break;
                                        case 29:
                                            return t.abrupt("return", i("Invalid transaction provided"));
                                        case 30:
                                            return t.prev = 30, t.abrupt("return", i(null, Zt.crypto.signTransaction(r, e)));
                                        case 34:
                                            t.prev = 34, t.t0 = t.catch(30), i(t.t0);
                                        case 37:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this, [
                                    [30, 34]
                                ])
                            }))), function() {
                                return g.apply(this, arguments)
                            })
                        }, {
                            key: "getApprovedList",
                            value: (p = d()(D.a.mark((function t(e) {
                                var r, n = arguments;
                                return D.a.wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            if (r = n.length > 1 && void 0 !== n[1] && n[1]) {
                                                t.next = 3;
                                                break
                                            }
                                            return t.abrupt("return", this.injectPromise(this.getApprovedList, e));
                                        case 3:
                                            if (Zt.isObject(e)) {
                                                t.next = 5;
                                                break
                                            }
                                            return t.abrupt("return", r("Invalid transaction provided"));
                                        case 5:
                                            this.tronWeb.fullNode.request("wallet/getapprovedlist", e, "post").then((function(t) {
                                                r(null, t)
                                            })).catch((function(t) {
                                                return r(t)
                                            }));
                                        case 6:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this)
                            }))), function(t) {
                                return p.apply(this, arguments)
                            })
                        }, {
                            key: "getSignWeight",
                            value: (f = d()(D.a.mark((function t(e, r) {
                                var n, i = arguments;
                                return D.a.wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            if (n = i.length > 2 && void 0 !== i[2] && i[2], Zt.isFunction(r) && (n = r, r = void 0), n) {
                                                t.next = 4;
                                                break
                                            }
                                            return t.abrupt("return", this.injectPromise(this.getSignWeight, e, r));
                                        case 4:
                                            if (Zt.isObject(e) && e.raw_data && e.raw_data.contract) {
                                                t.next = 6;
                                                break
                                            }
                                            return t.abrupt("return", n("Invalid transaction provided"));
                                        case 6:
                                            if (Zt.isInteger(r) ? e.raw_data.contract[0].Permission_id = parseInt(r) : "number" != typeof e.raw_data.contract[0].Permission_id && (e.raw_data.contract[0].Permission_id = 0), Zt.isObject(e)) {
                                                t.next = 9;
                                                break
                                            }
                                            return t.abrupt("return", n("Invalid transaction provided"));
                                        case 9:
                                            this.tronWeb.fullNode.request("wallet/getsignweight", e, "post").then((function(t) {
                                                n(null, t)
                                            })).catch((function(t) {
                                                return n(t)
                                            }));
                                        case 10:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this)
                            }))), function(t, e) {
                                return f.apply(this, arguments)
                            })
                        }, {
                            key: "sendRawTransaction",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
                                    e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                                    r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                                return Zt.isFunction(e) && (r = e, e = {}), r ? Zt.isObject(t) ? Zt.isObject(e) ? t.signature && Zt.isArray(t.signature) ? void this.tronWeb.fullNode.request("wallet/broadcasttransaction", t, "post").then((function(e) {
                                    e.result && (e.transaction = t), r(null, e)
                                })).catch((function(t) {
                                    return r(t)
                                })) : r("Transaction is not signed") : r("Invalid options provided") : r("Invalid transaction provided") : this.injectPromise(this.sendRawTransaction, t, e)
                            }
                        }, {
                            key: "sendHexTransaction",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
                                    e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                                    r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                                if (Zt.isFunction(e) && (r = e, e = {}), !r) return this.injectPromise(this.sendHexTransaction, t, e);
                                if (!Zt.isHex(t)) return r("Invalid hex transaction provided");
                                if (!Zt.isObject(e)) return r("Invalid options provided");
                                var n = {
                                    transaction: t
                                };
                                this.tronWeb.fullNode.request("wallet/broadcasthex", n, "post").then((function(e) {
                                    e.result && (e.transaction = JSON.parse(e.transaction), e.hexTransaction = t), r(null, e)
                                })).catch((function(t) {
                                    return r(t)
                                }))
                            }
                        }, {
                            key: "sendTransaction",
                            value: (l = d()(D.a.mark((function t() {
                                var e, r, n, i, s, o, a, u, c = arguments;
                                return D.a.wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            if (e = c.length > 0 && void 0 !== c[0] && c[0], r = c.length > 1 && void 0 !== c[1] && c[1], n = c.length > 2 && void 0 !== c[2] ? c[2] : {}, i = c.length > 3 && void 0 !== c[3] && c[3], Zt.isFunction(n) && (i = n, n = {}), "string" == typeof n && (n = {
                                                    privateKey: n
                                                }), i) {
                                                t.next = 8;
                                                break
                                            }
                                            return t.abrupt("return", this.injectPromise(this.sendTransaction, e, r, n));
                                        case 8:
                                            if (this.tronWeb.isAddress(e)) {
                                                t.next = 10;
                                                break
                                            }
                                            return t.abrupt("return", i("Invalid recipient provided"));
                                        case 10:
                                            if (Zt.isInteger(r) && !(r <= 0)) {
                                                t.next = 12;
                                                break
                                            }
                                            return t.abrupt("return", i("Invalid amount provided"));
                                        case 12:
                                            if ((n = ye({
                                                    privateKey: this.tronWeb.defaultPrivateKey,
                                                    address: this.tronWeb.defaultAddress.hex
                                                }, n)).privateKey || n.address) {
                                                t.next = 15;
                                                break
                                            }
                                            return t.abrupt("return", i("Function requires either a private key or address to be set"));
                                        case 15:
                                            return t.prev = 15, s = n.privateKey ? this.tronWeb.address.fromPrivateKey(n.privateKey) : n.address, t.next = 19, this.tronWeb.transactionBuilder.sendTrx(e, r, s);
                                        case 19:
                                            return o = t.sent, t.next = 22, this.sign(o, n.privateKey || void 0);
                                        case 22:
                                            return a = t.sent, t.next = 25, this.sendRawTransaction(a);
                                        case 25:
                                            return u = t.sent, t.abrupt("return", i(null, u));
                                        case 29:
                                            return t.prev = 29, t.t0 = t.catch(15), t.abrupt("return", i(t.t0));
                                        case 32:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this, [
                                    [15, 29]
                                ])
                            }))), function() {
                                return l.apply(this, arguments)
                            })
                        }, {
                            key: "sendToken",
                            value: (h = d()(D.a.mark((function t() {
                                var e, r, n, i, s, o, a, u, c, h = arguments;
                                return D.a.wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            if (e = h.length > 0 && void 0 !== h[0] && h[0], r = h.length > 1 && void 0 !== h[1] && h[1], n = h.length > 2 && void 0 !== h[2] && h[2], i = h.length > 3 && void 0 !== h[3] ? h[3] : {}, s = h.length > 4 && void 0 !== h[4] && h[4], Zt.isFunction(i) && (s = i, i = {}), "string" == typeof i && (i = {
                                                    privateKey: i
                                                }), s) {
                                                t.next = 9;
                                                break
                                            }
                                            return t.abrupt("return", this.injectPromise(this.sendToken, e, r, n, i));
                                        case 9:
                                            if (this.tronWeb.isAddress(e)) {
                                                t.next = 11;
                                                break
                                            }
                                            return t.abrupt("return", s("Invalid recipient provided"));
                                        case 11:
                                            if (Zt.isInteger(r) && !(r <= 0)) {
                                                t.next = 13;
                                                break
                                            }
                                            return t.abrupt("return", s("Invalid amount provided"));
                                        case 13:
                                            if (Zt.isInteger(n) && (n = n.toString()), Zt.isString(n)) {
                                                t.next = 16;
                                                break
                                            }
                                            return t.abrupt("return", s("Invalid token ID provided"));
                                        case 16:
                                            if ((i = ye({
                                                    privateKey: this.tronWeb.defaultPrivateKey,
                                                    address: this.tronWeb.defaultAddress.hex
                                                }, i)).privateKey || i.address) {
                                                t.next = 19;
                                                break
                                            }
                                            return t.abrupt("return", s("Function requires either a private key or address to be set"));
                                        case 19:
                                            return t.prev = 19, o = i.privateKey ? this.tronWeb.address.fromPrivateKey(i.privateKey) : i.address, t.next = 23, this.tronWeb.transactionBuilder.sendToken(e, r, n, o);
                                        case 23:
                                            return a = t.sent, t.next = 26, this.sign(a, i.privateKey || void 0);
                                        case 26:
                                            return u = t.sent, t.next = 29, this.sendRawTransaction(u);
                                        case 29:
                                            return c = t.sent, t.abrupt("return", s(null, c));
                                        case 33:
                                            return t.prev = 33, t.t0 = t.catch(19), t.abrupt("return", s(t.t0));
                                        case 36:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this, [
                                    [19, 33]
                                ])
                            }))), function() {
                                return h.apply(this, arguments)
                            })
                        }, {
                            key: "freezeBalance",
                            value: (c = d()(D.a.mark((function t() {
                                var e, r, n, i, s, o, a, u, c, h, l = arguments;
                                return D.a.wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            if (e = l.length > 0 && void 0 !== l[0] ? l[0] : 0, r = l.length > 1 && void 0 !== l[1] ? l[1] : 3, n = l.length > 2 && void 0 !== l[2] ? l[2] : "BANDWIDTH", i = l.length > 3 && void 0 !== l[3] ? l[3] : {}, s = l.length > 4 && void 0 !== l[4] ? l[4] : void 0, o = l.length > 5 && void 0 !== l[5] && l[5], Zt.isFunction(s) && (o = s, s = void 0), Zt.isFunction(r) && (o = r, r = 3), Zt.isFunction(n) && (o = n, n = "BANDWIDTH"), Zt.isFunction(i) && (o = i, i = {}), "string" == typeof i && (i = {
                                                    privateKey: i
                                                }), o) {
                                                t.next = 13;
                                                break
                                            }
                                            return t.abrupt("return", this.injectPromise(this.freezeBalance, e, r, n, i, s));
                                        case 13:
                                            if (["BANDWIDTH", "ENERGY"].includes(n)) {
                                                t.next = 15;
                                                break
                                            }
                                            return t.abrupt("return", o('Invalid resource provided: Expected "BANDWIDTH" or "ENERGY"'));
                                        case 15:
                                            if (Zt.isInteger(e) && !(e <= 0)) {
                                                t.next = 17;
                                                break
                                            }
                                            return t.abrupt("return", o("Invalid amount provided"));
                                        case 17:
                                            if (Zt.isInteger(r) && !(r < 3)) {
                                                t.next = 19;
                                                break
                                            }
                                            return t.abrupt("return", o("Invalid duration provided, minimum of 3 days"));
                                        case 19:
                                            if ((i = ye({
                                                    privateKey: this.tronWeb.defaultPrivateKey,
                                                    address: this.tronWeb.defaultAddress.hex
                                                }, i)).privateKey || i.address) {
                                                t.next = 22;
                                                break
                                            }
                                            return t.abrupt("return", o("Function requires either a private key or address to be set"));
                                        case 22:
                                            return t.prev = 22, a = i.privateKey ? this.tronWeb.address.fromPrivateKey(i.privateKey) : i.address, t.next = 26, this.tronWeb.transactionBuilder.freezeBalance(e, r, n, a, s);
                                        case 26:
                                            return u = t.sent, t.next = 29, this.sign(u, i.privateKey || void 0);
                                        case 29:
                                            return c = t.sent, t.next = 32, this.sendRawTransaction(c);
                                        case 32:
                                            return h = t.sent, t.abrupt("return", o(null, h));
                                        case 36:
                                            return t.prev = 36, t.t0 = t.catch(22), t.abrupt("return", o(t.t0));
                                        case 39:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this, [
                                    [22, 36]
                                ])
                            }))), function() {
                                return c.apply(this, arguments)
                            })
                        }, {
                            key: "unfreezeBalance",
                            value: (u = d()(D.a.mark((function t() {
                                var e, r, n, i, s, o, a, u, c = arguments;
                                return D.a.wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            if (e = c.length > 0 && void 0 !== c[0] ? c[0] : "BANDWIDTH", r = c.length > 1 && void 0 !== c[1] ? c[1] : {}, n = c.length > 2 && void 0 !== c[2] ? c[2] : void 0, i = c.length > 3 && void 0 !== c[3] && c[3], Zt.isFunction(n) && (i = n, n = void 0), Zt.isFunction(e) && (i = e, e = "BANDWIDTH"), Zt.isFunction(r) && (i = r, r = {}), "string" == typeof r && (r = {
                                                    privateKey: r
                                                }), i) {
                                                t.next = 10;
                                                break
                                            }
                                            return t.abrupt("return", this.injectPromise(this.unfreezeBalance, e, r, n));
                                        case 10:
                                            if (["BANDWIDTH", "ENERGY"].includes(e)) {
                                                t.next = 12;
                                                break
                                            }
                                            return t.abrupt("return", i('Invalid resource provided: Expected "BANDWIDTH" or "ENERGY"'));
                                        case 12:
                                            if ((r = ye({
                                                    privateKey: this.tronWeb.defaultPrivateKey,
                                                    address: this.tronWeb.defaultAddress.hex
                                                }, r)).privateKey || r.address) {
                                                t.next = 15;
                                                break
                                            }
                                            return t.abrupt("return", i("Function requires either a private key or address to be set"));
                                        case 15:
                                            return t.prev = 15, s = r.privateKey ? this.tronWeb.address.fromPrivateKey(r.privateKey) : r.address, t.next = 19, this.tronWeb.transactionBuilder.unfreezeBalance(e, s, n);
                                        case 19:
                                            return o = t.sent, t.next = 22, this.sign(o, r.privateKey || void 0);
                                        case 22:
                                            return a = t.sent, t.next = 25, this.sendRawTransaction(a);
                                        case 25:
                                            return u = t.sent, t.abrupt("return", i(null, u));
                                        case 29:
                                            return t.prev = 29, t.t0 = t.catch(15), t.abrupt("return", i(t.t0));
                                        case 32:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this, [
                                    [15, 29]
                                ])
                            }))), function() {
                                return u.apply(this, arguments)
                            })
                        }, {
                            key: "updateAccount",
                            value: (a = d()(D.a.mark((function t() {
                                var e, r, n, i, s, o, a, u = arguments;
                                return D.a.wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            if (e = u.length > 0 && void 0 !== u[0] && u[0], r = u.length > 1 && void 0 !== u[1] ? u[1] : {}, n = u.length > 2 && void 0 !== u[2] && u[2], Zt.isFunction(r) && (n = r, r = {}), "string" == typeof r && (r = {
                                                    privateKey: r
                                                }), n) {
                                                t.next = 7;
                                                break
                                            }
                                            return t.abrupt("return", this.injectPromise(this.updateAccount, e, r));
                                        case 7:
                                            if (Zt.isString(e) && e.length) {
                                                t.next = 9;
                                                break
                                            }
                                            return t.abrupt("return", n("Name must be a string"));
                                        case 9:
                                            if ((r = ye({
                                                    privateKey: this.tronWeb.defaultPrivateKey,
                                                    address: this.tronWeb.defaultAddress.hex
                                                }, r)).privateKey || r.address) {
                                                t.next = 12;
                                                break
                                            }
                                            return t.abrupt("return", n("Function requires either a private key or address to be set"));
                                        case 12:
                                            return t.prev = 12, i = r.privateKey ? this.tronWeb.address.fromPrivateKey(r.privateKey) : r.address, t.next = 16, this.tronWeb.transactionBuilder.updateAccount(e, i);
                                        case 16:
                                            return s = t.sent, t.next = 19, this.sign(s, r.privateKey || void 0);
                                        case 19:
                                            return o = t.sent, t.next = 22, this.sendRawTransaction(o);
                                        case 22:
                                            return a = t.sent, t.abrupt("return", n(null, a));
                                        case 26:
                                            return t.prev = 26, t.t0 = t.catch(12), t.abrupt("return", n(t.t0));
                                        case 29:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this, [
                                    [12, 26]
                                ])
                            }))), function() {
                                return a.apply(this, arguments)
                            })
                        }, {
                            key: "signMessage",
                            value: function() {
                                return this.sign.apply(this, arguments)
                            }
                        }, {
                            key: "sendAsset",
                            value: function() {
                                return this.sendToken.apply(this, arguments)
                            }
                        }, {
                            key: "send",
                            value: function() {
                                return this.sendTransaction.apply(this, arguments)
                            }
                        }, {
                            key: "sendTrx",
                            value: function() {
                                return this.sendTransaction.apply(this, arguments)
                            }
                        }, {
                            key: "broadcast",
                            value: function() {
                                return this.sendRawTransaction.apply(this, arguments)
                            }
                        }, {
                            key: "broadcastHex",
                            value: function() {
                                return this.sendHexTransaction.apply(this, arguments)
                            }
                        }, {
                            key: "signTransaction",
                            value: function() {
                                return this.sign.apply(this, arguments)
                            }
                        }, {
                            key: "getProposal",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
                                    e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                                return e ? !Zt.isInteger(t) || t < 0 ? e("Invalid proposalID provided") : void this.tronWeb.fullNode.request("wallet/getproposalbyid", {
                                    id: parseInt(t)
                                }, "post").then((function(t) {
                                    e(null, t)
                                })).catch((function(t) {
                                    return e(t)
                                })) : this.injectPromise(this.getProposal, t)
                            }
                        }, {
                            key: "listProposals",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                                if (!t) return this.injectPromise(this.listProposals);
                                this.tronWeb.fullNode.request("wallet/listproposals", {}, "post").then((function(e) {
                                    var r = e.proposals;
                                    t(null, void 0 === r ? [] : r)
                                })).catch((function(e) {
                                    return t(e)
                                }))
                            }
                        }, {
                            key: "getChainParameters",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                                if (!t) return this.injectPromise(this.getChainParameters);
                                this.tronWeb.fullNode.request("wallet/getchainparameters", {}, "post").then((function(e) {
                                    var r = e.chainParameter;
                                    t(null, void 0 === r ? [] : r)
                                })).catch((function(e) {
                                    return t(e)
                                }))
                            }
                        }, {
                            key: "getAccountResources",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,
                                    e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                                return e ? this.tronWeb.isAddress(t) ? void this.tronWeb.fullNode.request("wallet/getaccountresource", {
                                    address: this.tronWeb.address.toHex(t)
                                }, "post").then((function(t) {
                                    e(null, t)
                                })).catch((function(t) {
                                    return e(t)
                                })) : e("Invalid address provided") : this.injectPromise(this.getAccountResources, t)
                            }
                        }, {
                            key: "getExchangeByID",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
                                    e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                                return e ? !Zt.isInteger(t) || t < 0 ? e("Invalid exchangeID provided") : void this.tronWeb.fullNode.request("wallet/getexchangebyid", {
                                    id: t
                                }, "post").then((function(t) {
                                    e(null, t)
                                })).catch((function(t) {
                                    return e(t)
                                })) : this.injectPromise(this.getExchangeByID, t)
                            }
                        }, {
                            key: "listExchanges",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                                if (!t) return this.injectPromise(this.listExchanges);
                                this.tronWeb.fullNode.request("wallet/listexchanges", {}, "post").then((function(e) {
                                    var r = e.exchanges;
                                    t(null, void 0 === r ? [] : r)
                                }), "post").catch((function(e) {
                                    return t(e)
                                }))
                            }
                        }, {
                            key: "listExchangesPaginated",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 10,
                                    e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                                    r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                                if (Zt.isFunction(e) && (r = e, e = 0), Zt.isFunction(t) && (r = t, t = 10), !r) return this.injectPromise(this.listExchangesPaginated, t, e);
                                this.tronWeb.fullNode.request("wallet/getpaginatedexchangelist", {
                                    limit: t,
                                    offset: e
                                }, "post").then((function(t) {
                                    var e = t.exchanges;
                                    r(null, void 0 === e ? [] : e)
                                })).catch((function(t) {
                                    return r(t)
                                }))
                            }
                        }, {
                            key: "getNodeInfo",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                                if (!t) return this.injectPromise(this.getNodeInfo);
                                this.tronWeb.fullNode.request("wallet/getnodeinfo", {}, "post").then((function(e) {
                                    t(null, e)
                                }), "post").catch((function(e) {
                                    return t(e)
                                }))
                            }
                        }, {
                            key: "getTokenListByName",
                            value: function() {
                                var t = this,
                                    e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
                                    r = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                                return r ? (Zt.isInteger(e) && (e = e.toString()), Zt.isString(e) && e.length ? void this.tronWeb.fullNode.request("wallet/getassetissuelistbyname", {
                                    value: this.tronWeb.fromUtf8(e)
                                }, "post").then((function(e) {
                                    if (Array.isArray(e.assetIssue)) r(null, e.assetIssue.map((function(e) {
                                        return t._parseToken(e)
                                    })));
                                    else if (!e.name) return r("Token does not exist");
                                    r(null, t._parseToken(e))
                                })).catch((function(t) {
                                    return r(t)
                                })) : r("Invalid token ID provided")) : this.injectPromise(this.getTokenListByName, e)
                            }
                        }, {
                            key: "getTokenByID",
                            value: function() {
                                var t = this,
                                    e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
                                    r = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                                return r ? (Zt.isInteger(e) && (e = e.toString()), Zt.isString(e) && e.length ? void this.tronWeb.fullNode.request("wallet/getassetissuebyid", {
                                    value: e
                                }, "post").then((function(e) {
                                    if (!e.name) return r("Token does not exist");
                                    r(null, t._parseToken(e))
                                })).catch((function(t) {
                                    return r(t)
                                })) : r("Invalid token ID provided")) : this.injectPromise(this.getTokenByID, e)
                            }
                        }, {
                            key: "getReward",
                            value: (o = d()(D.a.mark((function t(e) {
                                var r, n, i = arguments;
                                return D.a.wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            return r = i.length > 1 && void 0 !== i[1] ? i[1] : {}, n = i.length > 2 && void 0 !== i[2] && i[2], r.confirmed = !0, t.abrupt("return", this._getReward(e, r, n));
                                        case 4:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this)
                            }))), function(t) {
                                return o.apply(this, arguments)
                            })
                        }, {
                            key: "getUnconfirmedReward",
                            value: (s = d()(D.a.mark((function t(e) {
                                var r, n, i = arguments;
                                return D.a.wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            return r = i.length > 1 && void 0 !== i[1] ? i[1] : {}, n = i.length > 2 && void 0 !== i[2] && i[2], r.confirmed = !1, t.abrupt("return", this._getReward(e, r, n));
                                        case 4:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this)
                            }))), function(t) {
                                return s.apply(this, arguments)
                            })
                        }, {
                            key: "getBrokerage",
                            value: (i = d()(D.a.mark((function t(e) {
                                var r, n, i = arguments;
                                return D.a.wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            return r = i.length > 1 && void 0 !== i[1] ? i[1] : {}, n = i.length > 2 && void 0 !== i[2] && i[2], r.confirmed = !0, t.abrupt("return", this._getBrokerage(e, r, n));
                                        case 4:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this)
                            }))), function(t) {
                                return i.apply(this, arguments)
                            })
                        }, {
                            key: "getUnconfirmedBrokerage",
                            value: (n = d()(D.a.mark((function t(e) {
                                var r, n, i = arguments;
                                return D.a.wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            return r = i.length > 1 && void 0 !== i[1] ? i[1] : {}, n = i.length > 2 && void 0 !== i[2] && i[2], r.confirmed = !1, t.abrupt("return", this._getBrokerage(e, r, n));
                                        case 4:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this)
                            }))), function(t) {
                                return n.apply(this, arguments)
                            })
                        }, {
                            key: "_getReward",
                            value: (r = d()(D.a.mark((function t() {
                                var e, r, n, i, s = arguments;
                                return D.a.wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            if (e = s.length > 0 && void 0 !== s[0] ? s[0] : this.tronWeb.defaultAddress.hex, r = s.length > 1 ? s[1] : void 0, n = s.length > 2 && void 0 !== s[2] && s[2], Zt.isFunction(r) && (n = r, r = {}), Zt.isFunction(e) ? (n = e, e = this.tronWeb.defaultAddress.hex) : Zt.isObject(e) && (r = e, e = this.tronWeb.defaultAddress.hex), n) {
                                                t.next = 7;
                                                break
                                            }
                                            return t.abrupt("return", this.injectPromise(this._getReward, e, r));
                                        case 7:
                                            if (!this.validator.notValid([{
                                                    name: "origin",
                                                    type: "address",
                                                    value: e
                                                }], n)) {
                                                t.next = 9;
                                                break
                                            }
                                            return t.abrupt("return");
                                        case 9:
                                            i = {
                                                address: we(e)
                                            }, this.tronWeb[r.confirmed ? "solidityNode" : "fullNode"].request("wallet".concat(r.confirmed ? "solidity" : "", "/getReward"), i, "post").then((function() {
                                                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                                                if (void 0 === t.reward) return n("Not found.");
                                                n(null, t.reward)
                                            })).catch((function(t) {
                                                return n(t)
                                            }));
                                        case 11:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this)
                            }))), function() {
                                return r.apply(this, arguments)
                            })
                        }, {
                            key: "_getBrokerage",
                            value: (e = d()(D.a.mark((function t() {
                                var e, r, n, i, s = arguments;
                                return D.a.wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            if (e = s.length > 0 && void 0 !== s[0] ? s[0] : this.tronWeb.defaultAddress.hex, r = s.length > 1 ? s[1] : void 0, n = s.length > 2 && void 0 !== s[2] && s[2], Zt.isFunction(r) && (n = r, r = {}), Zt.isFunction(e) ? (n = e, e = this.tronWeb.defaultAddress.hex) : Zt.isObject(e) && (r = e, e = this.tronWeb.defaultAddress.hex), n) {
                                                t.next = 7;
                                                break
                                            }
                                            return t.abrupt("return", this.injectPromise(this._getBrokerage, e, r));
                                        case 7:
                                            if (!this.validator.notValid([{
                                                    name: "origin",
                                                    type: "address",
                                                    value: e
                                                }], n)) {
                                                t.next = 9;
                                                break
                                            }
                                            return t.abrupt("return");
                                        case 9:
                                            i = {
                                                address: we(e)
                                            }, this.tronWeb[r.confirmed ? "solidityNode" : "fullNode"].request("wallet".concat(r.confirmed ? "solidity" : "", "/getBrokerage"), i, "post").then((function() {
                                                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                                                if (void 0 === t.brokerage) return n("Not found.");
                                                n(null, t.brokerage)
                                            })).catch((function(t) {
                                                return n(t)
                                            }));
                                        case 11:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this)
                            }))), function() {
                                return e.apply(this, arguments)
                            })
                        }], [{
                            key: "verifySignature",
                            value: function(t, e, r) {
                                var n = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3];
                                t = t.replace(/^0x/, ""), r = r.replace(/^0x/, "");
                                var i = [].concat(L()(at(n ? "TRON Signed Message:\n32" : "Ethereum Signed Message:\n32")), L()(Zt.code.hexStr2byteArray(t))),
                                    s = st(i),
                                    o = ct(s, {
                                        recoveryParam: "1c" == r.substring(128, 130) ? 1 : 0,
                                        r: "0x" + r.substring(0, 64),
                                        s: "0x" + r.substring(64, 128)
                                    }),
                                    a = "41" + o.substr(2),
                                    u = Te.address.fromHex(a);
                                return u == Te.address.fromHex(e)
                            }
                        }, {
                            key: "signString",
                            value: function(t, e) {
                                var r = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
                                t = t.replace(/^0x/, "");
                                var n = {
                                        toHexString: function() {
                                            return "0x" + e
                                        },
                                        value: e
                                    },
                                    i = new ht(n),
                                    s = [].concat(L()(at(r ? "TRON Signed Message:\n32" : "Ethereum Signed Message:\n32")), L()(Zt.code.hexStr2byteArray(t))),
                                    o = st(s),
                                    a = i.signDigest(o),
                                    u = ["0x", a.r.substring(2), a.s.substring(2), Number(a.v).toString(16)].join("");
                                return u
                            }
                        }]), t
                    }();

                    function Ce(t, e) {
                        var r = Object.keys(t);
                        if (Object.getOwnPropertySymbols) {
                            var n = Object.getOwnPropertySymbols(t);
                            e && (n = n.filter((function(e) {
                                return Object.getOwnPropertyDescriptor(t, e).enumerable
                            }))), r.push.apply(r, n)
                        }
                        return r
                    }

                    function Ae(t) {
                        for (var e = 1; e < arguments.length; e++) {
                            var r = null != arguments[e] ? arguments[e] : {};
                            e % 2 ? Ce(Object(r), !0).forEach((function(e) {
                                k()(t, e, r[e])
                            })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : Ce(Object(r)).forEach((function(e) {
                                Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e))
                            }))
                        }
                        return t
                    }
                    var Be = function(t, e) {
                            return Kt(t, e)
                        },
                        Fe = function() {
                            function t(e, r) {
                                v()(this, t), this.tronWeb = e.tronWeb, this.contract = e, this.abi = r, this.name = r.name || (r.name = r.type), this.inputs = r.inputs || [], this.outputs = r.outputs || [], this.functionSelector = function(t) {
                                    if (t.stateMutability = t.stateMutability ? t.stateMutability.toLowerCase() : "nonpayable", t.type = t.type ? t.type.toLowerCase() : "", "fallback" === t.type || "receive" === t.type) return "0x";
                                    var e = new Zt.ethersUtils.Interface([t]);
                                    return "event" === t.type ? e.getEvent(t.name).format(Zt.ethersUtils.FormatTypes.sighash) : e.getFunction(t.name).format(Zt.ethersUtils.FormatTypes.sighash)
                                }(r), this.signature = this.tronWeb.sha3(this.functionSelector, !1).slice(0, 8), this.injectPromise = ie()(this), this.defaultOptions = {
                                    feeLimit: this.tronWeb.feeLimit,
                                    callValue: 0,
                                    userFeePercentage: 100,
                                    shouldPollResponse: !1
                                }
                            }
                            var e, r, n;
                            return y()(t, [{
                                key: "decodeInput",
                                value: function(t) {
                                    return Be(this.inputs, "0x" + t)
                                }
                            }, {
                                key: "onMethod",
                                value: function() {
                                    var t = this,
                                        e = "";
                                    if (this.abi && !/event/i.test(this.abi.type)) {
                                        for (var r = arguments.length, n = new Array(r), i = 0; i < r; i++) n[i] = arguments[i];
                                        e = qt(this.abi, n)
                                    }
                                    return {
                                        call: function() {
                                            var r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                                                n = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                                            return Zt.isFunction(r) && (n = r, r = {}), r = Ae(Ae({}, r), {}, {
                                                rawParameter: e
                                            }), t._call([], [], r, n)
                                        },
                                        send: function() {
                                            var r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                                                n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : t.tronWeb.defaultPrivateKey,
                                                i = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                                            return Zt.isFunction(n) && (i = n, n = t.tronWeb.defaultPrivateKey), Zt.isFunction(r) && (i = r, r = {}), r = Ae(Ae({}, r), {}, {
                                                rawParameter: e
                                            }), t._send([], [], r, n, i)
                                        },
                                        watch: function() {
                                            return t._watch.apply(t, arguments)
                                        }
                                    }
                                }
                            }, {
                                key: "_call",
                                value: (n = d()(D.a.mark((function t(e, r) {
                                    var n, i, s, o, a = this,
                                        u = arguments;
                                    return D.a.wrap((function(t) {
                                        for (;;) switch (t.prev = t.next) {
                                            case 0:
                                                if (n = u.length > 2 && void 0 !== u[2] ? u[2] : {}, i = u.length > 3 && void 0 !== u[3] && u[3], Zt.isFunction(n) && (i = n, n = {}), i) {
                                                    t.next = 5;
                                                    break
                                                }
                                                return t.abrupt("return", this.injectPromise(this._call, e, r, n));
                                            case 5:
                                                if (e.length === r.length) {
                                                    t.next = 7;
                                                    break
                                                }
                                                return t.abrupt("return", i("Invalid argument count provided"));
                                            case 7:
                                                if (this.contract.address) {
                                                    t.next = 9;
                                                    break
                                                }
                                                return t.abrupt("return", i("Smart contract is missing address"));
                                            case 9:
                                                if (this.contract.deployed) {
                                                    t.next = 11;
                                                    break
                                                }
                                                return t.abrupt("return", i("Calling smart contracts requires you to load the contract first"));
                                            case 11:
                                                if (s = this.abi.stateMutability, ["pure", "view"].includes(s.toLowerCase())) {
                                                    t.next = 14;
                                                    break
                                                }
                                                return t.abrupt("return", i('Methods with state mutability "'.concat(s, '" must use send()')));
                                            case 14:
                                                n = Ae(Ae(Ae({}, this.defaultOptions), {}, {
                                                    from: this.tronWeb.defaultAddress.hex
                                                }, n), {}, {
                                                    _isConstant: !0
                                                }), o = r.map((function(t, r) {
                                                    return {
                                                        type: e[r],
                                                        value: t
                                                    }
                                                })), this.tronWeb.transactionBuilder.triggerSmartContract(this.contract.address, this.functionSelector, n, o, !!n.from && this.tronWeb.address.toHex(n.from), (function(t, e) {
                                                    if (t) return i(t);
                                                    if (!Zt.hasProperty(e, "constant_result")) return i("Failed to execute");
                                                    try {
                                                        var r = e.constant_result[0].length;
                                                        if (0 === r || r % 64 == 8) {
                                                            var n = "The call has been reverted or has thrown an error.";
                                                            if (0 !== r) {
                                                                n += " Error message: ";
                                                                for (var s = "", o = e.constant_result[0].substring(8), u = 0; u < r - 8; u += 64) s += a.tronWeb.toUtf8(o.substring(u, u + 64));
                                                                n += s.replace(/(\u0000|\u000b|\f)+/g, " ").replace(/ +/g, " ").replace(/\s+$/g, "")
                                                            }
                                                            return i(n)
                                                        }
                                                        var c = Be(a.abi, "0x" + e.constant_result[0]);
                                                        return 1 === c.length && (c = c[0]), i(null, c)
                                                    } catch (t) {
                                                        return i(t)
                                                    }
                                                }));
                                            case 17:
                                            case "end":
                                                return t.stop()
                                        }
                                    }), t, this)
                                }))), function(t, e) {
                                    return n.apply(this, arguments)
                                })
                            }, {
                                key: "_send",
                                value: (r = d()(D.a.mark((function t(e, r) {
                                    var n, i, s, o, a, u, c, h, l, f, p, g = this,
                                        v = arguments;
                                    return D.a.wrap((function(t) {
                                        for (;;) switch (t.prev = t.next) {
                                            case 0:
                                                if (n = v.length > 2 && void 0 !== v[2] ? v[2] : {}, i = v.length > 3 && void 0 !== v[3] ? v[3] : this.tronWeb.defaultPrivateKey, s = v.length > 4 && void 0 !== v[4] && v[4], Zt.isFunction(i) && (s = i, i = this.tronWeb.defaultPrivateKey), Zt.isFunction(n) && (s = n, n = {}), s) {
                                                    t.next = 7;
                                                    break
                                                }
                                                return t.abrupt("return", this.injectPromise(this._send, e, r, n, i));
                                            case 7:
                                                if (e.length === r.length) {
                                                    t.next = 9;
                                                    break
                                                }
                                                throw new Error("Invalid argument count provided");
                                            case 9:
                                                if (this.contract.address) {
                                                    t.next = 11;
                                                    break
                                                }
                                                return t.abrupt("return", s("Smart contract is missing address"));
                                            case 11:
                                                if (this.contract.deployed) {
                                                    t.next = 13;
                                                    break
                                                }
                                                return t.abrupt("return", s("Calling smart contracts requires you to load the contract first"));
                                            case 13:
                                                if (o = this.abi.stateMutability, !["pure", "view"].includes(o.toLowerCase())) {
                                                    t.next = 16;
                                                    break
                                                }
                                                return t.abrupt("return", s('Methods with state mutability "'.concat(o, '" must use call()')));
                                            case 16:
                                                return ["payable"].includes(o.toLowerCase()) || (n.callValue = 0), n = Ae(Ae({}, this.defaultOptions), {}, {
                                                    from: this.tronWeb.defaultAddress.hex
                                                }, n), a = r.map((function(t, r) {
                                                    return {
                                                        type: e[r],
                                                        value: t
                                                    }
                                                })), t.prev = 19, u = i ? this.tronWeb.address.fromPrivateKey(i) : this.tronWeb.defaultAddress.base58, t.next = 23, this.tronWeb.transactionBuilder.triggerSmartContract(this.contract.address, this.functionSelector, n, a, this.tronWeb.address.toHex(u));
                                            case 23:
                                                if ((c = t.sent).result && c.result.result) {
                                                    t.next = 26;
                                                    break
                                                }
                                                return t.abrupt("return", s("Unknown error: " + JSON.stringify(c, null, 2)));
                                            case 26:
                                                return t.next = 28, this.tronWeb.trx.sign(c.transaction, i);
                                            case 28:
                                                if ((h = t.sent).signature) {
                                                    t.next = 33;
                                                    break
                                                }
                                                if (i) {
                                                    t.next = 32;
                                                    break
                                                }
                                                return t.abrupt("return", s("Transaction was not signed properly"));
                                            case 32:
                                                return t.abrupt("return", s("Invalid private key provided"));
                                            case 33:
                                                return t.next = 35, this.tronWeb.trx.sendRawTransaction(h);
                                            case 35:
                                                if (!(l = t.sent).code) {
                                                    t.next = 40;
                                                    break
                                                }
                                                return f = {
                                                    error: l.code,
                                                    message: l.code
                                                }, l.message && (f.message = this.tronWeb.toUtf8(l.message)), t.abrupt("return", s(f));
                                            case 40:
                                                if (n.shouldPollResponse) {
                                                    t.next = 42;
                                                    break
                                                }
                                                return t.abrupt("return", s(null, h.txID));
                                            case 42:
                                                (p = function() {
                                                    var t = d()(D.a.mark((function t() {
                                                        var e, r, i, o = arguments;
                                                        return D.a.wrap((function(t) {
                                                            for (;;) switch (t.prev = t.next) {
                                                                case 0:
                                                                    if (20 !== (e = o.length > 0 && void 0 !== o[0] ? o[0] : 0)) {
                                                                        t.next = 3;
                                                                        break
                                                                    }
                                                                    return t.abrupt("return", s({
                                                                        error: "Cannot find result in solidity node",
                                                                        transaction: h
                                                                    }));
                                                                case 3:
                                                                    return t.next = 5, g.tronWeb.trx.getTransactionInfo(h.txID);
                                                                case 5:
                                                                    if (r = t.sent, Object.keys(r).length) {
                                                                        t.next = 8;
                                                                        break
                                                                    }
                                                                    return t.abrupt("return", setTimeout((function() {
                                                                        p(e + 1)
                                                                    }), 3e3));
                                                                case 8:
                                                                    if (!r.result || "FAILED" !== r.result) {
                                                                        t.next = 10;
                                                                        break
                                                                    }
                                                                    return t.abrupt("return", s({
                                                                        error: g.tronWeb.toUtf8(r.resMessage),
                                                                        transaction: h,
                                                                        output: r
                                                                    }));
                                                                case 10:
                                                                    if (Zt.hasProperty(r, "contractResult")) {
                                                                        t.next = 12;
                                                                        break
                                                                    }
                                                                    return t.abrupt("return", s({
                                                                        error: "Failed to execute: " + JSON.stringify(r, null, 2),
                                                                        transaction: h,
                                                                        output: r
                                                                    }));
                                                                case 12:
                                                                    if (!n.rawResponse) {
                                                                        t.next = 14;
                                                                        break
                                                                    }
                                                                    return t.abrupt("return", s(null, r));
                                                                case 14:
                                                                    if (1 === (i = Be(g.abi, "0x" + r.contractResult[0])).length && (i = i[0]), !n.keepTxID) {
                                                                        t.next = 18;
                                                                        break
                                                                    }
                                                                    return t.abrupt("return", s(null, [h.txID, i]));
                                                                case 18:
                                                                    return t.abrupt("return", s(null, i));
                                                                case 19:
                                                                case "end":
                                                                    return t.stop()
                                                            }
                                                        }), t)
                                                    })));
                                                    return function() {
                                                        return t.apply(this, arguments)
                                                    }
                                                }())(), t.next = 49;
                                                break;
                                            case 46:
                                                return t.prev = 46, t.t0 = t.catch(19), t.abrupt("return", s(t.t0));
                                            case 49:
                                            case "end":
                                                return t.stop()
                                        }
                                    }), t, this, [
                                        [19, 46]
                                    ])
                                }))), function(t, e) {
                                    return r.apply(this, arguments)
                                })
                            }, {
                                key: "_watch",
                                value: (e = d()(D.a.mark((function t() {
                                    var e, r, n, i, s, o, a, u = this,
                                        c = arguments;
                                    return D.a.wrap((function(t) {
                                        for (;;) switch (t.prev = t.next) {
                                            case 0:
                                                if (e = c.length > 0 && void 0 !== c[0] ? c[0] : {}, r = c.length > 1 && void 0 !== c[1] && c[1], Zt.isFunction(e) && (r = e, e = {}), Zt.isFunction(r)) {
                                                    t.next = 5;
                                                    break
                                                }
                                                throw new Error("Expected callback to be provided");
                                            case 5:
                                                if (this.contract.address) {
                                                    t.next = 7;
                                                    break
                                                }
                                                return t.abrupt("return", r("Smart contract is missing address"));
                                            case 7:
                                                if (this.abi.type && /event/i.test(this.abi.type)) {
                                                    t.next = 9;
                                                    break
                                                }
                                                return t.abrupt("return", r("Invalid method type for event watching"));
                                            case 9:
                                                if (this.tronWeb.eventServer) {
                                                    t.next = 11;
                                                    break
                                                }
                                                return t.abrupt("return", r("No event server configured"));
                                            case 11:
                                                return n = !1, i = !1, s = Date.now() - 1e3, o = function() {
                                                    var t = d()(D.a.mark((function t() {
                                                        var r, n, o, a, c, h;
                                                        return D.a.wrap((function(t) {
                                                            for (;;) switch (t.prev = t.next) {
                                                                case 0:
                                                                    return t.prev = 0, r = {
                                                                        since: s,
                                                                        eventName: u.name,
                                                                        sort: "block_timestamp",
                                                                        blockNumber: "latest",
                                                                        filters: e.filters
                                                                    }, e.resourceNode && (/full/i.test(e.resourceNode) ? r.onlyUnconfirmed = !0 : r.onlyConfirmed = !0), t.next = 5, u.tronWeb.event.getEventsByContractAddress(u.contract.address, r);
                                                                case 5:
                                                                    return n = t.sent, o = n.sort((function(t, e) {
                                                                        return e.block - t.block
                                                                    })), a = oe()(o, 1), c = a[0], h = n.filter((function(t, r) {
                                                                        return !(e.resourceNode && t.resourceNode && e.resourceNode.toLowerCase() !== t.resourceNode.toLowerCase() || n.slice(0, r).some((function(e) {
                                                                            return JSON.stringify(e) == JSON.stringify(t)
                                                                        })) || i && !(t.block > i))
                                                                    })), c && (i = c.block), t.abrupt("return", h);
                                                                case 12:
                                                                    return t.prev = 12, t.t0 = t.catch(0), t.abrupt("return", Promise.reject(t.t0));
                                                                case 15:
                                                                case "end":
                                                                    return t.stop()
                                                            }
                                                        }), t, null, [
                                                            [0, 12]
                                                        ])
                                                    })));
                                                    return function() {
                                                        return t.apply(this, arguments)
                                                    }
                                                }(), a = function() {
                                                    n && clearInterval(n), n = setInterval((function() {
                                                        o().then((function(t) {
                                                            return t.forEach((function(t) {
                                                                r(null, Zt.parseEvent(t, u.abi))
                                                            }))
                                                        })).catch((function(t) {
                                                            return r(t)
                                                        }))
                                                    }), 3e3)
                                                }, t.next = 18, o();
                                            case 18:
                                                return a(), t.abrupt("return", {
                                                    start: a,
                                                    stop: function() {
                                                        n && (clearInterval(n), n = !1)
                                                    }
                                                });
                                            case 20:
                                            case "end":
                                                return t.stop()
                                        }
                                    }), t, this)
                                }))), function() {
                                    return e.apply(this, arguments)
                                })
                            }]), t
                        }(),
                        Ee = function() {
                            function t() {
                                var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
                                    r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [],
                                    n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                                if (v()(this, t), !e || !e instanceof Te) throw new Error("Expected instance of TronWeb");
                                this.tronWeb = e, this.injectPromise = ie()(this), this.address = n, this.abi = r, this.eventListener = !1, this.bytecode = !1, this.deployed = !1, this.lastBlock = !1, this.methods = {}, this.methodInstances = {}, this.props = [], this.tronWeb.isAddress(n) ? this.deployed = !0 : this.address = !1, this.loadAbi(r)
                            }
                            var e, r, n, i;
                            return y()(t, [{
                                key: "_getEvents",
                                value: (i = d()(D.a.mark((function t() {
                                    var e, r, n, i, s, o, a = this,
                                        u = arguments;
                                    return D.a.wrap((function(t) {
                                        for (;;) switch (t.prev = t.next) {
                                            case 0:
                                                return e = u.length > 0 && void 0 !== u[0] ? u[0] : {}, t.next = 3, this.tronWeb.event.getEventsByContractAddress(this.address, e);
                                            case 3:
                                                return r = t.sent, n = r.sort((function(t, e) {
                                                    return e.block - t.block
                                                })), i = oe()(n, 1), s = i[0], o = r.filter((function(t, n) {
                                                    return !(e.resourceNode && t.resourceNode && e.resourceNode.toLowerCase() !== t.resourceNode.toLowerCase() || r.slice(0, n).some((function(e) {
                                                        return JSON.stringify(e) == JSON.stringify(t)
                                                    })) || a.lastBlock && !(t.block > a.lastBlock))
                                                })), s && (this.lastBlock = s.block), t.abrupt("return", o);
                                            case 8:
                                            case "end":
                                                return t.stop()
                                        }
                                    }), t, this)
                                }))), function() {
                                    return i.apply(this, arguments)
                                })
                            }, {
                                key: "_startEventListener",
                                value: (n = d()(D.a.mark((function t() {
                                    var e, r, n = this,
                                        i = arguments;
                                    return D.a.wrap((function(t) {
                                        for (;;) switch (t.prev = t.next) {
                                            case 0:
                                                if (e = i.length > 0 && void 0 !== i[0] ? i[0] : {}, r = i.length > 1 ? i[1] : void 0, Zt.isFunction(e) && (r = e, e = {}), this.eventListener && clearInterval(this.eventListener), this.tronWeb.eventServer) {
                                                    t.next = 6;
                                                    break
                                                }
                                                throw new Error("Event server is not configured");
                                            case 6:
                                                if (this.address) {
                                                    t.next = 8;
                                                    break
                                                }
                                                throw new Error("Contract is not configured with an address");
                                            case 8:
                                                return this.eventCallback = r, t.next = 11, this._getEvents(e);
                                            case 11:
                                                this.eventListener = setInterval((function() {
                                                    n._getEvents(e).then((function(t) {
                                                        return t.forEach((function(t) {
                                                            n.eventCallback && n.eventCallback(t)
                                                        }))
                                                    })).catch((function(t) {
                                                        console.error("Failed to get event list", t)
                                                    }))
                                                }), 3e3);
                                            case 12:
                                            case "end":
                                                return t.stop()
                                        }
                                    }), t, this)
                                }))), function() {
                                    return n.apply(this, arguments)
                                })
                            }, {
                                key: "_stopEventListener",
                                value: function() {
                                    this.eventListener && (clearInterval(this.eventListener), this.eventListener = !1, this.eventCallback = !1)
                                }
                            }, {
                                key: "hasProperty",
                                value: function(t) {
                                    return this.hasOwnProperty(t) || this.__proto__.hasOwnProperty(t)
                                }
                            }, {
                                key: "loadAbi",
                                value: function(t) {
                                    var e = this;
                                    this.abi = t, this.methods = {}, this.props.forEach((function(t) {
                                        return delete e[t]
                                    })), t.forEach((function(t) {
                                        if (t.type && !/constructor/i.test(t.type)) {
                                            var r = new Fe(e, t),
                                                n = r.onMethod.bind(r),
                                                i = r.name,
                                                s = r.functionSelector,
                                                o = r.signature;
                                            e.methods[i] = n, e.methods[s] = n, e.methods[o] = n, e.methodInstances[i] = r, e.methodInstances[s] = r, e.methodInstances[o] = r, e.hasProperty(i) || (e[i] = n, e.props.push(i)), e.hasProperty(s) || (e[s] = n, e.props.push(s)), e.hasProperty(o) || (e[o] = n, e.props.push(o))
                                        }
                                    }))
                                }
                            }, {
                                key: "decodeInput",
                                value: function(t) {
                                    var e = t.substring(0, 8),
                                        r = t.substring(8);
                                    if (!this.methodInstances[e]) throw new Error("Contract method " + e + " not found");
                                    return {
                                        name: this.methodInstances[e].name,
                                        params: this.methodInstances[e].decodeInput(r)
                                    }
                                }
                            }, {
                                key: "new",
                                value: (r = d()(D.a.mark((function t(e) {
                                    var r, n, i, s, o, a, u = arguments;
                                    return D.a.wrap((function(t) {
                                        for (;;) switch (t.prev = t.next) {
                                            case 0:
                                                if (r = u.length > 1 && void 0 !== u[1] ? u[1] : this.tronWeb.defaultPrivateKey, n = u.length > 2 && void 0 !== u[2] && u[2], Zt.isFunction(r) && (n = r, r = this.tronWeb.defaultPrivateKey), n) {
                                                    t.next = 5;
                                                    break
                                                }
                                                return t.abrupt("return", this.injectPromise(this.new, e, r));
                                            case 5:
                                                return t.prev = 5, i = this.tronWeb.address.fromPrivateKey(r), t.next = 9, this.tronWeb.transactionBuilder.createSmartContract(e, i);
                                            case 9:
                                                return s = t.sent, t.next = 12, this.tronWeb.trx.sign(s, r);
                                            case 12:
                                                return o = t.sent, t.next = 15, this.tronWeb.trx.sendRawTransaction(o);
                                            case 15:
                                                if (!(a = t.sent).code) {
                                                    t.next = 18;
                                                    break
                                                }
                                                return t.abrupt("return", n({
                                                    error: a.code,
                                                    message: this.tronWeb.toUtf8(a.message)
                                                }));
                                            case 18:
                                                return t.next = 20, Zt.sleep(3e3);
                                            case 20:
                                                return t.abrupt("return", this.at(o.contract_address, n));
                                            case 23:
                                                return t.prev = 23, t.t0 = t.catch(5), t.abrupt("return", n(t.t0));
                                            case 26:
                                            case "end":
                                                return t.stop()
                                        }
                                    }), t, this, [
                                        [5, 23]
                                    ])
                                }))), function(t) {
                                    return r.apply(this, arguments)
                                })
                            }, {
                                key: "at",
                                value: (e = d()(D.a.mark((function t(e) {
                                    var r, n, i = arguments;
                                    return D.a.wrap((function(t) {
                                        for (;;) switch (t.prev = t.next) {
                                            case 0:
                                                if (r = i.length > 1 && void 0 !== i[1] && i[1]) {
                                                    t.next = 3;
                                                    break
                                                }
                                                return t.abrupt("return", this.injectPromise(this.at, e));
                                            case 3:
                                                return t.prev = 3, t.next = 6, this.tronWeb.trx.getContract(e);
                                            case 6:
                                                if ((n = t.sent).contract_address) {
                                                    t.next = 9;
                                                    break
                                                }
                                                return t.abrupt("return", r("Unknown error: " + JSON.stringify(n, null, 2)));
                                            case 9:
                                                return this.address = n.contract_address, this.bytecode = n.bytecode, this.deployed = !0, this.loadAbi(n.abi && n.abi.entrys ? n.abi.entrys : []), t.abrupt("return", r(null, this));
                                            case 16:
                                                if (t.prev = 16, t.t0 = t.catch(3), !t.t0.toString().includes("does not exist")) {
                                                    t.next = 20;
                                                    break
                                                }
                                                return t.abrupt("return", r("Contract has not been deployed on the network"));
                                            case 20:
                                                return t.abrupt("return", r(t.t0));
                                            case 21:
                                            case "end":
                                                return t.stop()
                                        }
                                    }), t, this, [
                                        [3, 16]
                                    ])
                                }))), function(t) {
                                    return e.apply(this, arguments)
                                })
                            }, {
                                key: "events",
                                value: function() {
                                    var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                                        e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                                    if (Zt.isFunction(t) && (e = t, t = {}), !Zt.isFunction(e)) throw new Error("Callback function expected");
                                    var r = this;
                                    return {
                                        start: function() {
                                            var n = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                                            return n ? (r._startEventListener(t, e).then((function() {
                                                n()
                                            })).catch((function(t) {
                                                n(t)
                                            })), this) : (r._startEventListener(t, e), this)
                                        },
                                        stop: function() {
                                            r._stopEventListener()
                                        }
                                    }
                                }
                            }]), t
                        }(),
                        xe = function() {
                            function t() {
                                var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
                                    r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                                if (v()(this, t), !e || !e instanceof Te) throw new Error("Expected instance of TronWeb");
                                this.tronWeb = e, this.pluginNoOverride = ["register"], this.disablePlugins = r.disablePlugins
                            }
                            return y()(t, [{
                                key: "register",
                                value: function(t, e) {
                                    var r = {
                                            requires: "0.0.0",
                                            components: {}
                                        },
                                        n = {
                                            libs: [],
                                            plugged: [],
                                            skipped: []
                                        };
                                    if (this.disablePlugins) return n.error = "This instance of TronWeb has plugins disabled.", n;
                                    var i = new t(this.tronWeb);
                                    if (Zt.isFunction(i.pluginInterface) && (r = i.pluginInterface(e)), !re.a.satisfies(Te.version, r.requires)) throw new Error("The plugin is not compatible with this version of TronWeb");
                                    if (r.fullClass) {
                                        var s = i.constructor.name,
                                            o = s.substring(0, 1).toLowerCase() + s.substring(1);
                                        s !== o && (Te[s] = t, this.tronWeb[o] = i, n.libs.push(s))
                                    } else
                                        for (var a in r.components)
                                            if (this.tronWeb.hasOwnProperty(a)) {
                                                var u = r.components[a],
                                                    c = this.tronWeb[a].pluginNoOverride || [];
                                                for (var h in u) "constructor" === h || this.tronWeb[a][h] && (c.includes(h) || /^_/.test(h)) ? n.skipped.push(h) : (this.tronWeb[a][h] = u[h].bind(this.tronWeb[a]), n.plugged.push(h))
                                            } return n
                                }
                            }]), t
                        }(),
                        _e = n(21),
                        ke = n.n(_e),
                        Me = function() {
                            function t() {
                                var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                                if (v()(this, t), !(e && e instanceof Te)) throw new Error("Expected instance of TronWeb");
                                this.tronWeb = e, this.injectPromise = ie()(this)
                            }
                            return y()(t, [{
                                key: "setServer",
                                value: function() {
                                    var t = this,
                                        e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
                                        r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "healthcheck";
                                    if (!e) return this.tronWeb.eventServer = !1;
                                    if (Zt.isString(e) && (e = new Yt.HttpProvider(e)), !this.tronWeb.isValidProvider(e)) throw new Error("Invalid event server provided");
                                    this.tronWeb.eventServer = e, this.tronWeb.eventServer.isConnected = function() {
                                        return t.tronWeb.eventServer.request(r).then((function() {
                                            return !0
                                        })).catch((function() {
                                            return !1
                                        }))
                                    }
                                }
                            }, {
                                key: "getEventsByContractAddress",
                                value: function() {
                                    var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
                                        e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                                        r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
                                        n = Object.assign({
                                            sinceTimestamp: 0,
                                            eventName: !1,
                                            blockNumber: !1,
                                            size: 20,
                                            page: 1
                                        }, e),
                                        i = n.sinceTimestamp,
                                        s = n.since,
                                        o = n.fromTimestamp,
                                        a = n.eventName,
                                        u = n.blockNumber,
                                        c = n.size,
                                        h = n.page,
                                        l = n.onlyConfirmed,
                                        d = n.onlyUnconfirmed,
                                        f = n.previousLastEventFingerprint,
                                        g = n.previousFingerprint,
                                        v = n.fingerprint,
                                        m = n.rawResponse,
                                        y = n.sort,
                                        w = n.filters;
                                    if (!r) return this.injectPromise(this.getEventsByContractAddress, t, e);
                                    if (o = o || i || s, !this.tronWeb.eventServer) return r("No event server configured");
                                    var b = [];
                                    if (!this.tronWeb.isAddress(t)) return r("Invalid contract address provided");
                                    if (a && !t) return r("Usage of event name filtering requires a contract address");
                                    if (void 0 !== o && !Zt.isInteger(o)) return r("Invalid fromTimestamp provided");
                                    if (!Zt.isInteger(c)) return r("Invalid size provided");
                                    if (c > 200 && (console.warn("Defaulting to maximum accepted size: 200"), c = 200), !Zt.isInteger(h)) return r("Invalid page provided");
                                    if (u && !a) return r("Usage of block number filtering requires an event name");
                                    t && b.push(this.tronWeb.address.fromHex(t)), a && b.push(a), u && b.push(u);
                                    var C = {
                                        size: c,
                                        page: h
                                    };
                                    return "object" === p()(w) && Object.keys(w).length > 0 && (C.filters = JSON.stringify(w)), o && (C.fromTimestamp = C.since = o), l && (C.only_confirmed = l), d && !l && (C.only_unconfirmed = d), y && (C.sort = y), (v = v || g || f) && (C.fingerprint = v), this.tronWeb.eventServer.request("event/contract/".concat(b.join("/"), "?").concat(ke.a.stringify(C))).then((function() {
                                        var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                                        return t ? Zt.isArray(t) ? r(null, !0 === m ? t : t.map((function(t) {
                                            return Zt.mapEvent(t)
                                        }))) : r(t) : r("Unknown error occurred")
                                    })).catch((function(t) {
                                        return r(t.response && t.response.data || t)
                                    }))
                                }
                            }, {
                                key: "getEventsByTransactionID",
                                value: function() {
                                    var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
                                        e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                                        r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                                    return Zt.isFunction(e) && (r = e, e = {}), r ? this.tronWeb.eventServer ? this.tronWeb.eventServer.request("event/transaction/".concat(t)).then((function() {
                                        var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                                        return t ? Zt.isArray(t) ? r(null, !0 === e.rawResponse ? t : t.map((function(t) {
                                            return Zt.mapEvent(t)
                                        }))) : r(t) : r("Unknown error occurred")
                                    })).catch((function(t) {
                                        return r(t.response && t.response.data || t)
                                    })) : r("No event server configured") : this.injectPromise(this.getEventsByTransactionID, t, e)
                                }
                            }]), t
                        }();

                    function De(t, e) {
                        var r = Object.keys(t);
                        if (Object.getOwnPropertySymbols) {
                            var n = Object.getOwnPropertySymbols(t);
                            e && (n = n.filter((function(e) {
                                return Object.getOwnPropertyDescriptor(t, e).enumerable
                            }))), r.push.apply(r, n)
                        }
                        return r
                    }

                    function Se(t) {
                        for (var e = 1; e < arguments.length; e++) {
                            var r = null != arguments[e] ? arguments[e] : {};
                            e % 2 ? De(Object(r), !0).forEach((function(e) {
                                k()(t, e, r[e])
                            })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : De(Object(r)).forEach((function(e) {
                                Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e))
                            }))
                        }
                        return t
                    }
                    var Ie = function() {
                        function t(e) {
                            var r = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                                n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
                                i = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
                            v()(this, t), this.mainchain = n;
                            var s = e.fullHost,
                                o = e.fullNode,
                                a = e.solidityNode,
                                u = e.eventServer,
                                c = e.mainGatewayAddress,
                                h = e.sideGatewayAddress,
                                l = e.sideChainId;
                            this.sidechain = new r(s || o, s || a, s || u, i), this.isAddress = this.mainchain.isAddress, this.utils = this.mainchain.utils, this.setMainGatewayAddress(c), this.setSideGatewayAddress(h), this.setChainId(l), this.injectPromise = ie()(this), this.validator = new he(this.sidechain);
                            var d = this;
                            this.sidechain.trx.sign = function() {
                                return d.sign.apply(d, arguments)
                            }, this.sidechain.trx.multiSign = function() {
                                return d.multiSign.apply(d, arguments)
                            }
                        }
                        var e, r, n, i, s, o, a, u, c, h, l, f, p, g, m, w, b, C, A, B, F;
                        return y()(t, [{
                            key: "setMainGatewayAddress",
                            value: function(t) {
                                if (!this.isAddress(t)) throw new Error("Invalid main gateway address provided");
                                this.mainGatewayAddress = t
                            }
                        }, {
                            key: "setSideGatewayAddress",
                            value: function(t) {
                                if (!this.isAddress(t)) throw new Error("Invalid side gateway address provided");
                                this.sideGatewayAddress = t
                            }
                        }, {
                            key: "setChainId",
                            value: function(t) {
                                if (!this.utils.isString(t) || !t) throw new Error("Invalid side chainId provided");
                                this.chainId = t
                            }
                        }, {
                            key: "signTransaction",
                            value: function(t, e) {
                                "string" == typeof t && (t = this.utils.code.hexStr2byteArray(t));
                                var r = this.utils.code.hexStr2byteArray(this.chainId),
                                    n = this.utils.code.hexStr2byteArray(e.txID).concat(r),
                                    i = this.sidechain.utils.ethersUtils.sha256(n),
                                    s = this.utils.crypto.ECKeySign(this.utils.code.hexStr2byteArray(i.replace(/^0x/, "")), t);
                                return Array.isArray(e.signature) ? e.signature.includes(s) || e.signature.push(s) : e.signature = [s], e
                            }
                        }, {
                            key: "multiSign",
                            value: (F = d()(D.a.mark((function t() {
                                var e, r, n, i, s, o, a, u = arguments;
                                return D.a.wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            if (e = u.length > 0 && void 0 !== u[0] && u[0], r = u.length > 1 && void 0 !== u[1] ? u[1] : this.sidechain.defaultPrivateKey, n = u.length > 2 && void 0 !== u[2] && u[2], i = u.length > 3 && void 0 !== u[3] && u[3], this.utils.isFunction(n) && (i = n, n = 0), this.utils.isFunction(r) && (i = r, r = this.mainchain.defaultPrivateKey, n = 0), i) {
                                                t.next = 8;
                                                break
                                            }
                                            return t.abrupt("return", this.injectPromise(this.multiSign, e, r, n));
                                        case 8:
                                            if (this.utils.isObject(e) && e.raw_data && e.raw_data.contract) {
                                                t.next = 10;
                                                break
                                            }
                                            return t.abrupt("return", i("Invalid transaction provided"));
                                        case 10:
                                            if (e.raw_data.contract[0].Permission_id || !(n > 0)) {
                                                t.next = 30;
                                                break
                                            }
                                            return e.raw_data.contract[0].Permission_id = n, s = this.sidechain.address.toHex(this.sidechain.address.fromPrivateKey(r)).toLowerCase(), t.next = 15, this.sidechain.trx.getSignWeight(e, n);
                                        case 15:
                                            if ("PERMISSION_ERROR" !== (o = t.sent).result.code) {
                                                t.next = 18;
                                                break
                                            }
                                            return t.abrupt("return", i(o.result.message));
                                        case 18:
                                            if (a = !1, o.permission.keys.map((function(t) {
                                                    t.address === s && (a = !0)
                                                })), a) {
                                                t.next = 22;
                                                break
                                            }
                                            return t.abrupt("return", i(r + " has no permission to sign"));
                                        case 22:
                                            if (!o.approved_list || -1 == o.approved_list.indexOf(s)) {
                                                t.next = 24;
                                                break
                                            }
                                            return t.abrupt("return", i(r + " already sign transaction"));
                                        case 24:
                                            if (!o.transaction || !o.transaction.transaction) {
                                                t.next = 29;
                                                break
                                            }(e = o.transaction.transaction).raw_data.contract[0].Permission_id = n, t.next = 30;
                                            break;
                                        case 29:
                                            return t.abrupt("return", i("Invalid transaction provided"));
                                        case 30:
                                            return t.prev = 30, t.abrupt("return", i(null, this.signTransaction(r, e)));
                                        case 34:
                                            t.prev = 34, t.t0 = t.catch(30), i(t.t0);
                                        case 37:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this, [
                                    [30, 34]
                                ])
                            }))), function() {
                                return F.apply(this, arguments)
                            })
                        }, {
                            key: "sign",
                            value: (B = d()(D.a.mark((function t() {
                                var e, r, n, i, s, o, a = arguments;
                                return D.a.wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            if (e = a.length > 0 && void 0 !== a[0] && a[0], r = a.length > 1 && void 0 !== a[1] ? a[1] : this.sidechain.defaultPrivateKey, n = !(a.length > 2 && void 0 !== a[2]) || a[2], i = a.length > 3 && void 0 !== a[3] && a[3], s = a.length > 4 && void 0 !== a[4] && a[4], this.utils.isFunction(i) && (s = i, i = !1), this.utils.isFunction(n) && (s = n, n = !0, i = !1), this.utils.isFunction(r) && (s = r, r = this.sidechain.defaultPrivateKey, n = !0, i = !1), s) {
                                                t.next = 10;
                                                break
                                            }
                                            return t.abrupt("return", this.injectPromise(this.sign, e, r, n, i));
                                        case 10:
                                            if (!this.utils.isString(e)) {
                                                t.next = 21;
                                                break
                                            }
                                            if (this.utils.isHex(e)) {
                                                t.next = 13;
                                                break
                                            }
                                            return t.abrupt("return", s("Expected hex message input"));
                                        case 13:
                                            return t.prev = 13, o = this.sidechain.trx.signString(e, r, n), t.abrupt("return", s(null, o));
                                        case 18:
                                            t.prev = 18, t.t0 = t.catch(13), s(t.t0);
                                        case 21:
                                            if (this.utils.isObject(e)) {
                                                t.next = 23;
                                                break
                                            }
                                            return t.abrupt("return", s("Invalid transaction provided"));
                                        case 23:
                                            if (i || !e.signature) {
                                                t.next = 25;
                                                break
                                            }
                                            return t.abrupt("return", s("Transaction is already signed"));
                                        case 25:
                                            if (t.prev = 25, i) {
                                                t.next = 30;
                                                break
                                            }
                                            if (this.sidechain.address.toHex(this.sidechain.address.fromPrivateKey(r)).toLowerCase() === this.sidechain.address.toHex(e.raw_data.contract[0].parameter.value.owner_address)) {
                                                t.next = 30;
                                                break
                                            }
                                            return t.abrupt("return", s("Private key does not match address in transaction"));
                                        case 30:
                                            return t.abrupt("return", s(null, this.signTransaction(r, e)));
                                        case 33:
                                            t.prev = 33, t.t1 = t.catch(25), s(t.t1);
                                        case 36:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this, [
                                    [13, 18],
                                    [25, 33]
                                ])
                            }))), function() {
                                return B.apply(this, arguments)
                            })
                        }, {
                            key: "depositTrx",
                            value: (A = d()(D.a.mark((function t(e, r, n) {
                                var i, s, o, a, u, c = arguments;
                                return D.a.wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            if (i = c.length > 3 && void 0 !== c[3] ? c[3] : {}, s = c.length > 4 && void 0 !== c[4] ? c[4] : this.mainchain.defaultPrivateKey, o = c.length > 5 && void 0 !== c[5] && c[5], this.utils.isFunction(s) && (o = s, s = this.mainchain.defaultPrivateKey), this.utils.isFunction(i) && (o = i, i = {}), o) {
                                                t.next = 7;
                                                break
                                            }
                                            return t.abrupt("return", this.injectPromise(this.depositTrx, e, r, n, i, s));
                                        case 7:
                                            if (!this.validator.notValid([{
                                                    name: "callValue",
                                                    type: "integer",
                                                    value: e,
                                                    gte: 0
                                                }, {
                                                    name: "depositFee",
                                                    type: "integer",
                                                    value: r,
                                                    gte: 0
                                                }, {
                                                    name: "feeLimit",
                                                    type: "integer",
                                                    value: n,
                                                    gte: 0
                                                }], o)) {
                                                t.next = 9;
                                                break
                                            }
                                            return t.abrupt("return");
                                        case 9:
                                            return i = Se({
                                                callValue: Number(e) + Number(r),
                                                feeLimit: n
                                            }, i), t.prev = 10, t.next = 13, this.mainchain.contract().at(this.mainGatewayAddress);
                                        case 13:
                                            return a = t.sent, t.next = 16, a.depositTRX().send(i, s);
                                        case 16:
                                            return u = t.sent, t.abrupt("return", o(null, u));
                                        case 20:
                                            return t.prev = 20, t.t0 = t.catch(10), t.abrupt("return", o(t.t0));
                                        case 23:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this, [
                                    [10, 20]
                                ])
                            }))), function(t, e, r) {
                                return A.apply(this, arguments)
                            })
                        }, {
                            key: "depositTrc10",
                            value: (C = d()(D.a.mark((function t(e, r, n, i) {
                                var s, o, a, u, c, h = arguments;
                                return D.a.wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            if (s = h.length > 4 && void 0 !== h[4] ? h[4] : {}, o = h.length > 5 && void 0 !== h[5] ? h[5] : this.mainchain.defaultPrivateKey, a = h.length > 6 && void 0 !== h[6] && h[6], this.utils.isFunction(o) && (a = o, o = this.mainchain.defaultPrivateKey), this.utils.isFunction(s) && (a = s, s = {}), a) {
                                                t.next = 7;
                                                break
                                            }
                                            return t.abrupt("return", this.injectPromise(this.depositTrc10, e, r, n, i, s, o));
                                        case 7:
                                            if (!this.validator.notValid([{
                                                    name: "tokenValue",
                                                    type: "integer",
                                                    value: r,
                                                    gte: 0
                                                }, {
                                                    name: "depositFee",
                                                    type: "integer",
                                                    value: n,
                                                    gte: 0
                                                }, {
                                                    name: "feeLimit",
                                                    type: "integer",
                                                    value: i,
                                                    gte: 0
                                                }, {
                                                    name: "tokenId",
                                                    type: "integer",
                                                    value: e,
                                                    gte: 0
                                                }], a)) {
                                                t.next = 9;
                                                break
                                            }
                                            return t.abrupt("return");
                                        case 9:
                                            return s = Se(Se({
                                                tokenId: e,
                                                tokenValue: r,
                                                feeLimit: i
                                            }, s), {}, {
                                                callValue: n
                                            }), t.prev = 10, t.next = 13, this.mainchain.contract().at(this.mainGatewayAddress);
                                        case 13:
                                            return u = t.sent, t.next = 16, u.depositTRC10(e, r).send(s, o);
                                        case 16:
                                            c = t.sent, a(null, c), t.next = 23;
                                            break;
                                        case 20:
                                            return t.prev = 20, t.t0 = t.catch(10), t.abrupt("return", a(t.t0));
                                        case 23:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this, [
                                    [10, 20]
                                ])
                            }))), function(t, e, r, n) {
                                return C.apply(this, arguments)
                            })
                        }, {
                            key: "depositTrc",
                            value: (b = d()(D.a.mark((function t(e, r, n, i, s) {
                                var o, a, u, c, h, l, d = arguments;
                                return D.a.wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            if (o = d.length > 5 && void 0 !== d[5] ? d[5] : {}, a = d.length > 6 && void 0 !== d[6] ? d[6] : this.mainchain.defaultPrivateKey, u = d.length > 7 && void 0 !== d[7] && d[7], this.utils.isFunction(a) && (u = a, a = this.mainchain.defaultPrivateKey), this.utils.isFunction(o) && (u = o, o = {}), u) {
                                                t.next = 7;
                                                break
                                            }
                                            return t.abrupt("return", this.injectPromise(this.depositTrc, e, r, n, i, s, o, a));
                                        case 7:
                                            if (!this.validator.notValid([{
                                                    name: "functionSelector",
                                                    type: "not-empty-string",
                                                    value: e
                                                }, {
                                                    name: "num",
                                                    type: "integer",
                                                    value: r,
                                                    gte: 0
                                                }, {
                                                    name: "fee",
                                                    type: "integer",
                                                    value: n,
                                                    gte: 0
                                                }, {
                                                    name: "feeLimit",
                                                    type: "integer",
                                                    value: i,
                                                    gte: 0
                                                }, {
                                                    name: "contractAddress",
                                                    type: "address",
                                                    value: s
                                                }], u)) {
                                                t.next = 9;
                                                break
                                            }
                                            return t.abrupt("return");
                                        case 9:
                                            if (o = Se(Se({
                                                    feeLimit: i
                                                }, o), {}, {
                                                    callValue: n,
                                                    tokenId: "",
                                                    tokenValue: 0
                                                }), t.prev = 10, c = null, "approve" !== e) {
                                                t.next = 21;
                                                break
                                            }
                                            return t.next = 15, this.mainchain.contract().at(s);
                                        case 15:
                                            return h = t.sent, t.next = 18, h.approve(this.mainGatewayAddress, r).send(o, a);
                                        case 18:
                                            c = t.sent, t.next = 44;
                                            break;
                                        case 21:
                                            return t.next = 23, this.mainchain.contract().at(this.mainGatewayAddress);
                                        case 23:
                                            l = t.sent, t.t0 = e, t.next = "depositTRC20" === t.t0 ? 27 : "depositTRC721" === t.t0 ? 31 : "retryDeposit" === t.t0 ? 35 : "retryMapping" === t.t0 ? 39 : 43;
                                            break;
                                        case 27:
                                            return t.next = 29, l.depositTRC20(s, r).send(o, a);
                                        case 29:
                                            return c = t.sent, t.abrupt("break", 44);
                                        case 31:
                                            return t.next = 33, l.depositTRC721(s, r).send(o, a);
                                        case 33:
                                            return c = t.sent, t.abrupt("break", 44);
                                        case 35:
                                            return t.next = 37, l.retryDeposit(r).send(o, a);
                                        case 37:
                                            return c = t.sent, t.abrupt("break", 44);
                                        case 39:
                                            return t.next = 41, l.retryMapping(r).send(o, a);
                                        case 41:
                                            return c = t.sent, t.abrupt("break", 44);
                                        case 43:
                                            return t.abrupt("break", 44);
                                        case 44:
                                            u(null, c), t.next = 50;
                                            break;
                                        case 47:
                                            return t.prev = 47, t.t1 = t.catch(10), t.abrupt("return", u(t.t1));
                                        case 50:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this, [
                                    [10, 47]
                                ])
                            }))), function(t, e, r, n, i) {
                                return b.apply(this, arguments)
                            })
                        }, {
                            key: "approveTrc20",
                            value: (w = d()(D.a.mark((function t(e, r, n) {
                                var i, s, o, a, u = arguments;
                                return D.a.wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            return i = u.length > 3 && void 0 !== u[3] ? u[3] : {}, s = u.length > 4 && void 0 !== u[4] ? u[4] : this.mainchain.defaultPrivateKey, o = u.length > 5 && void 0 !== u[5] && u[5], a = "approve", t.abrupt("return", this.depositTrc(a, e, 0, r, n, i, s, o));
                                        case 5:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this)
                            }))), function(t, e, r) {
                                return w.apply(this, arguments)
                            })
                        }, {
                            key: "approveTrc721",
                            value: (m = d()(D.a.mark((function t(e, r, n) {
                                var i, s, o, a, u = arguments;
                                return D.a.wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            return i = u.length > 3 && void 0 !== u[3] ? u[3] : {}, s = u.length > 4 && void 0 !== u[4] ? u[4] : this.mainchain.defaultPrivateKey, o = u.length > 5 && void 0 !== u[5] && u[5], a = "approve", t.abrupt("return", this.depositTrc(a, e, 0, r, n, i, s, o));
                                        case 5:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this)
                            }))), function(t, e, r) {
                                return m.apply(this, arguments)
                            })
                        }, {
                            key: "depositTrc20",
                            value: (g = d()(D.a.mark((function t(e, r, n, i) {
                                var s, o, a, u, c = arguments;
                                return D.a.wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            return s = c.length > 4 && void 0 !== c[4] ? c[4] : {}, o = c.length > 5 && void 0 !== c[5] ? c[5] : this.mainchain.defaultPrivateKey, a = c.length > 6 && void 0 !== c[6] && c[6], u = "depositTRC20", t.abrupt("return", this.depositTrc(u, e, r, n, i, s, o, a));
                                        case 5:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this)
                            }))), function(t, e, r, n) {
                                return g.apply(this, arguments)
                            })
                        }, {
                            key: "depositTrc721",
                            value: (p = d()(D.a.mark((function t(e, r, n, i) {
                                var s, o, a, u, c = arguments;
                                return D.a.wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            return s = c.length > 4 && void 0 !== c[4] ? c[4] : {}, o = c.length > 5 && void 0 !== c[5] ? c[5] : this.mainchain.defaultPrivateKey, a = c.length > 6 && void 0 !== c[6] && c[6], u = "depositTRC721", t.abrupt("return", this.depositTrc(u, e, r, n, i, s, o, a));
                                        case 5:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this)
                            }))), function(t, e, r, n) {
                                return p.apply(this, arguments)
                            })
                        }, {
                            key: "mappingTrc",
                            value: (f = d()(D.a.mark((function t(e, r, n, i) {
                                var s, o, a, u, c, h = arguments;
                                return D.a.wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            if (s = h.length > 4 && void 0 !== h[4] ? h[4] : {}, o = h.length > 5 && void 0 !== h[5] ? h[5] : this.mainchain.defaultPrivateKey, a = h.length > 6 ? h[6] : void 0, this.utils.isFunction(o) && (a = o, o = this.mainchain.defaultPrivateKey), this.utils.isFunction(s) && (a = s, s = {}), a) {
                                                t.next = 7;
                                                break
                                            }
                                            return t.abrupt("return", this.injectPromise(this.mappingTrc, e, r, n, i, s, o));
                                        case 7:
                                            if (!this.validator.notValid([{
                                                    name: "trxHash",
                                                    type: "not-empty-string",
                                                    value: e
                                                }, {
                                                    name: "mappingFee",
                                                    type: "integer",
                                                    value: r,
                                                    gte: 0
                                                }, {
                                                    name: "feeLimit",
                                                    type: "integer",
                                                    value: n,
                                                    gte: 0
                                                }], a)) {
                                                t.next = 9;
                                                break
                                            }
                                            return t.abrupt("return");
                                        case 9:
                                            return e = e.startsWith("0x") ? e : "0x" + e, s = Se(Se({
                                                feeLimit: n
                                            }, s), {}, {
                                                callValue: r
                                            }), t.prev = 11, t.next = 14, this.mainchain.contract().at(this.mainGatewayAddress);
                                        case 14:
                                            if (u = t.sent, c = null, "mappingTRC20" !== i) {
                                                t.next = 22;
                                                break
                                            }
                                            return t.next = 19, u.mappingTRC20(e).send(s, o);
                                        case 19:
                                            c = t.sent, t.next = 29;
                                            break;
                                        case 22:
                                            if ("mappingTRC721" !== i) {
                                                t.next = 28;
                                                break
                                            }
                                            return t.next = 25, u.mappingTRC721(e).send(s, o);
                                        case 25:
                                            c = t.sent, t.next = 29;
                                            break;
                                        case 28:
                                            a(new Error("type must be trc20 or trc721"));
                                        case 29:
                                            a(null, c), t.next = 35;
                                            break;
                                        case 32:
                                            return t.prev = 32, t.t0 = t.catch(11), t.abrupt("return", a(t.t0));
                                        case 35:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this, [
                                    [11, 32]
                                ])
                            }))), function(t, e, r, n) {
                                return f.apply(this, arguments)
                            })
                        }, {
                            key: "mappingTrc20",
                            value: (l = d()(D.a.mark((function t(e, r, n) {
                                var i, s, o, a, u = arguments;
                                return D.a.wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            return i = u.length > 3 && void 0 !== u[3] ? u[3] : {}, s = u.length > 4 && void 0 !== u[4] ? u[4] : this.mainchain.defaultPrivateKey, o = u.length > 5 && void 0 !== u[5] && u[5], a = "mappingTRC20", t.abrupt("return", this.mappingTrc(e, r, n, a, i, s, o));
                                        case 5:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this)
                            }))), function(t, e, r) {
                                return l.apply(this, arguments)
                            })
                        }, {
                            key: "mappingTrc721",
                            value: (h = d()(D.a.mark((function t(e, r, n) {
                                var i, s, o, a, u = arguments;
                                return D.a.wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            return i = u.length > 3 && void 0 !== u[3] ? u[3] : {}, s = u.length > 4 && void 0 !== u[4] ? u[4] : this.mainchain.defaultPrivateKey, o = u.length > 5 && void 0 !== u[5] && u[5], a = "mappingTRC721", t.abrupt("return", this.mappingTrc(e, r, n, a, i, s, o));
                                        case 5:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this)
                            }))), function(t, e, r) {
                                return h.apply(this, arguments)
                            })
                        }, {
                            key: "withdrawTrx",
                            value: (c = d()(D.a.mark((function t(e, r, n) {
                                var i, s, o, a, u, c = arguments;
                                return D.a.wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            if (i = c.length > 3 && void 0 !== c[3] ? c[3] : {}, s = c.length > 4 && void 0 !== c[4] ? c[4] : this.mainchain.defaultPrivateKey, o = c.length > 5 && void 0 !== c[5] && c[5], this.utils.isFunction(s) && (o = s, s = this.mainchain.defaultPrivateKey), this.utils.isFunction(i) && (o = i, i = {}), o) {
                                                t.next = 7;
                                                break
                                            }
                                            return t.abrupt("return", this.injectPromise(this.withdrawTrx, e, r, n, i, s));
                                        case 7:
                                            if (!this.validator.notValid([{
                                                    name: "callValue",
                                                    type: "integer",
                                                    value: e,
                                                    gte: 0
                                                }, {
                                                    name: "withdrawFee",
                                                    type: "integer",
                                                    value: r,
                                                    gte: 0
                                                }, {
                                                    name: "feeLimit",
                                                    type: "integer",
                                                    value: n,
                                                    gte: 0
                                                }], o)) {
                                                t.next = 9;
                                                break
                                            }
                                            return t.abrupt("return");
                                        case 9:
                                            return i = Se({
                                                callValue: Number(e) + Number(r),
                                                feeLimit: n
                                            }, i), t.prev = 10, t.next = 13, this.sidechain.contract().at(this.sideGatewayAddress);
                                        case 13:
                                            return a = t.sent, t.next = 16, a.withdrawTRX().send(i, s);
                                        case 16:
                                            return u = t.sent, t.abrupt("return", o(null, u));
                                        case 20:
                                            return t.prev = 20, t.t0 = t.catch(10), t.abrupt("return", o(t.t0));
                                        case 23:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this, [
                                    [10, 20]
                                ])
                            }))), function(t, e, r) {
                                return c.apply(this, arguments)
                            })
                        }, {
                            key: "withdrawTrc10",
                            value: (u = d()(D.a.mark((function t(e, r, n, i) {
                                var s, o, a, u, c, h = arguments;
                                return D.a.wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            if (s = h.length > 4 && void 0 !== h[4] ? h[4] : {}, o = h.length > 5 && void 0 !== h[5] ? h[5] : this.mainchain.defaultPrivateKey, a = h.length > 6 && void 0 !== h[6] && h[6], this.utils.isFunction(o) && (a = o, o = this.mainchain.defaultPrivateKey), this.utils.isFunction(s) && (a = s, s = {}), a) {
                                                t.next = 7;
                                                break
                                            }
                                            return t.abrupt("return", this.injectPromise(this.withdrawTrc10, e, r, n, i, s, o));
                                        case 7:
                                            if (!this.validator.notValid([{
                                                    name: "tokenId",
                                                    type: "integer",
                                                    value: e,
                                                    gte: 0
                                                }, {
                                                    name: "tokenValue",
                                                    type: "integer",
                                                    value: r,
                                                    gte: 0
                                                }, {
                                                    name: "withdrawFee",
                                                    type: "integer",
                                                    value: n,
                                                    gte: 0
                                                }, {
                                                    name: "feeLimit",
                                                    type: "integer",
                                                    value: i,
                                                    gte: 0
                                                }], a)) {
                                                t.next = 9;
                                                break
                                            }
                                            return t.abrupt("return");
                                        case 9:
                                            return s = Se({
                                                tokenValue: r,
                                                tokenId: e,
                                                callValue: n,
                                                feeLimit: i
                                            }, s), t.prev = 10, t.next = 13, this.sidechain.contract().at(this.sideGatewayAddress);
                                        case 13:
                                            return u = t.sent, t.next = 16, u.withdrawTRC10(e, r).send(s, o);
                                        case 16:
                                            return c = t.sent, t.abrupt("return", a(null, c));
                                        case 20:
                                            return t.prev = 20, t.t0 = t.catch(10), t.abrupt("return", a(t.t0));
                                        case 23:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this, [
                                    [10, 20]
                                ])
                            }))), function(t, e, r, n) {
                                return u.apply(this, arguments)
                            })
                        }, {
                            key: "withdrawTrc",
                            value: (a = d()(D.a.mark((function t(e, r, n, i, s) {
                                var o, a, u, c, h, l, f, p, g, v, m = this,
                                    y = arguments;
                                return D.a.wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            if (o = y.length > 5 && void 0 !== y[5] ? y[5] : {}, a = y.length > 6 && void 0 !== y[6] ? y[6] : this.mainchain.defaultPrivateKey, u = y.length > 7 && void 0 !== y[7] && y[7], this.utils.isFunction(a) && (u = a, a = this.mainchain.defaultPrivateKey), this.utils.isFunction(o) && (u = o, o = {}), u) {
                                                t.next = 7;
                                                break
                                            }
                                            return t.abrupt("return", this.injectPromise(this.withdrawTrc, e, r, n, i, s, o, a));
                                        case 7:
                                            if (!this.validator.notValid([{
                                                    name: "functionSelector",
                                                    type: "not-empty-string",
                                                    value: e
                                                }, {
                                                    name: "numOrId",
                                                    type: "integer",
                                                    value: r,
                                                    gte: 0
                                                }, {
                                                    name: "withdrawFee",
                                                    type: "integer",
                                                    value: n,
                                                    gte: 0
                                                }, {
                                                    name: "feeLimit",
                                                    type: "integer",
                                                    value: i,
                                                    gte: 0
                                                }, {
                                                    name: "contractAddress",
                                                    type: "address",
                                                    value: s
                                                }], u)) {
                                                t.next = 9;
                                                break
                                            }
                                            return t.abrupt("return");
                                        case 9:
                                            return o = Se(Se({
                                                feeLimit: i
                                            }, o), {}, {
                                                callValue: n
                                            }), c = [{
                                                type: "uint256",
                                                value: r
                                            }], t.prev = 11, h = a ? this.sidechain.address.fromPrivateKey(a) : this.sidechain.defaultAddress.base58, t.next = 15, this.sidechain.transactionBuilder.triggerSmartContract(s, e, o, c, this.sidechain.address.toHex(h));
                                        case 15:
                                            if ((l = t.sent).result && l.result.result) {
                                                t.next = 18;
                                                break
                                            }
                                            return t.abrupt("return", u("Unknown error: " + JSON.stringify(l.transaction, null, 2)));
                                        case 18:
                                            return t.next = 20, this.sidechain.trx.sign(l.transaction, a);
                                        case 20:
                                            if ((f = t.sent).signature) {
                                                t.next = 25;
                                                break
                                            }
                                            if (a) {
                                                t.next = 24;
                                                break
                                            }
                                            return t.abrupt("return", u("Transaction was not signed properly"));
                                        case 24:
                                            return t.abrupt("return", u("Invalid private key provided"));
                                        case 25:
                                            return t.next = 27, this.sidechain.trx.sendRawTransaction(f);
                                        case 27:
                                            if (!(p = t.sent).code) {
                                                t.next = 32;
                                                break
                                            }
                                            return g = {
                                                error: p.code,
                                                message: p.code
                                            }, p.message && (g.message = this.sidechain.toUtf8(p.message)), t.abrupt("return", u(g));
                                        case 32:
                                            if (o.shouldPollResponse) {
                                                t.next = 34;
                                                break
                                            }
                                            return t.abrupt("return", u(null, f.txID));
                                        case 34:
                                            (v = function() {
                                                var t = d()(D.a.mark((function t() {
                                                    var e, r, n, i = arguments;
                                                    return D.a.wrap((function(t) {
                                                        for (;;) switch (t.prev = t.next) {
                                                            case 0:
                                                                if (20 != (e = i.length > 0 && void 0 !== i[0] ? i[0] : 0)) {
                                                                    t.next = 3;
                                                                    break
                                                                }
                                                                return t.abrupt("return", u({
                                                                    error: "Cannot find result in solidity node",
                                                                    transaction: f
                                                                }));
                                                            case 3:
                                                                return t.next = 5, m.sidechain.trx.getTransactionInfo(f.txID);
                                                            case 5:
                                                                if (r = t.sent, Object.keys(r).length) {
                                                                    t.next = 8;
                                                                    break
                                                                }
                                                                return t.abrupt("return", setTimeout((function() {
                                                                    v(e + 1)
                                                                }), 3e3));
                                                            case 8:
                                                                if (!r.result || "FAILED" != r.result) {
                                                                    t.next = 10;
                                                                    break
                                                                }
                                                                return t.abrupt("return", u({
                                                                    error: m.sidechain.toUtf8(r.resMessage),
                                                                    transaction: f,
                                                                    output: r
                                                                }));
                                                            case 10:
                                                                if (m.utils.hasProperty(r, "contractResult")) {
                                                                    t.next = 12;
                                                                    break
                                                                }
                                                                return t.abrupt("return", u({
                                                                    error: "Failed to execute: " + JSON.stringify(r, null, 2),
                                                                    transaction: f,
                                                                    output: r
                                                                }));
                                                            case 12:
                                                                if (!o.rawResponse) {
                                                                    t.next = 14;
                                                                    break
                                                                }
                                                                return t.abrupt("return", u(null, r));
                                                            case 14:
                                                                return 1 === (n = decodeOutput(m.outputs, "0x" + r.contractResult[0])).length && (n = n[0]), t.abrupt("return", u(null, n));
                                                            case 17:
                                                            case "end":
                                                                return t.stop()
                                                        }
                                                    }), t)
                                                })));
                                                return function() {
                                                    return t.apply(this, arguments)
                                                }
                                            }())(), t.next = 41;
                                            break;
                                        case 38:
                                            return t.prev = 38, t.t0 = t.catch(11), t.abrupt("return", u(t.t0));
                                        case 41:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this, [
                                    [11, 38]
                                ])
                            }))), function(t, e, r, n, i) {
                                return a.apply(this, arguments)
                            })
                        }, {
                            key: "withdrawTrc20",
                            value: (o = d()(D.a.mark((function t(e, r, n, i, s) {
                                var o, a, u, c = arguments;
                                return D.a.wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            return o = c.length > 5 && void 0 !== c[5] ? c[5] : this.mainchain.defaultPrivateKey, a = c.length > 6 && void 0 !== c[6] && c[6], u = "withdrawal(uint256)", t.abrupt("return", this.withdrawTrc(u, e, r, n, i, s, o, a));
                                        case 4:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this)
                            }))), function(t, e, r, n, i) {
                                return o.apply(this, arguments)
                            })
                        }, {
                            key: "withdrawTrc721",
                            value: (s = d()(D.a.mark((function t(e, r, n, i, s) {
                                var o, a, u, c = arguments;
                                return D.a.wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            return o = c.length > 5 && void 0 !== c[5] ? c[5] : this.mainchain.defaultPrivateKey, a = c.length > 6 && void 0 !== c[6] && c[6], u = "withdrawal(uint256)", t.abrupt("return", this.withdrawTrc(u, e, r, n, i, s, o, a));
                                        case 4:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this)
                            }))), function(t, e, r, n, i) {
                                return s.apply(this, arguments)
                            })
                        }, {
                            key: "injectFund",
                            value: (i = d()(D.a.mark((function t(e, r, n) {
                                var i, s, o, a, u, c, h, l, d = arguments;
                                return D.a.wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            if (i = d.length > 3 && void 0 !== d[3] ? d[3] : this.mainchain.defaultPrivateKey, s = d.length > 4 && void 0 !== d[4] && d[4], this.utils.isFunction(i) && (s = i, i = this.mainchain.defaultPrivateKey), this.utils.isFunction(n) && (s = n, n = {}), s) {
                                                t.next = 6;
                                                break
                                            }
                                            return t.abrupt("return", this.injectPromise(this.injectFund, e, r, n, i));
                                        case 6:
                                            if (!this.validator.notValid([{
                                                    name: "num",
                                                    type: "integer",
                                                    value: e,
                                                    gte: 0
                                                }, {
                                                    name: "feeLimit",
                                                    type: "integer",
                                                    value: r,
                                                    gte: 0
                                                }], s)) {
                                                t.next = 8;
                                                break
                                            }
                                            return t.abrupt("return");
                                        case 8:
                                            return t.prev = 8, o = this.sidechain.address.fromPrivateKey(i), a = this.sidechain.address.toHex(o), t.next = 13, this.sidechain.fullNode.request("/wallet/fundinject", {
                                                owner_address: a,
                                                amount: e
                                            }, "post");
                                        case 13:
                                            return u = t.sent, t.next = 16, this.sidechain.trx.sign(u, i);
                                        case 16:
                                            if ((c = t.sent).signature) {
                                                t.next = 21;
                                                break
                                            }
                                            if (i) {
                                                t.next = 20;
                                                break
                                            }
                                            return t.abrupt("return", s("Transaction was not signed properly"));
                                        case 20:
                                            return t.abrupt("return", s("Invalid private key provided"));
                                        case 21:
                                            return t.next = 23, this.sidechain.trx.sendRawTransaction(c);
                                        case 23:
                                            if (!(h = t.sent).code) {
                                                t.next = 28;
                                                break
                                            }
                                            return l = {
                                                error: h.code,
                                                message: h.code
                                            }, h.message && (l.message = this.mainchain.toUtf8(h.message)), t.abrupt("return", s(l));
                                        case 28:
                                            return t.abrupt("return", s(null, c.txID));
                                        case 31:
                                            return t.prev = 31, t.t0 = t.catch(8), t.abrupt("return", s(t.t0));
                                        case 34:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this, [
                                    [8, 31]
                                ])
                            }))), function(t, e, r) {
                                return i.apply(this, arguments)
                            })
                        }, {
                            key: "retryWithdraw",
                            value: (n = d()(D.a.mark((function t(e, r, n) {
                                var i, s, o, a, u = arguments;
                                return D.a.wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            return i = u.length > 3 && void 0 !== u[3] ? u[3] : {}, s = u.length > 4 && void 0 !== u[4] ? u[4] : this.sidechain.defaultPrivateKey, o = u.length > 5 && void 0 !== u[5] && u[5], a = "retryWithdraw(uint256)", t.abrupt("return", this.withdrawTrc(a, e, r, n, this.sideGatewayAddress, i, s, o));
                                        case 5:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this)
                            }))), function(t, e, r) {
                                return n.apply(this, arguments)
                            })
                        }, {
                            key: "retryDeposit",
                            value: (r = d()(D.a.mark((function t(e, r, n) {
                                var i, s, o, a, u = arguments;
                                return D.a.wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            return i = u.length > 3 && void 0 !== u[3] ? u[3] : {}, s = u.length > 4 && void 0 !== u[4] ? u[4] : this.mainchain.defaultPrivateKey, o = u.length > 5 && void 0 !== u[5] && u[5], a = "retryDeposit", t.abrupt("return", this.depositTrc(a, e, r, n, this.mainGatewayAddress, i, s, o));
                                        case 5:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this)
                            }))), function(t, e, n) {
                                return r.apply(this, arguments)
                            })
                        }, {
                            key: "retryMapping",
                            value: (e = d()(D.a.mark((function t(e, r, n) {
                                var i, s, o, a, u = arguments;
                                return D.a.wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            return i = u.length > 3 && void 0 !== u[3] ? u[3] : {}, s = u.length > 4 && void 0 !== u[4] ? u[4] : this.mainchain.defaultPrivateKey, o = u.length > 5 && void 0 !== u[5] && u[5], a = "retryMapping", t.abrupt("return", this.depositTrc(a, e, r, n, this.mainGatewayAddress, i, s, o));
                                        case 5:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this)
                            }))), function(t, r, n) {
                                return e.apply(this, arguments)
                            })
                        }]), t
                    }();

                    function Ne(t) {
                        var e = function() {
                            if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                            if (Reflect.construct.sham) return !1;
                            if ("function" == typeof Proxy) return !0;
                            try {
                                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), !0
                            } catch (t) {
                                return !1
                            }
                        }();
                        return function() {
                            var r, n = x()(t);
                            if (e) {
                                var i = x()(this).constructor;
                                r = Reflect.construct(n, arguments, i)
                            } else r = n.apply(this, arguments);
                            return F()(this, r)
                        }
                    }
                    var Te = function(t) {
                        A()(o, t);
                        var r, n, i, s = Ne(o);

                        function o() {
                            var t, e, r = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
                                n = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                                i = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
                                a = arguments.length > 3 && void 0 !== arguments[3] && arguments[3],
                                u = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];
                            v()(this, o), t = s.call(this);
                            var c = !1,
                                h = !1;
                            return "object" === p()(r) && (r.fullNode || r.fullHost) ? (e = r.fullNode || r.fullHost, a = n, n = r.solidityNode || r.fullHost, i = r.eventServer || r.fullHost, c = r.headers || !1, h = r.eventHeaders || c, u = r.privateKey) : e = r, Zt.isString(e) && (e = new Yt.HttpProvider(e)), Zt.isString(n) && (n = new Yt.HttpProvider(n)), Zt.isString(i) && (i = new Yt.HttpProvider(i)), t.event = new Me(b()(t)), t.transactionBuilder = new ve(b()(t)), t.trx = new be(b()(t)), t.plugin = new xe(b()(t), r), t.utils = Zt, t.setFullNode(e), t.setSolidityNode(n), t.setEventServer(i), t.providers = Yt, t.BigNumber = zt.a, t.defaultBlock = !1, t.defaultPrivateKey = !1, t.defaultAddress = {
                                hex: !1,
                                base58: !1
                            }, ["sha3", "toHex", "toUtf8", "fromUtf8", "toAscii", "fromAscii", "toDecimal", "fromDecimal", "toSun", "fromSun", "toBigNumber", "isAddress", "createAccount", "address", "version"].forEach((function(e) {
                                t[e] = o[e]
                            })), "object" === p()(a) && (a.fullNode || a.fullHost) ? t.sidechain = new Ie(a, o, b()(t), u) : u = u || a, u && t.setPrivateKey(u), t.fullnodeVersion = "3.5.0", t.feeLimit = 15e7, t.injectPromise = ie()(b()(t)), c && t.setFullNodeHeader(c), h && t.setEventHeader(h), t
                        }
                        return y()(o, [{
                            key: "getFullnodeVersion",
                            value: (i = d()(D.a.mark((function t() {
                                var e;
                                return D.a.wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            return t.prev = 0, t.next = 3, this.trx.getNodeInfo();
                                        case 3:
                                            e = t.sent, this.fullnodeVersion = e.configNodeInfo.codeVersion, 2 === this.fullnodeVersion.split(".").length && (this.fullnodeVersion += ".0"), t.next = 11;
                                            break;
                                        case 8:
                                            t.prev = 8, t.t0 = t.catch(0), this.fullnodeVersion = "3.5.0";
                                        case 11:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this, [
                                    [0, 8]
                                ])
                            }))), function() {
                                return i.apply(this, arguments)
                            })
                        }, {
                            key: "setDefaultBlock",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                                if ([!1, "latest", "earliest", 0].includes(t)) return this.defaultBlock = t;
                                if (!Zt.isInteger(t) || !t) throw new Error("Invalid block ID provided");
                                this.defaultBlock = Math.abs(t)
                            }
                        }, {
                            key: "setPrivateKey",
                            value: function(t) {
                                try {
                                    this.setAddress(this.address.fromPrivateKey(t))
                                } catch (t) {
                                    throw new Error("Invalid private key provided")
                                }
                                this.defaultPrivateKey = t, this.emit("privateKeyChanged", t)
                            }
                        }, {
                            key: "setAddress",
                            value: function(t) {
                                if (!this.isAddress(t)) throw new Error("Invalid address provided");
                                var e = this.address.toHex(t),
                                    r = this.address.fromHex(t);
                                this.defaultPrivateKey && this.address.fromPrivateKey(this.defaultPrivateKey) !== r && (this.defaultPrivateKey = !1), this.defaultAddress = {
                                    hex: e,
                                    base58: r
                                }, this.emit("addressChanged", {
                                    hex: e,
                                    base58: r
                                })
                            }
                        }, {
                            key: "fullnodeSatisfies",
                            value: function(t) {
                                return re.a.satisfies(this.fullnodeVersion, t)
                            }
                        }, {
                            key: "isValidProvider",
                            value: function(t) {
                                return Object.values(Yt).some((function(e) {
                                    return t instanceof e
                                }))
                            }
                        }, {
                            key: "setFullNode",
                            value: function(t) {
                                if (Zt.isString(t) && (t = new Yt.HttpProvider(t)), !this.isValidProvider(t)) throw new Error("Invalid full node provided");
                                this.fullNode = t, this.fullNode.setStatusPage("wallet/getnowblock"), this.getFullnodeVersion()
                            }
                        }, {
                            key: "setSolidityNode",
                            value: function(t) {
                                if (Zt.isString(t) && (t = new Yt.HttpProvider(t)), !this.isValidProvider(t)) throw new Error("Invalid solidity node provided");
                                this.solidityNode = t, this.solidityNode.setStatusPage("walletsolidity/getnowblock")
                            }
                        }, {
                            key: "setEventServer",
                            value: function() {
                                var t;
                                (t = this.event).setServer.apply(t, arguments)
                            }
                        }, {
                            key: "setHeader",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                                    e = new Yt.HttpProvider(this.fullNode.host, 3e4, !1, !1, t),
                                    r = new Yt.HttpProvider(this.solidityNode.host, 3e4, !1, !1, t),
                                    n = new Yt.HttpProvider(this.eventServer.host, 3e4, !1, !1, t);
                                this.setFullNode(e), this.setSolidityNode(r), this.setEventServer(n)
                            }
                        }, {
                            key: "setFullNodeHeader",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                                    e = new Yt.HttpProvider(this.fullNode.host, 3e4, !1, !1, t),
                                    r = new Yt.HttpProvider(this.solidityNode.host, 3e4, !1, !1, t);
                                this.setFullNode(e), this.setSolidityNode(r)
                            }
                        }, {
                            key: "setEventHeader",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                                    e = new Yt.HttpProvider(this.eventServer.host, 3e4, !1, !1, t);
                                this.setEventServer(e)
                            }
                        }, {
                            key: "currentProviders",
                            value: function() {
                                return {
                                    fullNode: this.fullNode,
                                    solidityNode: this.solidityNode,
                                    eventServer: this.eventServer
                                }
                            }
                        }, {
                            key: "currentProvider",
                            value: function() {
                                return this.currentProviders()
                            }
                        }, {
                            key: "getEventResult",
                            value: function() {
                                for (var t, e = arguments.length, r = new Array(e), n = 0; n < e; n++) r[n] = arguments[n];
                                return "object" !== p()(r[1]) && (r[1] = {
                                    sinceTimestamp: r[1] || 0,
                                    eventName: r[2] || !1,
                                    blockNumber: r[3] || !1,
                                    size: r[4] || 20,
                                    page: r[5] || 1
                                }, r.splice(2, 4), Zt.isFunction(r[2]) || (Zt.isFunction(r[1].page) ? (r[2] = r[1].page, r[1].page = 1) : Zt.isFunction(r[1].size) && (r[2] = r[1].size, r[1].size = 20, r[1].page = 1))), (t = this.event).getEventsByContractAddress.apply(t, r)
                            }
                        }, {
                            key: "getEventByTransactionID",
                            value: function() {
                                var t;
                                return (t = this.event).getEventsByTransactionID.apply(t, arguments)
                            }
                        }, {
                            key: "contract",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                                    e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                                return new Ee(this, t, e)
                            }
                        }, {
                            key: "isConnected",
                            value: (n = d()(D.a.mark((function t() {
                                var e, r = arguments;
                                return D.a.wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            if (e = r.length > 0 && void 0 !== r[0] && r[0]) {
                                                t.next = 3;
                                                break
                                            }
                                            return t.abrupt("return", this.injectPromise(this.isConnected));
                                        case 3:
                                            return t.t0 = e, t.next = 6, this.fullNode.isConnected();
                                        case 6:
                                            return t.t1 = t.sent, t.next = 9, this.solidityNode.isConnected();
                                        case 9:
                                            if (t.t2 = t.sent, t.t3 = this.eventServer, !t.t3) {
                                                t.next = 15;
                                                break
                                            }
                                            return t.next = 14, this.eventServer.isConnected();
                                        case 14:
                                            t.t3 = t.sent;
                                        case 15:
                                            return t.t4 = t.t3, t.t5 = {
                                                fullNode: t.t1,
                                                solidityNode: t.t2,
                                                eventServer: t.t4
                                            }, t.abrupt("return", (0, t.t0)(null, t.t5));
                                        case 18:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this)
                            }))), function() {
                                return n.apply(this, arguments)
                            })
                        }], [{
                            key: "address",
                            get: function() {
                                return {
                                    fromHex: function(t) {
                                        return Zt.isHex(t) ? Zt.crypto.getBase58CheckAddress(Zt.code.hexStr2byteArray(t.replace(/^0x/, "41"))) : t
                                    },
                                    toHex: function(t) {
                                        return Zt.isHex(t) ? t.toLowerCase().replace(/^0x/, "41") : Zt.code.byteArray2hexStr(Zt.crypto.decodeBase58Address(t)).toLowerCase()
                                    },
                                    fromPrivateKey: function(t) {
                                        var e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                                        try {
                                            return Zt.crypto.pkToAddress(t, e)
                                        } catch (t) {
                                            return !1
                                        }
                                    }
                                }
                            }
                        }, {
                            key: "sha3",
                            value: function(t) {
                                var r = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
                                return (r ? "0x" : "") + st(e.from(t, "utf-8")).toString().substring(2)
                            }
                        }, {
                            key: "toHex",
                            value: function(t) {
                                if (Zt.isBoolean(t)) return o.fromDecimal(+t);
                                if (Zt.isBigNumber(t)) return o.fromDecimal(t);
                                if ("object" === p()(t)) return o.fromUtf8(JSON.stringify(t));
                                if (Zt.isString(t)) {
                                    if (/^(-|)0x/.test(t)) return t;
                                    if (!isFinite(t) || /^\s*$/.test(t)) return o.fromUtf8(t)
                                }
                                var e = o.fromDecimal(t);
                                if ("0xNaN" === e) throw new Error("The passed value is not convertible to a hex string");
                                return e
                            }
                        }, {
                            key: "toUtf8",
                            value: function(t) {
                                if (Zt.isHex(t)) return t = t.replace(/^0x/, ""), e.from(t, "hex").toString("utf8");
                                throw new Error("The passed value is not a valid hex string")
                            }
                        }, {
                            key: "fromUtf8",
                            value: function(t) {
                                if (!Zt.isString(t)) throw new Error("The passed value is not a valid utf-8 string");
                                return "0x" + e.from(t, "utf8").toString("hex")
                            }
                        }, {
                            key: "toAscii",
                            value: function(t) {
                                if (Zt.isHex(t)) {
                                    var e = "",
                                        r = 0,
                                        n = t.length;
                                    for ("0x" === t.substring(0, 2) && (r = 2); r < n; r += 2) {
                                        var i = parseInt(t.substr(r, 2), 16);
                                        e += String.fromCharCode(i)
                                    }
                                    return e
                                }
                                throw new Error("The passed value is not a valid hex string")
                            }
                        }, {
                            key: "fromAscii",
                            value: function(t, r) {
                                if (!Zt.isString(t)) throw new Error("The passed value is not a valid utf-8 string");
                                return "0x" + e.from(t, "ascii").toString("hex").padEnd(r, "0")
                            }
                        }, {
                            key: "toDecimal",
                            value: function(t) {
                                return o.toBigNumber(t).toNumber()
                            }
                        }, {
                            key: "fromDecimal",
                            value: function(t) {
                                var e = o.toBigNumber(t),
                                    r = e.toString(16);
                                return e.isLessThan(0) ? "-0x" + r.substr(1) : "0x" + r
                            }
                        }, {
                            key: "fromSun",
                            value: function(t) {
                                var e = o.toBigNumber(t).div(1e6);
                                return Zt.isBigNumber(t) ? e : e.toString(10)
                            }
                        }, {
                            key: "toSun",
                            value: function(t) {
                                var e = o.toBigNumber(t).times(1e6);
                                return Zt.isBigNumber(t) ? e : e.toString(10)
                            }
                        }, {
                            key: "toBigNumber",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
                                return Zt.isBigNumber(t) ? t : Zt.isString(t) && /^(-|)0x/.test(t) ? new zt.a(t.replace("0x", ""), 16) : new zt.a(t.toString(10), 10)
                            }
                        }, {
                            key: "isAddress",
                            value: function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                                if (!Zt.isString(t)) return !1;
                                if (42 === t.length) try {
                                    return o.isAddress(Zt.crypto.getBase58CheckAddress(Zt.code.hexStr2byteArray(t)))
                                } catch (t) {
                                    return !1
                                }
                                try {
                                    return Zt.crypto.isAddressValid(t)
                                } catch (t) {
                                    return !1
                                }
                            }
                        }, {
                            key: "createAccount",
                            value: (r = d()(D.a.mark((function t() {
                                var e;
                                return D.a.wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            return e = Zt.accounts.generateAccount(), t.abrupt("return", e);
                                        case 2:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t)
                            }))), function() {
                                return r.apply(this, arguments)
                            })
                        }]), o
                    }(Qt.a);
                    k()(Te, "providers", Yt), k()(Te, "BigNumber", zt.a), k()(Te, "TransactionBuilder", ve), k()(Te, "Trx", be), k()(Te, "Contract", Ee), k()(Te, "Plugin", xe), k()(Te, "Event", Me), k()(Te, "version", te.a), k()(Te, "utils", Zt)
                }]).default
            }).call(this, r("b639").Buffer)
        },
        d064: function(t, e, r) {
            r("5cc6");
            const {
                Cell: n
            } = r("41b0"), {
                Contract: i
            } = r("38a0"), {
                Address: s,
                BN: o,
                nacl: a
            } = r("1afa"), u = "b5ee9c7241021001000228000114ff00f4a413f4bcf2c80b01020120020d02014803040078d020d74bc00101c060b0915be101d0d3030171b0915be0fa4030f828c705b39130e0d31f018210ae42e5a4ba9d8040d721d74cf82a01ed55fb04e030020120050a02027306070011adce76a2686b85ffc00201200809001aabb6ed44d0810122d721d70b3f0018aa3bed44d08307d721d70b1f0201200b0c001bb9a6eed44d0810162d721d70b15800e5b8bf2eda2edfb21ab09028409b0ed44d0810120d721f404f404d33fd315d1058e1bf82325a15210b99f326df82305aa0015a112b992306dde923033e2923033e25230800df40f6fa19ed021d721d70a00955f037fdb31e09130e259800df40f6fa19cd001d721d70a00937fdb31e0915be270801f6f2d48308d718d121f900ed44d0d3ffd31ff404f404d33fd315d1f82321a15220b98e12336df82324aa00a112b9926d32de58f82301de541675f910f2a106d0d31fd4d307d30cd309d33fd315d15168baf2a2515abaf2a6f8232aa15250bcf2a304f823bbf2a35304800df40f6fa199d024d721d70a00f2649130e20e01fe5309800df40f6fa18e13d05004d718d20001f264c858cf16cf8301cf168e1030c824cf40cf8384095005a1a514cf40e2f800c94039800df41704c8cbff13cb1ff40012f40012cb3f12cb15c9ed54f80f21d0d30001f265d3020171b0925f03e0fa4001d70b01c000f2a5fa4031fa0031f401fa0031fa00318060d721d300010f0020f265d2000193d431d19130e272b1fb00b585bf03", c = 4269, h = t => {
                if (!t) throw new Error("invalid timeout");
                if (t < 600) throw new Error("minimum timeout 10 minute");
                if (t > 2592e3) throw new Error("maximum timeout 30 days")
            };
            class l extends i {
                constructor(t, e) {
                    if (e.wc) throw new Error("only basechain (wc = 0) supported");
                    if (e.wc = 0, !e.address) {
                        if (!e.publicKey) throw new Error("no publicKey");
                        if (!(e.publicKey instanceof Uint8Array)) throw new Error("publicKey not Uint8Array");
                        h(e.timeout)
                    }
                    e.code = n.oneFromBoc(u), super(t, e), this.options.walletId || (this.options.walletId = c), this.methods = {
                        transfer: e => i.createMethod(t, this.createTransferMessage(e.secretKey, e.toAddress, e.amount, e.queryId, e.payload, e.sendMode, e.createdAt, e.needDeploy))
                    }, this.methods.getPublicKey = this.getPublicKey.bind(this), this.methods.getWalletId = this.getWalletId.bind(this), this.methods.getLastCleanTime = this.getLastCleanTime.bind(this), this.methods.getTimeout = this.getTimeout.bind(this), this.methods.isProcessed = this.isProcessed.bind(this)
                }
                getName() {
                    return "highload-3"
                }
                createDataCell() {
                    if (0 !== this.options.walletId && !this.options.walletId) throw new Error("no walletId");
                    if (!this.options.publicKey) throw new Error("no publicKey");
                    if (!(this.options.publicKey instanceof Uint8Array)) throw new Error("publicKey not Uint8Array");
                    h(this.options.timeout);
                    const t = new n;
                    return t.bits.writeBytes(this.options.publicKey), t.bits.writeUint(this.options.walletId, 32), t.bits.writeUint(0, 1), t.bits.writeUint(0, 1), t.bits.writeUint(0, 64), t.bits.writeUint(this.options.timeout, 22), t
                }
                createSigningMessage(t, e, r, i) {
                    if (isNaN(r) || void 0 === r || null === r) throw new Error("invalid sendMode");
                    if (isNaN(e) || void 0 === e || null === e) throw new Error("invalid createdAt");
                    h(this.options.timeout);
                    const s = new n;
                    return s.bits.writeUint(this.options.walletId, 32), s.refs.push(i), s.bits.writeUint(r, 8), s.bits.writeUint(Number(t.getShift()), 13), s.bits.writeUint(Number(t.getBitNumber()), 10), s.bits.writeUint(e, 64), s.bits.writeUint(this.options.timeout, 22), s
                }
                async createTransferMessage(t, e, r, n, s = "", o = 3, a, u = !1) {
                    if (null === n || void 0 === n) throw new Error("queryId must be number >= 0");
                    if (null === a || void 0 === a || a < 0) throw new Error("createAt must be number >= 0");
                    null !== o && void 0 !== o || (o = 3);
                    const c = i.createOutMsg(e, r, s),
                        h = this.createSigningMessage(n, a, o, c);
                    return this.createExternalMessage(h, t, u)
                }
                async createExternalMessage(t, e, r) {
                    const s = a.sign.detached(await t.hash(), e),
                        o = new n;
                    o.bits.writeBytes(s), o.refs.push(t);
                    let u = null,
                        c = null,
                        h = null;
                    if (r) {
                        if (!this.options.publicKey) {
                            const t = a.sign.keyPair.fromSecretKey(e);
                            this.options.publicKey = t.publicKey
                        }
                        const t = await this.createStateInit();
                        u = t.stateInit, c = t.code, h = t.data
                    }
                    const l = await this.getAddress(),
                        d = i.createExternalMessageHeader(l),
                        f = i.createCommonMsgInfo(d, u, o);
                    return {
                        address: l,
                        message: f,
                        body: o,
                        signature: s,
                        signingMessage: t,
                        stateInit: u,
                        code: c,
                        data: h
                    }
                }
                async getWalletId() {
                    const t = await this.getAddress(),
                        e = await this.provider.call2(t.toString(), "get_subwallet_id");
                    return e.toNumber()
                }
                async getPublicKey() {
                    const t = await this.getAddress();
                    return this.provider.call2(t.toString(), "get_public_key")
                }
                async getLastCleanTime() {
                    const t = await this.getAddress(),
                        e = await this.provider.call2(t.toString(), "get_last_clean_time");
                    return e.toNumber()
                }
                async getTimeout() {
                    const t = await this.getAddress(),
                        e = await this.provider.call2(t.toString(), "get_timeout");
                    return e.toNumber()
                }
                async isProcessed(t, e) {
                    const r = await this.getAddress(),
                        n = await this.provider.call2(r.toString(), "processed?", [
                            ["num", t.getQueryId().toString()],
                            ["num", e ? "-1" : "0"]
                        ]);
                    return !n.isZero()
                }
            }
            l.WALLET_ID_BASE = c, l.codeHex = u, t.exports = {
                HighloadWalletContractV3: l
            }
        },
        d238: function(t, e, r) {
            const {
                BlockSubscription: n
            } = r("4151"), {
                InMemoryBlockStorage: i
            } = r("8f88");
            t.exports = {
                BlockSubscription: n,
                InMemoryBlockStorage: i
            }
        },
        d33d: function(t, e, r) {
            const {
                BN: n,
                base64ToBytes: i
            } = r("1afa"), {
                Cell: s
            } = r("41b0");
            class o {
                static parseObject(t) {
                    const e = t["@type"];
                    switch (e) {
                        case "tvm.list":
                        case "tvm.tuple":
                            return t.elements.map(o.parseObject);
                        case "tvm.cell":
                            return s.oneFromBoc(i(t.bytes));
                        case "tvm.stackEntryCell":
                            return o.parseObject(t.cell);
                        case "tvm.stackEntryTuple":
                            return o.parseObject(t.tuple);
                        case "tvm.stackEntryNumber":
                            return o.parseObject(t.number);
                        case "tvm.numberDecimal":
                            return new n(t.number, 10);
                        default:
                            throw new Error("unknown type " + e)
                    }
                }
                static parseResponseStack(t) {
                    const e = t[0],
                        r = t[1];
                    switch (e) {
                        case "num":
                            return new n(r.replace(/0x/, ""), 16);
                        case "list":
                        case "tuple":
                            return o.parseObject(r);
                        case "cell":
                            const t = i(r.bytes);
                            return s.oneFromBoc(t);
                        default:
                            throw new Error("unknown type " + e)
                    }
                }
                static parseResponse(t) {
                    if (0 !== t.exit_code) {
                        const e = new Error("http provider parse response error");
                        throw e.result = t, e
                    }
                    const e = t.stack.map(o.parseResponseStack);
                    return 1 === e.length ? e[0] : e
                }
                static makeArg(t) {
                    if (t instanceof n || t instanceof Number) return ["num", t];
                    throw new Error("unknown arg type " + t)
                }
                static makeArgs(t) {
                    return t.map(this.makeArg)
                }
            }
            t.exports.default = o
        },
        d485: function(t, e, r) {
            t.exports = s;
            var n = r("faa1").EventEmitter,
                i = r("3fb5");

            function s() {
                n.call(this)
            }
            i(s, n), s.Readable = r("e372"), s.Writable = r("2c63"), s.Duplex = r("0960"), s.Transform = r("d17b"), s.PassThrough = r("c2ae"), s.Stream = s, s.prototype.pipe = function(t, e) {
                var r = this;

                function i(e) {
                    t.writable && !1 === t.write(e) && r.pause && r.pause()
                }

                function s() {
                    r.readable && r.resume && r.resume()
                }
                r.on("data", i), t.on("drain", s), t._isStdio || e && !1 === e.end || (r.on("end", a), r.on("close", u));
                var o = !1;

                function a() {
                    o || (o = !0, t.end())
                }

                function u() {
                    o || (o = !0, "function" === typeof t.destroy && t.destroy())
                }

                function c(t) {
                    if (h(), 0 === n.listenerCount(this, "error")) throw t
                }

                function h() {
                    r.removeListener("data", i), t.removeListener("drain", s), r.removeListener("end", a), r.removeListener("close", u), r.removeListener("error", c), t.removeListener("error", c), r.removeListener("end", h), r.removeListener("close", h), t.removeListener("close", h)
                }
                return r.on("error", c), t.on("error", c), r.on("end", h), r.on("close", h), t.on("close", h), t.emit("pipe", r), t
            }
        },
        d621: function(t, e, r) {
            const {
                Cell: n
            } = r("41b0"), {
                Address: i,
                BN: s,
                base64ToBytes: o
            } = r("1afa"), {
                WalletContract: a
            } = r("df0c"), u = 698983191;
            class c extends a {
                constructor(t, e) {
                    e.code = n.oneFromBocsuper(t, e), this.options.walletId || (this.options.walletId = u + this.options.wc), this.methods.getPublicKey = this.getPublicKey.bind(this), this.methods.getWalletId = this.getWalletId.bind(this), this.methods.getLiquidBalance = this.getLiquidBalance.bind(this), this.methods.getNominalRestrictedBalance = this.getNominalRestrictedBalance.bind(this), this.methods.getNominalLockedBalance = this.getNominalLockedBalance.bind(this)
                }
                getName() {
                    return "lockup-0.1"
                }
                createSigningMessage(t, e, r) {
                    t = t || 0, e = e || Math.floor(Date.now() / 1e3) + 60;
                    const i = new n;
                    if (i.bits.writeUint(this.options.walletId, 32), 0 === t)
                        for (let n = 0; n < 32; n++) i.bits.writeBit(1);
                    else i.bits.writeUint(e, 32);
                    return i.bits.writeUint(t, 32), i
                }
                createDataCell() {
                    const t = new n;
                    return t.bits.writeUint(0, 32), t.bits.writeUint(this.options.walletId, 32), t.bits.writeBytes(this.options.publicKey), t.bits.writeBytes(o(this.options.config.config_public_key)), this.options.config.allowed_destinations ? (t.bits.writeUint(1, 1), t.refs.push(n.oneFromBoc(o(this.options.config.allowed_destinations)))) : t.bits.writeUint(0, 1), t.bits.writeGrams(0), t.bits.writeUint(0, 1), t.bits.writeGrams(0), t.bits.writeUint(0, 1), t
                }
                async getWalletId() {
                    const t = await this.getAddress(),
                        e = await this.provider.call2(t.toString(), "get_subwallet_id");
                    return e.toNumber()
                }
                async getPublicKey() {
                    const t = await this.getAddress();
                    return this.provider.call2(t.toString(), "get_public_key")
                }
                async getLiquidBalance() {
                    const t = await this.getBalances();
                    return t[0] - t[1] - t[2]
                }
                async getNominalRestrictedBalance() {
                    return await this.getBalances()[1]
                }
                async getNominalLockedBalance() {
                    return await this.getBalances()[2]
                }
                async getBalances() {
                    const t = await this.getAddress();
                    return this.provider.call2(t.toString(), "get_balances")
                }
            }
            c.WALLET_ID_BASE = u, t.exports = {
                LockupWalletV1: c
            }
        },
        d8c5: function(t, e, r) {
            "use strict";
            var n = r("1845");
            t.exports = n.isStandardBrowserEnv() ? function() {
                var t, e = /(msie|trident)/i.test(navigator.userAgent),
                    r = document.createElement("a");

                function i(t) {
                    var n = t;
                    return e && (r.setAttribute("href", n), n = r.href), r.setAttribute("href", n), {
                        href: r.href,
                        protocol: r.protocol ? r.protocol.replace(/:$/, "") : "",
                        host: r.host,
                        search: r.search ? r.search.replace(/^\?/, "") : "",
                        hash: r.hash ? r.hash.replace(/^#/, "") : "",
                        hostname: r.hostname,
                        port: r.port,
                        pathname: "/" === r.pathname.charAt(0) ? r.pathname : "/" + r.pathname
                    }
                }
                return t = i(window.location.href),
                    function(e) {
                        var r = n.isString(e) ? i(e) : e;
                        return r.protocol === t.protocol && r.host === t.host
                    }
            }() : function() {
                return function() {
                    return !0
                }
            }()
        },
        d920: function(t, e, r) {
            "use strict";
            r.r(e), r.d(e, "Struct", (function() {
                return d
            })), r.d(e, "StructError", (function() {
                return n
            })), r.d(e, "any", (function() {
                return _
            })), r.d(e, "array", (function() {
                return k
            })), r.d(e, "assert", (function() {
                return f
            })), r.d(e, "assign", (function() {
                return y
            })), r.d(e, "boolean", (function() {
                return M
            })), r.d(e, "coerce", (function() {
                return Y
            })), r.d(e, "create", (function() {
                return p
            })), r.d(e, "date", (function() {
                return D
            })), r.d(e, "defaulted", (function() {
                return X
            })), r.d(e, "define", (function() {
                return w
            })), r.d(e, "deprecated", (function() {
                return b
            })), r.d(e, "dynamic", (function() {
                return C
            })), r.d(e, "empty", (function() {
                return tt
            })), r.d(e, "enums", (function() {
                return S
            })), r.d(e, "func", (function() {
                return I
            })), r.d(e, "instance", (function() {
                return N
            })), r.d(e, "integer", (function() {
                return T
            })), r.d(e, "intersection", (function() {
                return P
            })), r.d(e, "is", (function() {
                return v
            })), r.d(e, "lazy", (function() {
                return A
            })), r.d(e, "literal", (function() {
                return O
            })), r.d(e, "map", (function() {
                return U
            })), r.d(e, "mask", (function() {
                return g
            })), r.d(e, "max", (function() {
                return et
            })), r.d(e, "min", (function() {
                return rt
            })), r.d(e, "never", (function() {
                return j
            })), r.d(e, "nullable", (function() {
                return W
            })), r.d(e, "number", (function() {
                return R
            })), r.d(e, "object", (function() {
                return L
            })), r.d(e, "omit", (function() {
                return B
            })), r.d(e, "optional", (function() {
                return q
            })), r.d(e, "partial", (function() {
                return F
            })), r.d(e, "pattern", (function() {
                return nt
            })), r.d(e, "pick", (function() {
                return E
            })), r.d(e, "record", (function() {
                return K
            })), r.d(e, "refine", (function() {
                return st
            })), r.d(e, "regexp", (function() {
                return H
            })), r.d(e, "set", (function() {
                return V
            })), r.d(e, "size", (function() {
                return it
            })), r.d(e, "string", (function() {
                return J
            })), r.d(e, "struct", (function() {
                return x
            })), r.d(e, "trimmed", (function() {
                return Q
            })), r.d(e, "tuple", (function() {
                return z
            })), r.d(e, "type", (function() {
                return G
            })), r.d(e, "union", (function() {
                return $
            })), r.d(e, "unknown", (function() {
                return Z
            })), r.d(e, "validate", (function() {
                return m
            }));
            class n extends TypeError {
                constructor(t, e) {
                    let r;
                    const {
                        message: n,
                        ...i
                    } = t, {
                        path: s
                    } = t, o = 0 === s.length ? n : "At path: " + s.join(".") + " -- " + n;
                    super(o), Object.assign(this, i), this.name = this.constructor.name, this.failures = () => {
                        var n;
                        return null != (n = r) ? n : r = [t, ...e()]
                    }
                }
            }

            function i(t) {
                return s(t) && "function" === typeof t[Symbol.iterator]
            }

            function s(t) {
                return "object" === typeof t && null != t
            }

            function o(t) {
                if ("[object Object]" !== Object.prototype.toString.call(t)) return !1;
                const e = Object.getPrototypeOf(t);
                return null === e || e === Object.prototype
            }

            function a(t) {
                return "string" === typeof t ? JSON.stringify(t) : "" + t
            }

            function u(t) {
                const {
                    done: e,
                    value: r
                } = t.next();
                return e ? void 0 : r
            }

            function c(t, e, r, n) {
                if (!0 === t) return;
                !1 === t ? t = {} : "string" === typeof t && (t = {
                    message: t
                });
                const {
                    path: i,
                    branch: s
                } = e, {
                    type: o
                } = r, {
                    refinement: u,
                    message: c = "Expected a value of type `" + o + "`" + (u ? " with refinement `" + u + "`" : "") + ", but received: `" + a(n) + "`"
                } = t;
                return {
                    value: n,
                    type: o,
                    refinement: u,
                    key: i[i.length - 1],
                    path: i,
                    branch: s,
                    ...t,
                    message: c
                }
            }

            function* h(t, e, r, n) {
                i(t) || (t = [t]);
                for (const i of t) {
                    const t = c(i, e, r, n);
                    t && (yield t)
                }
            }

            function* l(t, e, r = {}) {
                const {
                    path: n = [],
                    branch: i = [t],
                    coerce: o = !1,
                    mask: a = !1
                } = r, u = {
                    path: n,
                    branch: i
                };
                if (o && (t = e.coercer(t, u), a && "type" !== e.type && s(e.schema) && s(t) && !Array.isArray(t)))
                    for (const s in t) void 0 === e.schema[s] && delete t[s];
                let c = !0;
                for (const s of e.validator(t, u)) c = !1, yield [s, void 0];
                for (let [h, d, f] of e.entries(t, u)) {
                    const e = l(d, f, {
                        path: void 0 === h ? n : [...n, h],
                        branch: void 0 === h ? i : [...i, d],
                        coerce: o,
                        mask: a
                    });
                    for (const r of e) r[0] ? (c = !1, yield [r[0], void 0]) : o && (d = r[1], void 0 === h ? t = d : t instanceof Map ? t.set(h, d) : t instanceof Set ? t.add(d) : s(t) && (t[h] = d))
                }
                if (c)
                    for (const s of e.refiner(t, u)) c = !1, yield [s, void 0];
                c && (yield [void 0, t])
            }
            class d {
                constructor(t) {
                    const {
                        type: e,
                        schema: r,
                        validator: n,
                        refiner: i,
                        coercer: s = (t => t),
                        entries: o = function*() {}
                    } = t;
                    this.type = e, this.schema = r, this.entries = o, this.coercer = s, this.validator = n ? (t, e) => {
                        const r = n(t, e);
                        return h(r, e, this, t)
                    } : () => [], this.refiner = i ? (t, e) => {
                        const r = i(t, e);
                        return h(r, e, this, t)
                    } : () => []
                }
                assert(t) {
                    return f(t, this)
                }
                create(t) {
                    return p(t, this)
                }
                is(t) {
                    return v(t, this)
                }
                mask(t) {
                    return g(t, this)
                }
                validate(t, e = {}) {
                    return m(t, this, e)
                }
            }

            function f(t, e) {
                const r = m(t, e);
                if (r[0]) throw r[0]
            }

            function p(t, e) {
                const r = m(t, e, {
                    coerce: !0
                });
                if (r[0]) throw r[0];
                return r[1]
            }

            function g(t, e) {
                const r = m(t, e, {
                    coerce: !0,
                    mask: !0
                });
                if (r[0]) throw r[0];
                return r[1]
            }

            function v(t, e) {
                const r = m(t, e);
                return !r[0]
            }

            function m(t, e, r = {}) {
                const i = l(t, e, r),
                    s = u(i);
                if (s[0]) {
                    const t = new n(s[0], (function*() {
                        for (const t of i) t[0] && (yield t[0])
                    }));
                    return [t, void 0]
                } {
                    const t = s[1];
                    return [void 0, t]
                }
            }

            function y(...t) {
                const e = t.map(t => t.schema),
                    r = Object.assign({}, ...e);
                return L(r)
            }

            function w(t, e) {
                return new d({
                    type: t,
                    schema: null,
                    validator: e
                })
            }

            function b(t, e) {
                return new d({ ...t,
                    refiner: (e, r) => void 0 === e || t.refiner(e, r),
                    validator(r, n) {
                        return void 0 === r || (e(r, n), t.validator(r, n))
                    }
                })
            }

            function C(t) {
                return new d({
                    type: "dynamic",
                    schema: null,
                    * entries(e, r) {
                        const n = t(e, r);
                        yield* n.entries(e, r)
                    },
                    validator(e, r) {
                        const n = t(e, r);
                        return n.validator(e, r)
                    },
                    coercer(e, r) {
                        const n = t(e, r);
                        return n.coercer(e, r)
                    }
                })
            }

            function A(t) {
                let e;
                return new d({
                    type: "lazy",
                    schema: null,
                    * entries(r, n) {
                        null != e || (e = t()), yield* e.entries(r, n)
                    },
                    validator(r, n) {
                        return null != e || (e = t()), e.validator(r, n)
                    },
                    coercer(r, n) {
                        return null != e || (e = t()), e.coercer(r, n)
                    }
                })
            }

            function B(t, e) {
                const {
                    schema: r
                } = t, n = { ...r
                };
                for (const i of e) delete n[i];
                return L(n)
            }

            function F(t) {
                const e = t instanceof d ? { ...t.schema
                } : { ...t
                };
                for (const r in e) e[r] = q(e[r]);
                return L(e)
            }

            function E(t, e) {
                const {
                    schema: r
                } = t, n = {};
                for (const i of e) n[i] = r[i];
                return L(n)
            }

            function x(t, e) {
                return console.warn("superstruct@0.11 - The `struct` helper has been renamed to `define`."), w(t, e)
            }

            function _() {
                return w("any", () => !0)
            }

            function k(t) {
                return new d({
                    type: "array",
                    schema: t,
                    * entries(e) {
                        if (t && Array.isArray(e))
                            for (const [r, n] of e.entries()) yield [r, n, t]
                    },
                    coercer(t) {
                        return Array.isArray(t) ? t.slice() : t
                    },
                    validator(t) {
                        return Array.isArray(t) || "Expected an array value, but received: " + a(t)
                    }
                })
            }

            function M() {
                return w("boolean", t => "boolean" === typeof t)
            }

            function D() {
                return w("date", t => t instanceof Date && !isNaN(t.getTime()) || "Expected a valid `Date` object, but received: " + a(t))
            }

            function S(t) {
                const e = {},
                    r = t.map(t => a(t)).join();
                for (const n of t) e[n] = n;
                return new d({
                    type: "enums",
                    schema: e,
                    validator(e) {
                        return t.includes(e) || "Expected one of `" + r + "`, but received: " + a(e)
                    }
                })
            }

            function I() {
                return w("func", t => "function" === typeof t || "Expected a function, but received: " + a(t))
            }

            function N(t) {
                return w("instance", e => e instanceof t || "Expected a `" + t.name + "` instance, but received: " + a(e))
            }

            function T() {
                return w("integer", t => "number" === typeof t && !isNaN(t) && Number.isInteger(t) || "Expected an integer, but received: " + a(t))
            }

            function P(t) {
                return new d({
                    type: "intersection",
                    schema: null,
                    * entries(e, r) {
                        for (const n of t) yield* n.entries(e, r)
                    },
                    * validator(e, r) {
                        for (const n of t) yield* n.validator(e, r)
                    },
                    * refiner(e, r) {
                        for (const n of t) yield* n.refiner(e, r)
                    }
                })
            }

            function O(t) {
                const e = a(t),
                    r = typeof t;
                return new d({
                    type: "literal",
                    schema: "string" === r || "number" === r || "boolean" === r ? t : null,
                    validator(r) {
                        return r === t || "Expected the literal `" + e + "`, but received: " + a(r)
                    }
                })
            }

            function U(t, e) {
                return new d({
                    type: "map",
                    schema: null,
                    * entries(r) {
                        if (t && e && r instanceof Map)
                            for (const [n, i] of r.entries()) yield [n, n, t], yield [n, i, e]
                    },
                    coercer(t) {
                        return t instanceof Map ? new Map(t) : t
                    },
                    validator(t) {
                        return t instanceof Map || "Expected a `Map` object, but received: " + a(t)
                    }
                })
            }

            function j() {
                return w("never", () => !1)
            }

            function W(t) {
                return new d({ ...t,
                    validator: (e, r) => null === e || t.validator(e, r),
                    refiner: (e, r) => null === e || t.refiner(e, r)
                })
            }

            function R() {
                return w("number", t => "number" === typeof t && !isNaN(t) || "Expected a number, but received: " + a(t))
            }

            function L(t) {
                const e = t ? Object.keys(t) : [],
                    r = j();
                return new d({
                    type: "object",
                    schema: t || null,
                    * entries(n) {
                        if (t && s(n)) {
                            const i = new Set(Object.keys(n));
                            for (const r of e) i.delete(r), yield [r, n[r], t[r]];
                            for (const t of i) yield [t, n[t], r]
                        }
                    },
                    validator(t) {
                        return s(t) || "Expected an object, but received: " + a(t)
                    },
                    coercer(t) {
                        return s(t) ? { ...t
                        } : t
                    }
                })
            }

            function q(t) {
                return new d({ ...t,
                    validator: (e, r) => void 0 === e || t.validator(e, r),
                    refiner: (e, r) => void 0 === e || t.refiner(e, r)
                })
            }

            function K(t, e) {
                return new d({
                    type: "record",
                    schema: null,
                    * entries(r) {
                        if (s(r))
                            for (const n in r) {
                                const i = r[n];
                                yield [n, n, t], yield [n, i, e]
                            }
                    },
                    validator(t) {
                        return s(t) || "Expected an object, but received: " + a(t)
                    }
                })
            }

            function H() {
                return w("regexp", t => t instanceof RegExp)
            }

            function V(t) {
                return new d({
                    type: "set",
                    schema: null,
                    * entries(e) {
                        if (t && e instanceof Set)
                            for (const r of e) yield [r, r, t]
                    },
                    coercer(t) {
                        return t instanceof Set ? new Set(t) : t
                    },
                    validator(t) {
                        return t instanceof Set || "Expected a `Set` object, but received: " + a(t)
                    }
                })
            }

            function J() {
                return w("string", t => "string" === typeof t || "Expected a string, but received: " + a(t))
            }

            function z(t) {
                const e = j();
                return new d({
                    type: "tuple",
                    schema: null,
                    * entries(r) {
                        if (Array.isArray(r)) {
                            const n = Math.max(t.length, r.length);
                            for (let i = 0; i < n; i++) yield [i, r[i], t[i] || e]
                        }
                    },
                    validator(t) {
                        return Array.isArray(t) || "Expected an array, but received: " + a(t)
                    }
                })
            }

            function G(t) {
                const e = Object.keys(t);
                return new d({
                    type: "type",
                    schema: t,
                    * entries(r) {
                        if (s(r))
                            for (const n of e) yield [n, r[n], t[n]]
                    },
                    validator(t) {
                        return s(t) || "Expected an object, but received: " + a(t)
                    }
                })
            }

            function $(t) {
                const e = t.map(t => t.type).join(" | ");
                return new d({
                    type: "union",
                    schema: null,
                    validator(r, n) {
                        const i = [];
                        for (const e of t) {
                            const [...t] = l(r, e, n), [s] = t;
                            if (!s[0]) return [];
                            for (const [e] of t) e && i.push(e)
                        }
                        return ["Expected the value to satisfy a union of `" + e + "`, but received: " + a(r), ...i]
                    }
                })
            }

            function Z() {
                return w("unknown", () => !0)
            }

            function Y(t, e, r) {
                return new d({ ...t,
                    coercer: (n, i) => v(n, e) ? t.coercer(r(n, i), i) : t.coercer(n, i)
                })
            }

            function X(t, e, r = {}) {
                return Y(t, Z(), t => {
                    const n = "function" === typeof e ? e() : e;
                    if (void 0 === t) return n;
                    if (!r.strict && o(t) && o(n)) {
                        const e = { ...t
                        };
                        let r = !1;
                        for (const t in n) void 0 === e[t] && (e[t] = n[t], r = !0);
                        if (r) return e
                    }
                    return t
                })
            }

            function Q(t) {
                return Y(t, J(), t => t.trim())
            }

            function tt(t) {
                const e = "Expected an empty " + t.type;
                return st(t, "empty", t => {
                    if (t instanceof Map || t instanceof Set) {
                        const {
                            size: r
                        } = t;
                        return 0 === r || e + " but received one with a size of `" + r + "`"
                    } {
                        const {
                            length: r
                        } = t;
                        return 0 === r || e + " but received one with a length of `" + r + "`"
                    }
                })
            }

            function et(t, e, r = {}) {
                const {
                    exclusive: n
                } = r;
                return st(t, "max", r => n ? r < e : r <= e || "Expected a " + t.type + " greater than " + (n ? "" : "or equal to ") + e + " but received `" + r + "`")
            }

            function rt(t, e, r = {}) {
                const {
                    exclusive: n
                } = r;
                return st(t, "min", r => n ? r > e : r >= e || "Expected a " + t.type + " greater than " + (n ? "" : "or equal to ") + e + " but received `" + r + "`")
            }

            function nt(t, e) {
                return st(t, "pattern", r => e.test(r) || "Expected a " + t.type + " matching `/" + e.source + '/` but received "' + r + '"')
            }

            function it(t, e, r = e) {
                const n = "Expected a " + t.type,
                    i = e === r ? "of `" + e + "`" : "between `" + e + "` and `" + r + "`";
                return st(t, "size", t => {
                    if ("number" === typeof t || t instanceof Date) return e <= t && t <= r || n + " " + i + " but received `" + t + "`";
                    if (t instanceof Map || t instanceof Set) {
                        const {
                            size: s
                        } = t;
                        return e <= s && s <= r || n + " with a size " + i + " but received one with a size of `" + s + "`"
                    } {
                        const {
                            length: s
                        } = t;
                        return e <= s && s <= r || n + " with a length " + i + " but received one with a length of `" + s + "`"
                    }
                })
            }

            function st(t, e, r) {
                return new d({ ...t,
                    * refiner(n, i) {
                        yield* t.refiner(n, i);
                        const s = r(n, i),
                            o = h(s, i, t, n);
                        for (const t of o) yield { ...t,
                            refinement: e
                        }
                    }
                })
            }
        },
        df0c: function(t, e, r) {
            r("5cc6");
            const {
                Contract: n
            } = r("38a0"), {
                Cell: i
            } = r("41b0"), {
                nacl: s,
                stringToBytes: o,
                Address: a,
                BN: u
            } = r("1afa");
            class c extends n {
                constructor(t, e) {
                    if (!e.publicKey && !e.address) throw new Error("WalletContract required publicKey or address in options");
                    super(t, e), this.methods = {
                        transfer: e => n.createMethod(t, this.createTransferMessage(e.secretKey, e.toAddress, e.amount, e.seqno, e.payload, e.sendMode, !Boolean(e.secretKey), e.stateInit, e.expireAt)),
                        transfers: e => n.createMethod(t, this.createTransferMessages(e.secretKey, e.seqno, e.messages, !Boolean(e.secretKey), e.expireAt)),
                        seqno: () => ({
                            call: async () => {
                                const e = await this.getAddress();
                                let r = null;
                                try {
                                    r = (await t.call2(e.toString(), "seqno")).toNumber()
                                } catch (n) {}
                                return r
                            }
                        })
                    }, this.deploy = e => n.createMethod(t, this.createInitExternalMessage(e))
                }
                getName() {
                    throw new Error("override me")
                }
                createDataCell() {
                    const t = new i;
                    return t.bits.writeUint(0, 32), t.bits.writeBytes(this.options.publicKey), t
                }
                createSigningMessage(t) {
                    t = t || 0;
                    const e = new i;
                    return e.bits.writeUint(t, 32), e
                }
                async createInitExternalMessage(t) {
                    if (!this.options.publicKey) {
                        const e = s.sign.keyPair.fromSecretKey(t);
                        this.options.publicKey = e.publicKey
                    }
                    const {
                        stateInit: e,
                        address: r,
                        code: o,
                        data: a
                    } = await this.createStateInit(), u = this.createSigningMessage(), c = s.sign.detached(await u.hash(), t), h = new i;
                    h.bits.writeBytes(c), h.writeCell(u);
                    const l = n.createExternalMessageHeader(r),
                        d = n.createCommonMsgInfo(l, e, h);
                    return {
                        address: r,
                        message: d,
                        body: h,
                        signingMessage: u,
                        stateInit: e,
                        code: o,
                        data: a
                    }
                }
                async createExternalMessage(t, e, r, o = !1) {
                    const a = o ? new Uint8Array(64) : s.sign.detached(await t.hash(), e),
                        u = new i;
                    u.bits.writeBytes(a), u.writeCell(t);
                    let c = null,
                        h = null,
                        l = null;
                    if (0 === r) {
                        if (!this.options.publicKey) {
                            const t = s.sign.keyPair.fromSecretKey(e);
                            this.options.publicKey = t.publicKey
                        }
                        const t = await this.createStateInit();
                        c = t.stateInit, h = t.code, l = t.data
                    }
                    const d = await this.getAddress(),
                        f = n.createExternalMessageHeader(d),
                        p = n.createCommonMsgInfo(f, c, u);
                    return {
                        address: d,
                        message: p,
                        body: u,
                        signature: a,
                        signingMessage: t,
                        stateInit: c,
                        code: h,
                        data: l
                    }
                }
                async createTransferMessage(t, e, r, i, s = "", o = 3, a = !1, u = null, c) {
                    if (null === i || void 0 === i || i < 0) throw new Error("seqno must be number >= 0");
                    const h = this.createSigningMessage(i, c);
                    return null !== o && void 0 !== o || (o = 3), h.bits.writeUint8(o), h.refs.push(n.createOutMsg(e, r, s, u)), this.createExternalMessage(h, t, i, a)
                }
                async createTransferMessages(t, e, r, i = !1, s) {
                    if (null === e || void 0 === e || e < 0) throw new Error("seqno must be number >= 0");
                    const o = this.createSigningMessage(e, s);
                    if (r.length < 1 || r.length > 4) throw new Error("put 1-4 messages");
                    for (const a of r) {
                        let t = a.sendMode;
                        null !== t && void 0 !== t || (t = 3), o.bits.writeUint8(t), o.refs.push(n.createOutMsg(a.toAddress, a.amount, a.payload, a.stateInit))
                    }
                    return this.createExternalMessage(o, t, e, i)
                }
            }
            t.exports = {
                WalletContract: c
            }
        },
        e101: function(t, e, r) {
            r("5cc6");
            const {
                parseAddress: n
            } = r("cdcf"), {
                AdnlAddress: i,
                StorageBagId: s,
                BN: o,
                sha256: a,
                bytesToHex: u,
                bytesToBase64: c
            } = r("1afa"), {
                Cell: h
            } = r("41b0"), l = "dns_next_resolver", d = "wallet", f = "site", p = "storage", g = async t => {
                if (!t) return new o(0);
                const e = (new TextEncoder).encode(t),
                    r = new Uint8Array(await a(e));
                return new o(u(r), 16)
            }, v = t => {
                const e = new h;
                return e.bits.writeUint(40915, 16), e.bits.writeAddress(t), e.bits.writeUint(0, 8), e
            }, m = t => {
                const e = new h;
                return e.bits.writeUint(44289, 16), e.bits.writeBytes(t.bytes), e.bits.writeUint(0, 8), e
            }, y = t => {
                const e = new h;
                return e.bits.writeUint(29811, 16), e.bits.writeBytes(t.bytes), e
            }, w = t => {
                const e = new h;
                return e.bits.writeUint(47763, 16), e.bits.writeAddress(t), e
            }, b = (t, e, r) => {
                if (t.bits.array[0] !== e || t.bits.array[1] !== r) throw new Error("Invalid dns record value prefix");
                return t.bits.array = t.bits.array.slice(2), n(t)
            }, C = t => b(t, 159, 211), A = t => b(t, 186, 147), B = t => {
                if (173 !== t.bits.array[0] || 1 !== t.bits.array[1]) throw new Error("Invalid dns record value prefix");
                const e = t.bits.array.slice(2, 34);
                return new i(e)
            }, F = t => {
                if (116 !== t.bits.array[0] || 115 !== t.bits.array[1]) throw new Error("Invalid dns record value prefix");
                const e = t.bits.array.slice(2, 34);
                return new s(e)
            }, E = t => t ? 173 === t.bits.array[0] || 1 === t.bits.array[1] ? B(t) : F(t) : null, x = async (t, e, r, n, i) => {
                const s = 8 * r.length,
                    o = new h;
                o.bits.writeBytes(r);
                const a = await g(n),
                    u = await t.call2(e, "dnsresolve", [
                        ["tvm.Slice", c(await o.toBoc(!1))],
                        ["num", a.toString()]
                    ]);
                if (2 !== u.length) throw new Error("Invalid dnsresolve response");
                const v = u[0].toNumber();
                let m = u[1];
                if (m instanceof Array && 0 === m.length && (m = null), m && !m.bits) throw new Error("Invalid dnsresolve response");
                if (0 === v) return null;
                if (v % 8 !== 0) throw new Error("domain split not at a component boundary");
                if (v > s) throw new Error("invalid response " + v + "/" + s);
                if (v === s) return n === l ? m ? A(m) : null : n === d ? m ? C(m) : null : n === f ? m ? E(m) : null : n === p ? m ? F(m) : null : m;
                if (m) {
                    const e = A(m);
                    return i ? n === l ? e : null : await x(t, e.toString(), r.slice(v / 8), n, !1)
                }
                return null
            }, _ = t => {
                if (!t || !t.length) throw new Error("empty domain");
                if ("." === t) return new Uint8Array([0]);
                t = t.toLowerCase();
                for (let n = 0; n < t.length; n++)
                    if (t.charCodeAt(n) <= 32) throw new Error("bytes in range 0..32 are not allowed in domain names");
                for (let n = 0; n < t.length; n++) {
                    const e = t.substring(n, n + 1);
                    for (let t = 127; t <= 159; t++)
                        if (e === String.fromCharCode(t)) throw new Error("bytes in range 127..159 are not allowed in domain names")
                }
                const e = t.split(".");
                e.forEach(t => {
                    if (!t.length) throw new Error("domain name cannot have an empty component")
                });
                let r = e.reverse().join("\0") + "\0";
                return r.length < 126 && (r = "\0" + r), (new TextEncoder).encode(r)
            }, k = async (t, e, r, n, i) => {
                const s = _(r);
                return x(t, e, s, n, i)
            };
            t.exports = {
                DNS_CATEGORY_NEXT_RESOLVER: l,
                DNS_CATEGORY_SITE: f,
                DNS_CATEGORY_WALLET: d,
                DNS_CATEGORY_STORAGE: p,
                categoryToBN: g,
                domainToBytes: _,
                createSmartContractAddressRecord: v,
                createAdnlAddressRecord: m,
                createNextResolverRecord: w,
                parseSmartContractAddressRecord: C,
                parseAdnlAddressRecord: B,
                parseStorageBagIdRecord: F,
                parseSiteRecord: E,
                parseNextResolverRecord: A,
                createStorageBagIdRecord: y,
                dnsResolve: k
            }
        },
        e57b: function(t, e, r) {
            const n = r("1c46"),
                {
                    checkAndInit: i,
                    smixSync: s
                } = r("8f3b");

            function o(t, e, r, o, a, u, c) {
                const {
                    XY: h,
                    V: l,
                    B32: d,
                    x: f,
                    _X: p,
                    B: g,
                    tickCallback: v
                } = i(t, e, r, o, a, u, c);
                for (var m = 0; m < a; m++) s(g, 128 * m * o, o, r, l, h, p, d, f, v);
                return n.pbkdf2Sync(t, g, 1, u, "sha256")
            }
            t.exports = o
        },
        e71e: function(t, e, r) {
            const n = r("694e").default,
                {
                    DnsCollection: i
                } = r("cf59"),
                {
                    DnsItem: s
                } = r("4fc9");
            t.exports.default = {
                Dns: n,
                DnsCollection: i,
                DnsItem: s
            }
        },
        e75f: function(t, e, r) {
            const {
                Contract: n
            } = r("38a0"), {
                Cell: i
            } = r("41b0"), {
                Address: s,
                bytesToBase64: o,
                BN: a
            } = r("1afa"), {
                parseAddress: u
            } = r("cdcf"), {
                createOffchainUriCell: c,
                serializeUri: h,
                parseOffchainUriCell: l,
                getRoyaltyParams: d
            } = r("cdcf");
            class f extends n {
                constructor(t, e) {
                    if (e.wc = 0, e.code = e.code || i.oneFromBoce.royalty > 1) throw new Error("royalty > 1");
                    e.royaltyBase = 1e3, e.royaltyFactor = Math.floor(e.royalty * e.royaltyBase), super(t, e), this.methods.getCollectionData = this.getCollectionData.bind(this), this.methods.getNftItemAddressByIndex = this.getNftItemAddressByIndex.bind(this), this.methods.getNftItemContent = this.getNftItemContent.bind(this), this.methods.getRoyaltyParams = this.getRoyaltyParams.bind(this)
                }
                createContentCell(t) {
                    const e = c(t.collectionContentUri),
                        r = new i;
                    r.bits.writeBytes(h(t.nftItemContentBaseUri));
                    const n = new i;
                    return n.refs[0] = e, n.refs[1] = r, n
                }
                createRoyaltyCell(t) {
                    const e = new i;
                    return e.bits.writeUint(t.royaltyFactor, 16), e.bits.writeUint(t.royaltyBase, 16), e.bits.writeAddress(t.royaltyAddress), e
                }
                createDataCell() {
                    const t = new i;
                    return t.bits.writeAddress(this.options.ownerAddress), t.bits.writeUint(0, 64), t.refs[0] = this.createContentCell(this.options), t.refs[1] = i.oneFromBoc(this.options.nftItemCodeHex), t.refs[2] = this.createRoyaltyCell(this.options), t
                }
                createMintBody(t) {
                    const e = new i;
                    e.bits.writeUint(1, 32), e.bits.writeUint(t.queryId || 0, 64), e.bits.writeUint(t.itemIndex, 64), e.bits.writeCoins(t.amount);
                    const r = new i;
                    r.bits.writeAddress(t.itemOwnerAddress);
                    const n = new i;
                    return n.bits.writeBytes(h(t.itemContentUri)), r.refs[0] = n, e.refs[0] = r, e
                }
                createGetRoyaltyParamsBody(t) {
                    const e = new i;
                    return e.bits.writeUint(1765620048, 32), e.bits.writeUint(t.queryId || 0, 64), e
                }
                createChangeOwnerBody(t) {
                    if (void 0 === t.newOwnerAddress) throw new Error("Specify newOwnerAddress");
                    const e = new i;
                    return e.bits.writeUint(3, 32), e.bits.writeUint(t.queryId || 0, 64), e.bits.writeAddress(t.newOwnerAddress), e
                }
                createEditContentBody(t) {
                    if (t.royalty > 1) throw new Error("royalty > 1");
                    t.royaltyBase = 1e3, t.royaltyFactor = Math.floor(t.royalty * t.royaltyBase);
                    const e = new i;
                    return e.bits.writeUint(4, 32), e.bits.writeUint(t.queryId || 0, 64), e.refs[0] = this.createContentCell(t), e.refs[1] = this.createRoyaltyCell(t), e
                }
                async getCollectionData() {
                    const t = await this.getAddress(),
                        e = await this.provider.call2(t.toString(), "get_collection_data"),
                        r = e[0];
                    let n = NaN;
                    try {
                        n = r.toNumber()
                    } catch (a) {}
                    const i = e[1];
                    let s = null;
                    try {
                        s = l(i)
                    } catch (a) {}
                    const o = u(e[2]);
                    return {
                        nextItemIndex: n,
                        itemsCount: r,
                        ownerAddress: o,
                        collectionContentCell: i,
                        collectionContentUri: s
                    }
                }
                async getNftItemContent(t) {
                    const e = await this.getAddress(),
                        r = await t.getData();
                    if (r.isInitialized) {
                        const t = await this.provider.call2(e.toString(), "get_nft_content", [
                            ["num", r.itemIndex.toString(10)],
                            ["tvm.Cell", o(await r.contentCell.toBoc(!1))]
                        ]);
                        r.contentUri = null;
                        try {
                            r.contentUri = l(t)
                        } catch (n) {}
                    }
                    return r
                }
                async getNftItemAddressByIndex(t) {
                    t = new a(t);
                    const e = await this.getAddress(),
                        r = await this.provider.call2(e.toString(), "get_nft_address_by_index", [
                            ["num", t.toString(10)]
                        ]);
                    return u(r)
                }
                async getRoyaltyParams() {
                    const t = await this.getAddress();
                    return d(this.provider, t.toString())
                }
            }
            t.exports = {
                NftCollection: f
            }
        },
        e774: function(t, e, r) {
            r("5cc6"), r("20bf");
            const {
                BitString: n
            } = r("5a63"), {
                bytesToBase64: i,
                compareBytes: s,
                concatBytes: o,
                crc32c: a,
                hexToBytes: u,
                readNBytesUIntFromArray: c,
                sha256: h,
                bytesToHex: l
            } = r("1afa"), {
                Slice: d
            } = r("a3a5"), f = u("B5EE9C72"), p = u("68ff65f3"), g = u("acc3a728");
            class v {
                constructor() {
                    this.bits = new n(1023), this.refs = [], this.isExotic = !1
                }
                static fromBoc(t) {
                    return C(t)
                }
                static oneFromBoc(t) {
                    const e = C(t);
                    if (1 !== e.length) throw new Error("expected 1 root cell but have " + e.length);
                    return e[0]
                }
                writeCell(t) {
                    this.bits.writeBitString(t.bits), this.refs = this.refs.concat(t.refs)
                }
                getMaxLevel() {
                    let t = 0;
                    for (let e in this.refs) {
                        const r = this.refs[e];
                        r.getMaxLevel() > t && (t = r.getMaxLevel())
                    }
                    return t
                }
                isExplicitlyStoredHashes() {
                    return 0
                }
                getMaxDepth() {
                    let t = 0;
                    if (this.refs.length > 0) {
                        for (let e = 0; e < this.refs.length; e++) {
                            const r = this.refs[e];
                            let n = r.getMaxDepth();
                            n > t && (t = n)
                        }
                        t += 1
                    }
                    return t
                }
                getMaxDepthAsArray() {
                    const t = this.getMaxDepth(),
                        e = Uint8Array.from({
                            length: 2
                        }, () => 0);
                    return e[1] = t % 256, e[0] = Math.floor(t / 256), e
                }
                getRefsDescriptor() {
                    const t = Uint8Array.from({
                        length: 1
                    }, () => 0);
                    return t[0] = this.refs.length + 8 * this.isExotic + 32 * this.getMaxLevel(), t
                }
                getBitsDescriptor() {
                    const t = Uint8Array.from({
                        length: 1
                    }, () => 0);
                    return t[0] = Math.ceil(this.bits.cursor / 8) + Math.floor(this.bits.cursor / 8), t
                }
                getDataWithDescriptors() {
                    const t = this.getRefsDescriptor(),
                        e = this.getBitsDescriptor(),
                        r = this.bits.getTopUppedArray();
                    return o(o(t, e), r)
                }
                async getRepr() {
                    const t = [];
                    t.push(this.getDataWithDescriptors());
                    for (let r in this.refs) {
                        const e = this.refs[r];
                        t.push(e.getMaxDepthAsArray())
                    }
                    for (let r in this.refs) {
                        const e = this.refs[r];
                        t.push(await e.hash())
                    }
                    let e = new Uint8Array;
                    for (let r in t) {
                        const n = t[r];
                        e = o(e, n)
                    }
                    return e
                }
                async hash() {
                    return new Uint8Array(await h(await this.getRepr()))
                }
                beginParse() {
                    const t = this.refs.map(t => t.beginParse());
                    return new d(this.bits.array.slice(), this.bits.length, t)
                }
                print(t) {
                    t = t || "";
                    let e = t + "x{" + this.bits.toHex() + "}\n";
                    for (let r in this.refs) {
                        const n = this.refs[r];
                        e += n.print(t + " ")
                    }
                    return e
                }
                async toBoc(t = !0, e = !0, r = !1, i = 0) {
                    const s = this,
                        u = await s.treeWalk(),
                        c = u[0],
                        h = u[1],
                        l = c.length,
                        d = l.toString(2).length,
                        p = Math.min(Math.ceil(d / 8), 1);
                    let g = 0,
                        v = [];
                    for (let n of c) v.push(g), g += await n[1].bocSerializationSize(h, p);
                    const m = g.toString(2).length,
                        y = Math.max(Math.ceil(m / 8), 1),
                        w = new n(1247 * c.length);
                    w.writeBytes(f), w.writeBitArray([t, e, r]), w.writeUint(i, 2), w.writeUint(p, 3), w.writeUint8(y), w.writeUint(l, 8 * p), w.writeUint(1, 8 * p), w.writeUint(0, 8 * p), w.writeUint(g, 8 * y), w.writeUint(0, 8 * p), t && c.forEach((t, e) => w.writeUint(v[e], 8 * y));
                    for (let n of c) {
                        const t = await n[1].serializeForBoc(h, p);
                        w.writeBytes(t)
                    }
                    let b = w.getTopUppedArray();
                    return e && (b = o(b, a(b))), b
                }
                async serializeForBoc(t, e) {
                    const r = [];
                    if (r.push(this.getDataWithDescriptors()), this.isExplicitlyStoredHashes()) throw new Error("Cell hashes explicit storing is not implemented");
                    for (let i in this.refs) {
                        const e = this.refs[i],
                            n = await e.hash(),
                            s = t[n];
                        let o = s.toString(16);
                        o.length % 2 && (o = "0" + o);
                        const a = u(o);
                        r.push(a)
                    }
                    let n = new Uint8Array;
                    for (let i in r) {
                        const t = r[i];
                        n = o(n, t)
                    }
                    return n
                }
                async bocSerializationSize(t, e) {
                    return (await this.serializeForBoc(t, e)).length
                }
                async treeWalk() {
                    return y(this, [], {})
                }
            }
            async function m(t, e, r) {
                const n = t[r];
                for (let s in t) t[s] > n && (t[s] = t[s] - 1);
                t[r] = e.length - 1;
                const i = e.splice(n, 1)[0];
                e.push(i);
                for (let s of i[1].refs) await m(t, e, await s.hash())
            }
            async function y(t, e, r, n = null) {
                const i = await t.hash();
                if (i in r) return n && r[n] > r[i] && await m(r, e, i), [e, r];
                r[i] = e.length, e.push([i, t]);
                for (let s of t.refs) {
                    const t = await y(s, e, r, i);
                    e = t[0], r = t[1]
                }
                return [e, r]
            }

            function w(t) {
                if (t.length < 5) throw "Not enough bytes for magic prefix";
                const e = t,
                    r = t.slice(0, 4);
                let n, i, o, u, h;
                if (t = t.slice(4), s(r, f)) {
                    const e = t[0];
                    n = 128 & e, i = 64 & e, o = 32 & e, u = 2 * (16 & e) + (8 & e), h = e % 8
                }
                if (s(r, p) && (n = 1, i = 0, o = 0, u = 0, h = t[0]), s(r, g) && (n = 1, i = 1, o = 0, u = 0, h = t[0]), t = t.slice(1), t.length < 1 + 5 * h) throw "Not enough bytes for encoding cells counters";
                const l = t[0];
                t = t.slice(1);
                const d = c(h, t);
                t = t.slice(h);
                const v = c(h, t);
                t = t.slice(h);
                const m = c(h, t);
                t = t.slice(h);
                const y = c(l, t);
                if (t = t.slice(l), t.length < v * h) throw "Not enough bytes for encoding root cells hashes";
                let w = [];
                for (let s = 0; s < v; s++) w.push(c(h, t)), t = t.slice(h);
                let b = !1;
                if (n) {
                    if (b = [], t.length < l * d) throw "Not enough bytes for index encoding";
                    for (let e = 0; e < d; e++) b.push(c(l, t)), t = t.slice(l)
                }
                if (t.length < y) throw "Not enough bytes for cells data";
                const C = t.slice(0, y);
                if (t = t.slice(y), i) {
                    if (t.length < 4) throw "Not enough bytes for crc32c hashsum";
                    const r = e.length;
                    if (!s(a(e.slice(0, r - 4)), t.slice(0, 4))) throw "Crc32c hashsum mismatch";
                    t = t.slice(4)
                }
                if (t.length) throw "Too much bytes in BoC serialization";
                return {
                    has_idx: n,
                    hash_crc32: i,
                    has_cache_bits: o,
                    flags: u,
                    size_bytes: h,
                    off_bytes: l,
                    cells_num: d,
                    roots_num: v,
                    absent_num: m,
                    tot_cells_size: y,
                    root_list: w,
                    index: b,
                    cells_data: C
                }
            }

            function b(t, e) {
                if (t.length < 2) throw "Not enough bytes to encode cell descriptors";
                const r = t[0],
                    n = t[1];
                t = t.slice(2);
                Math.floor(r / 32);
                const i = 8 & r,
                    s = r % 8,
                    o = Math.ceil(n / 2),
                    a = !(n % 2);
                let u = new v;
                if (u.isExotic = i, t.length < o + e * s) throw "Not enough bytes to encode cell data";
                u.bits.setTopUppedArray(t.slice(0, o), a), t = t.slice(o);
                for (let h = 0; h < s; h++) u.refs.push(c(e, t)), t = t.slice(e);
                return {
                    cell: u,
                    residue: t
                }
            }

            function C(t) {
                "string" == typeof t && (t = u(t));
                const e = w(t);
                let r = e.cells_data,
                    n = [];
                for (let s = 0; s < e.cells_num; s++) {
                    let t = b(r, e.size_bytes);
                    r = t.residue, n.push(t.cell)
                }
                for (let s = e.cells_num - 1; s >= 0; s--) {
                    let t = n[s];
                    for (let e = 0; e < t.refs.length; e++) {
                        const r = t.refs[e];
                        if (r < s) throw "Topological order is broken";
                        t.refs[e] = n[r]
                    }
                }
                let i = [];
                for (let s of e.root_list) i.push(n[s]);
                return i
            }
            t.exports = {
                Cell: v
            }
        },
        ea6c: function(t, e) {
            const r = 10 n,
                n = 1022 n,
                i = 8191 n;
            class s {
                constructor() {
                    this.shift = 0 n, this.bitnumber = 0 n
                }
                static fromShiftAndBitNumber(t, e) {
                    const r = new s;
                    if (r.shift = t, r.shift < 0) throw new Error("invalid shift");
                    if (r.shift > i) throw new Error("invalid shift");
                    if (r.bitnumber = e, r.bitnumber < 0) throw new Error("invalid bitnumber");
                    if (r.bitnumber > n) throw new Error("invalid bitnumber");
                    return r
                }
                getNext() {
                    let t = this.bitnumber + 1 n,
                        e = this.shift;
                    if (e === i && t > n - 1 n) throw new Error("Overload");
                    if (t > n && (t = 0 n, e += 1 n, e > i)) throw new Error("Overload");
                    return s.fromShiftAndBitNumber(e, t)
                }
                hasNext() {
                    const t = this.bitnumber >= n - 1 n && this.shift === i;
                    return !t
                }
                getShift() {
                    return this.shift
                }
                getBitNumber() {
                    return this.bitnumber
                }
                getQueryId() {
                    return (this.shift << r) + this.bitnumber
                }
                static fromQueryId(t) {
                    const e = t >> r,
                        n = 1023 n & t;
                    return this.fromShiftAndBitNumber(e, n)
                }
                static fromSeqno(t) {
                    const e = t / 1023 n,
                        r = t % 1023 n;
                    return this.fromShiftAndBitNumber(e, r)
                }
                toSeqno() {
                    return this.bitnumber + 1023 n * this.shift
                }
            }
            t.exports = {
                HighloadQueryId: s
            }
        },
        eb1a: function(t, e, r) {
            const {
                Contract: n
            } = r("38a0"), {
                Cell: i
            } = r("41b0"), {
                createOffchainUriCell: s,
                parseOffchainUriCell: o,
                parseAddress: a
            } = r("cdcf"), {
                Address: u,
                BN: c,
                bytesToBase64: h
            } = r("1afa");
            class l extends n {
                constructor(t, e) {
                    e.wc = 0, e.code = e.code || i.oneFromBocsuper(t, e)
                }
                createDataCell() {
                    const t = new i;
                    return t.bits.writeCoins(0), t.bits.writeAddress(this.options.adminAddress), t.refs[0] = s(this.options.jettonContentUri), t.refs[1] = i.oneFromBoc(this.options.jettonWalletCodeHex), t
                }
                createMintBody(t) {
                    const e = new i;
                    e.bits.writeUint(21, 32), e.bits.writeUint(t.queryId || 0, 64), e.bits.writeAddress(t.destination), e.bits.writeCoins(t.amount);
                    const r = new i;
                    return r.bits.writeUint(395134233, 32), r.bits.writeUint(t.queryId || 0, 64), r.bits.writeCoins(t.jettonAmount), r.bits.writeAddress(null), r.bits.writeAddress(null), r.bits.writeCoins(new c(0)), r.bits.writeBit(!1), e.refs[0] = r, e
                }
                createChangeAdminBody(t) {
                    if (void 0 === t.newAdminAddress) throw new Error("Specify newAdminAddress");
                    const e = new i;
                    return e.bits.writeUint(3, 32), e.bits.writeUint(t.queryId || 0, 64), e.bits.writeAddress(t.newAdminAddress), e
                }
                createEditContentBody(t) {
                    const e = new i;
                    return e.bits.writeUint(4, 32), e.bits.writeUint(t.queryId || 0, 64), e.refs[0] = s(t.jettonContentUri), e
                }
                async getJettonData() {
                    const t = await this.getAddress(),
                        e = await this.provider.call2(t.toString(), "get_jetton_data"),
                        r = e[0],
                        n = -1 === e[1].toNumber(),
                        i = a(e[2]),
                        s = e[3];
                    let u = null;
                    try {
                        u = o(s)
                    } catch (h) {}
                    const c = e[4];
                    return {
                        totalSupply: r,
                        isMutable: n,
                        adminAddress: i,
                        jettonContentCell: s,
                        jettonContentUri: u,
                        jettonWalletCode: c
                    }
                }
                async getJettonWalletAddress(t) {
                    const e = await this.getAddress(),
                        r = new i;
                    r.bits.writeAddress(t);
                    const n = await this.provider.call2(e.toString(), "get_wallet_address", [
                        ["tvm.Slice", h(await r.toBoc(!1))]
                    ]);
                    return a(n)
                }
            }
            t.exports = {
                JettonMinter: l
            }
        },
        ec84: function(t, e, r) {
            "use strict";
            var n = r("1845"),
                i = r("117b"),
                s = r("9e12"),
                o = r("f0a4"),
                a = r("380f4"),
                u = r("aff3"),
                c = r("d8c5"),
                h = r("55b8"),
                l = r("ad92"),
                d = r("4b6c");
            t.exports = function(t) {
                return new Promise((function(e, r) {
                    var f, p = t.data,
                        g = t.headers,
                        v = t.responseType;

                    function m() {
                        t.cancelToken && t.cancelToken.unsubscribe(f), t.signal && t.signal.removeEventListener("abort", f)
                    }
                    n.isFormData(p) && delete g["Content-Type"];
                    var y = new XMLHttpRequest;
                    if (t.auth) {
                        var w = t.auth.username || "",
                            b = t.auth.password ? unescape(encodeURIComponent(t.auth.password)) : "";
                        g.Authorization = "Basic " + btoa(w + ":" + b)
                    }
                    var C = a(t.baseURL, t.url);

                    function A() {
                        if (y) {
                            var n = "getAllResponseHeaders" in y ? u(y.getAllResponseHeaders()) : null,
                                s = v && "text" !== v && "json" !== v ? y.response : y.responseText,
                                o = {
                                    data: s,
                                    status: y.status,
                                    statusText: y.statusText,
                                    headers: n,
                                    config: t,
                                    request: y
                                };
                            i((function(t) {
                                e(t), m()
                            }), (function(t) {
                                r(t), m()
                            }), o), y = null
                        }
                    }
                    if (y.open(t.method.toUpperCase(), o(C, t.params, t.paramsSerializer), !0), y.timeout = t.timeout, "onloadend" in y ? y.onloadend = A : y.onreadystatechange = function() {
                            y && 4 === y.readyState && (0 !== y.status || y.responseURL && 0 === y.responseURL.indexOf("file:")) && setTimeout(A)
                        }, y.onabort = function() {
                            y && (r(h("Request aborted", t, "ECONNABORTED", y)), y = null)
                        }, y.onerror = function() {
                            r(h("Network Error", t, null, y)), y = null
                        }, y.ontimeout = function() {
                            var e = t.timeout ? "timeout of " + t.timeout + "ms exceeded" : "timeout exceeded",
                                n = t.transitional || l.transitional;
                            t.timeoutErrorMessage && (e = t.timeoutErrorMessage), r(h(e, t, n.clarifyTimeoutError ? "ETIMEDOUT" : "ECONNABORTED", y)), y = null
                        }, n.isStandardBrowserEnv()) {
                        var B = (t.withCredentials || c(C)) && t.xsrfCookieName ? s.read(t.xsrfCookieName) : void 0;
                        B && (g[t.xsrfHeaderName] = B)
                    }
                    "setRequestHeader" in y && n.forEach(g, (function(t, e) {
                        "undefined" === typeof p && "content-type" === e.toLowerCase() ? delete g[e] : y.setRequestHeader(e, t)
                    })), n.isUndefined(t.withCredentials) || (y.withCredentials = !!t.withCredentials), v && "json" !== v && (y.responseType = t.responseType), "function" === typeof t.onDownloadProgress && y.addEventListener("progress", t.onDownloadProgress), "function" === typeof t.onUploadProgress && y.upload && y.upload.addEventListener("progress", t.onUploadProgress), (t.cancelToken || t.signal) && (f = function(t) {
                        y && (r(!t || t && t.type ? new d("canceled") : t), y.abort(), y = null)
                    }, t.cancelToken && t.cancelToken.subscribe(f), t.signal && (t.signal.aborted ? f() : t.signal.addEventListener("abort", f))), p || (p = null), y.send(p)
                }))
            }
        },
        ef5a: function(t, e, r) {
            const {
                BN: n
            } = r("1afa");

            function i(t) {
                t.loadBits(512);
                const e = t.loadUint(32).toNumber();
                if (698983191 !== e) throw new Error("invalid walletId");
                const r = t.loadUint(32).toNumber(),
                    i = t.loadUint(32).toNumber(),
                    s = t.loadUint(8).toNumber();
                if (3 !== s) throw new Error("invalid sendMode");
                let o = t.loadRef();
                if (o.loadBit()) throw Error("invalid internal header");
                if (!o.loadBit()) throw Error("invalid ihrDisabled");
                const a = o.loadBit();
                if (o.loadBit()) throw Error("invalid bounced");
                const u = o.loadAddress();
                if (null !== u) throw Error("invalid externalSourceAddress");
                const c = o.loadAddress(),
                    h = o.loadCoins();
                if (o.loadBit()) throw Error("invalid currencyCollection");
                const l = o.loadCoins();
                if (!l.eq(new n(0))) throw new Error("invalid ihrFees");
                const d = o.loadCoins();
                if (!d.eq(new n(0))) throw new Error("invalid fwdFees");
                const f = o.loadUint(64);
                if (!f.eq(new n(0))) throw new Error("invalid createdLt");
                const p = o.loadUint(32);
                if (!p.eq(new n(0))) throw new Error("invalid createdAt");
                o.loadBit() && o.loadRef();
                let g = null;
                if (o.getFreeBits() > 0 && (o.loadBit() && (o = o.loadRef()), o.getFreeBits() > 32)) {
                    const t = o.loadUint(32),
                        e = o.loadBits(o.getFreeBits());
                    g = t.eq(new n(0)) ? (new TextDecoder).decode(e) : ""
                }
                return {
                    toAddress: c,
                    value: h,
                    bounce: a,
                    seqno: i,
                    expireAt: r,
                    payload: g
                }
            }

            function s(t) {
                const e = t.beginParse();
                if (2 !== e.loadUint(2).toNumber()) throw Error("invalid header");
                const r = e.loadAddress();
                if (null !== r) throw Error("invalid externalSourceAddress");
                const s = e.loadAddress(),
                    o = e.loadCoins();
                if (!o.eq(new n(0))) throw new Error("invalid externalImportFee");
                e.loadBit() && e.loadBit() && e.loadRef();
                const a = e.loadBit() ? e.loadRef() : e;
                return {
                    fromAddress: s,
                    ...i(a)
                }
            }
            t.exports = {
                parseWalletV3TransferQuery: s,
                parseWalletV3TransferBody: i
            }
        },
        ef8b: function(t, e, r) {
            (function(e) {
                const n = r("1a2a"),
                    i = e.alloc(1, 1),
                    s = e.alloc(1, 0);

                function o(t, r, o, a, u) {
                    let c = e.alloc(32, 0),
                        h = e.alloc(32, 1);
                    c = n("sha256", c).update(h).update(s).update(r).update(t).update(u || "").digest(), h = n("sha256", c).update(h).digest(), c = n("sha256", c).update(h).update(i).update(r).update(t).update(u || "").digest(), h = n("sha256", c).update(h).digest(), h = n("sha256", c).update(h).digest();
                    let l = h;
                    while (!a(l) || !o(l)) c = n("sha256", c).update(h).update(s).digest(), h = n("sha256", c).update(h).digest(), h = n("sha256", c).update(h).digest(), l = h;
                    return l
                }
                t.exports = o
            }).call(this, r("b639").Buffer)
        },
        f0a4: function(t, e, r) {
            "use strict";
            var n = r("1845");

            function i(t) {
                return encodeURIComponent(t).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]")
            }
            t.exports = function(t, e, r) {
                if (!e) return t;
                var s;
                if (r) s = r(e);
                else if (n.isURLSearchParams(e)) s = e.toString();
                else {
                    var o = [];
                    n.forEach(e, (function(t, e) {
                        null !== t && "undefined" !== typeof t && (n.isArray(t) ? e += "[]" : t = [t], n.forEach(t, (function(t) {
                            n.isDate(t) ? t = t.toISOString() : n.isObject(t) && (t = JSON.stringify(t)), o.push(i(e) + "=" + i(t))
                        })))
                    })), s = o.join("&")
                }
                if (s) {
                    var a = t.indexOf("#"); - 1 !== a && (t = t.slice(0, a)), t += (-1 === t.indexOf("?") ? "?" : "&") + s
                }
                return t
            }
        },
        f138: function(t, e, r) {
            var n = r("11ce"),
                i = r("b639"),
                s = {
                    eth: "1",
                    jingtum: "2",
                    moac: "3",
                    eos: "4",
                    enu: "5",
                    bos: "6",
                    iost: "7",
                    cosmos: "8",
                    binance: "9",
                    tron: "10",
                    trx: "10",
                    btc: "11",
                    bsc: "12",
                    dot: "13",
                    kusama: "14",
                    heco: "15",
                    okexchain: "16",
                    oktest: "17",
                    matic: "18",
                    polygon: "18",
                    hsc: "19",
                    oec: "20",
                    subgame: "21",
                    klaytn: "22",
                    avax: "23",
                    arb: "24",
                    ftm: "25",
                    op: "26",
                    solana: "27",
                    gnosis: "28",
                    wax: "29",
                    moonbeam: "31",
                    aurora: "32",
                    harmony: "33",
                    kcc: "35",
                    cfxevm: "36",
                    planton: "37",
                    bttc: "38",
                    gt: "39",
                    halo: "40",
                    etc: "41",
                    arbnova: "42"
                },
                o = {
                    1: "eth",
                    2: "jingtum",
                    3: "moac",
                    4: "eos",
                    5: "enu",
                    6: "bos",
                    7: "iost",
                    8: "cosmos",
                    9: "binance",
                    10: "tron",
                    11: "btc",
                    12: "bsc",
                    13: "dot",
                    14: "kusama",
                    15: "heco",
                    16: "okexchain",
                    17: "oktest",
                    18: "matic",
                    19: "hsc",
                    20: "oec",
                    21: "subgame",
                    22: "klaytn",
                    23: "avax",
                    24: "arb",
                    25: "ftm",
                    26: "op",
                    27: "solana",
                    28: "gnosis",
                    29: "wax",
                    31: "moonbeam",
                    32: "aurora",
                    33: "harmony",
                    35: "kcc",
                    36: "cfxevm",
                    37: "planton",
                    38: "bttc",
                    39: "gt",
                    40: "halo",
                    41: "etc",
                    42: "arbnova"
                },
                a = function(t) {
                    var e = /^\s+|\s+$/g;
                    return t += "", t = t.replace(e, "").toLowerCase(), s[t] || t
                },
                u = function() {
                    var t = parseInt(1e5 * Math.random());
                    return "tp_callback_" + (new Date).getTime() + t
                },
                c = function(t, e, r) {
                    window.TPJSBrigeClient && window.TPJSBrigeClient.callMessage(t, e, r), window.webkit && window.webkit.messageHandlers[t].postMessage({
                        body: {
                            params: e,
                            callback: r
                        }
                    })
                },
                h = {
                    version: "3.7.5",
                    isConnected: function() {
                        return !!(window.TPJSBrigeClient || window.webkit && window.webkit.messageHandlers && window.webkit.messageHandlers.getDeviceId)
                    },
                    invokeQRScanner: function() {
                        return new n((function(t, e) {
                            var r = u();
                            window[r] = function(r) {
                                r = r.replace(/\r/gi, "").replace(/\n/gi, "");
                                try {
                                    var n = JSON.parse(r),
                                        i = n.qrResult || "";
                                    t(i)
                                } catch (s) {
                                    e(s)
                                }
                            }, c("invokeQRScanner", "", r)
                        }))
                    },
                    shareNewsToSNS: function(t) {
                        var e = t.title || "TokenPocket 你的通用数字钱包",
                            r = t.desc || "",
                            n = t.url || "https://www.mytokenpocket.vip/",
                            i = t.previewImage || "",
                            s = {
                                title: e,
                                description: r,
                                url: n,
                                previewImage: i
                            };
                        c("shareNewsToSNS", JSON.stringify(s), "")
                    },
                    getAppInfo: function() {
                        return new n((function(t, e) {
                            var r = u();
                            window[r] = function(r) {
                                r = r.replace(/\r/gi, "").replace(/\n/gi, "");
                                try {
                                    var n = JSON.parse(r);
                                    t(n)
                                } catch (i) {
                                    e(i)
                                }
                            }, c("getAppInfo", "", r)
                        }))
                    },
                    getDeviceId: function() {
                        return new n((function(t, e) {
                            var r = u();
                            window[r] = function(r) {
                                r = r.replace(/\r/gi, "").replace(/\n/gi, "");
                                try {
                                    var n = JSON.parse(r);
                                    n.device_id && (n.data = n.device_id), t(n)
                                } catch (i) {
                                    e(i)
                                }
                            }, c("getDeviceId", "", r)
                        }))
                    },
                    getWalletList: function(t) {
                        if (t = a(t), !t) throw new Error("type invalid");
                        var e = {
                            type: t
                        };
                        return new n((function(t, r) {
                            var n = u();
                            window[n] = function(e) {
                                e = e.replace(/\r/gi, "").replace(/\n/gi, "");
                                try {
                                    var n = JSON.parse(e);
                                    t(n)
                                } catch (i) {
                                    r(i)
                                }
                            }, c("getWalletList", JSON.stringify(e), n)
                        }))
                    },
                    getWallets: function() {
                        return new n((function(t, e) {
                            var r = u();
                            window[r] = function(r) {
                                r = r.replace(/\r/gi, "").replace(/\n/gi, "");
                                try {
                                    var n = JSON.parse(r);
                                    if (n.data && n.data.length)
                                        for (var i = 0; i < n.data.length; i++) n.data[i].blockchain = o[n.data[i].blockchain_id + ""] || n.data[i].blockchain_id;
                                    t(n)
                                } catch (s) {
                                    e(s)
                                }
                            }, c("getWallets", "", r)
                        }))
                    },
                    getCurrentWallet: function() {
                        return new n((function(t, e) {
                            var r = u();
                            window[r] = function(r) {
                                r = r.replace(/\r/gi, "").replace(/\n/gi, "");
                                try {
                                    var n = JSON.parse(r);
                                    n.rawTransaction && (n.data = n.rawTransaction), n.data && n.data.blockchain_id && (n.data.blockchain = o[n.data.blockchain_id + ""] || n.data.blockchain_id), t(n)
                                } catch (i) {
                                    e(i)
                                }
                            }, c("getCurrentWallet", "", r)
                        }))
                    },
                    sign: function(t) {
                        return new n((function(e, r) {
                            var n = u();
                            window[n] = function(t) {
                                t = t.replace(/\r/gi, "").replace(/\n/gi, "");
                                try {
                                    var n = JSON.parse(t);
                                    e(n)
                                } catch (i) {
                                    r(i)
                                }
                            }, c("sign", JSON.stringify(t), n)
                        }))
                    },
                    back: function() {
                        c("back", "", "")
                    },
                    fullScreen: function(t) {
                        c("fullScreen", JSON.stringify(t), "")
                    },
                    setMenubar: function(t) {
                        c("setMenubar", JSON.stringify(t), "")
                    },
                    close: function() {
                        c("close", "", "")
                    },
                    importWallet: function(t) {
                        if (t = a(t), !t) throw new Error("type invalid");
                        var e = {
                            blockChainId: t
                        };
                        c("importWallet", JSON.stringify(e), "")
                    },
                    startChat: function(t) {
                        t.blockchain && (t.blockChainId = a(t.blockchain), delete t.blockchain), c("startChat", JSON.stringify(t), "")
                    },
                    getNodeUrl: function(t) {
                        return t.blockchain && (t.blockChainId = a(t.blockchain), delete t.blockchain), new n((function(e, r) {
                            var n = u();
                            window[n] = function(t) {
                                t = t.replace(/\r/gi, "").replace(/\n/gi, "");
                                try {
                                    var n = JSON.parse(t);
                                    n.data && n.data.blockChainId && (n.blockchain = o[n.data.blockChainId + ""] || n.data.blockChainId), e(n)
                                } catch (i) {
                                    r(i)
                                }
                            }, c("getNodeUrl", JSON.stringify(t), n)
                        }))
                    },
                    saveImage: function(t) {
                        c("saveImage", JSON.stringify(t), "")
                    },
                    rollHorizontal: function(t) {
                        c("rollHorizontal", JSON.stringify(t), "")
                    },
                    popGestureRecognizerEnable: function(t) {
                        c("popGestureRecognizerEnable", JSON.stringify(t), "")
                    },
                    forwardNavigationGesturesEnable: function(t) {
                        c("forwardNavigationGesturesEnable", JSON.stringify(t), "")
                    },
                    isDarkMode: function() {
                        return new n((function(t, e) {
                            var r = u();
                            window[r] = function(r) {
                                r = r.replace(/\r/gi, "").replace(/\n/gi, "");
                                try {
                                    var n = JSON.parse(r);
                                    t(n)
                                } catch (i) {
                                    e(i)
                                }
                            }, c("isDarkMode", "", r)
                        }))
                    },
                    eosTokenTransfer: function(t) {
                        if (!t.from || !t.to || !t.amount || !t.contract || !t.precision) throw new Error('missing params; "from", "to", "amount", "contract", "precision" is required ');
                        return t.amount = "" + t.amount, new n((function(e, r) {
                            var n = u();
                            window[n] = function(t) {
                                t = t.replace(/\r/gi, "").replace(/\n/gi, "");
                                try {
                                    var n = JSON.parse(t);
                                    n.result && !n.data.transactionId && (n.data = {
                                        transactionId: n.data
                                    }), e(n)
                                } catch (i) {
                                    r(i)
                                }
                            }, c("eosTokenTransfer", JSON.stringify(t), n)
                        }))
                    },
                    pushEosAction: function(t) {
                        return new n((function(e, r) {
                            var n = u();
                            window[n] = function(t) {
                                t = t.replace(/\r/gi, "").replace(/\n/gi, "");
                                try {
                                    var n = JSON.parse(t);
                                    n.result && !n.data.transactionId && (n.data = {
                                        transactionId: n.data
                                    }), e(n)
                                } catch (i) {
                                    r(i)
                                }
                            }, c("pushEosAction", JSON.stringify(t), n)
                        }))
                    },
                    getEosBalance: function(t) {
                        if (!t.account || !t.contract || !t.symbol) throw new Error('missing params; "account", "contract", "symbol" is required ');
                        return new n((function(e, r) {
                            var n = u();
                            window[n] = function(t) {
                                t = t.replace(/\r/gi, "").replace(/\n/gi, "");
                                try {
                                    var n = JSON.parse(t);
                                    e(n)
                                } catch (i) {
                                    r(i)
                                }
                            }, c("getEosBalance", JSON.stringify(t), n)
                        }))
                    },
                    getTableRows: function(t) {
                        return new n((function(e, r) {
                            var n = u();
                            window[n] = function(t) {
                                t = t.replace(/\r/gi, "").replace(/\n/gi, "");
                                try {
                                    var n = JSON.parse(t);
                                    e(n)
                                } catch (i) {
                                    r(i)
                                }
                            }, c("getTableRows", JSON.stringify(t), n)
                        }))
                    },
                    getEosTableRows: function(t) {
                        return new n((function(e, r) {
                            var n = u();
                            window[n] = function(t) {
                                t = t.replace(/\r/gi, "").replace(/\n/gi, "");
                                try {
                                    var n = JSON.parse(t);
                                    e(n)
                                } catch (i) {
                                    r(i)
                                }
                            }, c("getEosTableRows", JSON.stringify(t), n)
                        }))
                    },
                    getEosAccountInfo: function(t) {
                        if (!t.account) throw new Error('missing params; "account" is required ');
                        return new n((function(e, r) {
                            var n = u();
                            window[n] = function(t) {
                                t = t.replace(/\r/gi, "").replace(/\n/gi, "");
                                try {
                                    var n = JSON.parse(t);
                                    e(n)
                                } catch (i) {
                                    r(i)
                                }
                            }, c("getEosAccountInfo", JSON.stringify(t), n)
                        }))
                    },
                    getEosTransactionRecord: function(t) {
                        if (!t.account) throw new Error('missing params; "account" is required ');
                        return t.count = t.count ? +t.count : 10, t.start = t.start ? +t.start : 0, new n((function(e, r) {
                            var n = u();
                            window[n] = function(t) {
                                t = t.replace(/\r/gi, "").replace(/\n/gi, "");
                                try {
                                    var n = JSON.parse(t);
                                    e(n)
                                } catch (i) {
                                    r(i)
                                }
                            }, c("getEosTransactionRecord", JSON.stringify(t), n)
                        }))
                    },
                    eosAuthSign: function(t) {
                        return new n((function(e, r) {
                            var n = u();
                            window[n] = function(t) {
                                t = t.replace(/\r/gi, "").replace(/\n/gi, "");
                                try {
                                    var n = JSON.parse(t);
                                    e(n)
                                } catch (i) {
                                    r(i)
                                }
                            }, c("eosAuthSign", JSON.stringify(t), n)
                        }))
                    },
                    enuTokenTransfer: function(t) {
                        if (!t.from || !t.to || !t.amount || !t.tokenName || !t.contract || !t.precision) throw new Error('missing params; "from", "to", "amount", "tokenName","contract", "precision" is required ');
                        return t.amount = "" + t.amount, new n((function(e, r) {
                            var n = u();
                            window[n] = function(t) {
                                t = t.replace(/\r/gi, "").replace(/\n/gi, "");
                                try {
                                    var n = JSON.parse(t);
                                    n.result && !n.data.transactionId && (n.data = {
                                        transactionId: n.data
                                    }), e(n)
                                } catch (i) {
                                    r(i)
                                }
                            }, c("enuTokenTransfer", JSON.stringify(t), n)
                        }))
                    },
                    pushEnuAction: function(t) {
                        return new n((function(e, r) {
                            var n = u();
                            window[n] = function(t) {
                                t = t.replace(/\r/gi, "").replace(/\n/gi, "");
                                try {
                                    var n = JSON.parse(t);
                                    n.result && !n.data.transactionId && (n.data = {
                                        transactionId: n.data
                                    }), e(n)
                                } catch (i) {
                                    r(i)
                                }
                            }, c("pushEnuAction", JSON.stringify(t), n)
                        }))
                    },
                    getEnuBalance: function(t) {
                        if (!t.account || !t.contract || !t.symbol) throw new Error('missing params; "account", "contract", "symbol" is required ');
                        return new n((function(e, r) {
                            var n = u();
                            window[n] = function(t) {
                                t = t.replace(/\r/gi, "").replace(/\n/gi, "");
                                try {
                                    var n = JSON.parse(t);
                                    e(n)
                                } catch (i) {
                                    r(i)
                                }
                            }, c("getEnuBalance", JSON.stringify(t), n)
                        }))
                    },
                    getEnuTableRows: function(t) {
                        return new n((function(e, r) {
                            var n = u();
                            window[n] = function(t) {
                                t = t.replace(/\r/gi, "").replace(/\n/gi, "");
                                try {
                                    var n = JSON.parse(t);
                                    e(n)
                                } catch (i) {
                                    r(i)
                                }
                            }, c("getEnuTableRows", JSON.stringify(t), n)
                        }))
                    },
                    getEnuAccountInfo: function(t) {
                        if (!t.account) throw new Error('missing params; "account" is required ');
                        return new n((function(e, r) {
                            var n = u();
                            window[n] = function(t) {
                                t = t.replace(/\r/gi, "").replace(/\n/gi, "");
                                try {
                                    var n = JSON.parse(t);
                                    e(n)
                                } catch (i) {
                                    r(i)
                                }
                            }, c("getEnuAccountInfo", JSON.stringify(t), n)
                        }))
                    },
                    getEnuTransactionRecord: function(t) {
                        if (!t.account) throw new Error('missing params; "account" is required ');
                        return t.count = t.count ? +t.count : 10, t.start = t.start ? +t.start : 0, new n((function(e, r) {
                            var n = u();
                            window[n] = function(t) {
                                t = t.replace(/\r/gi, "").replace(/\n/gi, "");
                                try {
                                    var n = JSON.parse(t);
                                    e(n)
                                } catch (i) {
                                    r(i)
                                }
                            }, c("getEnuTransactionRecord", JSON.stringify(t), n)
                        }))
                    },
                    pushMoacTransaction: function(t) {
                        return new n((function(e, r) {
                            var n = u();
                            window[n] = function(t) {
                                t = t.replace(/\r/gi, "").replace(/\n/gi, "");
                                try {
                                    var n = JSON.parse(t);
                                    e(n)
                                } catch (i) {
                                    r(i)
                                }
                            }, c("pushMoacTransaction", JSON.stringify(t), n)
                        }))
                    },
                    moacTokenTransfer: function(t) {
                        if (!t.from || !t.to || !t.amount || !t.gasLimit || !t.tokenName) throw new Error('missing params; "from", "to", "amount", "gasLimit", "tokenName" is required ');
                        if (t.contract && !t.decimal) throw new Error('missing params; "decimal" is required ');
                        return new n((function(e, r) {
                            var n = u();
                            window[n] = function(t) {
                                t = t.replace(/\r/gi, "").replace(/\n/gi, "");
                                try {
                                    var n = JSON.parse(t);
                                    e(n)
                                } catch (i) {
                                    r(i)
                                }
                            }, c("moacTokenTransfer", JSON.stringify(t), n)
                        }))
                    },
                    sendMoacTransaction: function(t) {
                        return new n((function(e, r) {
                            var n = u();
                            window[n] = function(t) {
                                t = t.replace(/\r/gi, "").replace(/\n/gi, "");
                                try {
                                    var n = JSON.parse(t);
                                    e(n)
                                } catch (i) {
                                    r(i)
                                }
                            }, c("sendMoacTransaction", JSON.stringify(t), n)
                        }))
                    },
                    sendEthTransaction: function(t) {
                        return new n((function(e, r) {
                            var n = u();
                            window[n] = function(t) {
                                t = t.replace(/\r/gi, "").replace(/\n/gi, "");
                                try {
                                    var n = JSON.parse(t);
                                    e(n)
                                } catch (i) {
                                    r(i)
                                }
                            }, c("sendEthTransaction", JSON.stringify(t), n)
                        }))
                    },
                    signMoacTransaction: function(t) {
                        return new n((function(e, r) {
                            var n = u();
                            window[n] = function(t) {
                                t = t.replace(/\r/gi, "").replace(/\n/gi, "");
                                try {
                                    var n = JSON.parse(t);
                                    e(n)
                                } catch (i) {
                                    r(i)
                                }
                            }, c("signMoacTransaction", JSON.stringify(t), n)
                        }))
                    },
                    signEthTransaction: function(t) {
                        return new n((function(e, r) {
                            var n = u();
                            window[n] = function(t) {
                                t = t.replace(/\r/gi, "").replace(/\n/gi, "");
                                try {
                                    var n = JSON.parse(t);
                                    e(n)
                                } catch (i) {
                                    r(i)
                                }
                            }, c("signEthTransaction", JSON.stringify(t), n)
                        }))
                    },
                    signCosmosTransaction: function(t) {
                        return new n((function(e, r) {
                            var n = u();
                            window[n] = function(t) {
                                t = t.replace(/\r/gi, "").replace(/\n/gi, "");
                                try {
                                    var n = JSON.parse(t);
                                    e(n)
                                } catch (i) {
                                    r(i)
                                }
                            }, c("signCosmosTransaction", JSON.stringify(t), n)
                        }))
                    },
                    cosmosArbitrarySignature: function(t, e) {
                        var r = {
                            address: t,
                            data: e
                        };
                        return new n((function(t, e) {
                            var n = u();
                            window[n] = function(r) {
                                r = r.replace(/\r/gi, "").replace(/\n/gi, "");
                                try {
                                    var n = JSON.parse(r);
                                    t(n)
                                } catch (i) {
                                    e(i)
                                }
                            }, c("cosmosArbitrarySignature", JSON.stringify(r), n)
                        }))
                    },
                    signJingtumTransaction: function(t) {
                        return new n((function(e, r) {
                            var n = u();
                            window[n] = function(t) {
                                t = t.replace(/\r/gi, "").replace(/\n/gi, "");
                                try {
                                    var n = JSON.parse(t);
                                    e(n)
                                } catch (i) {
                                    r(i)
                                }
                            }, c("signJingtumTransaction", JSON.stringify(t), n)
                        }))
                    },
                    signOkexchainTransaction: function(t, e) {
                        return new n((function(r, n) {
                            var s = u();
                            window[s] = function(t) {
                                t = t.replace(/\r/gi, "").replace(/\n/gi, "");
                                try {
                                    var e = JSON.parse(t);
                                    e.result && e.data && e.data.signatures && es.data.signatures.forEach((function(t) {
                                        t.signature = t.signature && i.from(t.signature), t.pub_key.value = t.pub_key.value && i.from(t.pub_key.value)
                                    })), r(e)
                                } catch (s) {
                                    n(s)
                                }
                            };
                            var o = {
                                tx: t,
                                from: e
                            };
                            c("signOkexchainTransaction", JSON.stringify(o), s)
                        }))
                    },
                    getCurrentBalance: function() {
                        return new n((function(t, e) {
                            var r = u();
                            window[r] = function(r) {
                                r = r.replace(/\r/gi, "").replace(/\n/gi, "");
                                try {
                                    var n = JSON.parse(r);
                                    t(n)
                                } catch (i) {
                                    e(i)
                                }
                            }, c("getCurrentBalance", "", r)
                        }))
                    },
                    btcTokenTransfer: function(t) {
                        if (!t.from || !t.to || !t.amount) throw new Error('missing params; "from", "to", "amount" is required ');
                        return new n((function(e, r) {
                            var n = u();
                            window[n] = function(t) {
                                t = t.replace(/\r/gi, "").replace(/\n/gi, "");
                                try {
                                    var n = JSON.parse(t);
                                    e(n)
                                } catch (i) {
                                    r(i)
                                }
                            }, c("btcTokenTransfer", JSON.stringify(t), n)
                        }))
                    },
                    usdtTokenTransfer: function(t) {
                        if (!t.from || !t.to || !t.amount) throw new Error('missing params; "from", "to", "amount" is required ');
                        return new n((function(e, r) {
                            var n = u();
                            window[n] = function(t) {
                                t = t.replace(/\r/gi, "").replace(/\n/gi, "");
                                try {
                                    var n = JSON.parse(t);
                                    e(n)
                                } catch (i) {
                                    r(i)
                                }
                            }, c("usdtTokenTransfer", JSON.stringify(t), n)
                        }))
                    },
                    getUsdtAddress: function() {
                        return new n((function(t, e) {
                            var r = u();
                            window[r] = function(r) {
                                r = r.replace(/\r/gi, "").replace(/\n/gi, "");
                                try {
                                    var n = JSON.parse(r);
                                    t(n)
                                } catch (i) {
                                    e(i)
                                }
                            }, c("getUsdtAddress", "", r)
                        }))
                    },
                    getWallet: function(t) {
                        return t.walletTypes && t.walletTypes.length ? t.walletTypes = t.walletTypes.map((function(t) {
                            return s[t.toLowerCase()] || t
                        })) : t.walletTypes = [], void 0 === t.switch && (t.switch = !0), new n((function(e, r) {
                            var n = u();
                            window[n] = function(t) {
                                t = t.replace(/\r/gi, "").replace(/\n/gi, "");
                                try {
                                    var n = JSON.parse(t);
                                    n.data && n.data.blockchain_id && (n.data.blockchain = o[n.data.blockchain_id + ""] || n.data.blockchain_id), e(n)
                                } catch (i) {
                                    r(i)
                                }
                            }, c("getWallet", JSON.stringify(t), n)
                        }))
                    },
                    addDAppToDiscover: function(t) {
                        return new n((function(e, r) {
                            var n = u();
                            window[n] = function(t) {
                                t = t.replace(/\r/gi, "").replace(/\n/gi, "");
                                try {
                                    var n = JSON.parse(t);
                                    e(n)
                                } catch (i) {
                                    r(i)
                                }
                            }, c("addDAppToDiscover", JSON.stringify(t), n)
                        }))
                    }
                };
            t.exports = h
        },
        f4b0: function(t, e, r) {
            "use strict";
            var n = r("1845");
            t.exports = function(t, e) {
                n.forEach(t, (function(r, n) {
                    n !== e && n.toUpperCase() === e.toUpperCase() && (t[e] = r, delete t[n])
                }))
            }
        },
        f573: function(t, e, r) {
            r("5cc6");
            var n = r("9523");
            const {
                Contract: i
            } = r("38a0"), {
                Cell: s
            } = r("41b0"), {
                nacl: o,
                hexToBytes: a,
                BN: u
            } = r("1afa"), {
                parseAddress: c
            } = r("cdcf"), {
                writePublicKey: h,
                writeSignature: l,
                createSignatureCell: d,
                tag_init: f,
                tag_cooperative_close: p,
                tag_cooperative_commit: g,
                tag_start_uncooperative_close: v,
                tag_challenge_state: m,
                tag_settle_conditionals: y,
                tag_state: w,
                op_top_up_balance: b,
                op_init_channel: C,
                op_cooperative_close: A,
                op_cooperative_commit: B,
                op_start_uncooperative_close: F,
                op_challenge_quarantined_state: E,
                op_settle_conditionals: x,
                op_finish_uncooperative_close: _,
                op_channel_closed: k,
                createTopUpBalance: M,
                createInitChannelBody: D,
                createCooperativeCloseChannelBody: S,
                createCooperativeCommitBody: I,
                createConditionalPayment: N,
                createSemiChannelBody: T,
                createSemiChannelState: P,
                createSignedSemiChannelState: O,
                createStartUncooperativeCloseBody: U,
                createChallengeQuarantinedStateBody: j,
                createSettleConditionalsBody: W,
                createFinishUncooperativeClose: R,
                createOneSignature: L,
                createTwoSignature: q
            } = r("9277"), K = "B5EE9C72410230010007FB000114FF00F4A413F4BCF2C80B0102012002030201480405000AF26C21F0190202CB06070201202E2F020120080902012016170201200A0B0201200C0D0009D3610F80CC001D6B5007434C7FE8034C7CC1BC0FE19E0201580E0F0201201011002D3E11DBC4BE11DBC43232C7FE11DBC47E80B2C7F2407320008B083E1B7B51343480007E187E80007E18BE80007E18F4FFC07E1934FFC07E1974DFC07E19BC01887080A7F4C7C07E1A34C7C07E1A7D01007E1AB7807080E535007E1AF7BE1B2002012012130201201415008D3E13723E11BE117E113E10540132803E10BE80BE10FE8084F2FFC4B2FFF2DFFC02887080A7FE12BE127E121400F2C7C4B2C7FD0037807080E53E12C073253E1333C5B8B27B5520004D1C3C02FE106CFCB8193E803E800C3E1096283E18BE10C0683E18FE10BE10E8006EFCB819BC032000CF1D3C02FE106CFCB819348020C235C6083E4040E4BE1124BE117890CC3E443CB81974C7C060841A5B9A5D2EBCB81A3E118074DFD66EBCB81CBE803E800C3E1094882FBE10D4882FAC3CB819807E18BE18FE12F43E800C3E10BE10E80068006E7CB8199FFE187C0320004120843777222E9C20043232C15401B3C594013E808532DA84B2C7F2DFF2407EC02002012018190201D42B2C0201201A1B0201201E1F0201201C1D00E5473F00BD401D001D401D021F90102D31F01821043436D74BAF2E068F84601D37F59BAF2E072F844544355F910F8454330F910B0F2E065D33FD33F30F84822B9F84922B9B0F2E06C21F86820F869F84A6E915B8E19F84AD0D33FFA003171D721D33F305033BC02BCB1936DF86ADEE2F800F00C8006F3E12F43E800C7E903E900C3E09DBC41CBE10D62F24CC20C1B7BE10FE11963C03FE10BE11A04020BC03DC3E185C3E189C3E18DB7E1ABC032000B51D3C02F5007400750074087E4040B4C7C0608410DB1BDCEEBCB81A3E118074DFD66EBCB81CBE111510D57E443E1150CC3E442C3CB8197E80007E18BE80007E18F4CFF4CFCC3E1208AE7E1248AE6C3CB81B007E1A3E1A7E003C042001C1573F00BF84A6EF2E06AD2008308D71820F9012392F84492F845E24130F910F2E065D31F018210556E436CBAF2E068F84601D37F59BAF2E072D401D08308D71820F901F8444130F910F2E06501D430D08308D71820F901F8454130F910F2E06501820020120222301FED31F01821043685374BAF2E068F84601D37F59BAF2E072D33FFA00F404552003D200019AD401D0D33FFA00F40430937F206DE2303205D31F01821043685374BAF2E068F84601D37F59BAF2E072D33FFA00F404552003D200019AD401D0D33FFA00F40430937F206DE23032F8485280BEF8495250BEB0524BBE1AB0527ABE19210064B05215BE14B05248BE17B0F2E06970F82305C8CB3F5004FA0215F40015CB3F5004FA0212F400CB1F12CA00CA00C9F86AF00C01C31CFC02FE129BACFCB81AF48020C235C6083E4048E4BE1124BE1178904C3E443CB81974C7C0608410DA19D46EBCB81A3E118074DFD66EBCB81CB5007420C235C6083E407E11104C3E443CB81940750C3420C235C6083E407E11504C3E443CB81940602403F71CFC02FE129BACFCB81AF48020C235C6083E4048E4BE1124BE1178904C3E443CB81974C7C0608410DB10DBAEBCB81A3E118074DFD66EBCB81CBD010C3E12B434CFFE803D0134CFFE803D0134C7FE11DBC4148828083E08EE7CB81BBE11DBC4A83E08EF3CB81C34800C151D5A64D6D4C8F7A2B98E82A49B08B8C3816028292A01FCD31F01821043685374BAF2E068F84601D37F59BAF2E072D33FFA00F404552003D200019AD401D0D33FFA00F40430937F206DE2303205D31F01821043685374BAF2E068F84601D37F59BAF2E072D33FFA00F404552003D200019AD401D0D33FFA00F40430937F206DE230325339BE5381BEB0F8495250BEB0F8485290BEB02502FE5237BE16B05262BEB0F2E06927C20097F84918BEF2E0699137E222C20097F84813BEF2E0699132E2F84AD0D33FFA00F404D33FFA00F404D31FF8476F105220A0F823BCF2E06FD200D20030B3F2E073209C3537373A5274BC5263BC12B18E11323939395250BC5299BC18B14650134440E25319BAB3F2E06D9130E30D7F05C82627002496F8476F1114A098F8476F1117A00603E203003ECB3F5004FA0215F40012CB3F5004FA0213F400CB1F12CA00CA00C9F86AF00C00620A8020F4966FA5208E213050038020F4666FA1208E1001FA00ED1E15DA119450C3A00B9133E2923430E202926C21E2B31B000C3535075063140038C8CB3F5004FA0212F400CB3F5003FA0213F400CB1FCA00C9F86AF00C00D51D3C02FE129BACFCB81AFE12B434CFFE803D010C74CFFE803D010C74C7CC3E11DBC4283E11DBC4A83E08EE7CB81C7E003E10886808E87E18BE10D400E816287E18FE10F04026BE10BE10E83E189C3E18F7BE10B04026BE10FE10A83E18DC3E18F780693E1A293E1A7C042001F53B7EF4C7C8608419F1F4A06EA4CC7C037808608403818830AEA54C7C03B6CC780C882084155DD61FAEA54C3C0476CC780820841E6849BBEEA54C3C04B6CC7808208407C546B3EEA54C3C0576CC780820840223AA8CAEA54C3C05B6CC7808208419BDBC1A6EA54C3C05F6CC780C60840950CAA46EA53C0636CC78202D0008840FF2F00075BC7FE3A7805FC25E87D007D207D20184100D0CAF6A1EC7C217C21B7817C227C22B7817C237C23FC247C24B7817C2524C3B7818823881B22A021984008DBD0CABA7805FC20C8B870FC253748B8F07C256840206B90FD0018C020EB90FD0018B8EB90E98F987C23B7882908507C11DE491839707C23B788507C23B789507C11DE48B9F03A4331C4966";
            class H extends i {
                constructor(t, e) {
                    e.publicKeyA = e.isA ? e.myKeyPair.publicKey : e.hisPublicKey, e.publicKeyB = e.isA ? e.hisPublicKey : e.myKeyPair.publicKey, e.wc = e.wc || 0, e.code = e.code || s.oneFromBoc(K), super(t, e)
                }
                createDataCell() {
                    var t, e, r;
                    const n = new s;
                    n.bits.writeBit(0), n.bits.writeCoins(0), n.bits.writeCoins(0), h(n, this.options.publicKeyA), h(n, this.options.publicKeyB), n.bits.writeUint(this.options.channelId, 128);
                    const i = new s;
                    i.bits.writeUint((null === (t = this.options.closingConfig) || void 0 === t ? void 0 : t.quarantineDuration) || 0, 32), i.bits.writeCoins((null === (e = this.options.closingConfig) || void 0 === e ? void 0 : e.misbehaviorFine) || new u(0)), i.bits.writeUint((null === (r = this.options.closingConfig) || void 0 === r ? void 0 : r.conditionalCloseDuration) || 0, 32), n.refs[0] = i, n.bits.writeUint(0, 32), n.bits.writeUint(0, 32), n.bits.writeBit(!1);
                    const o = new s;
                    return o.bits.writeCoins(this.options.excessFee || new u(0)), o.bits.writeAddress(this.options.addressA), o.bits.writeAddress(this.options.addressB), n.refs[1] = o, n
                }
                async createOneSignature(t, e) {
                    const r = o.sign.detached(await e.hash(), this.options.myKeyPair.secretKey),
                        n = L({
                            op: t,
                            isA: this.options.isA,
                            signature: r,
                            cell: e
                        });
                    return {
                        cell: n,
                        signature: r
                    }
                }
                async createTwoSignature(t, e, r) {
                    const n = o.sign.detached(await r.hash(), this.options.myKeyPair.secretKey),
                        i = this.options.isA ? n : e,
                        s = this.options.isA ? e : n,
                        a = q({
                            op: t,
                            signatureA: i,
                            signatureB: s,
                            cell: r
                        });
                    return {
                        cell: a,
                        signature: n
                    }
                }
                async createTopUpBalance(t) {
                    return M(t)
                }
                async createInitChannel(t) {
                    return this.createOneSignature(C, D({ ...t,
                        channelId: this.options.channelId
                    }))
                }
                async createCooperativeCloseChannel(t) {
                    return t.hisSignature || (t.hisSignature = new Uint8Array(64)), this.createTwoSignature(A, t.hisSignature, S({ ...t,
                        channelId: this.options.channelId
                    }))
                }
                async createCooperativeCommit(t) {
                    return t.hisSignature || (t.hisSignature = new Uint8Array(64)), this.createTwoSignature(B, t.hisSignature, I({ ...t,
                        channelId: this.options.channelId
                    }))
                }
                async createSignedSemiChannelState(t) {
                    const e = P({
                            channelId: this.options.channelId,
                            semiChannelBody: T({
                                seqno: t.mySeqno,
                                sentCoins: t.mySentCoins,
                                conditionals: null
                            }),
                            counterpartySemiChannelBody: void 0 === t.hisSeqno ? null : T({
                                seqno: t.hisSeqno,
                                sentCoins: t.hisSentCoins,
                                conditionals: null
                            })
                        }),
                        r = o.sign.detached(await e.hash(), this.options.myKeyPair.secretKey),
                        n = O({
                            signature: r,
                            state: e
                        });
                    return {
                        cell: n,
                        signature: r
                    }
                }
                async signState(t) {
                    const e = this.options.isA ? t.seqnoA : t.seqnoB,
                        r = this.options.isA ? t.seqnoB : t.seqnoA,
                        n = this.options.initBalanceA.gt(t.balanceA) ? this.options.initBalanceA.sub(t.balanceA) : new u(0),
                        i = this.options.initBalanceB.gt(t.balanceB) ? this.options.initBalanceB.sub(t.balanceB) : new u(0),
                        s = this.options.isA ? n : i,
                        o = this.options.isA ? i : n,
                        {
                            cell: a,
                            signature: c
                        } = await this.createSignedSemiChannelState({
                            mySeqno: e,
                            mySentCoins: s,
                            hisSeqno: r,
                            hisSentCoins: o
                        });
                    return c
                }
                async verifyState(t, e) {
                    const r = this.options.isA ? t.seqnoB : t.seqnoA,
                        n = this.options.isA ? t.seqnoA : t.seqnoB,
                        i = this.options.initBalanceA.gt(t.balanceA) ? this.options.initBalanceA.sub(t.balanceA) : new u(0),
                        s = this.options.initBalanceB.gt(t.balanceB) ? this.options.initBalanceB.sub(t.balanceB) : new u(0),
                        a = this.options.isA ? s : i,
                        c = this.options.isA ? i : s,
                        h = P({
                            channelId: this.options.channelId,
                            semiChannelBody: T({
                                seqno: r,
                                sentCoins: a,
                                conditionals: null
                            }),
                            counterpartySemiChannelBody: void 0 === n ? null : T({
                                seqno: n,
                                sentCoins: c,
                                conditionals: null
                            })
                        }),
                        l = await h.hash();
                    return o.sign.detached.verify(l, e, this.options.isA ? this.options.publicKeyB : this.options.publicKeyA)
                }
                async signClose(t) {
                    const {
                        cell: e,
                        signature: r
                    } = await this.createCooperativeCloseChannel(t);
                    return r
                }
                async verifyClose(t, e) {
                    const r = await S({ ...t,
                            channelId: this.options.channelId
                        }),
                        n = await r.hash();
                    return o.sign.detached.verify(n, e, this.options.isA ? this.options.publicKeyB : this.options.publicKeyA)
                }
                async createStartUncooperativeClose(t) {
                    return this.createOneSignature(F, U({ ...t,
                        channelId: this.options.channelId
                    }))
                }
                async createChallengeQuarantinedState(t) {
                    return this.createOneSignature(E, j({ ...t,
                        channelId: this.options.channelId
                    }))
                }
                async createSettleConditionals(t) {
                    return this.createOneSignature(x, W({ ...t,
                        channelId: this.options.channelId
                    }))
                }
                async createFinishUncooperativeClose() {
                    return R()
                }
                async getChannelState() {
                    const t = await this.getAddress(),
                        e = await this.provider.call2(t.toString(), "get_channel_state", []);
                    return e.toNumber()
                }
                async getData() {
                    const t = t => {
                            let e = t.toString(16);
                            return e.length % 2 !== 0 && (e = "0" + e), a(e)
                        },
                        e = await this.getAddress(),
                        r = await this.provider.call2(e.toString(), "get_channel_data", []),
                        n = r[0].toNumber(),
                        i = r[1][0],
                        s = r[1][1],
                        o = t(r[2][0]),
                        u = t(r[2][1]),
                        h = r[3],
                        l = r[4][0].toNumber(),
                        d = r[4][1],
                        f = r[4][2].toNumber(),
                        p = r[5][0],
                        g = r[5][1],
                        v = r[6],
                        m = r[7][0],
                        y = c(r[7][1]),
                        w = c(r[7][2]);
                    return {
                        state: n,
                        balanceA: i,
                        balanceB: s,
                        publicKeyA: o,
                        publicKeyB: u,
                        channelId: h,
                        quarantineDuration: l,
                        misbehaviorFine: d,
                        conditionalCloseDuration: f,
                        seqnoA: p,
                        seqnoB: g,
                        quarantine: v,
                        excessFee: m,
                        addressA: y,
                        addressB: w
                    }
                }
                fromWallet(t) {
                    const {
                        wallet: e,
                        secretKey: r
                    } = t, n = (t, n) => {
                        const i = async i => {
                            const s = n ? (await this.createStateInit()).stateInit : null,
                                o = await this.getAddress(),
                                a = await e.methods.seqno().call() || 0,
                                u = await t;
                            return e.methods.transfer({
                                secretKey: r,
                                toAddress: o.toString(!0, !0, !0),
                                amount: i,
                                seqno: a,
                                payload: u,
                                stateInit: s,
                                sendMode: 3
                            })
                        };
                        return {
                            send: t => i(t).then(t => t.send()),
                            estimateFee: t => i(t).then(t => t.estimateFee())
                        }
                    };
                    return {
                        deploy: () => n(null, !0),
                        init: t => n(this.createInitChannel(t).then(t => t.cell)),
                        topUp: t => n(this.createTopUpBalance(t)),
                        close: t => n(this.createCooperativeCloseChannel(t).then(t => t.cell)),
                        commit: t => n(this.createCooperativeCommit(t).then(t => t.cell)),
                        startUncooperativeClose: t => n(this.createStartUncooperativeClose(t).then(t => t.cell)),
                        challengeQuarantinedState: t => n(this.createChallengeQuarantinedState(t).then(t => t.cell)),
                        settleConditionals: t => n(this.createSettleConditionals(t).then(t => t.cell)),
                        finishUncooperativeClose: () => n(this.createFinishUncooperativeClose())
                    }
                }
            }
            n(H, "STATE_UNINITED", 0), n(H, "STATE_OPEN", 1), n(H, "STATE_CLOSURE_STARTED", 2), n(H, "STATE_SETTLING_CONDITIONALS", 3), n(H, "STATE_AWAITING_FINALIZATION", 4), H.codeHex = K, t.exports = {
                PaymentChannel: H
            }
        },
        fdc3: function(t, e, r) {
            const n = r("e57b");
            n.async = r("c486"), t.exports = n
        },
        fe2a: function(t, e, r) {
            const {
                Contract: n
            } = r("38a0"), {
                Cell: i
            } = r("41b0"), {
                Address: s,
                BN: o
            } = r("1afa"), {
                parseAddress: a,
                getRoyaltyParams: u
            } = r("cdcf"), {
                parseOffchainUriCell: c
            } = r("cdcf"), h
            class l extends n {
                constructor(t, e) {
                    e.wc = 0, e.code = e.code || i.oneFromBoc(h), super(t, e), this.methods.getData = this.getData.bind(this)
                }
                createDataCell() {
                    const t = new i;
                    return t.bits.writeUint(this.options.index, 64), t.bits.writeAddress(this.options.collectionAddress), t
                }
                async getData() {
                    const t = await this.getAddress(),
                        e = await this.provider.call2(t.toString(), "get_nft_data"),
                        r = -1 === e[0].toNumber(),
                        n = e[1];
                    let i = NaN;
                    try {
                        i = n.toNumber()
                    } catch (l) {}
                    const s = a(e[2]),
                        o = r ? a(e[3]) : null,
                        u = e[4];
                    let h = null;
                    try {
                        h = r && null === s ? c(u) : null
                    } catch (l) {}
                    return {
                        isInitialized: r,
                        index: i,
                        itemIndex: n,
                        collectionAddress: s,
                        ownerAddress: o,
                        contentCell: u,
                        contentUri: h
                    }
                }
                async createTransferBody(t) {
                    const e = new i;
                    return e.bits.writeUint(1607220500, 32), e.bits.writeUint(t.queryId || 0, 64), e.bits.writeAddress(t.newOwnerAddress), e.bits.writeAddress(t.responseAddress), e.bits.writeBit(!1), e.bits.writeCoins(t.forwardAmount || new o(0)), t.forwardPayload ? t.forwardPayload.refs ? (e.bits.writeBit(!0), e.refs.push(t.forwardPayload)) : (e.bits.writeBit(!1), e.bits.writeBytes(t.forwardPayload)) : e.bits.writeBit(!1), e
                }
                createGetStaticDataBody(t) {
                    const e = new i;
                    return e.bits.writeUint(801842850, 32), e.bits.writeUint(t.queryId || 0, 64), e
                }
                async getRoyaltyParams() {
                    const t = await this.getAddress();
                    return u(this.provider, t.toString())
                }
            }
            l.codeHex = h, t.exports = {
                NftItem: l
            }
        }
    }
]);