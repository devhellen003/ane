(window["webpackJsonp"] = window["webpackJsonp"] || []).push([
    ["chunk-vendors~d6b3b356"], {
        "0109": function(t, e, r) {
            "use strict";
            r.d(e, "a", (function() {
                return d
            }));
            var n = r("ffb2");
            const i = "networks/5.5.2",
                o = new n["a"](i);

            function s(t) {
                return t && "function" === typeof t.renetwork
            }

            function a(t) {
                const e = function(e, r) {
                    null == r && (r = {});
                    const n = [];
                    if (e.InfuraProvider) try {
                        n.push(new e.InfuraProvider(t, r.infura))
                    } catch (i) {}
                    if (e.EtherscanProvider) try {
                        n.push(new e.EtherscanProvider(t, r.etherscan))
                    } catch (i) {}
                    if (e.AlchemyProvider) try {
                        n.push(new e.AlchemyProvider(t, r.alchemy))
                    } catch (i) {}
                    if (e.PocketProvider) {
                        const r = ["goerli", "ropsten", "rinkeby"];
                        try {
                            const i = new e.PocketProvider(t);
                            i.network && -1 === r.indexOf(i.network.name) && n.push(i)
                        } catch (i) {}
                    }
                    if (e.CloudflareProvider) try {
                        n.push(new e.CloudflareProvider(t))
                    } catch (i) {}
                    if (0 === n.length) return null;
                    if (e.FallbackProvider) {
                        let i = 1;
                        return null != r.quorum ? i = r.quorum : "homestead" === t && (i = 2), new e.FallbackProvider(n, i)
                    }
                    return n[0]
                };
                return e.renetwork = function(t) {
                    return a(t)
                }, e
            }

            function u(t, e) {
                const r = function(r, n) {
                    return r.JsonRpcProvider ? new r.JsonRpcProvider(t, e) : null
                };
                return r.renetwork = function(e) {
                    return u(t, e)
                }, r
            }
            const h = {
                    chainId: 1,
                    ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
                    name: "homestead",
                    _defaultProvider: a("homestead")
                },
                l = {
                    chainId: 3,
                    ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
                    name: "ropsten",
                    _defaultProvider: a("ropsten")
                },
                f = {
                    chainId: 63,
                    name: "classicMordor",
                    _defaultProvider: u("https://www.ethercluster.com/mordor", "classicMordor")
                },
                c = {
                    unspecified: {
                        chainId: 0,
                        name: "unspecified"
                    },
                    homestead: h,
                    mainnet: h,
                    morden: {
                        chainId: 2,
                        name: "morden"
                    },
                    ropsten: l,
                    testnet: l,
                    rinkeby: {
                        chainId: 4,
                        ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
                        name: "rinkeby",
                        _defaultProvider: a("rinkeby")
                    },
                    kovan: {
                        chainId: 42,
                        name: "kovan",
                        _defaultProvider: a("kovan")
                    },
                    goerli: {
                        chainId: 5,
                        ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
                        name: "goerli",
                        _defaultProvider: a("goerli")
                    },
                    kintsugi: {
                        chainId: 1337702,
                        name: "kintsugi"
                    },
                    classic: {
                        chainId: 61,
                        name: "classic",
                        _defaultProvider: u("https://www.ethercluster.com/etc", "classic")
                    },
                    classicMorden: {
                        chainId: 62,
                        name: "classicMorden"
                    },
                    classicMordor: f,
                    classicTestnet: f,
                    classicKotti: {
                        chainId: 6,
                        name: "classicKotti",
                        _defaultProvider: u("https://www.ethercluster.com/kotti", "classicKotti")
                    },
                    xdai: {
                        chainId: 100,
                        name: "xdai"
                    },
                    matic: {
                        chainId: 137,
                        name: "matic"
                    },
                    maticmum: {
                        chainId: 80001,
                        name: "maticmum"
                    },
                    optimism: {
                        chainId: 10,
                        name: "optimism"
                    },
                    "optimism-kovan": {
                        chainId: 69,
                        name: "optimism-kovan"
                    },
                    "optimism-goerli": {
                        chainId: 420,
                        name: "optimism-goerli"
                    },
                    arbitrum: {
                        chainId: 42161,
                        name: "arbitrum"
                    },
                    "arbitrum-rinkeby": {
                        chainId: 421611,
                        name: "arbitrum-rinkeby"
                    },
                    bnb: {
                        chainId: 56,
                        name: "bnb"
                    },
                    bnbt: {
                        chainId: 97,
                        name: "bnbt"
                    }
                };

            function d(t) {
                if (null == t) return null;
                if ("number" === typeof t) {
                    for (const e in c) {
                        const r = c[e];
                        if (r.chainId === t) return {
                            name: r.name,
                            chainId: r.chainId,
                            ensAddress: r.ensAddress || null,
                            _defaultProvider: r._defaultProvider || null
                        }
                    }
                    return {
                        chainId: t,
                        name: "unknown"
                    }
                }
                if ("string" === typeof t) {
                    const e = c[t];
                    return null == e ? null : {
                        name: e.name,
                        chainId: e.chainId,
                        ensAddress: e.ensAddress,
                        _defaultProvider: e._defaultProvider || null
                    }
                }
                const e = c[t.name];
                if (!e) return "number" !== typeof t.chainId && o.throwArgumentError("invalid network chainId", "network", t), t;
                0 !== t.chainId && t.chainId !== e.chainId && o.throwArgumentError("network chainId mismatch", "network", t);
                let r = t._defaultProvider || null;
                return null == r && e._defaultProvider && (r = s(e._defaultProvider) ? e._defaultProvider.renetwork(t) : e._defaultProvider), {
                    name: t.name,
                    chainId: e.chainId,
                    ensAddress: t.ensAddress || e.ensAddress || null,
                    _defaultProvider: r
                }
            }
        },
        2606: function(t, e, r) {
            "use strict";
            r.r(e), r.d(e, "Provider", (function() {
                return dt
            })), r.d(e, "BaseProvider", (function() {
                return Xr
            })), r.d(e, "Resolver", (function() {
                return Hr
            })), r.d(e, "UrlJsonRpcProvider", (function() {
                return zn
            })), r.d(e, "FallbackProvider", (function() {
                return Si
            })), r.d(e, "AlchemyProvider", (function() {
                return Hn
            })), r.d(e, "AlchemyWebSocketProvider", (function() {
                return Vn
            })), r.d(e, "AnkrProvider", (function() {
                return $n
            })), r.d(e, "CloudflareProvider", (function() {
                return ti
            })), r.d(e, "EtherscanProvider", (function() {
                return hi
            })), r.d(e, "InfuraProvider", (function() {
                return xi
            })), r.d(e, "InfuraWebSocketProvider", (function() {
                return ki
            })), r.d(e, "JsonRpcProvider", (function() {
                return Cn
            })), r.d(e, "JsonRpcBatchProvider", (function() {
                return Ti
            })), r.d(e, "NodesmithProvider", (function() {
                return Ui
            })), r.d(e, "PocketProvider", (function() {
                return Li
            })), r.d(e, "StaticJsonRpcProvider", (function() {
                return qn
            })), r.d(e, "Web3Provider", (function() {
                return zi
            })), r.d(e, "WebSocketProvider", (function() {
                return Dn
            })), r.d(e, "IpcProvider", (function() {
                return Ii
            })), r.d(e, "JsonRpcSigner", (function() {
                return xn
            })), r.d(e, "getDefaultProvider", (function() {
                return Wi
            })), r.d(e, "getNetwork", (function() {
                return Nt
            })), r.d(e, "isCommunityResource", (function() {
                return Er
            })), r.d(e, "isCommunityResourcable", (function() {
                return Mr
            })), r.d(e, "showThrottleMessage", (function() {
                return Ar
            })), r.d(e, "Formatter", (function() {
                return br
            }));
            var n = r("9352"),
                i = r.n(n);
            const o = "logger/5.6.0";
            let s = !1,
                a = !1;
            const u = {
                debug: 1,
                default: 2,
                info: 2,
                warning: 3,
                error: 4,
                off: 5
            };
            let h = u["default"],
                l = null;

            function f() {
                try {
                    const t = [];
                    if (["NFD", "NFC", "NFKD", "NFKC"].forEach(e => {
                            try {
                                if ("test" !== "test".normalize(e)) throw new Error("bad normalize")
                            } catch (r) {
                                t.push(e)
                            }
                        }), t.length) throw new Error("missing " + t.join(", "));
                    if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) throw new Error("broken implementation")
                } catch (t) {
                    return t.message
                }
                return null
            }
            const c = f();
            var d, m;
            (function(t) {
                t["DEBUG"] = "DEBUG", t["INFO"] = "INFO", t["WARNING"] = "WARNING", t["ERROR"] = "ERROR", t["OFF"] = "OFF"
            })(d || (d = {})),
            function(t) {
                t["UNKNOWN_ERROR"] = "UNKNOWN_ERROR", t["NOT_IMPLEMENTED"] = "NOT_IMPLEMENTED", t["UNSUPPORTED_OPERATION"] = "UNSUPPORTED_OPERATION", t["NETWORK_ERROR"] = "NETWORK_ERROR", t["SERVER_ERROR"] = "SERVER_ERROR", t["TIMEOUT"] = "TIMEOUT", t["BUFFER_OVERRUN"] = "BUFFER_OVERRUN", t["NUMERIC_FAULT"] = "NUMERIC_FAULT", t["MISSING_NEW"] = "MISSING_NEW", t["INVALID_ARGUMENT"] = "INVALID_ARGUMENT", t["MISSING_ARGUMENT"] = "MISSING_ARGUMENT", t["UNEXPECTED_ARGUMENT"] = "UNEXPECTED_ARGUMENT", t["CALL_EXCEPTION"] = "CALL_EXCEPTION", t["INSUFFICIENT_FUNDS"] = "INSUFFICIENT_FUNDS", t["NONCE_EXPIRED"] = "NONCE_EXPIRED", t["REPLACEMENT_UNDERPRICED"] = "REPLACEMENT_UNDERPRICED", t["UNPREDICTABLE_GAS_LIMIT"] = "UNPREDICTABLE_GAS_LIMIT", t["TRANSACTION_REPLACED"] = "TRANSACTION_REPLACED"
            }(m || (m = {}));
            const p = "0123456789abcdef";
            class g {
                constructor(t) {
                    Object.defineProperty(this, "version", {
                        enumerable: !0,
                        value: t,
                        writable: !1
                    })
                }
                _log(t, e) {
                    const r = t.toLowerCase();
                    null == u[r] && this.throwArgumentError("invalid log level name", "logLevel", t), h > u[r] || console.log.apply(console, e)
                }
                debug(...t) {
                    this._log(g.levels.DEBUG, t)
                }
                info(...t) {
                    this._log(g.levels.INFO, t)
                }
                warn(...t) {
                    this._log(g.levels.WARNING, t)
                }
                makeError(t, e, r) {
                    if (a) return this.makeError("censored error", e, {});
                    e || (e = g.errors.UNKNOWN_ERROR), r || (r = {});
                    const n = [];
                    Object.keys(r).forEach(t => {
                        const e = r[t];
                        try {
                            if (e instanceof Uint8Array) {
                                let r = "";
                                for (let t = 0; t < e.length; t++) r += p[e[t] >> 4], r += p[15 & e[t]];
                                n.push(t + "=Uint8Array(0x" + r + ")")
                            } else n.push(t + "=" + JSON.stringify(e))
                        } catch (s) {
                            n.push(t + "=" + JSON.stringify(r[t].toString()))
                        }
                    }), n.push("code=" + e), n.push("version=" + this.version);
                    const i = t;
                    let o = "";
                    switch (e) {
                        case m.NUMERIC_FAULT:
                            {
                                o = "NUMERIC_FAULT";
                                const e = t;
                                switch (e) {
                                    case "overflow":
                                    case "underflow":
                                    case "division-by-zero":
                                        o += "-" + e;
                                        break;
                                    case "negative-power":
                                    case "negative-width":
                                        o += "-unsupported";
                                        break;
                                    case "unbound-bitwise-result":
                                        o += "-unbound-result";
                                        break
                                }
                                break
                            }
                        case m.CALL_EXCEPTION:
                        case m.INSUFFICIENT_FUNDS:
                        case m.MISSING_NEW:
                        case m.NONCE_EXPIRED:
                        case m.REPLACEMENT_UNDERPRICED:
                        case m.TRANSACTION_REPLACED:
                        case m.UNPREDICTABLE_GAS_LIMIT:
                            o = e;
                            break
                    }
                    o && (t += " [ See: https://links.ethers.org/v5-errors-" + o + " ]"), n.length && (t += " (" + n.join(", ") + ")");
                    const s = new Error(t);
                    return s.reason = i, s.code = e, Object.keys(r).forEach((function(t) {
                        s[t] = r[t]
                    })), s
                }
                throwError(t, e, r) {
                    throw this.makeError(t, e, r)
                }
                throwArgumentError(t, e, r) {
                    return this.throwError(t, g.errors.INVALID_ARGUMENT, {
                        argument: e,
                        value: r
                    })
                }
                assert(t, e, r, n) {
                    t || this.throwError(e, r, n)
                }
                assertArgument(t, e, r, n) {
                    t || this.throwArgumentError(e, r, n)
                }
                checkNormalize(t) {
                    null == t && (t = "platform missing String.prototype.normalize"), c && this.throwError("platform missing String.prototype.normalize", g.errors.UNSUPPORTED_OPERATION, {
                        operation: "String.prototype.normalize",
                        form: c
                    })
                }
                checkSafeUint53(t, e) {
                    "number" === typeof t && (null == e && (e = "value not safe"), (t < 0 || t >= 9007199254740991) && this.throwError(e, g.errors.NUMERIC_FAULT, {
                        operation: "checkSafeInteger",
                        fault: "out-of-safe-range",
                        value: t
                    }), t % 1 && this.throwError(e, g.errors.NUMERIC_FAULT, {
                        operation: "checkSafeInteger",
                        fault: "non-integer",
                        value: t
                    }))
                }
                checkArgumentCount(t, e, r) {
                    r = r ? ": " + r : "", t < e && this.throwError("missing argument" + r, g.errors.MISSING_ARGUMENT, {
                        count: t,
                        expectedCount: e
                    }), t > e && this.throwError("too many arguments" + r, g.errors.UNEXPECTED_ARGUMENT, {
                        count: t,
                        expectedCount: e
                    })
                }
                checkNew(t, e) {
                    t !== Object && null != t || this.throwError("missing new", g.errors.MISSING_NEW, {
                        name: e.name
                    })
                }
                checkAbstract(t, e) {
                    t === e ? this.throwError("cannot instantiate abstract class " + JSON.stringify(e.name) + " directly; use a sub-class", g.errors.UNSUPPORTED_OPERATION, {
                        name: t.name,
                        operation: "new"
                    }) : t !== Object && null != t || this.throwError("missing new", g.errors.MISSING_NEW, {
                        name: e.name
                    })
                }
                static globalLogger() {
                    return l || (l = new g(o)), l
                }
                static setCensorship(t, e) {
                    if (!t && e && this.globalLogger().throwError("cannot permanently disable censorship", g.errors.UNSUPPORTED_OPERATION, {
                            operation: "setCensorship"
                        }), s) {
                        if (!t) return;
                        this.globalLogger().throwError("error censorship permanent", g.errors.UNSUPPORTED_OPERATION, {
                            operation: "setCensorship"
                        })
                    }
                    a = !!t, s = !!e
                }
                static setLogLevel(t) {
                    const e = u[t.toLowerCase()];
                    null != e ? h = e : g.globalLogger().warn("invalid log level - " + t)
                }
                static from(t) {
                    return new g(t)
                }
            }
            g.errors = m, g.levels = d;
            const v = "bytes/5.6.1",
                y = new g(v);

            function w(t) {
                return !!t.toHexString
            }

            function b(t) {
                return t.slice || (t.slice = function() {
                    const e = Array.prototype.slice.call(arguments);
                    return b(new Uint8Array(Array.prototype.slice.apply(t, e)))
                }), t
            }

            function M(t) {
                return R(t) && !(t.length % 2) || N(t)
            }

            function E(t) {
                return "number" === typeof t && t == t && t % 1 === 0
            }

            function N(t) {
                if (null == t) return !1;
                if (t.constructor === Uint8Array) return !0;
                if ("string" === typeof t) return !1;
                if (!E(t.length) || t.length < 0) return !1;
                for (let e = 0; e < t.length; e++) {
                    const r = t[e];
                    if (!E(r) || r < 0 || r >= 256) return !1
                }
                return !0
            }

            function A(t, e) {
                if (e || (e = {}), "number" === typeof t) {
                    y.checkSafeUint53(t, "invalid arrayify value");
                    const e = [];
                    while (t) e.unshift(255 & t), t = parseInt(String(t / 256));
                    return 0 === e.length && e.push(0), b(new Uint8Array(e))
                }
                if (e.allowMissingPrefix && "string" === typeof t && "0x" !== t.substring(0, 2) && (t = "0x" + t), w(t) && (t = t.toHexString()), R(t)) {
                    let r = t.substring(2);
                    r.length % 2 && ("left" === e.hexPad ? r = "0" + r : "right" === e.hexPad ? r += "0" : y.throwArgumentError("hex data is odd-length", "value", t));
                    const n = [];
                    for (let t = 0; t < r.length; t += 2) n.push(parseInt(r.substring(t, t + 2), 16));
                    return b(new Uint8Array(n))
                }
                return N(t) ? b(new Uint8Array(t)) : y.throwArgumentError("invalid arrayify value", "value", t)
            }

            function _(t) {
                const e = t.map(t => A(t)),
                    r = e.reduce((t, e) => t + e.length, 0),
                    n = new Uint8Array(r);
                return e.reduce((t, e) => (n.set(e, t), t + e.length), 0), b(n)
            }

            function S(t) {
                let e = A(t);
                if (0 === e.length) return e;
                let r = 0;
                while (r < e.length && 0 === e[r]) r++;
                return r && (e = e.slice(r)), e
            }

            function I(t, e) {
                t = A(t), t.length > e && y.throwArgumentError("value out of range", "value", arguments[0]);
                const r = new Uint8Array(e);
                return r.set(t, e - t.length), b(r)
            }

            function R(t, e) {
                return !("string" !== typeof t || !t.match(/^0x[0-9A-Fa-f]*$/)) && (!e || t.length === 2 + 2 * e)
            }
            const P = "0123456789abcdef";

            function k(t, e) {
                if (e || (e = {}), "number" === typeof t) {
                    y.checkSafeUint53(t, "invalid hexlify value");
                    let e = "";
                    while (t) e = P[15 & t] + e, t = Math.floor(t / 16);
                    return e.length ? (e.length % 2 && (e = "0" + e), "0x" + e) : "0x00"
                }
                if ("bigint" === typeof t) return t = t.toString(16), t.length % 2 ? "0x0" + t : "0x" + t;
                if (e.allowMissingPrefix && "string" === typeof t && "0x" !== t.substring(0, 2) && (t = "0x" + t), w(t)) return t.toHexString();
                if (R(t)) return t.length % 2 && ("left" === e.hexPad ? t = "0x0" + t.substring(2) : "right" === e.hexPad ? t += "0" : y.throwArgumentError("hex data is odd-length", "value", t)), t.toLowerCase();
                if (N(t)) {
                    let e = "0x";
                    for (let r = 0; r < t.length; r++) {
                        let n = t[r];
                        e += P[(240 & n) >> 4] + P[15 & n]
                    }
                    return e
                }
                return y.throwArgumentError("invalid hexlify value", "value", t)
            }

            function x(t) {
                if ("string" !== typeof t) t = k(t);
                else if (!R(t) || t.length % 2) return null;
                return (t.length - 2) / 2
            }

            function T(t, e, r) {
                return "string" !== typeof t ? t = k(t) : (!R(t) || t.length % 2) && y.throwArgumentError("invalid hexData", "value", t), e = 2 + 2 * e, null != r ? "0x" + t.substring(e, 2 + 2 * r) : "0x" + t.substring(e)
            }

            function O(t) {
                let e = "0x";
                return t.forEach(t => {
                    e += k(t).substring(2)
                }), e
            }

            function C(t) {
                const e = U(k(t, {
                    hexPad: "left"
                }));
                return "0x" === e ? "0x0" : e
            }

            function U(t) {
                "string" !== typeof t && (t = k(t)), R(t) || y.throwArgumentError("invalid hex string", "value", t), t = t.substring(2);
                let e = 0;
                while (e < t.length && "0" === t[e]) e++;
                return "0x" + t.substring(e)
            }

            function F(t, e) {
                "string" !== typeof t ? t = k(t) : R(t) || y.throwArgumentError("invalid hex string", "value", t), t.length > 2 * e + 2 && y.throwArgumentError("value out of range", "value", arguments[1]);
                while (t.length < 2 * e + 2) t = "0x0" + t.substring(2);
                return t
            }

            function B(t) {
                const e = {
                    r: "0x",
                    s: "0x",
                    _vs: "0x",
                    recoveryParam: 0,
                    v: 0,
                    yParityAndS: "0x",
                    compact: "0x"
                };
                if (M(t)) {
                    let r = A(t);
                    64 === r.length ? (e.v = 27 + (r[32] >> 7), r[32] &= 127, e.r = k(r.slice(0, 32)), e.s = k(r.slice(32, 64))) : 65 === r.length ? (e.r = k(r.slice(0, 32)), e.s = k(r.slice(32, 64)), e.v = r[64]) : y.throwArgumentError("invalid signature string", "signature", t), e.v < 27 && (0 === e.v || 1 === e.v ? e.v += 27 : y.throwArgumentError("signature invalid v byte", "signature", t)), e.recoveryParam = 1 - e.v % 2, e.recoveryParam && (r[32] |= 128), e._vs = k(r.slice(32, 64))
                } else {
                    if (e.r = t.r, e.s = t.s, e.v = t.v, e.recoveryParam = t.recoveryParam, e._vs = t._vs, null != e._vs) {
                        const r = I(A(e._vs), 32);
                        e._vs = k(r);
                        const n = r[0] >= 128 ? 1 : 0;
                        null == e.recoveryParam ? e.recoveryParam = n : e.recoveryParam !== n && y.throwArgumentError("signature recoveryParam mismatch _vs", "signature", t), r[0] &= 127;
                        const i = k(r);
                        null == e.s ? e.s = i : e.s !== i && y.throwArgumentError("signature v mismatch _vs", "signature", t)
                    }
                    if (null == e.recoveryParam) null == e.v ? y.throwArgumentError("signature missing v and recoveryParam", "signature", t) : 0 === e.v || 1 === e.v ? e.recoveryParam = e.v : e.recoveryParam = 1 - e.v % 2;
                    else if (null == e.v) e.v = 27 + e.recoveryParam;
                    else {
                        const r = 0 === e.v || 1 === e.v ? e.v : 1 - e.v % 2;
                        e.recoveryParam !== r && y.throwArgumentError("signature recoveryParam mismatch v", "signature", t)
                    }
                    null != e.r && R(e.r) ? e.r = F(e.r, 32) : y.throwArgumentError("signature missing or invalid r", "signature", t), null != e.s && R(e.s) ? e.s = F(e.s, 32) : y.throwArgumentError("signature missing or invalid s", "signature", t);
                    const r = A(e.s);
                    r[0] >= 128 && y.throwArgumentError("signature s out of range", "signature", t), e.recoveryParam && (r[0] |= 128);
                    const n = k(r);
                    e._vs && (R(e._vs) || y.throwArgumentError("signature invalid _vs", "signature", t), e._vs = F(e._vs, 32)), null == e._vs ? e._vs = n : e._vs !== n && y.throwArgumentError("signature _vs mismatch v and s", "signature", t)
                }
                return e.yParityAndS = e._vs, e.compact = e.r + e.yParityAndS.substring(2), e
            }
            const L = "bignumber/5.6.0";
            var D = i.a.BN;
            const G = new g(L),
                j = {},
                q = 9007199254740991;
            let z = !1;
            class K {
                constructor(t, e) {
                    G.checkNew(new.target, K), t !== j && G.throwError("cannot call constructor directly; use BigNumber.from", g.errors.UNSUPPORTED_OPERATION, {
                        operation: "new (BigNumber)"
                    }), this._hex = e, this._isBigNumber = !0, Object.freeze(this)
                }
                fromTwos(t) {
                    return V(H(this).fromTwos(t))
                }
                toTwos(t) {
                    return V(H(this).toTwos(t))
                }
                abs() {
                    return "-" === this._hex[0] ? K.from(this._hex.substring(1)) : this
                }
                add(t) {
                    return V(H(this).add(H(t)))
                }
                sub(t) {
                    return V(H(this).sub(H(t)))
                }
                div(t) {
                    const e = K.from(t);
                    return e.isZero() && J("division-by-zero", "div"), V(H(this).div(H(t)))
                }
                mul(t) {
                    return V(H(this).mul(H(t)))
                }
                mod(t) {
                    const e = H(t);
                    return e.isNeg() && J("division-by-zero", "mod"), V(H(this).umod(e))
                }
                pow(t) {
                    const e = H(t);
                    return e.isNeg() && J("negative-power", "pow"), V(H(this).pow(e))
                }
                and(t) {
                    const e = H(t);
                    return (this.isNegative() || e.isNeg()) && J("unbound-bitwise-result", "and"), V(H(this).and(e))
                }
                or(t) {
                    const e = H(t);
                    return (this.isNegative() || e.isNeg()) && J("unbound-bitwise-result", "or"), V(H(this).or(e))
                }
                xor(t) {
                    const e = H(t);
                    return (this.isNegative() || e.isNeg()) && J("unbound-bitwise-result", "xor"), V(H(this).xor(e))
                }
                mask(t) {
                    return (this.isNegative() || t < 0) && J("negative-width", "mask"), V(H(this).maskn(t))
                }
                shl(t) {
                    return (this.isNegative() || t < 0) && J("negative-width", "shl"), V(H(this).shln(t))
                }
                shr(t) {
                    return (this.isNegative() || t < 0) && J("negative-width", "shr"), V(H(this).shrn(t))
                }
                eq(t) {
                    return H(this).eq(H(t))
                }
                lt(t) {
                    return H(this).lt(H(t))
                }
                lte(t) {
                    return H(this).lte(H(t))
                }
                gt(t) {
                    return H(this).gt(H(t))
                }
                gte(t) {
                    return H(this).gte(H(t))
                }
                isNegative() {
                    return "-" === this._hex[0]
                }
                isZero() {
                    return H(this).isZero()
                }
                toNumber() {
                    try {
                        return H(this).toNumber()
                    } catch (t) {
                        J("overflow", "toNumber", this.toString())
                    }
                    return null
                }
                toBigInt() {
                    try {
                        return BigInt(this.toString())
                    } catch (t) {}
                    return G.throwError("this platform does not support BigInt", g.errors.UNSUPPORTED_OPERATION, {
                        value: this.toString()
                    })
                }
                toString() {
                    return arguments.length > 0 && (10 === arguments[0] ? z || (z = !0, G.warn("BigNumber.toString does not accept any parameters; base-10 is assumed")) : 16 === arguments[0] ? G.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()", g.errors.UNEXPECTED_ARGUMENT, {}) : G.throwError("BigNumber.toString does not accept parameters", g.errors.UNEXPECTED_ARGUMENT, {})), H(this).toString(10)
                }
                toHexString() {
                    return this._hex
                }
                toJSON(t) {
                    return {
                        type: "BigNumber",
                        hex: this.toHexString()
                    }
                }
                static from(t) {
                    if (t instanceof K) return t;
                    if ("string" === typeof t) return t.match(/^-?0x[0-9a-f]+$/i) ? new K(j, W(t)) : t.match(/^-?[0-9]+$/) ? new K(j, W(new D(t))) : G.throwArgumentError("invalid BigNumber string", "value", t);
                    if ("number" === typeof t) return t % 1 && J("underflow", "BigNumber.from", t), (t >= q || t <= -q) && J("overflow", "BigNumber.from", t), K.from(String(t));
                    const e = t;
                    if ("bigint" === typeof e) return K.from(e.toString());
                    if (N(e)) return K.from(k(e));
                    if (e)
                        if (e.toHexString) {
                            const t = e.toHexString();
                            if ("string" === typeof t) return K.from(t)
                        } else {
                            let t = e._hex;
                            if (null == t && "BigNumber" === e.type && (t = e.hex), "string" === typeof t && (R(t) || "-" === t[0] && R(t.substring(1)))) return K.from(t)
                        }
                    return G.throwArgumentError("invalid BigNumber value", "value", t)
                }
                static isBigNumber(t) {
                    return !(!t || !t._isBigNumber)
                }
            }

            function W(t) {
                if ("string" !== typeof t) return W(t.toString(16));
                if ("-" === t[0]) return t = t.substring(1), "-" === t[0] && G.throwArgumentError("invalid hex", "value", t), t = W(t), "0x00" === t ? t : "-" + t;
                if ("0x" !== t.substring(0, 2) && (t = "0x" + t), "0x" === t) return "0x00";
                t.length % 2 && (t = "0x0" + t.substring(2));
                while (t.length > 4 && "0x00" === t.substring(0, 4)) t = "0x" + t.substring(4);
                return t
            }

            function V(t) {
                return K.from(W(t))
            }

            function H(t) {
                const e = K.from(t).toHexString();
                return "-" === e[0] ? new D("-" + e.substring(3), 16) : new D(e.substring(2), 16)
            }

            function J(t, e, r) {
                const n = {
                    fault: t,
                    operation: e
                };
                return null != r && (n.value = r), G.throwError(t, g.errors.NUMERIC_FAULT, n)
            }

            function Z(t) {
                return new D(t, 36).toString(16)
            }
            const X = "properties/5.6.0";
            var $ = function(t, e, r, n) {
                function i(t) {
                    return t instanceof r ? t : new r((function(e) {
                        e(t)
                    }))
                }
                return new(r || (r = Promise))((function(r, o) {
                    function s(t) {
                        try {
                            u(n.next(t))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function a(t) {
                        try {
                            u(n["throw"](t))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function u(t) {
                        t.done ? r(t.value) : i(t.value).then(s, a)
                    }
                    u((n = n.apply(t, e || [])).next())
                }))
            };
            const Y = new g(X);

            function Q(t, e, r) {
                Object.defineProperty(t, e, {
                    enumerable: !0,
                    value: r,
                    writable: !1
                })
            }

            function tt(t, e) {
                for (let r = 0; r < 32; r++) {
                    if (t[e]) return t[e];
                    if (!t.prototype || "object" !== typeof t.prototype) break;
                    t = Object.getPrototypeOf(t.prototype).constructor
                }
                return null
            }

            function et(t) {
                return $(this, void 0, void 0, (function*() {
                    const e = Object.keys(t).map(e => {
                            const r = t[e];
                            return Promise.resolve(r).then(t => ({
                                key: e,
                                value: t
                            }))
                        }),
                        r = yield Promise.all(e);
                    return r.reduce((t, e) => (t[e.key] = e.value, t), {})
                }))
            }

            function rt(t, e) {
                t && "object" === typeof t || Y.throwArgumentError("invalid object", "object", t), Object.keys(t).forEach(r => {
                    e[r] || Y.throwArgumentError("invalid object key - " + r, "transaction:" + r, t)
                })
            }

            function nt(t) {
                const e = {};
                for (const r in t) e[r] = t[r];
                return e
            }
            const it = {
                bigint: !0,
                boolean: !0,
                function: !0,
                number: !0,
                string: !0
            };

            function ot(t) {
                if (void 0 === t || null === t || it[typeof t]) return !0;
                if (Array.isArray(t) || "object" === typeof t) {
                    if (!Object.isFrozen(t)) return !1;
                    const r = Object.keys(t);
                    for (let n = 0; n < r.length; n++) {
                        let i = null;
                        try {
                            i = t[r[n]]
                        } catch (e) {
                            continue
                        }
                        if (!ot(i)) return !1
                    }
                    return !0
                }
                return Y.throwArgumentError("Cannot deepCopy " + typeof t, "object", t)
            }

            function st(t) {
                if (ot(t)) return t;
                if (Array.isArray(t)) return Object.freeze(t.map(t => at(t)));
                if ("object" === typeof t) {
                    const e = {};
                    for (const r in t) {
                        const n = t[r];
                        void 0 !== n && Q(e, r, at(n))
                    }
                    return e
                }
                return Y.throwArgumentError("Cannot deepCopy " + typeof t, "object", t)
            }

            function at(t) {
                return st(t)
            }
            class ut {
                constructor(t) {
                    for (const e in t) this[e] = at(t[e])
                }
            }
            const ht = "abstract-provider/5.6.0";
            var lt = function(t, e, r, n) {
                function i(t) {
                    return t instanceof r ? t : new r((function(e) {
                        e(t)
                    }))
                }
                return new(r || (r = Promise))((function(r, o) {
                    function s(t) {
                        try {
                            u(n.next(t))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function a(t) {
                        try {
                            u(n["throw"](t))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function u(t) {
                        t.done ? r(t.value) : i(t.value).then(s, a)
                    }
                    u((n = n.apply(t, e || [])).next())
                }))
            };
            const ft = new g(ht);
            class ct extends ut {
                static isForkEvent(t) {
                    return !(!t || !t._isForkEvent)
                }
            }
            class dt {
                constructor() {
                    ft.checkAbstract(new.target, dt), Q(this, "_isProvider", !0)
                }
                getFeeData() {
                    return lt(this, void 0, void 0, (function*() {
                        const {
                            block: t,
                            gasPrice: e
                        } = yield et({
                            block: this.getBlock("latest"),
                            gasPrice: this.getGasPrice().catch(t => null)
                        });
                        let r = null,
                            n = null;
                        return t && t.baseFeePerGas && (n = K.from("1500000000"), r = t.baseFeePerGas.mul(2).add(n)), {
                            maxFeePerGas: r,
                            maxPriorityFeePerGas: n,
                            gasPrice: e
                        }
                    }))
                }
                addListener(t, e) {
                    return this.on(t, e)
                }
                removeListener(t, e) {
                    return this.off(t, e)
                }
                static isProvider(t) {
                    return !(!t || !t._isProvider)
                }
            }
            const mt = "networks/5.6.2",
                pt = new g(mt);

            function gt(t) {
                return t && "function" === typeof t.renetwork
            }

            function vt(t) {
                const e = function(e, r) {
                    null == r && (r = {});
                    const n = [];
                    if (e.InfuraProvider && "-" !== r.infura) try {
                        n.push(new e.InfuraProvider(t, r.infura))
                    } catch (i) {}
                    if (e.EtherscanProvider && "-" !== r.etherscan) try {
                        n.push(new e.EtherscanProvider(t, r.etherscan))
                    } catch (i) {}
                    if (e.AlchemyProvider && "-" !== r.alchemy) try {
                        n.push(new e.AlchemyProvider(t, r.alchemy))
                    } catch (i) {}
                    if (e.PocketProvider && "-" !== r.pocket) {
                        const o = ["goerli", "ropsten", "rinkeby"];
                        try {
                            const i = new e.PocketProvider(t, r.pocket);
                            i.network && -1 === o.indexOf(i.network.name) && n.push(i)
                        } catch (i) {}
                    }
                    if (e.CloudflareProvider && "-" !== r.cloudflare) try {
                        n.push(new e.CloudflareProvider(t))
                    } catch (i) {}
                    if (e.AnkrProvider && "-" !== r.ankr) try {
                        n.push(new e.AnkrProvider(t, r.ankr))
                    } catch (i) {}
                    if (0 === n.length) return null;
                    if (e.FallbackProvider) {
                        let i = 1;
                        return null != r.quorum ? i = r.quorum : "homestead" === t && (i = 2), new e.FallbackProvider(n, i)
                    }
                    return n[0]
                };
                return e.renetwork = function(t) {
                    return vt(t)
                }, e
            }

            function yt(t, e) {
                const r = function(r, n) {
                    return r.JsonRpcProvider ? new r.JsonRpcProvider(t, e) : null
                };
                return r.renetwork = function(e) {
                    return yt(t, e)
                }, r
            }
            const wt = {
                    chainId: 1,
                    ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
                    name: "homestead",
                    _defaultProvider: vt("homestead")
                },
                bt = {
                    chainId: 3,
                    ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
                    name: "ropsten",
                    _defaultProvider: vt("ropsten")
                },
                Mt = {
                    chainId: 63,
                    name: "classicMordor",
                    _defaultProvider: yt("https://www.ethercluster.com/mordor", "classicMordor")
                },
                Et = {
                    unspecified: {
                        chainId: 0,
                        name: "unspecified"
                    },
                    homestead: wt,
                    mainnet: wt,
                    morden: {
                        chainId: 2,
                        name: "morden"
                    },
                    ropsten: bt,
                    testnet: bt,
                    rinkeby: {
                        chainId: 4,
                        ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
                        name: "rinkeby",
                        _defaultProvider: vt("rinkeby")
                    },
                    kovan: {
                        chainId: 42,
                        name: "kovan",
                        _defaultProvider: vt("kovan")
                    },
                    goerli: {
                        chainId: 5,
                        ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
                        name: "goerli",
                        _defaultProvider: vt("goerli")
                    },
                    kintsugi: {
                        chainId: 1337702,
                        name: "kintsugi"
                    },
                    classic: {
                        chainId: 61,
                        name: "classic",
                        _defaultProvider: yt("https://www.ethercluster.com/etc", "classic")
                    },
                    classicMorden: {
                        chainId: 62,
                        name: "classicMorden"
                    },
                    classicMordor: Mt,
                    classicTestnet: Mt,
                    classicKotti: {
                        chainId: 6,
                        name: "classicKotti",
                        _defaultProvider: yt("https://www.ethercluster.com/kotti", "classicKotti")
                    },
                    xdai: {
                        chainId: 100,
                        name: "xdai"
                    },
                    matic: {
                        chainId: 137,
                        name: "matic"
                    },
                    maticmum: {
                        chainId: 80001,
                        name: "maticmum"
                    },
                    optimism: {
                        chainId: 10,
                        name: "optimism"
                    },
                    "optimism-kovan": {
                        chainId: 69,
                        name: "optimism-kovan"
                    },
                    "optimism-goerli": {
                        chainId: 420,
                        name: "optimism-goerli"
                    },
                    arbitrum: {
                        chainId: 42161,
                        name: "arbitrum"
                    },
                    "arbitrum-rinkeby": {
                        chainId: 421611,
                        name: "arbitrum-rinkeby"
                    },
                    bnb: {
                        chainId: 56,
                        name: "bnb"
                    },
                    bnbt: {
                        chainId: 97,
                        name: "bnbt"
                    }
                };

            function Nt(t) {
                if (null == t) return null;
                if ("number" === typeof t) {
                    for (const e in Et) {
                        const r = Et[e];
                        if (r.chainId === t) return {
                            name: r.name,
                            chainId: r.chainId,
                            ensAddress: r.ensAddress || null,
                            _defaultProvider: r._defaultProvider || null
                        }
                    }
                    return {
                        chainId: t,
                        name: "unknown"
                    }
                }
                if ("string" === typeof t) {
                    const e = Et[t];
                    return null == e ? null : {
                        name: e.name,
                        chainId: e.chainId,
                        ensAddress: e.ensAddress,
                        _defaultProvider: e._defaultProvider || null
                    }
                }
                const e = Et[t.name];
                if (!e) return "number" !== typeof t.chainId && pt.throwArgumentError("invalid network chainId", "network", t), t;
                0 !== t.chainId && t.chainId !== e.chainId && pt.throwArgumentError("network chainId mismatch", "network", t);
                let r = t._defaultProvider || null;
                return null == r && e._defaultProvider && (r = gt(e._defaultProvider) ? e._defaultProvider.renetwork(t) : e._defaultProvider), {
                    name: t.name,
                    chainId: e.chainId,
                    ensAddress: t.ensAddress || e.ensAddress || null,
                    _defaultProvider: r
                }
            }
            var At = r("2cf2");
            const _t = "0x0000000000000000000000000000000000000000000000000000000000000000",
                St = "strings/5.6.0",
                It = new g(St);
            var Rt, Pt;

            function kt(t, e, r, n, i) {
                return It.throwArgumentError(`invalid codepoint at offset ${e}; ${t}`, "bytes", r)
            }

            function xt(t, e, r, n, i) {
                if (t === Pt.BAD_PREFIX || t === Pt.UNEXPECTED_CONTINUE) {
                    let t = 0;
                    for (let n = e + 1; n < r.length; n++) {
                        if (r[n] >> 6 !== 2) break;
                        t++
                    }
                    return t
                }
                return t === Pt.OVERRUN ? r.length - e - 1 : 0
            }

            function Tt(t, e, r, n, i) {
                return t === Pt.OVERLONG ? (n.push(i), 0) : (n.push(65533), xt(t, e, r, n, i))
            }(function(t) {
                t["current"] = "", t["NFC"] = "NFC", t["NFD"] = "NFD", t["NFKC"] = "NFKC", t["NFKD"] = "NFKD"
            })(Rt || (Rt = {})),
            function(t) {
                t["UNEXPECTED_CONTINUE"] = "unexpected continuation byte", t["BAD_PREFIX"] = "bad codepoint prefix", t["OVERRUN"] = "string overrun", t["MISSING_CONTINUE"] = "missing continuation byte", t["OUT_OF_RANGE"] = "out of UTF-8 range", t["UTF16_SURROGATE"] = "UTF-16 surrogate", t["OVERLONG"] = "overlong representation"
            }(Pt || (Pt = {}));
            const Ot = Object.freeze({
                error: kt,
                ignore: xt,
                replace: Tt
            });

            function Ct(t, e) {
                null == e && (e = Ot.error), t = A(t);
                const r = [];
                let n = 0;
                while (n < t.length) {
                    const i = t[n++];
                    if (i >> 7 === 0) {
                        r.push(i);
                        continue
                    }
                    let o = null,
                        s = null;
                    if (192 === (224 & i)) o = 1, s = 127;
                    else if (224 === (240 & i)) o = 2, s = 2047;
                    else {
                        if (240 !== (248 & i)) {
                            n += e(128 === (192 & i) ? Pt.UNEXPECTED_CONTINUE : Pt.BAD_PREFIX, n - 1, t, r);
                            continue
                        }
                        o = 3, s = 65535
                    }
                    if (n - 1 + o >= t.length) {
                        n += e(Pt.OVERRUN, n - 1, t, r);
                        continue
                    }
                    let a = i & (1 << 8 - o - 1) - 1;
                    for (let u = 0; u < o; u++) {
                        let i = t[n];
                        if (128 != (192 & i)) {
                            n += e(Pt.MISSING_CONTINUE, n, t, r), a = null;
                            break
                        }
                        a = a << 6 | 63 & i, n++
                    }
                    null !== a && (a > 1114111 ? n += e(Pt.OUT_OF_RANGE, n - 1 - o, t, r, a) : a >= 55296 && a <= 57343 ? n += e(Pt.UTF16_SURROGATE, n - 1 - o, t, r, a) : a <= s ? n += e(Pt.OVERLONG, n - 1 - o, t, r, a) : r.push(a))
                }
                return r
            }

            function Ut(t, e = Rt.current) {
                e != Rt.current && (It.checkNormalize(), t = t.normalize(e));
                let r = [];
                for (let n = 0; n < t.length; n++) {
                    const e = t.charCodeAt(n);
                    if (e < 128) r.push(e);
                    else if (e < 2048) r.push(e >> 6 | 192), r.push(63 & e | 128);
                    else if (55296 == (64512 & e)) {
                        n++;
                        const i = t.charCodeAt(n);
                        if (n >= t.length || 56320 !== (64512 & i)) throw new Error("invalid utf-8 string");
                        const o = 65536 + ((1023 & e) << 10) + (1023 & i);
                        r.push(o >> 18 | 240), r.push(o >> 12 & 63 | 128), r.push(o >> 6 & 63 | 128), r.push(63 & o | 128)
                    } else r.push(e >> 12 | 224), r.push(e >> 6 & 63 | 128), r.push(63 & e | 128)
                }
                return A(r)
            }

            function Ft(t) {
                return t.map(t => t <= 65535 ? String.fromCharCode(t) : (t -= 65536, String.fromCharCode(55296 + (t >> 10 & 1023), 56320 + (1023 & t)))).join("")
            }

            function Bt(t, e) {
                return Ft(Ct(t, e))
            }

            function Lt(t, e = Rt.current) {
                return Ct(Ut(t, e))
            }

            function Dt(t) {
                if (t.length % 4 !== 0) throw new Error("bad data");
                let e = [];
                for (let r = 0; r < t.length; r += 4) e.push(parseInt(t.substring(r, r + 4), 16));
                return e
            }

            function Gt(t, e) {
                e || (e = function(t) {
                    return [parseInt(t, 16)]
                });
                let r = 0,
                    n = {};
                return t.split(",").forEach(t => {
                    let i = t.split(":");
                    r += parseInt(i[0], 16), n[r] = e(i[1])
                }), n
            }

            function jt(t) {
                let e = 0;
                return t.split(",").map(t => {
                    let r = t.split("-");
                    1 === r.length ? r[1] = "0" : "" === r[1] && (r[1] = "1");
                    let n = e + parseInt(r[0], 16);
                    return e = parseInt(r[1], 16), {
                        l: n,
                        h: e
                    }
                })
            }

            function qt(t, e) {
                let r = 0;
                for (let n = 0; n < e.length; n++) {
                    let i = e[n];
                    if (r += i.l, t >= r && t <= r + i.h && (t - r) % (i.d || 1) === 0) {
                        if (i.e && -1 !== i.e.indexOf(t - r)) continue;
                        return i
                    }
                }
                return null
            }
            const zt = jt("221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d"),
                Kt = "ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff".split(",").map(t => parseInt(t, 16)),
                Wt = [{
                    h: 25,
                    s: 32,
                    l: 65
                }, {
                    h: 30,
                    s: 32,
                    e: [23],
                    l: 127
                }, {
                    h: 54,
                    s: 1,
                    e: [48],
                    l: 64,
                    d: 2
                }, {
                    h: 14,
                    s: 1,
                    l: 57,
                    d: 2
                }, {
                    h: 44,
                    s: 1,
                    l: 17,
                    d: 2
                }, {
                    h: 10,
                    s: 1,
                    e: [2, 6, 8],
                    l: 61,
                    d: 2
                }, {
                    h: 16,
                    s: 1,
                    l: 68,
                    d: 2
                }, {
                    h: 84,
                    s: 1,
                    e: [18, 24, 66],
                    l: 19,
                    d: 2
                }, {
                    h: 26,
                    s: 32,
                    e: [17],
                    l: 435
                }, {
                    h: 22,
                    s: 1,
                    l: 71,
                    d: 2
                }, {
                    h: 15,
                    s: 80,
                    l: 40
                }, {
                    h: 31,
                    s: 32,
                    l: 16
                }, {
                    h: 32,
                    s: 1,
                    l: 80,
                    d: 2
                }, {
                    h: 52,
                    s: 1,
                    l: 42,
                    d: 2
                }, {
                    h: 12,
                    s: 1,
                    l: 55,
                    d: 2
                }, {
                    h: 40,
                    s: 1,
                    e: [38],
                    l: 15,
                    d: 2
                }, {
                    h: 14,
                    s: 1,
                    l: 48,
                    d: 2
                }, {
                    h: 37,
                    s: 48,
                    l: 49
                }, {
                    h: 148,
                    s: 1,
                    l: 6351,
                    d: 2
                }, {
                    h: 88,
                    s: 1,
                    l: 160,
                    d: 2
                }, {
                    h: 15,
                    s: 16,
                    l: 704
                }, {
                    h: 25,
                    s: 26,
                    l: 854
                }, {
                    h: 25,
                    s: 32,
                    l: 55915
                }, {
                    h: 37,
                    s: 40,
                    l: 1247
                }, {
                    h: 25,
                    s: -119711,
                    l: 53248
                }, {
                    h: 25,
                    s: -119763,
                    l: 52
                }, {
                    h: 25,
                    s: -119815,
                    l: 52
                }, {
                    h: 25,
                    s: -119867,
                    e: [1, 4, 5, 7, 8, 11, 12, 17],
                    l: 52
                }, {
                    h: 25,
                    s: -119919,
                    l: 52
                }, {
                    h: 24,
                    s: -119971,
                    e: [2, 7, 8, 17],
                    l: 52
                }, {
                    h: 24,
                    s: -120023,
                    e: [2, 7, 13, 15, 16, 17],
                    l: 52
                }, {
                    h: 25,
                    s: -120075,
                    l: 52
                }, {
                    h: 25,
                    s: -120127,
                    l: 52
                }, {
                    h: 25,
                    s: -120179,
                    l: 52
                }, {
                    h: 25,
                    s: -120231,
                    l: 52
                }, {
                    h: 25,
                    s: -120283,
                    l: 52
                }, {
                    h: 25,
                    s: -120335,
                    l: 52
                }, {
                    h: 24,
                    s: -119543,
                    e: [17],
                    l: 56
                }, {
                    h: 24,
                    s: -119601,
                    e: [17],
                    l: 58
                }, {
                    h: 24,
                    s: -119659,
                    e: [17],
                    l: 58
                }, {
                    h: 24,
                    s: -119717,
                    e: [17],
                    l: 58
                }, {
                    h: 24,
                    s: -119775,
                    e: [17],
                    l: 58
                }],
                Vt = Gt("b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3"),
                Ht = Gt("179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7"),
                Jt = Gt("df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D", Dt),
                Zt = jt("80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001");

            function Xt(t) {
                return t.reduce((t, e) => (e.forEach(e => {
                    t.push(e)
                }), t), [])
            }

            function $t(t) {
                return !!qt(t, zt)
            }

            function Yt(t) {
                let e = qt(t, Wt);
                if (e) return [t + e.s];
                let r = Vt[t];
                if (r) return r;
                let n = Ht[t];
                if (n) return [t + n[0]];
                let i = Jt[t];
                return i || null
            }

            function Qt(t) {
                return !!qt(t, Zt)
            }

            function te(t) {
                if (t.match(/^[a-z0-9-]*$/i) && t.length <= 59) return t.toLowerCase();
                let e = Lt(t);
                e = Xt(e.map(t => {
                    if (Kt.indexOf(t) >= 0) return [];
                    if (t >= 65024 && t <= 65039) return [];
                    let e = Yt(t);
                    return e || [t]
                })), e = Lt(Ft(e), Rt.NFKC), e.forEach(t => {
                    if (Qt(t)) throw new Error("STRINGPREP_CONTAINS_PROHIBITED")
                }), e.forEach(t => {
                    if ($t(t)) throw new Error("STRINGPREP_CONTAINS_UNASSIGNED")
                });
                let r = Ft(e);
                if ("-" === r.substring(0, 1) || "--" === r.substring(2, 4) || "-" === r.substring(r.length - 1)) throw new Error("invalid hyphen");
                if (r.length > 63) throw new Error("too long");
                return r
            }
            var ee = r("1c55"),
                re = r.n(ee);

            function ne(t) {
                return "0x" + re.a.keccak_256(A(t))
            }
            const ie = "hash/5.6.0",
                oe = new g(ie),
                se = new Uint8Array(32);
            se.fill(0);
            const ae = new RegExp("^((.*)\\.)?([^.]+)$");

            function ue(t) {
                "string" !== typeof t && oe.throwArgumentError("invalid ENS name; not a string", "name", t);
                let e = t,
                    r = se;
                while (e.length) {
                    const n = e.match(ae);
                    null != n && "" !== n[2] || oe.throwArgumentError("invalid ENS address; missing component", "name", t);
                    const i = Ut(te(n[3]));
                    r = ne(_([r, ne(i)])), e = n[2] || ""
                }
                return k(r)
            }

            function he(t) {
                return k(_(t.split(".").map(t => {
                    const e = Ut("_" + te(t));
                    return e[0] = e.length - 1, e
                }))) + "00"
            }
            var le = r("3796");

            function fe(t) {
                t = atob(t);
                const e = [];
                for (let r = 0; r < t.length; r++) e.push(t.charCodeAt(r));
                return A(e)
            }

            function ce(t) {
                t = A(t);
                let e = "";
                for (let r = 0; r < t.length; r++) e += String.fromCharCode(t[r]);
                return btoa(e)
            }
            const de = "web/5.6.0";
            var me = function(t, e, r, n) {
                function i(t) {
                    return t instanceof r ? t : new r((function(e) {
                        e(t)
                    }))
                }
                return new(r || (r = Promise))((function(r, o) {
                    function s(t) {
                        try {
                            u(n.next(t))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function a(t) {
                        try {
                            u(n["throw"](t))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function u(t) {
                        t.done ? r(t.value) : i(t.value).then(s, a)
                    }
                    u((n = n.apply(t, e || [])).next())
                }))
            };

            function pe(t, e) {
                return me(this, void 0, void 0, (function*() {
                    null == e && (e = {});
                    const r = {
                        method: e.method || "GET",
                        headers: e.headers || {},
                        body: e.body || void 0
                    };
                    !0 !== e.skipFetchSetup && (r.mode = "cors", r.cache = "no-cache", r.credentials = "same-origin", r.redirect = "follow", r.referrer = "client");
                    const n = yield fetch(t, r), i = yield n.arrayBuffer(), o = {};
                    return n.headers.forEach ? n.headers.forEach((t, e) => {
                        o[e.toLowerCase()] = t
                    }) : n.headers.keys().forEach(t => {
                        o[t.toLowerCase()] = n.headers.get(t)
                    }), {
                        headers: o,
                        statusCode: n.status,
                        statusMessage: n.statusText,
                        body: A(new Uint8Array(i))
                    }
                }))
            }
            var ge = function(t, e, r, n) {
                function i(t) {
                    return t instanceof r ? t : new r((function(e) {
                        e(t)
                    }))
                }
                return new(r || (r = Promise))((function(r, o) {
                    function s(t) {
                        try {
                            u(n.next(t))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function a(t) {
                        try {
                            u(n["throw"](t))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function u(t) {
                        t.done ? r(t.value) : i(t.value).then(s, a)
                    }
                    u((n = n.apply(t, e || [])).next())
                }))
            };
            const ve = new g(de);

            function ye(t) {
                return new Promise(e => {
                    setTimeout(e, t)
                })
            }

            function we(t, e) {
                if (null == t) return null;
                if ("string" === typeof t) return t;
                if (M(t)) {
                    if (e && ("text" === e.split("/")[0] || "application/json" === e.split(";")[0].trim())) try {
                        return Bt(t)
                    } catch (r) {}
                    return k(t)
                }
                return t
            }

            function be(t, e, r) {
                const n = "object" === typeof t && null != t.throttleLimit ? t.throttleLimit : 12;
                ve.assertArgument(n > 0 && n % 1 === 0, "invalid connection throttle limit", "connection.throttleLimit", n);
                const i = "object" === typeof t ? t.throttleCallback : null,
                    o = "object" === typeof t && "number" === typeof t.throttleSlotInterval ? t.throttleSlotInterval : 100;
                ve.assertArgument(o > 0 && o % 1 === 0, "invalid connection throttle slot interval", "connection.throttleSlotInterval", o);
                const s = "object" === typeof t && !!t.errorPassThrough,
                    a = {};
                let u = null;
                const h = {
                    method: "GET"
                };
                let l = !1,
                    f = 12e4;
                if ("string" === typeof t) u = t;
                else if ("object" === typeof t) {
                    if (null != t && null != t.url || ve.throwArgumentError("missing URL", "connection.url", t), u = t.url, "number" === typeof t.timeout && t.timeout > 0 && (f = t.timeout), t.headers)
                        for (const e in t.headers) a[e.toLowerCase()] = {
                            key: e,
                            value: String(t.headers[e])
                        }, ["if-none-match", "if-modified-since"].indexOf(e.toLowerCase()) >= 0 && (l = !0);
                    if (h.allowGzip = !!t.allowGzip, null != t.user && null != t.password) {
                        "https:" !== u.substring(0, 6) && !0 !== t.allowInsecureAuthentication && ve.throwError("basic authentication requires a secure https url", g.errors.INVALID_ARGUMENT, {
                            argument: "url",
                            url: u,
                            user: t.user,
                            password: "[REDACTED]"
                        });
                        const e = t.user + ":" + t.password;
                        a["authorization"] = {
                            key: "Authorization",
                            value: "Basic " + ce(Ut(e))
                        }
                    }
                    null != t.skipFetchSetup && (h.skipFetchSetup = !!t.skipFetchSetup)
                }
                const c = new RegExp("^data:([a-z0-9-]+/[a-z0-9-]+);base64,(.*)$", "i"),
                    d = u ? u.match(c) : null;
                if (d) try {
                    const t = {
                        statusCode: 200,
                        statusMessage: "OK",
                        headers: {
                            "content-type": d[1]
                        },
                        body: fe(d[2])
                    };
                    let e = t.body;
                    return r && (e = r(t.body, t)), Promise.resolve(e)
                } catch (y) {
                    ve.throwError("processing response error", g.errors.SERVER_ERROR, {
                        body: we(d[1], d[2]),
                        error: y,
                        requestBody: null,
                        requestMethod: "GET",
                        url: u
                    })
                }
                e && (h.method = "POST", h.body = e, null == a["content-type"] && (a["content-type"] = {
                    key: "Content-Type",
                    value: "application/octet-stream"
                }), null == a["content-length"] && (a["content-length"] = {
                    key: "Content-Length",
                    value: String(e.length)
                }));
                const m = {};
                Object.keys(a).forEach(t => {
                    const e = a[t];
                    m[e.key] = e.value
                }), h.headers = m;
                const p = function() {
                        let t = null;
                        const e = new Promise((function(e, r) {
                                f && (t = setTimeout(() => {
                                    null != t && (t = null, r(ve.makeError("timeout", g.errors.TIMEOUT, {
                                        requestBody: we(h.body, m["content-type"]),
                                        requestMethod: h.method,
                                        timeout: f,
                                        url: u
                                    })))
                                }, f))
                            })),
                            r = function() {
                                null != t && (clearTimeout(t), t = null)
                            };
                        return {
                            promise: e,
                            cancel: r
                        }
                    }(),
                    v = function() {
                        return ge(this, void 0, void 0, (function*() {
                            for (let t = 0; t < n; t++) {
                                let e = null;
                                try {
                                    if (e = yield pe(u, h), t < n)
                                        if (301 === e.statusCode || 302 === e.statusCode) {
                                            const t = e.headers.location || "";
                                            if ("GET" === h.method && t.match(/^https:/)) {
                                                u = e.headers.location;
                                                continue
                                            }
                                        } else if (429 === e.statusCode) {
                                        let r = !0;
                                        if (i && (r = yield i(t, u)), r) {
                                            let r = 0;
                                            const n = e.headers["retry-after"];
                                            r = "string" === typeof n && n.match(/^[1-9][0-9]*$/) ? 1e3 * parseInt(n) : o * parseInt(String(Math.random() * Math.pow(2, t))), yield ye(r);
                                            continue
                                        }
                                    }
                                } catch (y) {
                                    e = y.response, null == e && (p.cancel(), ve.throwError("missing response", g.errors.SERVER_ERROR, {
                                        requestBody: we(h.body, m["content-type"]),
                                        requestMethod: h.method,
                                        serverError: y,
                                        url: u
                                    }))
                                }
                                let a = e.body;
                                if (l && 304 === e.statusCode ? a = null : !s && (e.statusCode < 200 || e.statusCode >= 300) && (p.cancel(), ve.throwError("bad response", g.errors.SERVER_ERROR, {
                                        status: e.statusCode,
                                        headers: e.headers,
                                        body: we(a, e.headers ? e.headers["content-type"] : null),
                                        requestBody: we(h.body, m["content-type"]),
                                        requestMethod: h.method,
                                        url: u
                                    })), r) try {
                                    const t = yield r(a, e);
                                    return p.cancel(), t
                                } catch (y) {
                                    if (y.throttleRetry && t < n) {
                                        let e = !0;
                                        if (i && (e = yield i(t, u)), e) {
                                            const e = o * parseInt(String(Math.random() * Math.pow(2, t)));
                                            yield ye(e);
                                            continue
                                        }
                                    }
                                    p.cancel(), ve.throwError("processing response error", g.errors.SERVER_ERROR, {
                                        body: we(a, e.headers ? e.headers["content-type"] : null),
                                        error: y,
                                        requestBody: we(h.body, m["content-type"]),
                                        requestMethod: h.method,
                                        url: u
                                    })
                                }
                                return p.cancel(), a
                            }
                            return ve.throwError("failed response", g.errors.SERVER_ERROR, {
                                requestBody: we(h.body, m["content-type"]),
                                requestMethod: h.method,
                                url: u
                            })
                        }))
                    }();
                return Promise.race([p.promise, v])
            }

            function Me(t, e, r) {
                let n = (t, e) => {
                        let n = null;
                        if (null != t) try {
                            n = JSON.parse(Bt(t))
                        } catch (i) {
                            ve.throwError("invalid JSON", g.errors.SERVER_ERROR, {
                                body: t,
                                error: i
                            })
                        }
                        return r && (n = r(n, e)), n
                    },
                    i = null;
                if (null != e) {
                    i = Ut(e);
                    const r = "string" === typeof t ? {
                        url: t
                    } : nt(t);
                    if (r.headers) {
                        const t = 0 !== Object.keys(r.headers).filter(t => "content-type" === t.toLowerCase()).length;
                        t || (r.headers = nt(r.headers), r.headers["content-type"] = "application/json")
                    } else r.headers = {
                        "content-type": "application/json"
                    };
                    t = r
                }
                return be(t, i, n)
            }

            function Ee(t, e) {
                return e || (e = {}), e = nt(e), null == e.floor && (e.floor = 0), null == e.ceiling && (e.ceiling = 1e4), null == e.interval && (e.interval = 250), new Promise((function(r, n) {
                    let i = null,
                        o = !1;
                    const s = () => !o && (o = !0, i && clearTimeout(i), !0);
                    e.timeout && (i = setTimeout(() => {
                        s() && n(new Error("timeout"))
                    }, e.timeout));
                    const a = e.retryLimit;
                    let u = 0;

                    function h() {
                        return t().then((function(t) {
                            if (void 0 !== t) s() && r(t);
                            else if (e.oncePoll) e.oncePoll.once("poll", h);
                            else if (e.onceBlock) e.onceBlock.once("block", h);
                            else if (!o) {
                                if (u++, u > a) return void(s() && n(new Error("retry limit reached")));
                                let t = e.interval * parseInt(String(Math.random() * Math.pow(2, u)));
                                t < e.floor && (t = e.floor), t > e.ceiling && (t = e.ceiling), setTimeout(h, t)
                            }
                            return null
                        }), (function(t) {
                            s() && n(t)
                        }))
                    }
                    h()
                }))
            }
            var Ne = r("8cfa"),
                Ae = r.n(Ne);
            const _e = "providers/5.6.4",
                Se = "rlp/5.6.0",
                Ie = new g(Se);

            function Re(t) {
                const e = [];
                while (t) e.unshift(255 & t), t >>= 8;
                return e
            }

            function Pe(t, e, r) {
                let n = 0;
                for (let i = 0; i < r; i++) n = 256 * n + t[e + i];
                return n
            }

            function ke(t) {
                if (Array.isArray(t)) {
                    let e = [];
                    if (t.forEach((function(t) {
                            e = e.concat(ke(t))
                        })), e.length <= 55) return e.unshift(192 + e.length), e;
                    const r = Re(e.length);
                    return r.unshift(247 + r.length), r.concat(e)
                }
                M(t) || Ie.throwArgumentError("RLP object must be BytesLike", "object", t);
                const e = Array.prototype.slice.call(A(t));
                if (1 === e.length && e[0] <= 127) return e;
                if (e.length <= 55) return e.unshift(128 + e.length), e;
                const r = Re(e.length);
                return r.unshift(183 + r.length), r.concat(e)
            }

            function xe(t) {
                return k(ke(t))
            }

            function Te(t, e, r, n) {
                const i = [];
                while (r < e + 1 + n) {
                    const o = Oe(t, r);
                    i.push(o.result), r += o.consumed, r > e + 1 + n && Ie.throwError("child data too short", g.errors.BUFFER_OVERRUN, {})
                }
                return {
                    consumed: 1 + n,
                    result: i
                }
            }

            function Oe(t, e) {
                if (0 === t.length && Ie.throwError("data too short", g.errors.BUFFER_OVERRUN, {}), t[e] >= 248) {
                    const r = t[e] - 247;
                    e + 1 + r > t.length && Ie.throwError("data short segment too short", g.errors.BUFFER_OVERRUN, {});
                    const n = Pe(t, e + 1, r);
                    return e + 1 + r + n > t.length && Ie.throwError("data long segment too short", g.errors.BUFFER_OVERRUN, {}), Te(t, e, e + 1 + r, r + n)
                }
                if (t[e] >= 192) {
                    const r = t[e] - 192;
                    return e + 1 + r > t.length && Ie.throwError("data array too short", g.errors.BUFFER_OVERRUN, {}), Te(t, e, e + 1, r)
                }
                if (t[e] >= 184) {
                    const r = t[e] - 183;
                    e + 1 + r > t.length && Ie.throwError("data array too short", g.errors.BUFFER_OVERRUN, {});
                    const n = Pe(t, e + 1, r);
                    e + 1 + r + n > t.length && Ie.throwError("data array too short", g.errors.BUFFER_OVERRUN, {});
                    const i = k(t.slice(e + 1 + r, e + 1 + r + n));
                    return {
                        consumed: 1 + r + n,
                        result: i
                    }
                }
                if (t[e] >= 128) {
                    const r = t[e] - 128;
                    e + 1 + r > t.length && Ie.throwError("data too short", g.errors.BUFFER_OVERRUN, {});
                    const n = k(t.slice(e + 1, e + 1 + r));
                    return {
                        consumed: 1 + r,
                        result: n
                    }
                }
                return {
                    consumed: 1,
                    result: k(t[e])
                }
            }

            function Ce(t) {
                const e = A(t),
                    r = Oe(e, 0);
                return r.consumed !== e.length && Ie.throwArgumentError("invalid rlp data", "data", t), r.result
            }
            const Ue = "address/5.6.0",
                Fe = new g(Ue);

            function Be(t) {
                R(t, 20) || Fe.throwArgumentError("invalid address", "address", t), t = t.toLowerCase();
                const e = t.substring(2).split(""),
                    r = new Uint8Array(40);
                for (let i = 0; i < 40; i++) r[i] = e[i].charCodeAt(0);
                const n = A(ne(r));
                for (let i = 0; i < 40; i += 2) n[i >> 1] >> 4 >= 8 && (e[i] = e[i].toUpperCase()), (15 & n[i >> 1]) >= 8 && (e[i + 1] = e[i + 1].toUpperCase());
                return "0x" + e.join("")
            }
            const Le = 9007199254740991;

            function De(t) {
                return Math.log10 ? Math.log10(t) : Math.log(t) / Math.LN10
            }
            const Ge = {};
            for (let Hi = 0; Hi < 10; Hi++) Ge[String(Hi)] = String(Hi);
            for (let Hi = 0; Hi < 26; Hi++) Ge[String.fromCharCode(65 + Hi)] = String(10 + Hi);
            const je = Math.floor(De(Le));

            function qe(t) {
                t = t.toUpperCase(), t = t.substring(4) + t.substring(0, 2) + "00";
                let e = t.split("").map(t => Ge[t]).join("");
                while (e.length >= je) {
                    let t = e.substring(0, je);
                    e = parseInt(t, 10) % 97 + e.substring(t.length)
                }
                let r = String(98 - parseInt(e, 10) % 97);
                while (r.length < 2) r = "0" + r;
                return r
            }

            function ze(t) {
                let e = null;
                if ("string" !== typeof t && Fe.throwArgumentError("invalid address", "address", t), t.match(/^(0x)?[0-9a-fA-F]{40}$/)) "0x" !== t.substring(0, 2) && (t = "0x" + t), e = Be(t), t.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && e !== t && Fe.throwArgumentError("bad address checksum", "address", t);
                else if (t.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
                    t.substring(2, 4) !== qe(t) && Fe.throwArgumentError("bad icap checksum", "address", t), e = Z(t.substring(4));
                    while (e.length < 40) e = "0" + e;
                    e = Be("0x" + e)
                } else Fe.throwArgumentError("invalid address", "address", t);
                return e
            }

            function Ke(t) {
                let e = null;
                try {
                    e = ze(t.from)
                } catch (n) {
                    Fe.throwArgumentError("missing from address", "transaction", t)
                }
                const r = S(A(K.from(t.nonce).toHexString()));
                return ze(T(ne(xe([e, r])), 12))
            }
            const We = "0x0000000000000000000000000000000000000000",
                Ve = K.from(0);
            var He = r("df87");
            const Je = "signing-key/5.6.0",
                Ze = new g(Je);
            let Xe = null;

            function $e() {
                return Xe || (Xe = new He["a"]("secp256k1")), Xe
            }
            class Ye {
                constructor(t) {
                    Q(this, "curve", "secp256k1"), Q(this, "privateKey", k(t));
                    const e = $e().keyFromPrivate(A(this.privateKey));
                    Q(this, "publicKey", "0x" + e.getPublic(!1, "hex")), Q(this, "compressedPublicKey", "0x" + e.getPublic(!0, "hex")), Q(this, "_isSigningKey", !0)
                }
                _addPoint(t) {
                    const e = $e().keyFromPublic(A(this.publicKey)),
                        r = $e().keyFromPublic(A(t));
                    return "0x" + e.pub.add(r.pub).encodeCompressed("hex")
                }
                signDigest(t) {
                    const e = $e().keyFromPrivate(A(this.privateKey)),
                        r = A(t);
                    32 !== r.length && Ze.throwArgumentError("bad digest length", "digest", t);
                    const n = e.sign(r, {
                        canonical: !0
                    });
                    return B({
                        recoveryParam: n.recoveryParam,
                        r: F("0x" + n.r.toString(16), 32),
                        s: F("0x" + n.s.toString(16), 32)
                    })
                }
                computeSharedSecret(t) {
                    const e = $e().keyFromPrivate(A(this.privateKey)),
                        r = $e().keyFromPublic(A(tr(t)));
                    return F("0x" + e.derive(r.getPublic()).toString(16), 32)
                }
                static isSigningKey(t) {
                    return !(!t || !t._isSigningKey)
                }
            }

            function Qe(t, e) {
                const r = B(e),
                    n = {
                        r: A(r.r),
                        s: A(r.s)
                    };
                return "0x" + $e().recoverPubKey(A(t), n, r.recoveryParam).encode("hex", !1)
            }

            function tr(t, e) {
                const r = A(t);
                if (32 === r.length) {
                    const t = new Ye(r);
                    return e ? "0x" + $e().keyFromPrivate(r).getPublic(!0, "hex") : t.publicKey
                }
                return 33 === r.length ? e ? k(r) : "0x" + $e().keyFromPublic(r).getPublic(!1, "hex") : 65 === r.length ? e ? "0x" + $e().keyFromPublic(r).getPublic(!0, "hex") : k(r) : Ze.throwArgumentError("invalid public or private key", "key", "[REDACTED]")
            }
            const er = "transactions/5.6.0",
                rr = new g(er);
            var nr;

            function ir(t) {
                return "0x" === t ? null : ze(t)
            }

            function or(t) {
                return "0x" === t ? Ve : K.from(t)
            }(function(t) {
                t[t["legacy"] = 0] = "legacy", t[t["eip2930"] = 1] = "eip2930", t[t["eip1559"] = 2] = "eip1559"
            })(nr || (nr = {}));

            function sr(t) {
                const e = tr(t);
                return ze(T(ne(T(e, 1)), 12))
            }

            function ar(t, e) {
                return sr(Qe(A(t), e))
            }

            function ur(t, e) {
                const r = S(K.from(t).toHexString());
                return r.length > 32 && rr.throwArgumentError("invalid length for " + e, "transaction:" + e, t), r
            }

            function hr(t, e) {
                return {
                    address: ze(t),
                    storageKeys: (e || []).map((e, r) => (32 !== x(e) && rr.throwArgumentError("invalid access list storageKey", `accessList[${t}:${r}]`, e), e.toLowerCase()))
                }
            }

            function lr(t) {
                if (Array.isArray(t)) return t.map((t, e) => Array.isArray(t) ? (t.length > 2 && rr.throwArgumentError("access list expected to be [ address, storageKeys[] ]", `value[${e}]`, t), hr(t[0], t[1])) : hr(t.address, t.storageKeys));
                const e = Object.keys(t).map(e => {
                    const r = t[e].reduce((t, e) => (t[e] = !0, t), {});
                    return hr(e, Object.keys(r).sort())
                });
                return e.sort((t, e) => t.address.localeCompare(e.address)), e
            }

            function fr(t) {
                return lr(t).map(t => [t.address, t.storageKeys])
            }

            function cr(t, e) {
                if (null != t.gasPrice) {
                    const e = K.from(t.gasPrice),
                        r = K.from(t.maxFeePerGas || 0);
                    e.eq(r) || rr.throwArgumentError("mismatch EIP-1559 gasPrice != maxFeePerGas", "tx", {
                        gasPrice: e,
                        maxFeePerGas: r
                    })
                }
                const r = [ur(t.chainId || 0, "chainId"), ur(t.nonce || 0, "nonce"), ur(t.maxPriorityFeePerGas || 0, "maxPriorityFeePerGas"), ur(t.maxFeePerGas || 0, "maxFeePerGas"), ur(t.gasLimit || 0, "gasLimit"), null != t.to ? ze(t.to) : "0x", ur(t.value || 0, "value"), t.data || "0x", fr(t.accessList || [])];
                if (e) {
                    const t = B(e);
                    r.push(ur(t.recoveryParam, "recoveryParam")), r.push(S(t.r)), r.push(S(t.s))
                }
                return O(["0x02", xe(r)])
            }

            function dr(t, e) {
                const r = [ur(t.chainId || 0, "chainId"), ur(t.nonce || 0, "nonce"), ur(t.gasPrice || 0, "gasPrice"), ur(t.gasLimit || 0, "gasLimit"), null != t.to ? ze(t.to) : "0x", ur(t.value || 0, "value"), t.data || "0x", fr(t.accessList || [])];
                if (e) {
                    const t = B(e);
                    r.push(ur(t.recoveryParam, "recoveryParam")), r.push(S(t.r)), r.push(S(t.s))
                }
                return O(["0x01", xe(r)])
            }

            function mr(t, e, r) {
                try {
                    const r = or(e[0]).toNumber();
                    if (0 !== r && 1 !== r) throw new Error("bad recid");
                    t.v = r
                } catch (n) {
                    rr.throwArgumentError("invalid v for transaction type: 1", "v", e[0])
                }
                t.r = F(e[1], 32), t.s = F(e[2], 32);
                try {
                    const e = ne(r(t));
                    t.from = ar(e, {
                        r: t.r,
                        s: t.s,
                        recoveryParam: t.v
                    })
                } catch (n) {
                    console.log(n)
                }
            }

            function pr(t) {
                const e = Ce(t.slice(1));
                9 !== e.length && 12 !== e.length && rr.throwArgumentError("invalid component count for transaction type: 2", "payload", k(t));
                const r = or(e[2]),
                    n = or(e[3]),
                    i = {
                        type: 2,
                        chainId: or(e[0]).toNumber(),
                        nonce: or(e[1]).toNumber(),
                        maxPriorityFeePerGas: r,
                        maxFeePerGas: n,
                        gasPrice: null,
                        gasLimit: or(e[4]),
                        to: ir(e[5]),
                        value: or(e[6]),
                        data: e[7],
                        accessList: lr(e[8])
                    };
                return 9 === e.length || (i.hash = ne(t), mr(i, e.slice(9), cr)), i
            }

            function gr(t) {
                const e = Ce(t.slice(1));
                8 !== e.length && 11 !== e.length && rr.throwArgumentError("invalid component count for transaction type: 1", "payload", k(t));
                const r = {
                    type: 1,
                    chainId: or(e[0]).toNumber(),
                    nonce: or(e[1]).toNumber(),
                    gasPrice: or(e[2]),
                    gasLimit: or(e[3]),
                    to: ir(e[4]),
                    value: or(e[5]),
                    data: e[6],
                    accessList: lr(e[7])
                };
                return 8 === e.length || (r.hash = ne(t), mr(r, e.slice(8), dr)), r
            }

            function vr(t) {
                const e = Ce(t);
                9 !== e.length && 6 !== e.length && rr.throwArgumentError("invalid raw transaction", "rawTransaction", t);
                const r = {
                    nonce: or(e[0]).toNumber(),
                    gasPrice: or(e[1]),
                    gasLimit: or(e[2]),
                    to: ir(e[3]),
                    value: or(e[4]),
                    data: e[5],
                    chainId: 0
                };
                if (6 === e.length) return r;
                try {
                    r.v = K.from(e[6]).toNumber()
                } catch (n) {
                    return console.log(n), r
                }
                if (r.r = F(e[7], 32), r.s = F(e[8], 32), K.from(r.r).isZero() && K.from(r.s).isZero()) r.chainId = r.v, r.v = 0;
                else {
                    r.chainId = Math.floor((r.v - 35) / 2), r.chainId < 0 && (r.chainId = 0);
                    let i = r.v - 27;
                    const o = e.slice(0, 6);
                    0 !== r.chainId && (o.push(k(r.chainId)), o.push("0x"), o.push("0x"), i -= 2 * r.chainId + 8);
                    const s = ne(xe(o));
                    try {
                        r.from = ar(s, {
                            r: k(r.r),
                            s: k(r.s),
                            recoveryParam: i
                        })
                    } catch (n) {
                        console.log(n)
                    }
                    r.hash = ne(t)
                }
                return r.type = null, r
            }

            function yr(t) {
                const e = A(t);
                if (e[0] > 127) return vr(e);
                switch (e[0]) {
                    case 1:
                        return gr(e);
                    case 2:
                        return pr(e);
                    default:
                        break
                }
                return rr.throwError("unsupported transaction type: " + e[0], g.errors.UNSUPPORTED_OPERATION, {
                    operation: "parseTransaction",
                    transactionType: e[0]
                })
            }
            const wr = new g(_e);
            class br {
                constructor() {
                    wr.checkNew(new.target, br), this.formats = this.getDefaultFormats()
                }
                getDefaultFormats() {
                    const t = {},
                        e = this.address.bind(this),
                        r = this.bigNumber.bind(this),
                        n = this.blockTag.bind(this),
                        i = this.data.bind(this),
                        o = this.hash.bind(this),
                        s = this.hex.bind(this),
                        a = this.number.bind(this),
                        u = this.type.bind(this),
                        h = t => this.data(t, !0);
                    return t.transaction = {
                        hash: o,
                        type: u,
                        accessList: br.allowNull(this.accessList.bind(this), null),
                        blockHash: br.allowNull(o, null),
                        blockNumber: br.allowNull(a, null),
                        transactionIndex: br.allowNull(a, null),
                        confirmations: br.allowNull(a, null),
                        from: e,
                        gasPrice: br.allowNull(r),
                        maxPriorityFeePerGas: br.allowNull(r),
                        maxFeePerGas: br.allowNull(r),
                        gasLimit: r,
                        to: br.allowNull(e, null),
                        value: r,
                        nonce: a,
                        data: i,
                        r: br.allowNull(this.uint256),
                        s: br.allowNull(this.uint256),
                        v: br.allowNull(a),
                        creates: br.allowNull(e, null),
                        raw: br.allowNull(i)
                    }, t.transactionRequest = {
                        from: br.allowNull(e),
                        nonce: br.allowNull(a),
                        gasLimit: br.allowNull(r),
                        gasPrice: br.allowNull(r),
                        maxPriorityFeePerGas: br.allowNull(r),
                        maxFeePerGas: br.allowNull(r),
                        to: br.allowNull(e),
                        value: br.allowNull(r),
                        data: br.allowNull(h),
                        type: br.allowNull(a),
                        accessList: br.allowNull(this.accessList.bind(this), null)
                    }, t.receiptLog = {
                        transactionIndex: a,
                        blockNumber: a,
                        transactionHash: o,
                        address: e,
                        topics: br.arrayOf(o),
                        data: i,
                        logIndex: a,
                        blockHash: o
                    }, t.receipt = {
                        to: br.allowNull(this.address, null),
                        from: br.allowNull(this.address, null),
                        contractAddress: br.allowNull(e, null),
                        transactionIndex: a,
                        root: br.allowNull(s),
                        gasUsed: r,
                        logsBloom: br.allowNull(i),
                        blockHash: o,
                        transactionHash: o,
                        logs: br.arrayOf(this.receiptLog.bind(this)),
                        blockNumber: a,
                        confirmations: br.allowNull(a, null),
                        cumulativeGasUsed: r,
                        effectiveGasPrice: br.allowNull(r),
                        status: br.allowNull(a),
                        type: u
                    }, t.block = {
                        hash: br.allowNull(o),
                        parentHash: o,
                        number: a,
                        timestamp: a,
                        nonce: br.allowNull(s),
                        difficulty: this.difficulty.bind(this),
                        gasLimit: r,
                        gasUsed: r,
                        miner: br.allowNull(e),
                        extraData: i,
                        transactions: br.allowNull(br.arrayOf(o)),
                        baseFeePerGas: br.allowNull(r)
                    }, t.blockWithTransactions = nt(t.block), t.blockWithTransactions.transactions = br.allowNull(br.arrayOf(this.transactionResponse.bind(this))), t.filter = {
                        fromBlock: br.allowNull(n, void 0),
                        toBlock: br.allowNull(n, void 0),
                        blockHash: br.allowNull(o, void 0),
                        address: br.allowNull(e, void 0),
                        topics: br.allowNull(this.topics.bind(this), void 0)
                    }, t.filterLog = {
                        blockNumber: br.allowNull(a),
                        blockHash: br.allowNull(o),
                        transactionIndex: a,
                        removed: br.allowNull(this.boolean.bind(this)),
                        address: e,
                        data: br.allowFalsish(i, "0x"),
                        topics: br.arrayOf(o),
                        transactionHash: o,
                        logIndex: a
                    }, t
                }
                accessList(t) {
                    return lr(t || [])
                }
                number(t) {
                    return "0x" === t ? 0 : K.from(t).toNumber()
                }
                type(t) {
                    return "0x" === t || null == t ? 0 : K.from(t).toNumber()
                }
                bigNumber(t) {
                    return K.from(t)
                }
                boolean(t) {
                    if ("boolean" === typeof t) return t;
                    if ("string" === typeof t) {
                        if (t = t.toLowerCase(), "true" === t) return !0;
                        if ("false" === t) return !1
                    }
                    throw new Error("invalid boolean - " + t)
                }
                hex(t, e) {
                    return "string" === typeof t && (e || "0x" === t.substring(0, 2) || (t = "0x" + t), R(t)) ? t.toLowerCase() : wr.throwArgumentError("invalid hash", "value", t)
                }
                data(t, e) {
                    const r = this.hex(t, e);
                    if (r.length % 2 !== 0) throw new Error("invalid data; odd-length - " + t);
                    return r
                }
                address(t) {
                    return ze(t)
                }
                callAddress(t) {
                    if (!R(t, 32)) return null;
                    const e = ze(T(t, 12));
                    return e === We ? null : e
                }
                contractAddress(t) {
                    return Ke(t)
                }
                blockTag(t) {
                    if (null == t) return "latest";
                    if ("earliest" === t) return "0x0";
                    if ("latest" === t || "pending" === t) return t;
                    if ("number" === typeof t || R(t)) return C(t);
                    throw new Error("invalid blockTag")
                }
                hash(t, e) {
                    const r = this.hex(t, e);
                    return 32 !== x(r) ? wr.throwArgumentError("invalid hash", "value", t) : r
                }
                difficulty(t) {
                    if (null == t) return null;
                    const e = K.from(t);
                    try {
                        return e.toNumber()
                    } catch (r) {}
                    return null
                }
                uint256(t) {
                    if (!R(t)) throw new Error("invalid uint256");
                    return F(t, 32)
                }
                _block(t, e) {
                    null != t.author && null == t.miner && (t.miner = t.author);
                    const r = null != t._difficulty ? t._difficulty : t.difficulty,
                        n = br.check(e, t);
                    return n._difficulty = null == r ? null : K.from(r), n
                }
                block(t) {
                    return this._block(t, this.formats.block)
                }
                blockWithTransactions(t) {
                    return this._block(t, this.formats.blockWithTransactions)
                }
                transactionRequest(t) {
                    return br.check(this.formats.transactionRequest, t)
                }
                transactionResponse(t) {
                    null != t.gas && null == t.gasLimit && (t.gasLimit = t.gas), t.to && K.from(t.to).isZero() && (t.to = "0x0000000000000000000000000000000000000000"), null != t.input && null == t.data && (t.data = t.input), null == t.to && null == t.creates && (t.creates = this.contractAddress(t)), 1 !== t.type && 2 !== t.type || null != t.accessList || (t.accessList = []);
                    const e = br.check(this.formats.transaction, t);
                    if (null != t.chainId) {
                        let r = t.chainId;
                        R(r) && (r = K.from(r).toNumber()), e.chainId = r
                    } else {
                        let r = t.networkId;
                        null == r && null == e.v && (r = t.chainId), R(r) && (r = K.from(r).toNumber()), "number" !== typeof r && null != e.v && (r = (e.v - 35) / 2, r < 0 && (r = 0), r = parseInt(r)), "number" !== typeof r && (r = 0), e.chainId = r
                    }
                    return e.blockHash && "x" === e.blockHash.replace(/0/g, "") && (e.blockHash = null), e
                }
                transaction(t) {
                    return yr(t)
                }
                receiptLog(t) {
                    return br.check(this.formats.receiptLog, t)
                }
                receipt(t) {
                    const e = br.check(this.formats.receipt, t);
                    if (null != e.root)
                        if (e.root.length <= 4) {
                            const t = K.from(e.root).toNumber();
                            0 === t || 1 === t ? (null != e.status && e.status !== t && wr.throwArgumentError("alt-root-status/status mismatch", "value", {
                                root: e.root,
                                status: e.status
                            }), e.status = t, delete e.root) : wr.throwArgumentError("invalid alt-root-status", "value.root", e.root)
                        } else 66 !== e.root.length && wr.throwArgumentError("invalid root hash", "value.root", e.root);
                    return null != e.status && (e.byzantium = !0), e
                }
                topics(t) {
                    return Array.isArray(t) ? t.map(t => this.topics(t)) : null != t ? this.hash(t, !0) : null
                }
                filter(t) {
                    return br.check(this.formats.filter, t)
                }
                filterLog(t) {
                    return br.check(this.formats.filterLog, t)
                }
                static check(t, e) {
                    const r = {};
                    for (const i in t) try {
                        const n = t[i](e[i]);
                        void 0 !== n && (r[i] = n)
                    } catch (n) {
                        throw n.checkKey = i, n.checkValue = e[i], n
                    }
                    return r
                }
                static allowNull(t, e) {
                    return function(r) {
                        return null == r ? e : t(r)
                    }
                }
                static allowFalsish(t, e) {
                    return function(r) {
                        return r ? t(r) : e
                    }
                }
                static arrayOf(t) {
                    return function(e) {
                        if (!Array.isArray(e)) throw new Error("not an array");
                        const r = [];
                        return e.forEach((function(e) {
                            r.push(t(e))
                        })), r
                    }
                }
            }

            function Mr(t) {
                return t && "function" === typeof t.isCommunityResource
            }

            function Er(t) {
                return Mr(t) && t.isCommunityResource()
            }
            let Nr = !1;

            function Ar() {
                Nr || (Nr = !0, console.log("========= NOTICE ========="), console.log("Request-Rate Exceeded  (this message will not be repeated)"), console.log(""), console.log("The default API keys for each service are provided as a highly-throttled,"), console.log("community resource for low-traffic projects and early prototyping."), console.log(""), console.log("While your application will continue to function, we highly recommended"), console.log("signing up for your own API keys to improve performance, increase your"), console.log("request rate/limit and enable other perks, such as metrics and advanced APIs."), console.log(""), console.log("For more details: https://docs.ethers.io/api-keys/"), console.log("=========================="))
            }
            var _r = function(t, e, r, n) {
                function i(t) {
                    return t instanceof r ? t : new r((function(e) {
                        e(t)
                    }))
                }
                return new(r || (r = Promise))((function(r, o) {
                    function s(t) {
                        try {
                            u(n.next(t))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function a(t) {
                        try {
                            u(n["throw"](t))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function u(t) {
                        t.done ? r(t.value) : i(t.value).then(s, a)
                    }
                    u((n = n.apply(t, e || [])).next())
                }))
            };
            const Sr = new g(_e),
                Ir = 10;

            function Rr(t) {
                return null == t ? "null" : (32 !== x(t) && Sr.throwArgumentError("invalid topic", "topic", t), t.toLowerCase())
            }

            function Pr(t) {
                t = t.slice();
                while (t.length > 0 && null == t[t.length - 1]) t.pop();
                return t.map(t => {
                    if (Array.isArray(t)) {
                        const e = {};
                        t.forEach(t => {
                            e[Rr(t)] = !0
                        });
                        const r = Object.keys(e);
                        return r.sort(), r.join("|")
                    }
                    return Rr(t)
                }).join("&")
            }

            function kr(t) {
                return "" === t ? [] : t.split(/&/g).map(t => {
                    if ("" === t) return [];
                    const e = t.split("|").map(t => "null" === t ? null : t);
                    return 1 === e.length ? e[0] : e
                })
            }

            function xr(t) {
                if ("string" === typeof t) {
                    if (t = t.toLowerCase(), 32 === x(t)) return "tx:" + t;
                    if (-1 === t.indexOf(":")) return t
                } else {
                    if (Array.isArray(t)) return "filter:*:" + Pr(t);
                    if (ct.isForkEvent(t)) throw Sr.warn("not implemented"), new Error("not implemented");
                    if (t && "object" === typeof t) return "filter:" + (t.address || "*") + ":" + Pr(t.topics || [])
                }
                throw new Error("invalid event - " + t)
            }

            function Tr() {
                return (new Date).getTime()
            }

            function Or(t) {
                return new Promise(e => {
                    setTimeout(e, t)
                })
            }
            const Cr = ["block", "network", "pending", "poll"];
            class Ur {
                constructor(t, e, r) {
                    Q(this, "tag", t), Q(this, "listener", e), Q(this, "once", r), this._lastBlockNumber = -2, this._inflight = !1
                }
                get event() {
                    switch (this.type) {
                        case "tx":
                            return this.hash;
                        case "filter":
                            return this.filter
                    }
                    return this.tag
                }
                get type() {
                    return this.tag.split(":")[0]
                }
                get hash() {
                    const t = this.tag.split(":");
                    return "tx" !== t[0] ? null : t[1]
                }
                get filter() {
                    const t = this.tag.split(":");
                    if ("filter" !== t[0]) return null;
                    const e = t[1],
                        r = kr(t[2]),
                        n = {};
                    return r.length > 0 && (n.topics = r), e && "*" !== e && (n.address = e), n
                }
                pollable() {
                    return this.tag.indexOf(":") >= 0 || Cr.indexOf(this.tag) >= 0
                }
            }
            const Fr = {
                0: {
                    symbol: "btc",
                    p2pkh: 0,
                    p2sh: 5,
                    prefix: "bc"
                },
                2: {
                    symbol: "ltc",
                    p2pkh: 48,
                    p2sh: 50,
                    prefix: "ltc"
                },
                3: {
                    symbol: "doge",
                    p2pkh: 30,
                    p2sh: 22
                },
                60: {
                    symbol: "eth",
                    ilk: "eth"
                },
                61: {
                    symbol: "etc",
                    ilk: "eth"
                },
                700: {
                    symbol: "xdai",
                    ilk: "eth"
                }
            };

            function Br(t) {
                return F(K.from(t).toHexString(), 32)
            }

            function Lr(t) {
                return At["a"].encode(_([t, T(Object(le["c"])(Object(le["c"])(t)), 0, 4)]))
            }
            const Dr = new RegExp("^(ipfs)://(.*)$", "i"),
                Gr = [new RegExp("^(https)://(.*)$", "i"), new RegExp("^(data):(.*)$", "i"), Dr, new RegExp("^eip155:[0-9]+/(erc[0-9]+):(.*)$", "i")];

            function jr(t, e) {
                try {
                    return Bt(qr(t, e))
                } catch (r) {}
                return null
            }

            function qr(t, e) {
                if ("0x" === t) return null;
                const r = K.from(T(t, e, e + 32)).toNumber(),
                    n = K.from(T(t, r, r + 32)).toNumber();
                return T(t, r + 32, r + 32 + n)
            }

            function zr(t) {
                return t.match(/^ipfs:\/\/ipfs\//i) ? t = t.substring(12) : t.match(/^ipfs:\/\//i) ? t = t.substring(7) : Sr.throwArgumentError("unsupported IPFS format", "link", t), "https://gateway.ipfs.io/ipfs/" + t
            }

            function Kr(t) {
                const e = A(t);
                if (e.length > 32) throw new Error("internal; should not happen");
                const r = new Uint8Array(32);
                return r.set(e, 32 - e.length), r
            }

            function Wr(t) {
                if (t.length % 32 === 0) return t;
                const e = new Uint8Array(32 * Math.ceil(t.length / 32));
                return e.set(t), e
            }

            function Vr(t) {
                const e = [];
                let r = 0;
                for (let n = 0; n < t.length; n++) e.push(null), r += 32;
                for (let n = 0; n < t.length; n++) {
                    const i = A(t[n]);
                    e[n] = Kr(r), e.push(Kr(i.length)), e.push(Wr(i)), r += 32 + 32 * Math.ceil(i.length / 32)
                }
                return O(e)
            }
            class Hr {
                constructor(t, e, r, n) {
                    Q(this, "provider", t), Q(this, "name", r), Q(this, "address", t.formatter.address(e)), Q(this, "_resolvedAddress", n)
                }
                supportsWildcard() {
                    return this._supportsEip2544 || (this._supportsEip2544 = this.provider.call({
                        to: this.address,
                        data: "0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000"
                    }).then(t => K.from(t).eq(1)).catch(t => {
                        if (t.code === g.errors.CALL_EXCEPTION) return !1;
                        throw this._supportsEip2544 = null, t
                    })), this._supportsEip2544
                }
                _fetch(t, e) {
                    return _r(this, void 0, void 0, (function*() {
                        const r = {
                            to: this.address,
                            ccipReadEnabled: !0,
                            data: O([t, ue(this.name), e || "0x"])
                        };
                        let n = !1;
                        (yield this.supportsWildcard()) && (n = !0, r.data = O(["0x9061b923", Vr([he(this.name), r.data])]));
                        try {
                            let t = yield this.provider.call(r);
                            return A(t).length % 32 === 4 && Sr.throwError("resolver threw error", g.errors.CALL_EXCEPTION, {
                                transaction: r,
                                data: t
                            }), n && (t = qr(t, 0)), t
                        } catch (i) {
                            if (i.code === g.errors.CALL_EXCEPTION) return null;
                            throw i
                        }
                    }))
                }
                _fetchBytes(t, e) {
                    return _r(this, void 0, void 0, (function*() {
                        const r = yield this._fetch(t, e);
                        return null != r ? qr(r, 0) : null
                    }))
                }
                _getAddress(t, e) {
                    const r = Fr[String(t)];
                    if (null == r && Sr.throwError("unsupported coin type: " + t, g.errors.UNSUPPORTED_OPERATION, {
                            operation: `getAddress(${t})`
                        }), "eth" === r.ilk) return this.provider.formatter.address(e);
                    const n = A(e);
                    if (null != r.p2pkh) {
                        const t = e.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);
                        if (t) {
                            const e = parseInt(t[1], 16);
                            if (t[2].length === 2 * e && e >= 1 && e <= 75) return Lr(_([
                                [r.p2pkh], "0x" + t[2]
                            ]))
                        }
                    }
                    if (null != r.p2sh) {
                        const t = e.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);
                        if (t) {
                            const e = parseInt(t[1], 16);
                            if (t[2].length === 2 * e && e >= 1 && e <= 75) return Lr(_([
                                [r.p2sh], "0x" + t[2]
                            ]))
                        }
                    }
                    if (null != r.prefix) {
                        const t = n[1];
                        let e = n[0];
                        if (0 === e ? 20 !== t && 32 !== t && (e = -1) : e = -1, e >= 0 && n.length === 2 + t && t >= 1 && t <= 75) {
                            const t = Ae.a.toWords(n.slice(2));
                            return t.unshift(e), Ae.a.encode(r.prefix, t)
                        }
                    }
                    return null
                }
                getAddress(t) {
                    return _r(this, void 0, void 0, (function*() {
                        if (null == t && (t = 60), 60 === t) try {
                            const t = yield this._fetch("0x3b3b57de");
                            return "0x" === t || t === _t ? null : this.provider.formatter.callAddress(t)
                        } catch (n) {
                            if (n.code === g.errors.CALL_EXCEPTION) return null;
                            throw n
                        }
                        const e = yield this._fetchBytes("0xf1cb7e06", Br(t));
                        if (null == e || "0x" === e) return null;
                        const r = this._getAddress(t, e);
                        return null == r && Sr.throwError("invalid or unsupported coin data", g.errors.UNSUPPORTED_OPERATION, {
                            operation: `getAddress(${t})`,
                            coinType: t,
                            data: e
                        }), r
                    }))
                }
                getAvatar() {
                    return _r(this, void 0, void 0, (function*() {
                        const t = [{
                            type: "name",
                            content: this.name
                        }];
                        try {
                            const e = yield this.getText("avatar");
                            if (null == e) return null;
                            for (let r = 0; r < Gr.length; r++) {
                                const n = e.match(Gr[r]);
                                if (null == n) continue;
                                const i = n[1].toLowerCase();
                                switch (i) {
                                    case "https":
                                        return t.push({
                                            type: "url",
                                            content: e
                                        }), {
                                            linkage: t,
                                            url: e
                                        };
                                    case "data":
                                        return t.push({
                                            type: "data",
                                            content: e
                                        }), {
                                            linkage: t,
                                            url: e
                                        };
                                    case "ipfs":
                                        return t.push({
                                            type: "ipfs",
                                            content: e
                                        }), {
                                            linkage: t,
                                            url: zr(e)
                                        };
                                    case "erc721":
                                    case "erc1155":
                                        {
                                            const r = "erc721" === i ? "0xc87b56dd" : "0x0e89341c";t.push({
                                                type: i,
                                                content: e
                                            });
                                            const o = this._resolvedAddress || (yield this.getAddress()),
                                                s = (n[2] || "").split("/");
                                            if (2 !== s.length) return null;
                                            const a = yield this.provider.formatter.address(s[0]), u = F(K.from(s[1]).toHexString(), 32);
                                            if ("erc721" === i) {
                                                const e = this.provider.formatter.callAddress(yield this.provider.call({
                                                    to: a,
                                                    data: O(["0x6352211e", u])
                                                }));
                                                if (o !== e) return null;
                                                t.push({
                                                    type: "owner",
                                                    content: e
                                                })
                                            } else if ("erc1155" === i) {
                                                const e = K.from(yield this.provider.call({
                                                    to: a,
                                                    data: O(["0x00fdd58e", F(o, 32), u])
                                                }));
                                                if (e.isZero()) return null;
                                                t.push({
                                                    type: "balance",
                                                    content: e.toString()
                                                })
                                            }
                                            const h = {
                                                to: this.provider.formatter.address(s[0]),
                                                data: O([r, u])
                                            };
                                            let l = jr(yield this.provider.call(h), 0);
                                            if (null == l) return null;t.push({
                                                type: "metadata-url-base",
                                                content: l
                                            }),
                                            "erc1155" === i && (l = l.replace("{id}", u.substring(2)), t.push({
                                                type: "metadata-url-expanded",
                                                content: l
                                            })),
                                            l.match(/^ipfs:/i) && (l = zr(l)),
                                            t.push({
                                                type: "metadata-url",
                                                content: l
                                            });
                                            const f = yield Me(l);
                                            if (!f) return null;t.push({
                                                type: "metadata",
                                                content: JSON.stringify(f)
                                            });
                                            let c = f.image;
                                            if ("string" !== typeof c) return null;
                                            if (c.match(/^(https:\/\/|data:)/i));
                                            else {
                                                const e = c.match(Dr);
                                                if (null == e) return null;
                                                t.push({
                                                    type: "url-ipfs",
                                                    content: c
                                                }), c = zr(c)
                                            }
                                            return t.push({
                                                type: "url",
                                                content: c
                                            }),
                                            {
                                                linkage: t,
                                                url: c
                                            }
                                        }
                                }
                            }
                        } catch (e) {}
                        return null
                    }))
                }
                getContentHash() {
                    return _r(this, void 0, void 0, (function*() {
                        const t = yield this._fetchBytes("0xbc1c58d1");
                        if (null == t || "0x" === t) return null;
                        const e = t.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);
                        if (e) {
                            const t = parseInt(e[3], 16);
                            if (e[4].length === 2 * t) return "ipfs://" + At["a"].encode("0x" + e[1])
                        }
                        const r = t.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);
                        if (r) {
                            const t = parseInt(r[3], 16);
                            if (r[4].length === 2 * t) return "ipns://" + At["a"].encode("0x" + r[1])
                        }
                        const n = t.match(/^0xe40101fa011b20([0-9a-f]*)$/);
                        return n && 64 === n[1].length ? "bzz://" + n[1] : Sr.throwError("invalid or unsupported content hash data", g.errors.UNSUPPORTED_OPERATION, {
                            operation: "getContentHash()",
                            data: t
                        })
                    }))
                }
                getText(t) {
                    return _r(this, void 0, void 0, (function*() {
                        let e = Ut(t);
                        e = _([Br(64), Br(e.length), e]), e.length % 32 !== 0 && (e = _([e, F("0x", 32 - t.length % 32)]));
                        const r = yield this._fetchBytes("0x59d1d43c", k(e));
                        return null == r || "0x" === r ? null : Bt(r)
                    }))
                }
            }
            let Jr = null,
                Zr = 1;
            class Xr extends dt {
                constructor(t) {
                    if (Sr.checkNew(new.target, dt), super(), this._events = [], this._emitted = {
                            block: -2
                        }, this.disableCcipRead = !1, this.formatter = new.target.getFormatter(), Q(this, "anyNetwork", "any" === t), this.anyNetwork && (t = this.detectNetwork()), t instanceof Promise) this._networkPromise = t, t.catch(t => {}), this._ready().catch(t => {});
                    else {
                        const e = tt(new.target, "getNetwork")(t);
                        e ? (Q(this, "_network", e), this.emit("network", e, null)) : Sr.throwArgumentError("invalid network", "network", t)
                    }
                    this._maxInternalBlockNumber = -1024, this._lastBlockNumber = -2, this._maxFilterBlockRange = 10, this._pollingInterval = 4e3, this._fastQueryDate = 0
                }
                _ready() {
                    return _r(this, void 0, void 0, (function*() {
                        if (null == this._network) {
                            let e = null;
                            if (this._networkPromise) try {
                                e = yield this._networkPromise
                            } catch (t) {}
                            null == e && (e = yield this.detectNetwork()), e || Sr.throwError("no network detected", g.errors.UNKNOWN_ERROR, {}), null == this._network && (this.anyNetwork ? this._network = e : Q(this, "_network", e), this.emit("network", e, null))
                        }
                        return this._network
                    }))
                }
                get ready() {
                    return Ee(() => this._ready().then(t => t, t => {
                        if (t.code !== g.errors.NETWORK_ERROR || "noNetwork" !== t.event) throw t
                    }))
                }
                static getFormatter() {
                    return null == Jr && (Jr = new br), Jr
                }
                static getNetwork(t) {
                    return Nt(null == t ? "homestead" : t)
                }
                ccipReadFetch(t, e, r) {
                    return _r(this, void 0, void 0, (function*() {
                        if (this.disableCcipRead || 0 === r.length) return null;
                        const n = t.to.toLowerCase(),
                            i = e.toLowerCase(),
                            o = [];
                        for (let t = 0; t < r.length; t++) {
                            const e = r[t],
                                s = e.replace("{sender}", n).replace("{data}", i),
                                a = e.indexOf("{data}") >= 0 ? null : JSON.stringify({
                                    data: i,
                                    sender: n
                                }),
                                u = yield Me({
                                    url: s,
                                    errorPassThrough: !0
                                }, a, (t, e) => (t.status = e.statusCode, t));
                            if (u.data) return u.data;
                            const h = u.message || "unknown error";
                            if (u.status >= 400 && u.status < 500) return Sr.throwError("response not found during CCIP fetch: " + h, g.errors.SERVER_ERROR, {
                                url: e,
                                errorMessage: h
                            });
                            o.push(h)
                        }
                        return Sr.throwError("error encountered during CCIP fetch: " + o.map(t => JSON.stringify(t)).join(", "), g.errors.SERVER_ERROR, {
                            urls: r,
                            errorMessages: o
                        })
                    }))
                }
                _getInternalBlockNumber(t) {
                    return _r(this, void 0, void 0, (function*() {
                        if (yield this._ready(), t > 0)
                            while (this._internalBlockNumber) {
                                const e = this._internalBlockNumber;
                                try {
                                    const r = yield e;
                                    if (Tr() - r.respTime <= t) return r.blockNumber;
                                    break
                                } catch (n) {
                                    if (this._internalBlockNumber === e) break
                                }
                            }
                        const e = Tr(),
                            r = et({
                                blockNumber: this.perform("getBlockNumber", {}),
                                networkError: this.getNetwork().then(t => null, t => t)
                            }).then(({
                                blockNumber: t,
                                networkError: n
                            }) => {
                                if (n) throw this._internalBlockNumber === r && (this._internalBlockNumber = null), n;
                                const i = Tr();
                                return t = K.from(t).toNumber(), t < this._maxInternalBlockNumber && (t = this._maxInternalBlockNumber), this._maxInternalBlockNumber = t, this._setFastBlockNumber(t), {
                                    blockNumber: t,
                                    reqTime: e,
                                    respTime: i
                                }
                            });
                        return this._internalBlockNumber = r, r.catch(t => {
                            this._internalBlockNumber === r && (this._internalBlockNumber = null)
                        }), (yield r).blockNumber
                    }))
                }
                poll() {
                    return _r(this, void 0, void 0, (function*() {
                        const t = Zr++,
                            e = [];
                        let r = null;
                        try {
                            r = yield this._getInternalBlockNumber(100 + this.pollingInterval / 2)
                        } catch (n) {
                            return void this.emit("error", n)
                        }
                        if (this._setFastBlockNumber(r), this.emit("poll", t, r), r !== this._lastBlockNumber) {
                            if (-2 === this._emitted.block && (this._emitted.block = r - 1), Math.abs(this._emitted.block - r) > 1e3) Sr.warn(`network block skew detected; skipping block events (emitted=${this._emitted.block} blockNumber${r})`), this.emit("error", Sr.makeError("network block skew detected", g.errors.NETWORK_ERROR, {
                                blockNumber: r,
                                event: "blockSkew",
                                previousBlockNumber: this._emitted.block
                            })), this.emit("block", r);
                            else
                                for (let t = this._emitted.block + 1; t <= r; t++) this.emit("block", t);
                            this._emitted.block !== r && (this._emitted.block = r, Object.keys(this._emitted).forEach(t => {
                                if ("block" === t) return;
                                const e = this._emitted[t];
                                "pending" !== e && r - e > 12 && delete this._emitted[t]
                            })), -2 === this._lastBlockNumber && (this._lastBlockNumber = r - 1), this._events.forEach(t => {
                                switch (t.type) {
                                    case "tx":
                                        {
                                            const r = t.hash;
                                            let n = this.getTransactionReceipt(r).then(t => t && null != t.blockNumber ? (this._emitted["t:" + r] = t.blockNumber, this.emit(r, t), null) : null).catch(t => {
                                                this.emit("error", t)
                                            });e.push(n);
                                            break
                                        }
                                    case "filter":
                                        if (!t._inflight) {
                                            t._inflight = !0;
                                            const n = t.filter;
                                            n.fromBlock = t._lastBlockNumber + 1, n.toBlock = r, n.toBlock - this._maxFilterBlockRange > n.fromBlock && (n.fromBlock = n.toBlock - this._maxFilterBlockRange);
                                            const i = this.getLogs(n).then(e => {
                                                t._inflight = !1, 0 !== e.length && e.forEach(e => {
                                                    e.blockNumber > t._lastBlockNumber && (t._lastBlockNumber = e.blockNumber), this._emitted["b:" + e.blockHash] = e.blockNumber, this._emitted["t:" + e.transactionHash] = e.blockNumber, this.emit(n, e)
                                                })
                                            }).catch(e => {
                                                this.emit("error", e), t._inflight = !1
                                            });
                                            e.push(i)
                                        }
                                        break
                                }
                            }), this._lastBlockNumber = r, Promise.all(e).then(() => {
                                this.emit("didPoll", t)
                            }).catch(t => {
                                this.emit("error", t)
                            })
                        } else this.emit("didPoll", t)
                    }))
                }
                resetEventsBlock(t) {
                    this._lastBlockNumber = t - 1, this.polling && this.poll()
                }
                get network() {
                    return this._network
                }
                detectNetwork() {
                    return _r(this, void 0, void 0, (function*() {
                        return Sr.throwError("provider does not support network detection", g.errors.UNSUPPORTED_OPERATION, {
                            operation: "provider.detectNetwork"
                        })
                    }))
                }
                getNetwork() {
                    return _r(this, void 0, void 0, (function*() {
                        const t = yield this._ready(), e = yield this.detectNetwork();
                        if (t.chainId !== e.chainId) {
                            if (this.anyNetwork) return this._network = e, this._lastBlockNumber = -2, this._fastBlockNumber = null, this._fastBlockNumberPromise = null, this._fastQueryDate = 0, this._emitted.block = -2, this._maxInternalBlockNumber = -1024, this._internalBlockNumber = null, this.emit("network", e, t), yield Or(0), this._network;
                            const r = Sr.makeError("underlying network changed", g.errors.NETWORK_ERROR, {
                                event: "changed",
                                network: t,
                                detectedNetwork: e
                            });
                            throw this.emit("error", r), r
                        }
                        return t
                    }))
                }
                get blockNumber() {
                    return this._getInternalBlockNumber(100 + this.pollingInterval / 2).then(t => {
                        this._setFastBlockNumber(t)
                    }, t => {}), null != this._fastBlockNumber ? this._fastBlockNumber : -1
                }
                get polling() {
                    return null != this._poller
                }
                set polling(t) {
                    t && !this._poller ? (this._poller = setInterval(() => {
                        this.poll()
                    }, this.pollingInterval), this._bootstrapPoll || (this._bootstrapPoll = setTimeout(() => {
                        this.poll(), this._bootstrapPoll = setTimeout(() => {
                            this._poller || this.poll(), this._bootstrapPoll = null
                        }, this.pollingInterval)
                    }, 0))) : !t && this._poller && (clearInterval(this._poller), this._poller = null)
                }
                get pollingInterval() {
                    return this._pollingInterval
                }
                set pollingInterval(t) {
                    if ("number" !== typeof t || t <= 0 || parseInt(String(t)) != t) throw new Error("invalid polling interval");
                    this._pollingInterval = t, this._poller && (clearInterval(this._poller), this._poller = setInterval(() => {
                        this.poll()
                    }, this._pollingInterval))
                }
                _getFastBlockNumber() {
                    const t = Tr();
                    return t - this._fastQueryDate > 2 * this._pollingInterval && (this._fastQueryDate = t, this._fastBlockNumberPromise = this.getBlockNumber().then(t => ((null == this._fastBlockNumber || t > this._fastBlockNumber) && (this._fastBlockNumber = t), this._fastBlockNumber))), this._fastBlockNumberPromise
                }
                _setFastBlockNumber(t) {
                    null != this._fastBlockNumber && t < this._fastBlockNumber || (this._fastQueryDate = Tr(), (null == this._fastBlockNumber || t > this._fastBlockNumber) && (this._fastBlockNumber = t, this._fastBlockNumberPromise = Promise.resolve(t)))
                }
                waitForTransaction(t, e, r) {
                    return _r(this, void 0, void 0, (function*() {
                        return this._waitForTransaction(t, null == e ? 1 : e, r || 0, null)
                    }))
                }
                _waitForTransaction(t, e, r, n) {
                    return _r(this, void 0, void 0, (function*() {
                        const i = yield this.getTransactionReceipt(t);
                        return (i ? i.confirmations : 0) >= e ? i : new Promise((i, o) => {
                            const s = [];
                            let a = !1;
                            const u = function() {
                                    return !!a || (a = !0, s.forEach(t => {
                                        t()
                                    }), !1)
                                },
                                h = t => {
                                    t.confirmations < e || u() || i(t)
                                };
                            if (this.on(t, h), s.push(() => {
                                    this.removeListener(t, h)
                                }), n) {
                                let r = n.startBlock,
                                    i = null;
                                const h = s => _r(this, void 0, void 0, (function*() {
                                    a || (yield Or(1e3), this.getTransactionCount(n.from).then(l => _r(this, void 0, void 0, (function*() {
                                        if (!a) {
                                            if (l <= n.nonce) r = s;
                                            else {
                                                {
                                                    const e = yield this.getTransaction(t);
                                                    if (e && null != e.blockNumber) return
                                                }
                                                null == i && (i = r - 3, i < n.startBlock && (i = n.startBlock));
                                                while (i <= s) {
                                                    if (a) return;
                                                    const r = yield this.getBlockWithTransactions(i);
                                                    for (let i = 0; i < r.transactions.length; i++) {
                                                        const s = r.transactions[i];
                                                        if (s.hash === t) return;
                                                        if (s.from === n.from && s.nonce === n.nonce) {
                                                            if (a) return;
                                                            const r = yield this.waitForTransaction(s.hash, e);
                                                            if (u()) return;
                                                            let i = "replaced";
                                                            return s.data === n.data && s.to === n.to && s.value.eq(n.value) ? i = "repriced" : "0x" === s.data && s.from === s.to && s.value.isZero() && (i = "cancelled"), void o(Sr.makeError("transaction was replaced", g.errors.TRANSACTION_REPLACED, {
                                                                cancelled: "replaced" === i || "cancelled" === i,
                                                                reason: i,
                                                                replacement: this._wrapTransaction(s),
                                                                hash: t,
                                                                receipt: r
                                                            }))
                                                        }
                                                    }
                                                    i++
                                                }
                                            }
                                            a || this.once("block", h)
                                        }
                                    })), t => {
                                        a || this.once("block", h)
                                    }))
                                }));
                                if (a) return;
                                this.once("block", h), s.push(() => {
                                    this.removeListener("block", h)
                                })
                            }
                            if ("number" === typeof r && r > 0) {
                                const t = setTimeout(() => {
                                    u() || o(Sr.makeError("timeout exceeded", g.errors.TIMEOUT, {
                                        timeout: r
                                    }))
                                }, r);
                                t.unref && t.unref(), s.push(() => {
                                    clearTimeout(t)
                                })
                            }
                        })
                    }))
                }
                getBlockNumber() {
                    return _r(this, void 0, void 0, (function*() {
                        return this._getInternalBlockNumber(0)
                    }))
                }
                getGasPrice() {
                    return _r(this, void 0, void 0, (function*() {
                        yield this.getNetwork();
                        const t = yield this.perform("getGasPrice", {});
                        try {
                            return K.from(t)
                        } catch (e) {
                            return Sr.throwError("bad result from backend", g.errors.SERVER_ERROR, {
                                method: "getGasPrice",
                                result: t,
                                error: e
                            })
                        }
                    }))
                }
                getBalance(t, e) {
                    return _r(this, void 0, void 0, (function*() {
                        yield this.getNetwork();
                        const r = yield et({
                            address: this._getAddress(t),
                            blockTag: this._getBlockTag(e)
                        }), n = yield this.perform("getBalance", r);
                        try {
                            return K.from(n)
                        } catch (i) {
                            return Sr.throwError("bad result from backend", g.errors.SERVER_ERROR, {
                                method: "getBalance",
                                params: r,
                                result: n,
                                error: i
                            })
                        }
                    }))
                }
                getTransactionCount(t, e) {
                    return _r(this, void 0, void 0, (function*() {
                        yield this.getNetwork();
                        const r = yield et({
                            address: this._getAddress(t),
                            blockTag: this._getBlockTag(e)
                        }), n = yield this.perform("getTransactionCount", r);
                        try {
                            return K.from(n).toNumber()
                        } catch (i) {
                            return Sr.throwError("bad result from backend", g.errors.SERVER_ERROR, {
                                method: "getTransactionCount",
                                params: r,
                                result: n,
                                error: i
                            })
                        }
                    }))
                }
                getCode(t, e) {
                    return _r(this, void 0, void 0, (function*() {
                        yield this.getNetwork();
                        const r = yield et({
                            address: this._getAddress(t),
                            blockTag: this._getBlockTag(e)
                        }), n = yield this.perform("getCode", r);
                        try {
                            return k(n)
                        } catch (i) {
                            return Sr.throwError("bad result from backend", g.errors.SERVER_ERROR, {
                                method: "getCode",
                                params: r,
                                result: n,
                                error: i
                            })
                        }
                    }))
                }
                getStorageAt(t, e, r) {
                    return _r(this, void 0, void 0, (function*() {
                        yield this.getNetwork();
                        const n = yield et({
                            address: this._getAddress(t),
                            blockTag: this._getBlockTag(r),
                            position: Promise.resolve(e).then(t => C(t))
                        }), i = yield this.perform("getStorageAt", n);
                        try {
                            return k(i)
                        } catch (o) {
                            return Sr.throwError("bad result from backend", g.errors.SERVER_ERROR, {
                                method: "getStorageAt",
                                params: n,
                                result: i,
                                error: o
                            })
                        }
                    }))
                }
                _wrapTransaction(t, e, r) {
                    if (null != e && 32 !== x(e)) throw new Error("invalid response - sendTransaction");
                    const n = t;
                    return null != e && t.hash !== e && Sr.throwError("Transaction hash mismatch from Provider.sendTransaction.", g.errors.UNKNOWN_ERROR, {
                        expectedHash: t.hash,
                        returnedHash: e
                    }), n.wait = (e, n) => _r(this, void 0, void 0, (function*() {
                        null == e && (e = 1), null == n && (n = 0);
                        let i = void 0;
                        0 !== e && null != r && (i = {
                            data: t.data,
                            from: t.from,
                            nonce: t.nonce,
                            to: t.to,
                            value: t.value,
                            startBlock: r
                        });
                        const o = yield this._waitForTransaction(t.hash, e, n, i);
                        return null == o && 0 === e ? null : (this._emitted["t:" + t.hash] = o.blockNumber, 0 === o.status && Sr.throwError("transaction failed", g.errors.CALL_EXCEPTION, {
                            transactionHash: t.hash,
                            transaction: t,
                            receipt: o
                        }), o)
                    })), n
                }
                sendTransaction(t) {
                    return _r(this, void 0, void 0, (function*() {
                        yield this.getNetwork();
                        const e = yield Promise.resolve(t).then(t => k(t)), r = this.formatter.transaction(t);
                        null == r.confirmations && (r.confirmations = 0);
                        const n = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                        try {
                            const t = yield this.perform("sendTransaction", {
                                signedTransaction: e
                            });
                            return this._wrapTransaction(r, t, n)
                        } catch (i) {
                            throw i.transaction = r, i.transactionHash = r.hash, i
                        }
                    }))
                }
                _getTransactionRequest(t) {
                    return _r(this, void 0, void 0, (function*() {
                        const e = yield t, r = {};
                        return ["from", "to"].forEach(t => {
                            null != e[t] && (r[t] = Promise.resolve(e[t]).then(t => t ? this._getAddress(t) : null))
                        }), ["gasLimit", "gasPrice", "maxFeePerGas", "maxPriorityFeePerGas", "value"].forEach(t => {
                            null != e[t] && (r[t] = Promise.resolve(e[t]).then(t => t ? K.from(t) : null))
                        }), ["type"].forEach(t => {
                            null != e[t] && (r[t] = Promise.resolve(e[t]).then(t => null != t ? t : null))
                        }), e.accessList && (r.accessList = this.formatter.accessList(e.accessList)), ["data"].forEach(t => {
                            null != e[t] && (r[t] = Promise.resolve(e[t]).then(t => t ? k(t) : null))
                        }), this.formatter.transactionRequest(yield et(r))
                    }))
                }
                _getFilter(t) {
                    return _r(this, void 0, void 0, (function*() {
                        t = yield t;
                        const e = {};
                        return null != t.address && (e.address = this._getAddress(t.address)), ["blockHash", "topics"].forEach(r => {
                            null != t[r] && (e[r] = t[r])
                        }), ["fromBlock", "toBlock"].forEach(r => {
                            null != t[r] && (e[r] = this._getBlockTag(t[r]))
                        }), this.formatter.filter(yield et(e))
                    }))
                }
                _call(t, e, r) {
                    return _r(this, void 0, void 0, (function*() {
                        r >= Ir && Sr.throwError("CCIP read exceeded maximum redirections", g.errors.SERVER_ERROR, {
                            redirects: r,
                            transaction: t
                        });
                        const n = t.to,
                            i = yield this.perform("call", {
                                transaction: t,
                                blockTag: e
                            });
                        if (r >= 0 && "latest" === e && null != n && "0x556f1830" === i.substring(0, 10) && x(i) % 32 === 4) try {
                            const o = T(i, 4),
                                s = T(o, 0, 32);
                            K.from(s).eq(n) || Sr.throwError("CCIP Read sender did not match", g.errors.CALL_EXCEPTION, {
                                name: "OffchainLookup",
                                signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                                transaction: t,
                                data: i
                            });
                            const a = [],
                                u = K.from(T(o, 32, 64)).toNumber(),
                                h = K.from(T(o, u, u + 32)).toNumber(),
                                l = T(o, u + 32);
                            for (let e = 0; e < h; e++) {
                                const r = jr(l, 32 * e);
                                null == r && Sr.throwError("CCIP Read contained corrupt URL string", g.errors.CALL_EXCEPTION, {
                                    name: "OffchainLookup",
                                    signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                                    transaction: t,
                                    data: i
                                }), a.push(r)
                            }
                            const f = qr(o, 64);
                            K.from(T(o, 100, 128)).isZero() || Sr.throwError("CCIP Read callback selector included junk", g.errors.CALL_EXCEPTION, {
                                name: "OffchainLookup",
                                signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                                transaction: t,
                                data: i
                            });
                            const c = T(o, 96, 100),
                                d = qr(o, 128),
                                m = yield this.ccipReadFetch(t, f, a);
                            null == m && Sr.throwError("CCIP Read disabled or provided no URLs", g.errors.CALL_EXCEPTION, {
                                name: "OffchainLookup",
                                signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                                transaction: t,
                                data: i
                            });
                            const p = {
                                to: n,
                                data: O([c, Vr([m, d])])
                            };
                            return this._call(p, e, r + 1)
                        } catch (o) {
                            if (o.code === g.errors.SERVER_ERROR) throw o
                        }
                        try {
                            return k(i)
                        } catch (o) {
                            return Sr.throwError("bad result from backend", g.errors.SERVER_ERROR, {
                                method: "call",
                                params: {
                                    transaction: t,
                                    blockTag: e
                                },
                                result: i,
                                error: o
                            })
                        }
                    }))
                }
                call(t, e) {
                    return _r(this, void 0, void 0, (function*() {
                        yield this.getNetwork();
                        const r = yield et({
                            transaction: this._getTransactionRequest(t),
                            blockTag: this._getBlockTag(e),
                            ccipReadEnabled: Promise.resolve(t.ccipReadEnabled)
                        });
                        return this._call(r.transaction, r.blockTag, r.ccipReadEnabled ? 0 : -1)
                    }))
                }
                estimateGas(t) {
                    return _r(this, void 0, void 0, (function*() {
                        yield this.getNetwork();
                        const e = yield et({
                            transaction: this._getTransactionRequest(t)
                        }), r = yield this.perform("estimateGas", e);
                        try {
                            return K.from(r)
                        } catch (n) {
                            return Sr.throwError("bad result from backend", g.errors.SERVER_ERROR, {
                                method: "estimateGas",
                                params: e,
                                result: r,
                                error: n
                            })
                        }
                    }))
                }
                _getAddress(t) {
                    return _r(this, void 0, void 0, (function*() {
                        t = yield t, "string" !== typeof t && Sr.throwArgumentError("invalid address or ENS name", "name", t);
                        const e = yield this.resolveName(t);
                        return null == e && Sr.throwError("ENS name not configured", g.errors.UNSUPPORTED_OPERATION, {
                            operation: `resolveName(${JSON.stringify(t)})`
                        }), e
                    }))
                }
                _getBlock(t, e) {
                    return _r(this, void 0, void 0, (function*() {
                        yield this.getNetwork(), t = yield t;
                        let r = -128;
                        const n = {
                            includeTransactions: !!e
                        };
                        if (R(t, 32)) n.blockHash = t;
                        else try {
                            n.blockTag = yield this._getBlockTag(t), R(n.blockTag) && (r = parseInt(n.blockTag.substring(2), 16))
                        } catch (i) {
                            Sr.throwArgumentError("invalid block hash or block tag", "blockHashOrBlockTag", t)
                        }
                        return Ee(() => _r(this, void 0, void 0, (function*() {
                            const t = yield this.perform("getBlock", n);
                            if (null == t) return null != n.blockHash && null == this._emitted["b:" + n.blockHash] || null != n.blockTag && r > this._emitted.block ? null : void 0;
                            if (e) {
                                let e = null;
                                for (let n = 0; n < t.transactions.length; n++) {
                                    const r = t.transactions[n];
                                    if (null == r.blockNumber) r.confirmations = 0;
                                    else if (null == r.confirmations) {
                                        null == e && (e = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval));
                                        let t = e - r.blockNumber + 1;
                                        t <= 0 && (t = 1), r.confirmations = t
                                    }
                                }
                                const r = this.formatter.blockWithTransactions(t);
                                return r.transactions = r.transactions.map(t => this._wrapTransaction(t)), r
                            }
                            return this.formatter.block(t)
                        })), {
                            oncePoll: this
                        })
                    }))
                }
                getBlock(t) {
                    return this._getBlock(t, !1)
                }
                getBlockWithTransactions(t) {
                    return this._getBlock(t, !0)
                }
                getTransaction(t) {
                    return _r(this, void 0, void 0, (function*() {
                        yield this.getNetwork(), t = yield t;
                        const e = {
                            transactionHash: this.formatter.hash(t, !0)
                        };
                        return Ee(() => _r(this, void 0, void 0, (function*() {
                            const r = yield this.perform("getTransaction", e);
                            if (null == r) return null == this._emitted["t:" + t] ? null : void 0;
                            const n = this.formatter.transactionResponse(r);
                            if (null == n.blockNumber) n.confirmations = 0;
                            else if (null == n.confirmations) {
                                const t = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                                let e = t - n.blockNumber + 1;
                                e <= 0 && (e = 1), n.confirmations = e
                            }
                            return this._wrapTransaction(n)
                        })), {
                            oncePoll: this
                        })
                    }))
                }
                getTransactionReceipt(t) {
                    return _r(this, void 0, void 0, (function*() {
                        yield this.getNetwork(), t = yield t;
                        const e = {
                            transactionHash: this.formatter.hash(t, !0)
                        };
                        return Ee(() => _r(this, void 0, void 0, (function*() {
                            const r = yield this.perform("getTransactionReceipt", e);
                            if (null == r) return null == this._emitted["t:" + t] ? null : void 0;
                            if (null == r.blockHash) return;
                            const n = this.formatter.receipt(r);
                            if (null == n.blockNumber) n.confirmations = 0;
                            else if (null == n.confirmations) {
                                const t = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                                let e = t - n.blockNumber + 1;
                                e <= 0 && (e = 1), n.confirmations = e
                            }
                            return n
                        })), {
                            oncePoll: this
                        })
                    }))
                }
                getLogs(t) {
                    return _r(this, void 0, void 0, (function*() {
                        yield this.getNetwork();
                        const e = yield et({
                            filter: this._getFilter(t)
                        }), r = yield this.perform("getLogs", e);
                        return r.forEach(t => {
                            null == t.removed && (t.removed = !1)
                        }), br.arrayOf(this.formatter.filterLog.bind(this.formatter))(r)
                    }))
                }
                getEtherPrice() {
                    return _r(this, void 0, void 0, (function*() {
                        return yield this.getNetwork(), this.perform("getEtherPrice", {})
                    }))
                }
                _getBlockTag(t) {
                    return _r(this, void 0, void 0, (function*() {
                        if (t = yield t, "number" === typeof t && t < 0) {
                            t % 1 && Sr.throwArgumentError("invalid BlockTag", "blockTag", t);
                            let e = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                            return e += t, e < 0 && (e = 0), this.formatter.blockTag(e)
                        }
                        return this.formatter.blockTag(t)
                    }))
                }
                getResolver(t) {
                    return _r(this, void 0, void 0, (function*() {
                        let e = t;
                        while (1) {
                            if ("" === e || "." === e) return null;
                            if ("eth" !== t && "eth" === e) return null;
                            const r = yield this._getResolver(e, "getResolver");
                            if (null != r) {
                                const n = new Hr(this, r, t);
                                return e === t || (yield n.supportsWildcard()) ? n : null
                            }
                            e = e.split(".").slice(1).join(".")
                        }
                    }))
                }
                _getResolver(t, e) {
                    return _r(this, void 0, void 0, (function*() {
                        null == e && (e = "ENS");
                        const r = yield this.getNetwork();
                        r.ensAddress || Sr.throwError("network does not support ENS", g.errors.UNSUPPORTED_OPERATION, {
                            operation: e,
                            network: r.name
                        });
                        try {
                            const e = yield this.call({
                                to: r.ensAddress,
                                data: "0x0178b8bf" + ue(t).substring(2)
                            });
                            return this.formatter.callAddress(e)
                        } catch (n) {}
                        return null
                    }))
                }
                resolveName(t) {
                    return _r(this, void 0, void 0, (function*() {
                        t = yield t;
                        try {
                            return Promise.resolve(this.formatter.address(t))
                        } catch (r) {
                            if (R(t)) throw r
                        }
                        "string" !== typeof t && Sr.throwArgumentError("invalid ENS name", "name", t);
                        const e = yield this.getResolver(t);
                        return e ? yield e.getAddress(): null
                    }))
                }
                lookupAddress(t) {
                    return _r(this, void 0, void 0, (function*() {
                        t = yield t, t = this.formatter.address(t);
                        const e = t.substring(2).toLowerCase() + ".addr.reverse",
                            r = yield this._getResolver(e, "lookupAddress");
                        if (null == r) return null;
                        const n = jr(yield this.call({
                                to: r,
                                data: "0x691f3431" + ue(e).substring(2)
                            }), 0),
                            i = yield this.resolveName(n);
                        return i != t ? null : n
                    }))
                }
                getAvatar(t) {
                    return _r(this, void 0, void 0, (function*() {
                        let e = null;
                        if (R(t)) {
                            const r = this.formatter.address(t),
                                i = r.substring(2).toLowerCase() + ".addr.reverse",
                                o = yield this._getResolver(i, "getAvatar");
                            if (!o) return null;
                            e = new Hr(this, o, i);
                            try {
                                const t = yield e.getAvatar();
                                if (t) return t.url
                            } catch (n) {
                                if (n.code !== g.errors.CALL_EXCEPTION) throw n
                            }
                            try {
                                const t = jr(yield this.call({
                                    to: o,
                                    data: "0x691f3431" + ue(i).substring(2)
                                }), 0);
                                e = yield this.getResolver(t)
                            } catch (n) {
                                if (n.code !== g.errors.CALL_EXCEPTION) throw n;
                                return null
                            }
                        } else if (e = yield this.getResolver(t), !e) return null;
                        const r = yield e.getAvatar();
                        return null == r ? null : r.url
                    }))
                }
                perform(t, e) {
                    return Sr.throwError(t + " not implemented", g.errors.NOT_IMPLEMENTED, {
                        operation: t
                    })
                }
                _startEvent(t) {
                    this.polling = this._events.filter(t => t.pollable()).length > 0
                }
                _stopEvent(t) {
                    this.polling = this._events.filter(t => t.pollable()).length > 0
                }
                _addEventListener(t, e, r) {
                    const n = new Ur(xr(t), e, r);
                    return this._events.push(n), this._startEvent(n), this
                }
                on(t, e) {
                    return this._addEventListener(t, e, !1)
                }
                once(t, e) {
                    return this._addEventListener(t, e, !0)
                }
                emit(t, ...e) {
                    let r = !1,
                        n = [],
                        i = xr(t);
                    return this._events = this._events.filter(t => t.tag !== i || (setTimeout(() => {
                        t.listener.apply(this, e)
                    }, 0), r = !0, !t.once || (n.push(t), !1))), n.forEach(t => {
                        this._stopEvent(t)
                    }), r
                }
                listenerCount(t) {
                    if (!t) return this._events.length;
                    let e = xr(t);
                    return this._events.filter(t => t.tag === e).length
                }
                listeners(t) {
                    if (null == t) return this._events.map(t => t.listener);
                    let e = xr(t);
                    return this._events.filter(t => t.tag === e).map(t => t.listener)
                }
                off(t, e) {
                    if (null == e) return this.removeAllListeners(t);
                    const r = [];
                    let n = !1,
                        i = xr(t);
                    return this._events = this._events.filter(t => t.tag !== i || t.listener != e || (!!n || (n = !0, r.push(t), !1))), r.forEach(t => {
                        this._stopEvent(t)
                    }), this
                }
                removeAllListeners(t) {
                    let e = [];
                    if (null == t) e = this._events, this._events = [];
                    else {
                        const r = xr(t);
                        this._events = this._events.filter(t => t.tag !== r || (e.push(t), !1))
                    }
                    return e.forEach(t => {
                        this._stopEvent(t)
                    }), this
                }
            }
            const $r = "abstract-signer/5.6.0";
            var Yr = function(t, e, r, n) {
                function i(t) {
                    return t instanceof r ? t : new r((function(e) {
                        e(t)
                    }))
                }
                return new(r || (r = Promise))((function(r, o) {
                    function s(t) {
                        try {
                            u(n.next(t))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function a(t) {
                        try {
                            u(n["throw"](t))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function u(t) {
                        t.done ? r(t.value) : i(t.value).then(s, a)
                    }
                    u((n = n.apply(t, e || [])).next())
                }))
            };
            const Qr = new g($r),
                tn = ["accessList", "ccipReadEnabled", "chainId", "customData", "data", "from", "gasLimit", "gasPrice", "maxFeePerGas", "maxPriorityFeePerGas", "nonce", "to", "type", "value"],
                en = [g.errors.INSUFFICIENT_FUNDS, g.errors.NONCE_EXPIRED, g.errors.REPLACEMENT_UNDERPRICED];
            class rn {
                constructor() {
                    Qr.checkAbstract(new.target, rn), Q(this, "_isSigner", !0)
                }
                getBalance(t) {
                    return Yr(this, void 0, void 0, (function*() {
                        return this._checkProvider("getBalance"), yield this.provider.getBalance(this.getAddress(), t)
                    }))
                }
                getTransactionCount(t) {
                    return Yr(this, void 0, void 0, (function*() {
                        return this._checkProvider("getTransactionCount"), yield this.provider.getTransactionCount(this.getAddress(), t)
                    }))
                }
                estimateGas(t) {
                    return Yr(this, void 0, void 0, (function*() {
                        this._checkProvider("estimateGas");
                        const e = yield et(this.checkTransaction(t));
                        return yield this.provider.estimateGas(e)
                    }))
                }
                call(t, e) {
                    return Yr(this, void 0, void 0, (function*() {
                        this._checkProvider("call");
                        const r = yield et(this.checkTransaction(t));
                        return yield this.provider.call(r, e)
                    }))
                }
                sendTransaction(t) {
                    return Yr(this, void 0, void 0, (function*() {
                        this._checkProvider("sendTransaction");
                        const e = yield this.populateTransaction(t), r = yield this.signTransaction(e);
                        return yield this.provider.sendTransaction(r)
                    }))
                }
                getChainId() {
                    return Yr(this, void 0, void 0, (function*() {
                        this._checkProvider("getChainId");
                        const t = yield this.provider.getNetwork();
                        return t.chainId
                    }))
                }
                getGasPrice() {
                    return Yr(this, void 0, void 0, (function*() {
                        return this._checkProvider("getGasPrice"), yield this.provider.getGasPrice()
                    }))
                }
                getFeeData() {
                    return Yr(this, void 0, void 0, (function*() {
                        return this._checkProvider("getFeeData"), yield this.provider.getFeeData()
                    }))
                }
                resolveName(t) {
                    return Yr(this, void 0, void 0, (function*() {
                        return this._checkProvider("resolveName"), yield this.provider.resolveName(t)
                    }))
                }
                checkTransaction(t) {
                    for (const r in t) - 1 === tn.indexOf(r) && Qr.throwArgumentError("invalid transaction key: " + r, "transaction", t);
                    const e = nt(t);
                    return null == e.from ? e.from = this.getAddress() : e.from = Promise.all([Promise.resolve(e.from), this.getAddress()]).then(e => (e[0].toLowerCase() !== e[1].toLowerCase() && Qr.throwArgumentError("from address mismatch", "transaction", t), e[0])), e
                }
                populateTransaction(t) {
                    return Yr(this, void 0, void 0, (function*() {
                        const e = yield et(this.checkTransaction(t));
                        null != e.to && (e.to = Promise.resolve(e.to).then(t => Yr(this, void 0, void 0, (function*() {
                            if (null == t) return null;
                            const e = yield this.resolveName(t);
                            return null == e && Qr.throwArgumentError("provided ENS name resolves to null", "tx.to", t), e
                        }))), e.to.catch(t => {}));
                        const r = null != e.maxFeePerGas || null != e.maxPriorityFeePerGas;
                        if (null == e.gasPrice || 2 !== e.type && !r ? 0 !== e.type && 1 !== e.type || !r || Qr.throwArgumentError("pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas", "transaction", t) : Qr.throwArgumentError("eip-1559 transaction do not support gasPrice", "transaction", t), 2 !== e.type && null != e.type || null == e.maxFeePerGas || null == e.maxPriorityFeePerGas)
                            if (0 === e.type || 1 === e.type) null == e.gasPrice && (e.gasPrice = this.getGasPrice());
                            else {
                                const t = yield this.getFeeData();
                                if (null == e.type)
                                    if (null != t.maxFeePerGas && null != t.maxPriorityFeePerGas)
                                        if (e.type = 2, null != e.gasPrice) {
                                            const t = e.gasPrice;
                                            delete e.gasPrice, e.maxFeePerGas = t, e.maxPriorityFeePerGas = t
                                        } else null == e.maxFeePerGas && (e.maxFeePerGas = t.maxFeePerGas), null == e.maxPriorityFeePerGas && (e.maxPriorityFeePerGas = t.maxPriorityFeePerGas);
                                else null != t.gasPrice ? (r && Qr.throwError("network does not support EIP-1559", g.errors.UNSUPPORTED_OPERATION, {
                                    operation: "populateTransaction"
                                }), null == e.gasPrice && (e.gasPrice = t.gasPrice), e.type = 0) : Qr.throwError("failed to get consistent fee data", g.errors.UNSUPPORTED_OPERATION, {
                                    operation: "signer.getFeeData"
                                });
                                else 2 === e.type && (null == e.maxFeePerGas && (e.maxFeePerGas = t.maxFeePerGas), null == e.maxPriorityFeePerGas && (e.maxPriorityFeePerGas = t.maxPriorityFeePerGas))
                            }
                        else e.type = 2;
                        return null == e.nonce && (e.nonce = this.getTransactionCount("pending")), null == e.gasLimit && (e.gasLimit = this.estimateGas(e).catch(t => {
                            if (en.indexOf(t.code) >= 0) throw t;
                            return Qr.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", g.errors.UNPREDICTABLE_GAS_LIMIT, {
                                error: t,
                                tx: e
                            })
                        })), null == e.chainId ? e.chainId = this.getChainId() : e.chainId = Promise.all([Promise.resolve(e.chainId), this.getChainId()]).then(e => (0 !== e[1] && e[0] !== e[1] && Qr.throwArgumentError("chainId address mismatch", "transaction", t), e[0])), yield et(e)
                    }))
                }
                _checkProvider(t) {
                    this.provider || Qr.throwError("missing provider", g.errors.UNSUPPORTED_OPERATION, {
                        operation: t || "_checkProvider"
                    })
                }
                static isSigner(t) {
                    return !(!t || !t._isSigner)
                }
            }

            function nn(t) {
                return ne(Ut(t))
            }
            var on = function(t, e, r, n) {
                function i(t) {
                    return t instanceof r ? t : new r((function(e) {
                        e(t)
                    }))
                }
                return new(r || (r = Promise))((function(r, o) {
                    function s(t) {
                        try {
                            u(n.next(t))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function a(t) {
                        try {
                            u(n["throw"](t))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function u(t) {
                        t.done ? r(t.value) : i(t.value).then(s, a)
                    }
                    u((n = n.apply(t, e || [])).next())
                }))
            };
            const sn = new g(ie),
                an = new Uint8Array(32);
            an.fill(0);
            const un = K.from(-1),
                hn = K.from(0),
                ln = K.from(1),
                fn = K.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");

            function cn(t) {
                const e = A(t),
                    r = e.length % 32;
                return r ? O([e, an.slice(r)]) : k(e)
            }
            const dn = F(ln.toHexString(), 32),
                mn = F(hn.toHexString(), 32),
                pn = {
                    name: "string",
                    version: "string",
                    chainId: "uint256",
                    verifyingContract: "address",
                    salt: "bytes32"
                },
                gn = ["name", "version", "chainId", "verifyingContract", "salt"];

            function vn(t) {
                return function(e) {
                    return "string" !== typeof e && sn.throwArgumentError("invalid domain value for " + JSON.stringify(t), "domain." + t, e), e
                }
            }
            const yn = {
                name: vn("name"),
                version: vn("version"),
                chainId: function(t) {
                    try {
                        return K.from(t).toString()
                    } catch (e) {}
                    return sn.throwArgumentError('invalid domain value for "chainId"', "domain.chainId", t)
                },
                verifyingContract: function(t) {
                    try {
                        return ze(t).toLowerCase()
                    } catch (e) {}
                    return sn.throwArgumentError('invalid domain value "verifyingContract"', "domain.verifyingContract", t)
                },
                salt: function(t) {
                    try {
                        const e = A(t);
                        if (32 !== e.length) throw new Error("bad length");
                        return k(e)
                    } catch (e) {}
                    return sn.throwArgumentError('invalid domain value "salt"', "domain.salt", t)
                }
            };

            function wn(t) {
                {
                    const e = t.match(/^(u?)int(\d*)$/);
                    if (e) {
                        const r = "" === e[1],
                            n = parseInt(e[2] || "256");
                        (n % 8 !== 0 || n > 256 || e[2] && e[2] !== String(n)) && sn.throwArgumentError("invalid numeric width", "type", t);
                        const i = fn.mask(r ? n - 1 : n),
                            o = r ? i.add(ln).mul(un) : hn;
                        return function(e) {
                            const r = K.from(e);
                            return (r.lt(o) || r.gt(i)) && sn.throwArgumentError("value out-of-bounds for " + t, "value", e), F(r.toTwos(256).toHexString(), 32)
                        }
                    }
                } {
                    const e = t.match(/^bytes(\d+)$/);
                    if (e) {
                        const r = parseInt(e[1]);
                        return (0 === r || r > 32 || e[1] !== String(r)) && sn.throwArgumentError("invalid bytes width", "type", t),
                            function(e) {
                                const n = A(e);
                                return n.length !== r && sn.throwArgumentError("invalid length for " + t, "value", e), cn(e)
                            }
                    }
                }
                switch (t) {
                    case "address":
                        return function(t) {
                            return F(ze(t), 32)
                        };
                    case "bool":
                        return function(t) {
                            return t ? dn : mn
                        };
                    case "bytes":
                        return function(t) {
                            return ne(t)
                        };
                    case "string":
                        return function(t) {
                            return nn(t)
                        }
                }
                return null
            }

            function bn(t, e) {
                return `${t}(${e.map(({name:t,type:e})=>e+" "+t).join(",")})`
            }
            class Mn {
                constructor(t) {
                    Q(this, "types", Object.freeze(at(t))), Q(this, "_encoderCache", {}), Q(this, "_types", {});
                    const e = {},
                        r = {},
                        n = {};
                    Object.keys(t).forEach(t => {
                        e[t] = {}, r[t] = [], n[t] = {}
                    });
                    for (const s in t) {
                        const n = {};
                        t[s].forEach(i => {
                            n[i.name] && sn.throwArgumentError(`duplicate variable name ${JSON.stringify(i.name)} in ${JSON.stringify(s)}`, "types", t), n[i.name] = !0;
                            const o = i.type.match(/^([^\x5b]*)(\x5b|$)/)[1];
                            o === s && sn.throwArgumentError("circular type reference to " + JSON.stringify(o), "types", t);
                            const a = wn(o);
                            a || (r[o] || sn.throwArgumentError("unknown type " + JSON.stringify(o), "types", t), r[o].push(s), e[s][o] = !0)
                        })
                    }
                    const i = Object.keys(r).filter(t => 0 === r[t].length);

                    function o(i, s) {
                        s[i] && sn.throwArgumentError("circular type reference to " + JSON.stringify(i), "types", t), s[i] = !0, Object.keys(e[i]).forEach(t => {
                            r[t] && (o(t, s), Object.keys(s).forEach(e => {
                                n[e][t] = !0
                            }))
                        }), delete s[i]
                    }
                    0 === i.length ? sn.throwArgumentError("missing primary type", "types", t) : i.length > 1 && sn.throwArgumentError("ambiguous primary types or unused types: " + i.map(t => JSON.stringify(t)).join(", "), "types", t), Q(this, "primaryType", i[0]), o(this.primaryType, {});
                    for (const s in n) {
                        const e = Object.keys(n[s]);
                        e.sort(), this._types[s] = bn(s, t[s]) + e.map(e => bn(e, t[e])).join("")
                    }
                }
                getEncoder(t) {
                    let e = this._encoderCache[t];
                    return e || (e = this._encoderCache[t] = this._getEncoder(t)), e
                }
                _getEncoder(t) {
                    {
                        const e = wn(t);
                        if (e) return e
                    }
                    const e = t.match(/^(.*)(\x5b(\d*)\x5d)$/);
                    if (e) {
                        const t = e[1],
                            r = this.getEncoder(t),
                            n = parseInt(e[3]);
                        return e => {
                            n >= 0 && e.length !== n && sn.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", e);
                            let i = e.map(r);
                            return this._types[t] && (i = i.map(ne)), ne(O(i))
                        }
                    }
                    const r = this.types[t];
                    if (r) {
                        const e = nn(this._types[t]);
                        return t => {
                            const n = r.map(({
                                name: e,
                                type: r
                            }) => {
                                const n = this.getEncoder(r)(t[e]);
                                return this._types[r] ? ne(n) : n
                            });
                            return n.unshift(e), O(n)
                        }
                    }
                    return sn.throwArgumentError("unknown type: " + t, "type", t)
                }
                encodeType(t) {
                    const e = this._types[t];
                    return e || sn.throwArgumentError("unknown type: " + JSON.stringify(t), "name", t), e
                }
                encodeData(t, e) {
                    return this.getEncoder(t)(e)
                }
                hashStruct(t, e) {
                    return ne(this.encodeData(t, e))
                }
                encode(t) {
                    return this.encodeData(this.primaryType, t)
                }
                hash(t) {
                    return this.hashStruct(this.primaryType, t)
                }
                _visit(t, e, r) {
                    {
                        const n = wn(t);
                        if (n) return r(t, e)
                    }
                    const n = t.match(/^(.*)(\x5b(\d*)\x5d)$/);
                    if (n) {
                        const t = n[1],
                            i = parseInt(n[3]);
                        return i >= 0 && e.length !== i && sn.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", e), e.map(e => this._visit(t, e, r))
                    }
                    const i = this.types[t];
                    return i ? i.reduce((t, {
                        name: n,
                        type: i
                    }) => (t[n] = this._visit(i, e[n], r), t), {}) : sn.throwArgumentError("unknown type: " + t, "type", t)
                }
                visit(t, e) {
                    return this._visit(this.primaryType, t, e)
                }
                static from(t) {
                    return new Mn(t)
                }
                static getPrimaryType(t) {
                    return Mn.from(t).primaryType
                }
                static hashStruct(t, e, r) {
                    return Mn.from(e).hashStruct(t, r)
                }
                static hashDomain(t) {
                    const e = [];
                    for (const r in t) {
                        const n = pn[r];
                        n || sn.throwArgumentError("invalid typed-data domain key: " + JSON.stringify(r), "domain", t), e.push({
                            name: r,
                            type: n
                        })
                    }
                    return e.sort((t, e) => gn.indexOf(t.name) - gn.indexOf(e.name)), Mn.hashStruct("EIP712Domain", {
                        EIP712Domain: e
                    }, t)
                }
                static encode(t, e, r) {
                    return O(["0x1901", Mn.hashDomain(t), Mn.from(e).hash(r)])
                }
                static hash(t, e, r) {
                    return ne(Mn.encode(t, e, r))
                }
                static resolveNames(t, e, r, n) {
                    return on(this, void 0, void 0, (function*() {
                        t = nt(t);
                        const i = {};
                        t.verifyingContract && !R(t.verifyingContract, 20) && (i[t.verifyingContract] = "0x");
                        const o = Mn.from(e);
                        o.visit(r, (t, e) => ("address" !== t || R(e, 20) || (i[e] = "0x"), e));
                        for (const t in i) i[t] = yield n(t);
                        return t.verifyingContract && i[t.verifyingContract] && (t.verifyingContract = i[t.verifyingContract]), r = o.visit(r, (t, e) => "address" === t && i[e] ? i[e] : e), {
                            domain: t,
                            value: r
                        }
                    }))
                }
                static getPayload(t, e, r) {
                    Mn.hashDomain(t);
                    const n = {},
                        i = [];
                    gn.forEach(e => {
                        const r = t[e];
                        null != r && (n[e] = yn[e](r), i.push({
                            name: e,
                            type: pn[e]
                        }))
                    });
                    const o = Mn.from(e),
                        s = nt(e);
                    return s.EIP712Domain ? sn.throwArgumentError("types must not contain EIP712Domain type", "types.EIP712Domain", e) : s.EIP712Domain = i, o.encode(r), {
                        types: s,
                        domain: n,
                        primaryType: o.primaryType,
                        message: o.visit(r, (t, e) => {
                            if (t.match(/^bytes(\d*)/)) return k(A(e));
                            if (t.match(/^u?int/)) return K.from(e).toString();
                            switch (t) {
                                case "address":
                                    return e.toLowerCase();
                                case "bool":
                                    return !!e;
                                case "string":
                                    return "string" !== typeof e && sn.throwArgumentError("invalid string", "value", e), e
                            }
                            return sn.throwArgumentError("unsupported type", "type", t)
                        })
                    }
                }
            }
            var En = function(t, e, r, n) {
                function i(t) {
                    return t instanceof r ? t : new r((function(e) {
                        e(t)
                    }))
                }
                return new(r || (r = Promise))((function(r, o) {
                    function s(t) {
                        try {
                            u(n.next(t))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function a(t) {
                        try {
                            u(n["throw"](t))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function u(t) {
                        t.done ? r(t.value) : i(t.value).then(s, a)
                    }
                    u((n = n.apply(t, e || [])).next())
                }))
            };
            const Nn = new g(_e),
                An = ["call", "estimateGas"];

            function _n(t) {
                if (null == t) return null;
                if ("string" === typeof t.message && t.message.match("reverted") && R(t.data)) return {
                    message: t.message,
                    data: t.data
                };
                if ("object" === typeof t) {
                    for (const e in t) {
                        const r = _n(t[e]);
                        if (r) return r
                    }
                    return null
                }
                if ("string" === typeof t) try {
                    return _n(JSON.parse(t))
                } catch (e) {}
                return null
            }

            function Sn(t, e, r) {
                if ("call" === t) {
                    const t = _n(e);
                    if (t) return t.data;
                    Nn.throwError("missing revert data in call exception; Transaction reverted without a reason string", g.errors.CALL_EXCEPTION, {
                        error: e,
                        data: "0x"
                    })
                }
                let n = e.message;
                e.code === g.errors.SERVER_ERROR && e.error && "string" === typeof e.error.message ? n = e.error.message : "string" === typeof e.body ? n = e.body : "string" === typeof e.responseText && (n = e.responseText), n = (n || "").toLowerCase();
                const i = r.transaction || r.signedTransaction;
                throw n.match(/insufficient funds|base fee exceeds gas limit/) && Nn.throwError("insufficient funds for intrinsic transaction cost", g.errors.INSUFFICIENT_FUNDS, {
                    error: e,
                    method: t,
                    transaction: i
                }), n.match(/nonce (is )?too low/) && Nn.throwError("nonce has already been used", g.errors.NONCE_EXPIRED, {
                    error: e,
                    method: t,
                    transaction: i
                }), n.match(/replacement transaction underpriced/) && Nn.throwError("replacement fee too low", g.errors.REPLACEMENT_UNDERPRICED, {
                    error: e,
                    method: t,
                    transaction: i
                }), n.match(/only replay-protected/) && Nn.throwError("legacy pre-eip-155 transactions not supported", g.errors.UNSUPPORTED_OPERATION, {
                    error: e,
                    method: t,
                    transaction: i
                }), An.indexOf(t) >= 0 && n.match(/gas required exceeds allowance|always failing transaction|execution reverted/) && Nn.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", g.errors.UNPREDICTABLE_GAS_LIMIT, {
                    error: e,
                    method: t,
                    transaction: i
                }), e
            }

            function In(t) {
                return new Promise((function(e) {
                    setTimeout(e, t)
                }))
            }

            function Rn(t) {
                if (t.error) {
                    const e = new Error(t.error.message);
                    throw e.code = t.error.code, e.data = t.error.data, e
                }
                return t.result
            }

            function Pn(t) {
                return t ? t.toLowerCase() : t
            }
            const kn = {};
            class xn extends rn {
                constructor(t, e, r) {
                    if (Nn.checkNew(new.target, xn), super(), t !== kn) throw new Error("do not call the JsonRpcSigner constructor directly; use provider.getSigner");
                    Q(this, "provider", e), null == r && (r = 0), "string" === typeof r ? (Q(this, "_address", this.provider.formatter.address(r)), Q(this, "_index", null)) : "number" === typeof r ? (Q(this, "_index", r), Q(this, "_address", null)) : Nn.throwArgumentError("invalid address or index", "addressOrIndex", r)
                }
                connect(t) {
                    return Nn.throwError("cannot alter JSON-RPC Signer connection", g.errors.UNSUPPORTED_OPERATION, {
                        operation: "connect"
                    })
                }
                connectUnchecked() {
                    return new Tn(kn, this.provider, this._address || this._index)
                }
                getAddress() {
                    return this._address ? Promise.resolve(this._address) : this.provider.send("eth_accounts", []).then(t => (t.length <= this._index && Nn.throwError("unknown account #" + this._index, g.errors.UNSUPPORTED_OPERATION, {
                        operation: "getAddress"
                    }), this.provider.formatter.address(t[this._index])))
                }
                sendUncheckedTransaction(t) {
                    t = nt(t);
                    const e = this.getAddress().then(t => (t && (t = t.toLowerCase()), t));
                    if (null == t.gasLimit) {
                        const r = nt(t);
                        r.from = e, t.gasLimit = this.provider.estimateGas(r)
                    }
                    return null != t.to && (t.to = Promise.resolve(t.to).then(t => En(this, void 0, void 0, (function*() {
                        if (null == t) return null;
                        const e = yield this.provider.resolveName(t);
                        return null == e && Nn.throwArgumentError("provided ENS name resolves to null", "tx.to", t), e
                    })))), et({
                        tx: et(t),
                        sender: e
                    }).then(({
                        tx: e,
                        sender: r
                    }) => {
                        null != e.from ? e.from.toLowerCase() !== r && Nn.throwArgumentError("from address mismatch", "transaction", t) : e.from = r;
                        const n = this.provider.constructor.hexlifyTransaction(e, {
                            from: !0
                        });
                        return this.provider.send("eth_sendTransaction", [n]).then(t => t, t => Sn("sendTransaction", t, n))
                    })
                }
                signTransaction(t) {
                    return Nn.throwError("signing transactions is unsupported", g.errors.UNSUPPORTED_OPERATION, {
                        operation: "signTransaction"
                    })
                }
                sendTransaction(t) {
                    return En(this, void 0, void 0, (function*() {
                        const e = yield this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval), r = yield this.sendUncheckedTransaction(t);
                        try {
                            return yield Ee(() => En(this, void 0, void 0, (function*() {
                                const t = yield this.provider.getTransaction(r);
                                if (null !== t) return this.provider._wrapTransaction(t, r, e)
                            })), {
                                oncePoll: this.provider
                            })
                        } catch (n) {
                            throw n.transactionHash = r, n
                        }
                    }))
                }
                signMessage(t) {
                    return En(this, void 0, void 0, (function*() {
                        const e = "string" === typeof t ? Ut(t) : t,
                            r = yield this.getAddress();
                        return yield this.provider.send("personal_sign", [k(e), r.toLowerCase()])
                    }))
                }
                _legacySignMessage(t) {
                    return En(this, void 0, void 0, (function*() {
                        const e = "string" === typeof t ? Ut(t) : t,
                            r = yield this.getAddress();
                        return yield this.provider.send("eth_sign", [r.toLowerCase(), k(e)])
                    }))
                }
                _signTypedData(t, e, r) {
                    return En(this, void 0, void 0, (function*() {
                        const n = yield Mn.resolveNames(t, e, r, t => this.provider.resolveName(t)), i = yield this.getAddress();
                        return yield this.provider.send("eth_signTypedData_v4", [i.toLowerCase(), JSON.stringify(Mn.getPayload(n.domain, e, n.value))])
                    }))
                }
                unlock(t) {
                    return En(this, void 0, void 0, (function*() {
                        const e = this.provider,
                            r = yield this.getAddress();
                        return e.send("personal_unlockAccount", [r.toLowerCase(), t, null])
                    }))
                }
            }
            class Tn extends xn {
                sendTransaction(t) {
                    return this.sendUncheckedTransaction(t).then(t => ({
                        hash: t,
                        nonce: null,
                        gasLimit: null,
                        gasPrice: null,
                        data: null,
                        value: null,
                        chainId: null,
                        confirmations: 0,
                        from: null,
                        wait: e => this.provider.waitForTransaction(t, e)
                    }))
                }
            }
            const On = {
                chainId: !0,
                data: !0,
                gasLimit: !0,
                gasPrice: !0,
                nonce: !0,
                to: !0,
                value: !0,
                type: !0,
                accessList: !0,
                maxFeePerGas: !0,
                maxPriorityFeePerGas: !0
            };
            class Cn extends Xr {
                constructor(t, e) {
                    Nn.checkNew(new.target, Cn);
                    let r = e;
                    null == r && (r = new Promise((t, e) => {
                        setTimeout(() => {
                            this.detectNetwork().then(e => {
                                t(e)
                            }, t => {
                                e(t)
                            })
                        }, 0)
                    })), super(r), t || (t = tt(this.constructor, "defaultUrl")()), Q(this, "connection", "string" === typeof t ? Object.freeze({
                        url: t
                    }) : Object.freeze(nt(t))), this._nextId = 42
                }
                get _cache() {
                    return null == this._eventLoopCache && (this._eventLoopCache = {}), this._eventLoopCache
                }
                static defaultUrl() {
                    return "http://localhost:8545"
                }
                detectNetwork() {
                    return this._cache["detectNetwork"] || (this._cache["detectNetwork"] = this._uncachedDetectNetwork(), setTimeout(() => {
                        this._cache["detectNetwork"] = null
                    }, 0)), this._cache["detectNetwork"]
                }
                _uncachedDetectNetwork() {
                    return En(this, void 0, void 0, (function*() {
                        yield In(0);
                        let t = null;
                        try {
                            t = yield this.send("eth_chainId", [])
                        } catch (e) {
                            try {
                                t = yield this.send("net_version", [])
                            } catch (e) {}
                        }
                        if (null != t) {
                            const r = tt(this.constructor, "getNetwork");
                            try {
                                return r(K.from(t).toNumber())
                            } catch (e) {
                                return Nn.throwError("could not detect network", g.errors.NETWORK_ERROR, {
                                    chainId: t,
                                    event: "invalidNetwork",
                                    serverError: e
                                })
                            }
                        }
                        return Nn.throwError("could not detect network", g.errors.NETWORK_ERROR, {
                            event: "noNetwork"
                        })
                    }))
                }
                getSigner(t) {
                    return new xn(kn, this, t)
                }
                getUncheckedSigner(t) {
                    return this.getSigner(t).connectUnchecked()
                }
                listAccounts() {
                    return this.send("eth_accounts", []).then(t => t.map(t => this.formatter.address(t)))
                }
                send(t, e) {
                    const r = {
                        method: t,
                        params: e,
                        id: this._nextId++,
                        jsonrpc: "2.0"
                    };
                    this.emit("debug", {
                        action: "request",
                        request: at(r),
                        provider: this
                    });
                    const n = ["eth_chainId", "eth_blockNumber"].indexOf(t) >= 0;
                    if (n && this._cache[t]) return this._cache[t];
                    const i = Me(this.connection, JSON.stringify(r), Rn).then(t => (this.emit("debug", {
                        action: "response",
                        request: r,
                        response: t,
                        provider: this
                    }), t), t => {
                        throw this.emit("debug", {
                            action: "response",
                            error: t,
                            request: r,
                            provider: this
                        }), t
                    });
                    return n && (this._cache[t] = i, setTimeout(() => {
                        this._cache[t] = null
                    }, 0)), i
                }
                prepareRequest(t, e) {
                    switch (t) {
                        case "getBlockNumber":
                            return ["eth_blockNumber", []];
                        case "getGasPrice":
                            return ["eth_gasPrice", []];
                        case "getBalance":
                            return ["eth_getBalance", [Pn(e.address), e.blockTag]];
                        case "getTransactionCount":
                            return ["eth_getTransactionCount", [Pn(e.address), e.blockTag]];
                        case "getCode":
                            return ["eth_getCode", [Pn(e.address), e.blockTag]];
                        case "getStorageAt":
                            return ["eth_getStorageAt", [Pn(e.address), e.position, e.blockTag]];
                        case "sendTransaction":
                            return ["eth_sendRawTransaction", [e.signedTransaction]];
                        case "getBlock":
                            return e.blockTag ? ["eth_getBlockByNumber", [e.blockTag, !!e.includeTransactions]] : e.blockHash ? ["eth_getBlockByHash", [e.blockHash, !!e.includeTransactions]] : null;
                        case "getTransaction":
                            return ["eth_getTransactionByHash", [e.transactionHash]];
                        case "getTransactionReceipt":
                            return ["eth_getTransactionReceipt", [e.transactionHash]];
                        case "call":
                            {
                                const t = tt(this.constructor, "hexlifyTransaction");
                                return ["eth_call", [t(e.transaction, {
                                    from: !0
                                }), e.blockTag]]
                            }
                        case "estimateGas":
                            {
                                const t = tt(this.constructor, "hexlifyTransaction");
                                return ["eth_estimateGas", [t(e.transaction, {
                                    from: !0
                                })]]
                            }
                        case "getLogs":
                            return e.filter && null != e.filter.address && (e.filter.address = Pn(e.filter.address)), ["eth_getLogs", [e.filter]];
                        default:
                            break
                    }
                    return null
                }
                perform(t, e) {
                    return En(this, void 0, void 0, (function*() {
                        if ("call" === t || "estimateGas" === t) {
                            const t = e.transaction;
                            if (t && null != t.type && K.from(t.type).isZero() && null == t.maxFeePerGas && null == t.maxPriorityFeePerGas) {
                                const r = yield this.getFeeData();
                                null == r.maxFeePerGas && null == r.maxPriorityFeePerGas && (e = nt(e), e.transaction = nt(t), delete e.transaction.type)
                            }
                        }
                        const r = this.prepareRequest(t, e);
                        null == r && Nn.throwError(t + " not implemented", g.errors.NOT_IMPLEMENTED, {
                            operation: t
                        });
                        try {
                            return yield this.send(r[0], r[1])
                        } catch (n) {
                            return Sn(t, n, e)
                        }
                    }))
                }
                _startEvent(t) {
                    "pending" === t.tag && this._startPending(), super._startEvent(t)
                }
                _startPending() {
                    if (null != this._pendingFilter) return;
                    const t = this,
                        e = this.send("eth_newPendingTransactionFilter", []);
                    this._pendingFilter = e, e.then((function(r) {
                        function n() {
                            t.send("eth_getFilterChanges", [r]).then((function(r) {
                                if (t._pendingFilter != e) return null;
                                let n = Promise.resolve();
                                return r.forEach((function(e) {
                                    t._emitted["t:" + e.toLowerCase()] = "pending", n = n.then((function() {
                                        return t.getTransaction(e).then((function(e) {
                                            return t.emit("pending", e), null
                                        }))
                                    }))
                                })), n.then((function() {
                                    return In(1e3)
                                }))
                            })).then((function() {
                                if (t._pendingFilter == e) return setTimeout((function() {
                                    n()
                                }), 0), null;
                                t.send("eth_uninstallFilter", [r])
                            })).catch(t => {})
                        }
                        return n(), r
                    })).catch(t => {})
                }
                _stopEvent(t) {
                    "pending" === t.tag && 0 === this.listenerCount("pending") && (this._pendingFilter = null), super._stopEvent(t)
                }
                static hexlifyTransaction(t, e) {
                    const r = nt(On);
                    if (e)
                        for (const i in e) e[i] && (r[i] = !0);
                    rt(t, r);
                    const n = {};
                    return ["chainId", "gasLimit", "gasPrice", "type", "maxFeePerGas", "maxPriorityFeePerGas", "nonce", "value"].forEach((function(e) {
                        if (null == t[e]) return;
                        const r = C(t[e]);
                        "gasLimit" === e && (e = "gas"), n[e] = r
                    })), ["from", "to", "data"].forEach((function(e) {
                        null != t[e] && (n[e] = k(t[e]))
                    })), t.accessList && (n["accessList"] = lr(t.accessList)), n
                }
            }
            let Un = null;
            try {
                if (Un = WebSocket, null == Un) throw new Error("inject please")
            } catch (Vi) {
                const t = new g(_e);
                Un = function() {
                    t.throwError("WebSockets not supported in this environment", g.errors.UNSUPPORTED_OPERATION, {
                        operation: "new WebSocket()"
                    })
                }
            }
            var Fn = function(t, e, r, n) {
                function i(t) {
                    return t instanceof r ? t : new r((function(e) {
                        e(t)
                    }))
                }
                return new(r || (r = Promise))((function(r, o) {
                    function s(t) {
                        try {
                            u(n.next(t))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function a(t) {
                        try {
                            u(n["throw"](t))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function u(t) {
                        t.done ? r(t.value) : i(t.value).then(s, a)
                    }
                    u((n = n.apply(t, e || [])).next())
                }))
            };
            const Bn = new g(_e);
            let Ln = 1;
            class Dn extends Cn {
                constructor(t, e) {
                    "any" === e && Bn.throwError("WebSocketProvider does not support 'any' network yet", g.errors.UNSUPPORTED_OPERATION, {
                        operation: "network:any"
                    }), super("string" === typeof t ? t : "_websocket", e), this._pollingInterval = -1, this._wsReady = !1, Q(this, "_websocket", "string" === typeof t ? new Un(this.connection.url) : t), Q(this, "_requests", {}), Q(this, "_subs", {}), Q(this, "_subIds", {}), Q(this, "_detectNetwork", super.detectNetwork()), this.websocket.onopen = () => {
                        this._wsReady = !0, Object.keys(this._requests).forEach(t => {
                            this.websocket.send(this._requests[t].payload)
                        })
                    }, this.websocket.onmessage = t => {
                        const e = t.data,
                            r = JSON.parse(e);
                        if (null != r.id) {
                            const t = String(r.id),
                                n = this._requests[t];
                            if (delete this._requests[t], void 0 !== r.result) n.callback(null, r.result), this.emit("debug", {
                                action: "response",
                                request: JSON.parse(n.payload),
                                response: r.result,
                                provider: this
                            });
                            else {
                                let t = null;
                                r.error ? (t = new Error(r.error.message || "unknown error"), Q(t, "code", r.error.code || null), Q(t, "response", e)) : t = new Error("unknown error"), n.callback(t, void 0), this.emit("debug", {
                                    action: "response",
                                    error: t,
                                    request: JSON.parse(n.payload),
                                    provider: this
                                })
                            }
                        } else if ("eth_subscription" === r.method) {
                            const t = this._subs[r.params.subscription];
                            t && t.processFunc(r.params.result)
                        } else console.warn("this should not happen")
                    };
                    const r = setInterval(() => {
                        this.emit("poll")
                    }, 1e3);
                    r.unref && r.unref()
                }
                get websocket() {
                    return this._websocket
                }
                detectNetwork() {
                    return this._detectNetwork
                }
                get pollingInterval() {
                    return 0
                }
                resetEventsBlock(t) {
                    Bn.throwError("cannot reset events block on WebSocketProvider", g.errors.UNSUPPORTED_OPERATION, {
                        operation: "resetEventBlock"
                    })
                }
                set pollingInterval(t) {
                    Bn.throwError("cannot set polling interval on WebSocketProvider", g.errors.UNSUPPORTED_OPERATION, {
                        operation: "setPollingInterval"
                    })
                }
                poll() {
                    return Fn(this, void 0, void 0, (function*() {
                        return null
                    }))
                }
                set polling(t) {
                    t && Bn.throwError("cannot set polling on WebSocketProvider", g.errors.UNSUPPORTED_OPERATION, {
                        operation: "setPolling"
                    })
                }
                send(t, e) {
                    const r = Ln++;
                    return new Promise((n, i) => {
                        function o(t, e) {
                            return t ? i(t) : n(e)
                        }
                        const s = JSON.stringify({
                            method: t,
                            params: e,
                            id: r,
                            jsonrpc: "2.0"
                        });
                        this.emit("debug", {
                            action: "request",
                            request: JSON.parse(s),
                            provider: this
                        }), this._requests[String(r)] = {
                            callback: o,
                            payload: s
                        }, this._wsReady && this.websocket.send(s)
                    })
                }
                static defaultUrl() {
                    return "ws://localhost:8546"
                }
                _subscribe(t, e, r) {
                    return Fn(this, void 0, void 0, (function*() {
                        let n = this._subIds[t];
                        null == n && (n = Promise.all(e).then(t => this.send("eth_subscribe", t)), this._subIds[t] = n);
                        const i = yield n;
                        this._subs[i] = {
                            tag: t,
                            processFunc: r
                        }
                    }))
                }
                _startEvent(t) {
                    switch (t.type) {
                        case "block":
                            this._subscribe("block", ["newHeads"], t => {
                                const e = K.from(t.number).toNumber();
                                this._emitted.block = e, this.emit("block", e)
                            });
                            break;
                        case "pending":
                            this._subscribe("pending", ["newPendingTransactions"], t => {
                                this.emit("pending", t)
                            });
                            break;
                        case "filter":
                            this._subscribe(t.tag, ["logs", this._getFilter(t.filter)], e => {
                                null == e.removed && (e.removed = !1), this.emit(t.filter, this.formatter.filterLog(e))
                            });
                            break;
                        case "tx":
                            {
                                const e = t => {
                                    const e = t.hash;
                                    this.getTransactionReceipt(e).then(t => {
                                        t && this.emit(e, t)
                                    })
                                };e(t),
                                this._subscribe("tx", ["newHeads"], t => {
                                    this._events.filter(t => "tx" === t.type).forEach(e)
                                });
                                break
                            }
                        case "debug":
                        case "poll":
                        case "willPoll":
                        case "didPoll":
                        case "error":
                            break;
                        default:
                            console.log("unhandled:", t);
                            break
                    }
                }
                _stopEvent(t) {
                    let e = t.tag;
                    if ("tx" === t.type) {
                        if (this._events.filter(t => "tx" === t.type).length) return;
                        e = "tx"
                    } else if (this.listenerCount(t.event)) return;
                    const r = this._subIds[e];
                    r && (delete this._subIds[e], r.then(t => {
                        this._subs[t] && (delete this._subs[t], this.send("eth_unsubscribe", [t]))
                    }))
                }
                destroy() {
                    return Fn(this, void 0, void 0, (function*() {
                        this.websocket.readyState === Un.CONNECTING && (yield new Promise(t => {
                            this.websocket.onopen = function() {
                                t(!0)
                            }, this.websocket.onerror = function() {
                                t(!1)
                            }
                        })), this.websocket.close(1e3)
                    }))
                }
            }
            var Gn = function(t, e, r, n) {
                function i(t) {
                    return t instanceof r ? t : new r((function(e) {
                        e(t)
                    }))
                }
                return new(r || (r = Promise))((function(r, o) {
                    function s(t) {
                        try {
                            u(n.next(t))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function a(t) {
                        try {
                            u(n["throw"](t))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function u(t) {
                        t.done ? r(t.value) : i(t.value).then(s, a)
                    }
                    u((n = n.apply(t, e || [])).next())
                }))
            };
            const jn = new g(_e);
            class qn extends Cn {
                detectNetwork() {
                    const t = Object.create(null, {
                        detectNetwork: {
                            get: () => super.detectNetwork
                        }
                    });
                    return Gn(this, void 0, void 0, (function*() {
                        let e = this.network;
                        return null == e && (e = yield t.detectNetwork.call(this), e || jn.throwError("no network detected", g.errors.UNKNOWN_ERROR, {}), null == this._network && (Q(this, "_network", e), this.emit("network", e, null))), e
                    }))
                }
            }
            class zn extends qn {
                constructor(t, e) {
                    jn.checkAbstract(new.target, zn), t = tt(new.target, "getNetwork")(t), e = tt(new.target, "getApiKey")(e);
                    const r = tt(new.target, "getUrl")(t, e);
                    super(r, t), "string" === typeof e ? Q(this, "apiKey", e) : null != e && Object.keys(e).forEach(t => {
                        Q(this, t, e[t])
                    })
                }
                _startPending() {
                    jn.warn("WARNING: API provider does not support pending filters")
                }
                isCommunityResource() {
                    return !1
                }
                getSigner(t) {
                    return jn.throwError("API provider does not support signing", g.errors.UNSUPPORTED_OPERATION, {
                        operation: "getSigner"
                    })
                }
                listAccounts() {
                    return Promise.resolve([])
                }
                static getApiKey(t) {
                    return t
                }
                static getUrl(t, e) {
                    return jn.throwError("not implemented; sub-classes must override getUrl", g.errors.NOT_IMPLEMENTED, {
                        operation: "getUrl"
                    })
                }
            }
            const Kn = new g(_e),
                Wn = "_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC";
            class Vn extends Dn {
                constructor(t, e) {
                    const r = new Hn(t, e),
                        n = r.connection.url.replace(/^http/i, "ws").replace(".alchemyapi.", ".ws.alchemyapi.");
                    super(n, r.network), Q(this, "apiKey", r.apiKey)
                }
                isCommunityResource() {
                    return this.apiKey === Wn
                }
            }
            class Hn extends zn {
                static getWebSocketProvider(t, e) {
                    return new Vn(t, e)
                }
                static getApiKey(t) {
                    return null == t ? Wn : (t && "string" !== typeof t && Kn.throwArgumentError("invalid apiKey", "apiKey", t), t)
                }
                static getUrl(t, e) {
                    let r = null;
                    switch (t.name) {
                        case "homestead":
                            r = "eth-mainnet.alchemyapi.io/v2/";
                            break;
                        case "ropsten":
                            r = "eth-ropsten.alchemyapi.io/v2/";
                            break;
                        case "rinkeby":
                            r = "eth-rinkeby.alchemyapi.io/v2/";
                            break;
                        case "goerli":
                            r = "eth-goerli.alchemyapi.io/v2/";
                            break;
                        case "kovan":
                            r = "eth-kovan.alchemyapi.io/v2/";
                            break;
                        case "matic":
                            r = "polygon-mainnet.g.alchemy.com/v2/";
                            break;
                        case "maticmum":
                            r = "polygon-mumbai.g.alchemy.com/v2/";
                            break;
                        case "arbitrum":
                            r = "arb-mainnet.g.alchemy.com/v2/";
                            break;
                        case "arbitrum-rinkeby":
                            r = "arb-rinkeby.g.alchemy.com/v2/";
                            break;
                        case "optimism":
                            r = "opt-mainnet.g.alchemy.com/v2/";
                            break;
                        case "optimism-kovan":
                            r = "opt-kovan.g.alchemy.com/v2/";
                            break;
                        default:
                            Kn.throwArgumentError("unsupported network", "network", arguments[0])
                    }
                    return {
                        allowGzip: !0,
                        url: "https://" + r + e,
                        throttleCallback: (t, r) => (e === Wn && Ar(), Promise.resolve(!0))
                    }
                }
                isCommunityResource() {
                    return this.apiKey === Wn
                }
            }
            const Jn = new g(_e),
                Zn = "9f7d929b018cdffb338517efa06f58359e86ff1ffd350bc889738523659e7972";

            function Xn(t) {
                switch (t) {
                    case "homestead":
                        return "rpc.ankr.com/eth/";
                    case "matic":
                        return "rpc.ankr.com/polygon/";
                    case "arbitrum":
                        return "rpc.ankr.com/arbitrum/"
                }
                return Jn.throwArgumentError("unsupported network", "name", t)
            }
            class $n extends zn {
                isCommunityResource() {
                    return this.apiKey === Zn
                }
                static getApiKey(t) {
                    return null == t ? Zn : t
                }
                static getUrl(t, e) {
                    null == e && (e = Zn);
                    const r = {
                        allowGzip: !0,
                        url: "https://" + Xn(t.name) + e,
                        throttleCallback: (t, r) => (e.apiKey === Zn && Ar(), Promise.resolve(!0))
                    };
                    return null != e.projectSecret && (r.user = "", r.password = e.projectSecret), r
                }
            }
            var Yn = function(t, e, r, n) {
                function i(t) {
                    return t instanceof r ? t : new r((function(e) {
                        e(t)
                    }))
                }
                return new(r || (r = Promise))((function(r, o) {
                    function s(t) {
                        try {
                            u(n.next(t))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function a(t) {
                        try {
                            u(n["throw"](t))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function u(t) {
                        t.done ? r(t.value) : i(t.value).then(s, a)
                    }
                    u((n = n.apply(t, e || [])).next())
                }))
            };
            const Qn = new g(_e);
            class ti extends zn {
                static getApiKey(t) {
                    return null != t && Qn.throwArgumentError("apiKey not supported for cloudflare", "apiKey", t), null
                }
                static getUrl(t, e) {
                    let r = null;
                    switch (t.name) {
                        case "homestead":
                            r = "https://cloudflare-eth.com/";
                            break;
                        default:
                            Qn.throwArgumentError("unsupported network", "network", arguments[0])
                    }
                    return r
                }
                perform(t, e) {
                    const r = Object.create(null, {
                        perform: {
                            get: () => super.perform
                        }
                    });
                    return Yn(this, void 0, void 0, (function*() {
                        if ("getBlockNumber" === t) {
                            const t = yield r.perform.call(this, "getBlock", {
                                blockTag: "latest"
                            });
                            return t.number
                        }
                        return r.perform.call(this, t, e)
                    }))
                }
            }
            var ei = function(t, e, r, n) {
                function i(t) {
                    return t instanceof r ? t : new r((function(e) {
                        e(t)
                    }))
                }
                return new(r || (r = Promise))((function(r, o) {
                    function s(t) {
                        try {
                            u(n.next(t))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function a(t) {
                        try {
                            u(n["throw"](t))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function u(t) {
                        t.done ? r(t.value) : i(t.value).then(s, a)
                    }
                    u((n = n.apply(t, e || [])).next())
                }))
            };
            const ri = new g(_e);

            function ni(t) {
                const e = {};
                for (let r in t) {
                    if (null == t[r]) continue;
                    let n = t[r];
                    "type" === r && 0 === n || (n = {
                        type: !0,
                        gasLimit: !0,
                        gasPrice: !0,
                        maxFeePerGs: !0,
                        maxPriorityFeePerGas: !0,
                        nonce: !0,
                        value: !0
                    }[r] ? C(k(n)) : "accessList" === r ? "[" + lr(n).map(t => `{address:"${t.address}",storageKeys:["${t.storageKeys.join('","')}"]}`).join(",") + "]" : k(n), e[r] = n)
                }
                return e
            }

            function ii(t) {
                if (0 == t.status && ("No records found" === t.message || "No transactions found" === t.message)) return t.result;
                if (1 != t.status || "OK" != t.message) {
                    const e = new Error("invalid response");
                    throw e.result = JSON.stringify(t), (t.result || "").toLowerCase().indexOf("rate limit") >= 0 && (e.throttleRetry = !0), e
                }
                return t.result
            }

            function oi(t) {
                if (t && 0 == t.status && "NOTOK" == t.message && (t.result || "").toLowerCase().indexOf("rate limit") >= 0) {
                    const e = new Error("throttled response");
                    throw e.result = JSON.stringify(t), e.throttleRetry = !0, e
                }
                if ("2.0" != t.jsonrpc) {
                    const e = new Error("invalid response");
                    throw e.result = JSON.stringify(t), e
                }
                if (t.error) {
                    const e = new Error(t.error.message || "unknown error");
                    throw t.error.code && (e.code = t.error.code), t.error.data && (e.data = t.error.data), e
                }
                return t.result
            }

            function si(t) {
                if ("pending" === t) throw new Error("pending not supported");
                return "latest" === t ? t : parseInt(t.substring(2), 16)
            }
            const ai = "9D13ZE7XSBTJ94N9BNJ2MA33VMAY2YPIRB";

            function ui(t, e, r) {
                if ("call" === t && e.code === g.errors.SERVER_ERROR) {
                    const t = e.error;
                    if (t && (t.message.match(/reverted/i) || t.message.match(/VM execution error/i))) {
                        let r = t.data;
                        if (r && (r = "0x" + r.replace(/^.*0x/i, "")), R(r)) return r;
                        ri.throwError("missing revert data in call exception", g.errors.CALL_EXCEPTION, {
                            error: e,
                            data: "0x"
                        })
                    }
                }
                let n = e.message;
                throw e.code === g.errors.SERVER_ERROR && (e.error && "string" === typeof e.error.message ? n = e.error.message : "string" === typeof e.body ? n = e.body : "string" === typeof e.responseText && (n = e.responseText)), n = (n || "").toLowerCase(), n.match(/insufficient funds/) && ri.throwError("insufficient funds for intrinsic transaction cost", g.errors.INSUFFICIENT_FUNDS, {
                    error: e,
                    method: t,
                    transaction: r
                }), n.match(/same hash was already imported|transaction nonce is too low|nonce too low/) && ri.throwError("nonce has already been used", g.errors.NONCE_EXPIRED, {
                    error: e,
                    method: t,
                    transaction: r
                }), n.match(/another transaction with same nonce/) && ri.throwError("replacement fee too low", g.errors.REPLACEMENT_UNDERPRICED, {
                    error: e,
                    method: t,
                    transaction: r
                }), n.match(/execution failed due to an exception|execution reverted/) && ri.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", g.errors.UNPREDICTABLE_GAS_LIMIT, {
                    error: e,
                    method: t,
                    transaction: r
                }), e
            }
            class hi extends Xr {
                constructor(t, e) {
                    ri.checkNew(new.target, hi), super(t), Q(this, "baseUrl", this.getBaseUrl()), Q(this, "apiKey", e || ai)
                }
                getBaseUrl() {
                    switch (this.network ? this.network.name : "invalid") {
                        case "homestead":
                            return "https://api.etherscan.io";
                        case "ropsten":
                            return "https://api-ropsten.etherscan.io";
                        case "rinkeby":
                            return "https://api-rinkeby.etherscan.io";
                        case "kovan":
                            return "https://api-kovan.etherscan.io";
                        case "goerli":
                            return "https://api-goerli.etherscan.io";
                        default:
                    }
                    return ri.throwArgumentError("unsupported network", "network", name)
                }
                getUrl(t, e) {
                    const r = Object.keys(e).reduce((t, r) => {
                            const n = e[r];
                            return null != n && (t += `&${r}=${n}`), t
                        }, ""),
                        n = this.apiKey ? "&apikey=" + this.apiKey : "";
                    return `${this.baseUrl}/api?module=${t}${r}${n}`
                }
                getPostUrl() {
                    return this.baseUrl + "/api"
                }
                getPostData(t, e) {
                    return e.module = t, e.apikey = this.apiKey, e
                }
                fetch(t, e, r) {
                    return ei(this, void 0, void 0, (function*() {
                        const n = r ? this.getPostUrl() : this.getUrl(t, e),
                            i = r ? this.getPostData(t, e) : null,
                            o = "proxy" === t ? oi : ii;
                        this.emit("debug", {
                            action: "request",
                            request: n,
                            provider: this
                        });
                        const s = {
                            url: n,
                            throttleSlotInterval: 1e3,
                            throttleCallback: (t, e) => (this.isCommunityResource() && Ar(), Promise.resolve(!0))
                        };
                        let a = null;
                        i && (s.headers = {
                            "content-type": "application/x-www-form-urlencoded; charset=UTF-8"
                        }, a = Object.keys(i).map(t => `${t}=${i[t]}`).join("&"));
                        const u = yield Me(s, a, o || oi);
                        return this.emit("debug", {
                            action: "response",
                            request: n,
                            response: at(u),
                            provider: this
                        }), u
                    }))
                }
                detectNetwork() {
                    return ei(this, void 0, void 0, (function*() {
                        return this.network
                    }))
                }
                perform(t, e) {
                    const r = Object.create(null, {
                        perform: {
                            get: () => super.perform
                        }
                    });
                    return ei(this, void 0, void 0, (function*() {
                        switch (t) {
                            case "getBlockNumber":
                                return this.fetch("proxy", {
                                    action: "eth_blockNumber"
                                });
                            case "getGasPrice":
                                return this.fetch("proxy", {
                                    action: "eth_gasPrice"
                                });
                            case "getBalance":
                                return this.fetch("account", {
                                    action: "balance",
                                    address: e.address,
                                    tag: e.blockTag
                                });
                            case "getTransactionCount":
                                return this.fetch("proxy", {
                                    action: "eth_getTransactionCount",
                                    address: e.address,
                                    tag: e.blockTag
                                });
                            case "getCode":
                                return this.fetch("proxy", {
                                    action: "eth_getCode",
                                    address: e.address,
                                    tag: e.blockTag
                                });
                            case "getStorageAt":
                                return this.fetch("proxy", {
                                    action: "eth_getStorageAt",
                                    address: e.address,
                                    position: e.position,
                                    tag: e.blockTag
                                });
                            case "sendTransaction":
                                return this.fetch("proxy", {
                                    action: "eth_sendRawTransaction",
                                    hex: e.signedTransaction
                                }, !0).catch(t => ui("sendTransaction", t, e.signedTransaction));
                            case "getBlock":
                                if (e.blockTag) return this.fetch("proxy", {
                                    action: "eth_getBlockByNumber",
                                    tag: e.blockTag,
                                    boolean: e.includeTransactions ? "true" : "false"
                                });
                                throw new Error("getBlock by blockHash not implemented");
                            case "getTransaction":
                                return this.fetch("proxy", {
                                    action: "eth_getTransactionByHash",
                                    txhash: e.transactionHash
                                });
                            case "getTransactionReceipt":
                                return this.fetch("proxy", {
                                    action: "eth_getTransactionReceipt",
                                    txhash: e.transactionHash
                                });
                            case "call":
                                {
                                    if ("latest" !== e.blockTag) throw new Error("EtherscanProvider does not support blockTag for call");
                                    const t = ni(e.transaction);t.module = "proxy",
                                    t.action = "eth_call";
                                    try {
                                        return yield this.fetch("proxy", t, !0)
                                    } catch (Vi) {
                                        return ui("call", Vi, e.transaction)
                                    }
                                }
                            case "estimateGas":
                                {
                                    const t = ni(e.transaction);t.module = "proxy",
                                    t.action = "eth_estimateGas";
                                    try {
                                        return yield this.fetch("proxy", t, !0)
                                    } catch (Vi) {
                                        return ui("estimateGas", Vi, e.transaction)
                                    }
                                }
                            case "getLogs":
                                {
                                    const t = {
                                        action: "getLogs"
                                    };
                                    if (e.filter.fromBlock && (t.fromBlock = si(e.filter.fromBlock)), e.filter.toBlock && (t.toBlock = si(e.filter.toBlock)), e.filter.address && (t.address = e.filter.address), e.filter.topics && e.filter.topics.length > 0 && (e.filter.topics.length > 1 && ri.throwError("unsupported topic count", g.errors.UNSUPPORTED_OPERATION, {
                                            topics: e.filter.topics
                                        }), 1 === e.filter.topics.length)) {
                                        const r = e.filter.topics[0];
                                        "string" === typeof r && 66 === r.length || ri.throwError("unsupported topic format", g.errors.UNSUPPORTED_OPERATION, {
                                            topic0: r
                                        }), t.topic0 = r
                                    }
                                    const r = yield this.fetch("logs", t);
                                    let n = {};
                                    for (let e = 0; e < r.length; e++) {
                                        const t = r[e];
                                        if (null == t.blockHash) {
                                            if (null == n[t.blockNumber]) {
                                                const e = yield this.getBlock(t.blockNumber);
                                                e && (n[t.blockNumber] = e.hash)
                                            }
                                            t.blockHash = n[t.blockNumber]
                                        }
                                    }
                                    return r
                                }
                            case "getEtherPrice":
                                return "homestead" !== this.network.name ? 0 : parseFloat((yield this.fetch("stats", {
                                    action: "ethprice"
                                })).ethusd);
                            default:
                                break
                        }
                        return r.perform.call(this, t, e)
                    }))
                }
                getHistory(t, e, r) {
                    return ei(this, void 0, void 0, (function*() {
                        const n = {
                                action: "txlist",
                                address: yield this.resolveName(t), startblock: null == e ? 0 : e, endblock: null == r ? 99999999 : r, sort: "asc"
                            },
                            i = yield this.fetch("account", n);
                        return i.map(t => {
                            ["contractAddress", "to"].forEach((function(e) {
                                "" == t[e] && delete t[e]
                            })), null == t.creates && null != t.contractAddress && (t.creates = t.contractAddress);
                            const e = this.formatter.transactionResponse(t);
                            return t.timeStamp && (e.timestamp = parseInt(t.timeStamp)), e
                        })
                    }))
                }
                isCommunityResource() {
                    return this.apiKey === ai
                }
            }
            var li = r("5553"),
                fi = function(t, e, r, n) {
                    function i(t) {
                        return t instanceof r ? t : new r((function(e) {
                            e(t)
                        }))
                    }
                    return new(r || (r = Promise))((function(r, o) {
                        function s(t) {
                            try {
                                u(n.next(t))
                            } catch (e) {
                                o(e)
                            }
                        }

                        function a(t) {
                            try {
                                u(n["throw"](t))
                            } catch (e) {
                                o(e)
                            }
                        }

                        function u(t) {
                            t.done ? r(t.value) : i(t.value).then(s, a)
                        }
                        u((n = n.apply(t, e || [])).next())
                    }))
                };
            const ci = new g(_e);

            function di() {
                return (new Date).getTime()
            }

            function mi(t) {
                let e = null;
                for (let r = 0; r < t.length; r++) {
                    const n = t[r];
                    if (null == n) return null;
                    e ? e.name === n.name && e.chainId === n.chainId && (e.ensAddress === n.ensAddress || null == e.ensAddress && null == n.ensAddress) || ci.throwArgumentError("provider mismatch", "networks", t) : e = n
                }
                return e
            }

            function pi(t, e) {
                t = t.slice().sort();
                const r = Math.floor(t.length / 2);
                if (t.length % 2) return t[r];
                const n = t[r - 1],
                    i = t[r];
                return null != e && Math.abs(n - i) > e ? null : (n + i) / 2
            }

            function gi(t) {
                if (null === t) return "null";
                if ("number" === typeof t || "boolean" === typeof t) return JSON.stringify(t);
                if ("string" === typeof t) return t;
                if (K.isBigNumber(t)) return t.toString();
                if (Array.isArray(t)) return JSON.stringify(t.map(t => gi(t)));
                if ("object" === typeof t) {
                    const e = Object.keys(t);
                    return e.sort(), "{" + e.map(e => {
                        let r = t[e];
                        return r = "function" === typeof r ? "[function]" : gi(r), JSON.stringify(e) + ":" + r
                    }).join(",") + "}"
                }
                throw new Error("unknown value type: " + typeof t)
            }
            let vi = 1;

            function yi(t) {
                let e = null,
                    r = null,
                    n = new Promise(n => {
                        e = function() {
                            r && (clearTimeout(r), r = null), n()
                        }, r = setTimeout(e, t)
                    });
                const i = t => (n = n.then(t), n);

                function o() {
                    return n
                }
                return {
                    cancel: e,
                    getPromise: o,
                    wait: i
                }
            }
            const wi = [g.errors.CALL_EXCEPTION, g.errors.INSUFFICIENT_FUNDS, g.errors.NONCE_EXPIRED, g.errors.REPLACEMENT_UNDERPRICED, g.errors.UNPREDICTABLE_GAS_LIMIT],
                bi = ["address", "args", "errorArgs", "errorSignature", "method", "transaction"];

            function Mi(t, e) {
                const r = {
                    weight: t.weight
                };
                return Object.defineProperty(r, "provider", {
                    get: () => t.provider
                }), t.start && (r.start = t.start), e && (r.duration = e - t.start), t.done && (t.error ? r.error = t.error : r.result = t.result || null), r
            }

            function Ei(t, e) {
                return function(r) {
                    const n = {};
                    r.forEach(e => {
                        const r = t(e.result);
                        n[r] || (n[r] = {
                            count: 0,
                            result: e.result
                        }), n[r].count++
                    });
                    const i = Object.keys(n);
                    for (let t = 0; t < i.length; t++) {
                        const r = n[i[t]];
                        if (r.count >= e) return r.result
                    }
                }
            }

            function Ni(t, e, r) {
                let n = gi;
                switch (e) {
                    case "getBlockNumber":
                        return function(e) {
                            const r = e.map(t => t.result);
                            let n = pi(e.map(t => t.result), 2);
                            if (null != n) return n = Math.ceil(n), r.indexOf(n + 1) >= 0 && n++, n >= t._highestBlockNumber && (t._highestBlockNumber = n), t._highestBlockNumber
                        };
                    case "getGasPrice":
                        return function(t) {
                            const e = t.map(t => t.result);
                            return e.sort(), e[Math.floor(e.length / 2)]
                        };
                    case "getEtherPrice":
                        return function(t) {
                            return pi(t.map(t => t.result))
                        };
                    case "getBalance":
                    case "getTransactionCount":
                    case "getCode":
                    case "getStorageAt":
                    case "call":
                    case "estimateGas":
                    case "getLogs":
                        break;
                    case "getTransaction":
                    case "getTransactionReceipt":
                        n = function(t) {
                            return null == t ? null : (t = nt(t), t.confirmations = -1, gi(t))
                        };
                        break;
                    case "getBlock":
                        n = r.includeTransactions ? function(t) {
                            return null == t ? null : (t = nt(t), t.transactions = t.transactions.map(t => (t = nt(t), t.confirmations = -1, t)), gi(t))
                        } : function(t) {
                            return null == t ? null : gi(t)
                        };
                        break;
                    default:
                        throw new Error("unknown method: " + e)
                }
                return Ei(n, t.quorum)
            }

            function Ai(t, e) {
                return fi(this, void 0, void 0, (function*() {
                    const r = t.provider;
                    return null != r.blockNumber && r.blockNumber >= e || -1 === e ? r : Ee(() => new Promise((n, i) => {
                        setTimeout((function() {
                            return r.blockNumber >= e ? n(r) : t.cancelled ? n(null) : n(void 0)
                        }), 0)
                    }), {
                        oncePoll: r
                    })
                }))
            }

            function _i(t, e, r, n) {
                return fi(this, void 0, void 0, (function*() {
                    let i = t.provider;
                    switch (r) {
                        case "getBlockNumber":
                        case "getGasPrice":
                            return i[r]();
                        case "getEtherPrice":
                            if (i.getEtherPrice) return i.getEtherPrice();
                            break;
                        case "getBalance":
                        case "getTransactionCount":
                        case "getCode":
                            return n.blockTag && R(n.blockTag) && (i = yield Ai(t, e)), i[r](n.address, n.blockTag || "latest");
                        case "getStorageAt":
                            return n.blockTag && R(n.blockTag) && (i = yield Ai(t, e)), i.getStorageAt(n.address, n.position, n.blockTag || "latest");
                        case "getBlock":
                            return n.blockTag && R(n.blockTag) && (i = yield Ai(t, e)), i[n.includeTransactions ? "getBlockWithTransactions" : "getBlock"](n.blockTag || n.blockHash);
                        case "call":
                        case "estimateGas":
                            return n.blockTag && R(n.blockTag) && (i = yield Ai(t, e)), i[r](n.transaction);
                        case "getTransaction":
                        case "getTransactionReceipt":
                            return i[r](n.transactionHash);
                        case "getLogs":
                            {
                                let r = n.filter;
                                return (r.fromBlock && R(r.fromBlock) || r.toBlock && R(r.toBlock)) && (i = yield Ai(t, e)),
                                i.getLogs(r)
                            }
                    }
                    return ci.throwError("unknown method error", g.errors.UNKNOWN_ERROR, {
                        method: r,
                        params: n
                    })
                }))
            }
            class Si extends Xr {
                constructor(t, e) {
                    ci.checkNew(new.target, Si), 0 === t.length && ci.throwArgumentError("missing providers", "providers", t);
                    const r = t.map((t, e) => {
                            if (dt.isProvider(t)) {
                                const e = Er(t) ? 2e3 : 750,
                                    r = 1;
                                return Object.freeze({
                                    provider: t,
                                    weight: 1,
                                    stallTimeout: e,
                                    priority: r
                                })
                            }
                            const r = nt(t);
                            null == r.priority && (r.priority = 1), null == r.stallTimeout && (r.stallTimeout = Er(t) ? 2e3 : 750), null == r.weight && (r.weight = 1);
                            const n = r.weight;
                            return (n % 1 || n > 512 || n < 1) && ci.throwArgumentError("invalid weight; must be integer in [1, 512]", `providers[${e}].weight`, n), Object.freeze(r)
                        }),
                        n = r.reduce((t, e) => t + e.weight, 0);
                    null == e ? e = n / 2 : e > n && ci.throwArgumentError("quorum will always fail; larger than total weight", "quorum", e);
                    let i = mi(r.map(t => t.provider.network));
                    null == i && (i = new Promise((t, e) => {
                        setTimeout(() => {
                            this.detectNetwork().then(t, e)
                        }, 0)
                    })), super(i), Q(this, "providerConfigs", Object.freeze(r)), Q(this, "quorum", e), this._highestBlockNumber = -1
                }
                detectNetwork() {
                    return fi(this, void 0, void 0, (function*() {
                        const t = yield Promise.all(this.providerConfigs.map(t => t.provider.getNetwork()));
                        return mi(t)
                    }))
                }
                perform(t, e) {
                    return fi(this, void 0, void 0, (function*() {
                        if ("sendTransaction" === t) {
                            const t = yield Promise.all(this.providerConfigs.map(t => t.provider.sendTransaction(e.signedTransaction).then(t => t.hash, t => t)));
                            for (let e = 0; e < t.length; e++) {
                                const r = t[e];
                                if ("string" === typeof r) return r
                            }
                            throw t[0]
                        } - 1 === this._highestBlockNumber && "getBlockNumber" !== t && (yield this.getBlockNumber());
                        const r = Ni(this, t, e),
                            n = Object(li["a"])(this.providerConfigs.map(nt));
                        n.sort((t, e) => t.priority - e.priority);
                        const i = this._highestBlockNumber;
                        let o = 0,
                            s = !0;
                        while (1) {
                            const a = di();
                            let u = n.filter(t => t.runner && a - t.start < t.stallTimeout).reduce((t, e) => t + e.weight, 0);
                            while (u < this.quorum && o < n.length) {
                                const r = n[o++],
                                    s = vi++;
                                r.start = di(), r.staller = yi(r.stallTimeout), r.staller.wait(() => {
                                    r.staller = null
                                }), r.runner = _i(r, i, t, e).then(n => {
                                    r.done = !0, r.result = n, this.listenerCount("debug") && this.emit("debug", {
                                        action: "request",
                                        rid: s,
                                        backend: Mi(r, di()),
                                        request: {
                                            method: t,
                                            params: at(e)
                                        },
                                        provider: this
                                    })
                                }, n => {
                                    r.done = !0, r.error = n, this.listenerCount("debug") && this.emit("debug", {
                                        action: "request",
                                        rid: s,
                                        backend: Mi(r, di()),
                                        request: {
                                            method: t,
                                            params: at(e)
                                        },
                                        provider: this
                                    })
                                }), this.listenerCount("debug") && this.emit("debug", {
                                    action: "request",
                                    rid: s,
                                    backend: Mi(r, null),
                                    request: {
                                        method: t,
                                        params: at(e)
                                    },
                                    provider: this
                                }), u += r.weight
                            }
                            const h = [];
                            n.forEach(t => {
                                !t.done && t.runner && (h.push(t.runner), t.staller && h.push(t.staller.getPromise()))
                            }), h.length && (yield Promise.race(h));
                            const l = n.filter(t => t.done && null == t.error);
                            if (l.length >= this.quorum) {
                                const t = r(l);
                                if (void 0 !== t) return n.forEach(t => {
                                    t.staller && t.staller.cancel(), t.cancelled = !0
                                }), t;
                                s || (yield yi(100).getPromise()), s = !1
                            }
                            const f = n.reduce((t, e) => {
                                if (!e.done || null == e.error) return t;
                                const r = e.error.code;
                                return wi.indexOf(r) >= 0 && (t[r] || (t[r] = {
                                    error: e.error,
                                    weight: 0
                                }), t[r].weight += e.weight), t
                            }, {});
                            if (Object.keys(f).forEach(t => {
                                    const e = f[t];
                                    if (e.weight < this.quorum) return;
                                    n.forEach(t => {
                                        t.staller && t.staller.cancel(), t.cancelled = !0
                                    });
                                    const r = e.error,
                                        i = {};
                                    bi.forEach(t => {
                                        null != r[t] && (i[t] = r[t])
                                    }), ci.throwError(r.reason || r.message, t, i)
                                }), 0 === n.filter(t => !t.done).length) break
                        }
                        return n.forEach(t => {
                            t.staller && t.staller.cancel(), t.cancelled = !0
                        }), ci.throwError("failed to meet quorum", g.errors.SERVER_ERROR, {
                            method: t,
                            params: e,
                            results: n.map(t => Mi(t)),
                            provider: this
                        })
                    }))
                }
            }
            const Ii = null,
                Ri = new g(_e),
                Pi = "84842078b09946638c03157f83405213";
            class ki extends Dn {
                constructor(t, e) {
                    const r = new xi(t, e),
                        n = r.connection;
                    n.password && Ri.throwError("INFURA WebSocket project secrets unsupported", g.errors.UNSUPPORTED_OPERATION, {
                        operation: "InfuraProvider.getWebSocketProvider()"
                    });
                    const i = n.url.replace(/^http/i, "ws").replace("/v3/", "/ws/v3/");
                    super(i, t), Q(this, "apiKey", r.projectId), Q(this, "projectId", r.projectId), Q(this, "projectSecret", r.projectSecret)
                }
                isCommunityResource() {
                    return this.projectId === Pi
                }
            }
            class xi extends zn {
                static getWebSocketProvider(t, e) {
                    return new ki(t, e)
                }
                static getApiKey(t) {
                    const e = {
                        apiKey: Pi,
                        projectId: Pi,
                        projectSecret: null
                    };
                    return null == t || ("string" === typeof t ? e.projectId = t : null != t.projectSecret ? (Ri.assertArgument("string" === typeof t.projectId, "projectSecret requires a projectId", "projectId", t.projectId), Ri.assertArgument("string" === typeof t.projectSecret, "invalid projectSecret", "projectSecret", "[REDACTED]"), e.projectId = t.projectId, e.projectSecret = t.projectSecret) : t.projectId && (e.projectId = t.projectId), e.apiKey = e.projectId), e
                }
                static getUrl(t, e) {
                    let r = null;
                    switch (t ? t.name : "unknown") {
                        case "homestead":
                            r = "mainnet.infura.io";
                            break;
                        case "ropsten":
                            r = "ropsten.infura.io";
                            break;
                        case "rinkeby":
                            r = "rinkeby.infura.io";
                            break;
                        case "kovan":
                            r = "kovan.infura.io";
                            break;
                        case "goerli":
                            r = "goerli.infura.io";
                            break;
                        case "matic":
                            r = "polygon-mainnet.infura.io";
                            break;
                        case "maticmum":
                            r = "polygon-mumbai.infura.io";
                            break;
                        case "optimism":
                            r = "optimism-mainnet.infura.io";
                            break;
                        case "optimism-kovan":
                            r = "optimism-kovan.infura.io";
                            break;
                        case "arbitrum":
                            r = "arbitrum-mainnet.infura.io";
                            break;
                        case "arbitrum-rinkeby":
                            r = "arbitrum-rinkeby.infura.io";
                            break;
                        default:
                            Ri.throwError("unsupported network", g.errors.INVALID_ARGUMENT, {
                                argument: "network",
                                value: t
                            })
                    }
                    const n = {
                        allowGzip: !0,
                        url: "https://" + r + "/v3/" + e.projectId,
                        throttleCallback: (t, r) => (e.projectId === Pi && Ar(), Promise.resolve(!0))
                    };
                    return null != e.projectSecret && (n.user = "", n.password = e.projectSecret), n
                }
                isCommunityResource() {
                    return this.projectId === Pi
                }
            }
            class Ti extends Cn {
                send(t, e) {
                    const r = {
                        method: t,
                        params: e,
                        id: this._nextId++,
                        jsonrpc: "2.0"
                    };
                    null == this._pendingBatch && (this._pendingBatch = []);
                    const n = {
                            request: r,
                            resolve: null,
                            reject: null
                        },
                        i = new Promise((t, e) => {
                            n.resolve = t, n.reject = e
                        });
                    return this._pendingBatch.push(n), this._pendingBatchAggregator || (this._pendingBatchAggregator = setTimeout(() => {
                        const t = this._pendingBatch;
                        this._pendingBatch = null, this._pendingBatchAggregator = null;
                        const e = t.map(t => t.request);
                        return this.emit("debug", {
                            action: "requestBatch",
                            request: at(e),
                            provider: this
                        }), Me(this.connection, JSON.stringify(e)).then(r => {
                            this.emit("debug", {
                                action: "response",
                                request: e,
                                response: r,
                                provider: this
                            }), t.forEach((t, e) => {
                                const n = r[e];
                                if (n.error) {
                                    const e = new Error(n.error.message);
                                    e.code = n.error.code, e.data = n.error.data, t.reject(e)
                                } else t.resolve(n.result)
                            })
                        }, r => {
                            this.emit("debug", {
                                action: "response",
                                error: r,
                                request: e,
                                provider: this
                            }), t.forEach(t => {
                                t.reject(r)
                            })
                        })
                    }, 10)), i
                }
            }
            const Oi = new g(_e),
                Ci = "ETHERS_JS_SHARED";
            class Ui extends zn {
                static getApiKey(t) {
                    return t && "string" !== typeof t && Oi.throwArgumentError("invalid apiKey", "apiKey", t), t || Ci
                }
                static getUrl(t, e) {
                    Oi.warn("NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.");
                    let r = null;
                    switch (t.name) {
                        case "homestead":
                            r = "https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc";
                            break;
                        case "ropsten":
                            r = "https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc";
                            break;
                        case "rinkeby":
                            r = "https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc";
                            break;
                        case "goerli":
                            r = "https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc";
                            break;
                        case "kovan":
                            r = "https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc";
                            break;
                        default:
                            Oi.throwArgumentError("unsupported network", "network", arguments[0])
                    }
                    return r + "?apiKey=" + e
                }
            }
            const Fi = new g(_e),
                Bi = {
                    homestead: "6004bcd10040261633ade990",
                    ropsten: "6004bd4d0040261633ade991",
                    rinkeby: "6004bda20040261633ade994",
                    goerli: "6004bd860040261633ade992"
                };
            class Li extends zn {
                constructor(t, e) {
                    if (null == e) {
                        const r = tt(new.target, "getNetwork")(t);
                        if (r) {
                            const t = Bi[r.name];
                            t && (e = {
                                applicationId: t,
                                loadBalancer: !0
                            })
                        }
                        null == e && Fi.throwError("unsupported network", g.errors.INVALID_ARGUMENT, {
                            argument: "network",
                            value: t
                        })
                    }
                    super(t, e)
                }
                static getApiKey(t) {
                    null == t && Fi.throwArgumentError("PocketProvider.getApiKey does not support null apiKey", "apiKey", t);
                    const e = {
                        applicationId: null,
                        loadBalancer: !1,
                        applicationSecretKey: null
                    };
                    return "string" === typeof t ? e.applicationId = t : null != t.applicationSecretKey ? (Fi.assertArgument("string" === typeof t.applicationId, "applicationSecretKey requires an applicationId", "applicationId", t.applicationId), Fi.assertArgument("string" === typeof t.applicationSecretKey, "invalid applicationSecretKey", "applicationSecretKey", "[REDACTED]"), e.applicationId = t.applicationId, e.applicationSecretKey = t.applicationSecretKey, e.loadBalancer = !!t.loadBalancer) : t.applicationId ? (Fi.assertArgument("string" === typeof t.applicationId, "apiKey.applicationId must be a string", "apiKey.applicationId", t.applicationId), e.applicationId = t.applicationId, e.loadBalancer = !!t.loadBalancer) : Fi.throwArgumentError("unsupported PocketProvider apiKey", "apiKey", t), e
                }
                static getUrl(t, e) {
                    let r = null;
                    switch (t ? t.name : "unknown") {
                        case "homestead":
                            r = "eth-mainnet.gateway.pokt.network";
                            break;
                        case "ropsten":
                            r = "eth-ropsten.gateway.pokt.network";
                            break;
                        case "rinkeby":
                            r = "eth-rinkeby.gateway.pokt.network";
                            break;
                        case "goerli":
                            r = "eth-goerli.gateway.pokt.network";
                            break;
                        default:
                            Fi.throwError("unsupported network", g.errors.INVALID_ARGUMENT, {
                                argument: "network",
                                value: t
                            })
                    }
                    let n = null;
                    n = e.loadBalancer ? `https://${r}/v1/lb/${e.applicationId}` : `https://${r}/v1/${e.applicationId}`;
                    const i = {
                        url: n,
                        headers: {}
                    };
                    return null != e.applicationSecretKey && (i.user = "", i.password = e.applicationSecretKey), i
                }
                isCommunityResource() {
                    return this.applicationId === Bi[this.network.name]
                }
            }
            const Di = new g(_e);
            let Gi = 1;

            function ji(t, e) {
                const r = "Web3LegacyFetcher";
                return function(t, n) {
                    const i = {
                        method: t,
                        params: n,
                        id: Gi++,
                        jsonrpc: "2.0"
                    };
                    return new Promise((t, n) => {
                        this.emit("debug", {
                            action: "request",
                            fetcher: r,
                            request: at(i),
                            provider: this
                        }), e(i, (e, o) => {
                            if (e) return this.emit("debug", {
                                action: "response",
                                fetcher: r,
                                error: e,
                                request: i,
                                provider: this
                            }), n(e);
                            if (this.emit("debug", {
                                    action: "response",
                                    fetcher: r,
                                    request: i,
                                    response: o,
                                    provider: this
                                }), o.error) {
                                const t = new Error(o.error.message);
                                return t.code = o.error.code, t.data = o.error.data, n(t)
                            }
                            t(o.result)
                        })
                    })
                }
            }

            function qi(t) {
                return function(e, r) {
                    null == r && (r = []);
                    const n = {
                        method: e,
                        params: r
                    };
                    return this.emit("debug", {
                        action: "request",
                        fetcher: "Eip1193Fetcher",
                        request: at(n),
                        provider: this
                    }), t.request(n).then(t => (this.emit("debug", {
                        action: "response",
                        fetcher: "Eip1193Fetcher",
                        request: n,
                        response: t,
                        provider: this
                    }), t), t => {
                        throw this.emit("debug", {
                            action: "response",
                            fetcher: "Eip1193Fetcher",
                            request: n,
                            error: t,
                            provider: this
                        }), t
                    })
                }
            }
            class zi extends Cn {
                constructor(t, e) {
                    Di.checkNew(new.target, zi), null == t && Di.throwArgumentError("missing provider", "provider", t);
                    let r = null,
                        n = null,
                        i = null;
                    "function" === typeof t ? (r = "unknown:", n = t) : (r = t.host || t.path || "", !r && t.isMetaMask && (r = "metamask"), i = t, t.request ? ("" === r && (r = "eip-1193:"), n = qi(t)) : t.sendAsync ? n = ji(t, t.sendAsync.bind(t)) : t.send ? n = ji(t, t.send.bind(t)) : Di.throwArgumentError("unsupported provider", "provider", t), r || (r = "unknown:")), super(r, e), Q(this, "jsonRpcFetchFunc", n), Q(this, "provider", i)
                }
                send(t, e) {
                    return this.jsonRpcFetchFunc(t, e)
                }
            }
            const Ki = new g(_e);

            function Wi(t, e) {
                if (null == t && (t = "homestead"), "string" === typeof t) {
                    const e = t.match(/^(ws|http)s?:/i);
                    if (e) switch (e[1]) {
                        case "http":
                            return new Cn(t);
                        case "ws":
                            return new Dn(t);
                        default:
                            Ki.throwArgumentError("unsupported URL scheme", "network", t)
                    }
                }
                const r = Nt(t);
                return r && r._defaultProvider || Ki.throwError("unsupported getDefaultProvider network", g.errors.NETWORK_ERROR, {
                    operation: "getDefaultProvider",
                    network: t
                }), r._defaultProvider({
                    FallbackProvider: Si,
                    AlchemyProvider: Hn,
                    AnkrProvider: $n,
                    CloudflareProvider: ti,
                    EtherscanProvider: hi,
                    InfuraProvider: xi,
                    JsonRpcProvider: Cn,
                    NodesmithProvider: Ui,
                    PocketProvider: Li,
                    Web3Provider: zi,
                    IpcProvider: Ii
                }, e)
            }
        },
        "288a": function(t, e, r) {
            "use strict";
            r.d(e, "a", (function() {
                return Ge
            })), r.d(e, "b", (function() {
                return je
            })), r.d(e, "c", (function() {
                return qe
            }));
            const n = "logger/5.6.0";
            let i = !1,
                o = !1;
            const s = {
                debug: 1,
                default: 2,
                info: 2,
                warning: 3,
                error: 4,
                off: 5
            };
            let a = s["default"],
                u = null;

            function h() {
                try {
                    const t = [];
                    if (["NFD", "NFC", "NFKD", "NFKC"].forEach(e => {
                            try {
                                if ("test" !== "test".normalize(e)) throw new Error("bad normalize")
                            } catch (r) {
                                t.push(e)
                            }
                        }), t.length) throw new Error("missing " + t.join(", "));
                    if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) throw new Error("broken implementation")
                } catch (t) {
                    return t.message
                }
                return null
            }
            const l = h();
            var f, c;
            (function(t) {
                t["DEBUG"] = "DEBUG", t["INFO"] = "INFO", t["WARNING"] = "WARNING", t["ERROR"] = "ERROR", t["OFF"] = "OFF"
            })(f || (f = {})),
            function(t) {
                t["UNKNOWN_ERROR"] = "UNKNOWN_ERROR", t["NOT_IMPLEMENTED"] = "NOT_IMPLEMENTED", t["UNSUPPORTED_OPERATION"] = "UNSUPPORTED_OPERATION", t["NETWORK_ERROR"] = "NETWORK_ERROR", t["SERVER_ERROR"] = "SERVER_ERROR", t["TIMEOUT"] = "TIMEOUT", t["BUFFER_OVERRUN"] = "BUFFER_OVERRUN", t["NUMERIC_FAULT"] = "NUMERIC_FAULT", t["MISSING_NEW"] = "MISSING_NEW", t["INVALID_ARGUMENT"] = "INVALID_ARGUMENT", t["MISSING_ARGUMENT"] = "MISSING_ARGUMENT", t["UNEXPECTED_ARGUMENT"] = "UNEXPECTED_ARGUMENT", t["CALL_EXCEPTION"] = "CALL_EXCEPTION", t["INSUFFICIENT_FUNDS"] = "INSUFFICIENT_FUNDS", t["NONCE_EXPIRED"] = "NONCE_EXPIRED", t["REPLACEMENT_UNDERPRICED"] = "REPLACEMENT_UNDERPRICED", t["UNPREDICTABLE_GAS_LIMIT"] = "UNPREDICTABLE_GAS_LIMIT", t["TRANSACTION_REPLACED"] = "TRANSACTION_REPLACED"
            }(c || (c = {}));
            const d = "0123456789abcdef";
            class m {
                constructor(t) {
                    Object.defineProperty(this, "version", {
                        enumerable: !0,
                        value: t,
                        writable: !1
                    })
                }
                _log(t, e) {
                    const r = t.toLowerCase();
                    null == s[r] && this.throwArgumentError("invalid log level name", "logLevel", t), a > s[r] || console.log.apply(console, e)
                }
                debug(...t) {
                    this._log(m.levels.DEBUG, t)
                }
                info(...t) {
                    this._log(m.levels.INFO, t)
                }
                warn(...t) {
                    this._log(m.levels.WARNING, t)
                }
                makeError(t, e, r) {
                    if (o) return this.makeError("censored error", e, {});
                    e || (e = m.errors.UNKNOWN_ERROR), r || (r = {});
                    const n = [];
                    Object.keys(r).forEach(t => {
                        const e = r[t];
                        try {
                            if (e instanceof Uint8Array) {
                                let r = "";
                                for (let t = 0; t < e.length; t++) r += d[e[t] >> 4], r += d[15 & e[t]];
                                n.push(t + "=Uint8Array(0x" + r + ")")
                            } else n.push(t + "=" + JSON.stringify(e))
                        } catch (a) {
                            n.push(t + "=" + JSON.stringify(r[t].toString()))
                        }
                    }), n.push("code=" + e), n.push("version=" + this.version);
                    const i = t;
                    let s = "";
                    switch (e) {
                        case c.NUMERIC_FAULT:
                            {
                                s = "NUMERIC_FAULT";
                                const e = t;
                                switch (e) {
                                    case "overflow":
                                    case "underflow":
                                    case "division-by-zero":
                                        s += "-" + e;
                                        break;
                                    case "negative-power":
                                    case "negative-width":
                                        s += "-unsupported";
                                        break;
                                    case "unbound-bitwise-result":
                                        s += "-unbound-result";
                                        break
                                }
                                break
                            }
                        case c.CALL_EXCEPTION:
                        case c.INSUFFICIENT_FUNDS:
                        case c.MISSING_NEW:
                        case c.NONCE_EXPIRED:
                        case c.REPLACEMENT_UNDERPRICED:
                        case c.TRANSACTION_REPLACED:
                        case c.UNPREDICTABLE_GAS_LIMIT:
                            s = e;
                            break
                    }
                    s && (t += " [ See: https://links.ethers.org/v5-errors-" + s + " ]"), n.length && (t += " (" + n.join(", ") + ")");
                    const a = new Error(t);
                    return a.reason = i, a.code = e, Object.keys(r).forEach((function(t) {
                        a[t] = r[t]
                    })), a
                }
                throwError(t, e, r) {
                    throw this.makeError(t, e, r)
                }
                throwArgumentError(t, e, r) {
                    return this.throwError(t, m.errors.INVALID_ARGUMENT, {
                        argument: e,
                        value: r
                    })
                }
                assert(t, e, r, n) {
                    t || this.throwError(e, r, n)
                }
                assertArgument(t, e, r, n) {
                    t || this.throwArgumentError(e, r, n)
                }
                checkNormalize(t) {
                    null == t && (t = "platform missing String.prototype.normalize"), l && this.throwError("platform missing String.prototype.normalize", m.errors.UNSUPPORTED_OPERATION, {
                        operation: "String.prototype.normalize",
                        form: l
                    })
                }
                checkSafeUint53(t, e) {
                    "number" === typeof t && (null == e && (e = "value not safe"), (t < 0 || t >= 9007199254740991) && this.throwError(e, m.errors.NUMERIC_FAULT, {
                        operation: "checkSafeInteger",
                        fault: "out-of-safe-range",
                        value: t
                    }), t % 1 && this.throwError(e, m.errors.NUMERIC_FAULT, {
                        operation: "checkSafeInteger",
                        fault: "non-integer",
                        value: t
                    }))
                }
                checkArgumentCount(t, e, r) {
                    r = r ? ": " + r : "", t < e && this.throwError("missing argument" + r, m.errors.MISSING_ARGUMENT, {
                        count: t,
                        expectedCount: e
                    }), t > e && this.throwError("too many arguments" + r, m.errors.UNEXPECTED_ARGUMENT, {
                        count: t,
                        expectedCount: e
                    })
                }
                checkNew(t, e) {
                    t !== Object && null != t || this.throwError("missing new", m.errors.MISSING_NEW, {
                        name: e.name
                    })
                }
                checkAbstract(t, e) {
                    t === e ? this.throwError("cannot instantiate abstract class " + JSON.stringify(e.name) + " directly; use a sub-class", m.errors.UNSUPPORTED_OPERATION, {
                        name: t.name,
                        operation: "new"
                    }) : t !== Object && null != t || this.throwError("missing new", m.errors.MISSING_NEW, {
                        name: e.name
                    })
                }
                static globalLogger() {
                    return u || (u = new m(n)), u
                }
                static setCensorship(t, e) {
                    if (!t && e && this.globalLogger().throwError("cannot permanently disable censorship", m.errors.UNSUPPORTED_OPERATION, {
                            operation: "setCensorship"
                        }), i) {
                        if (!t) return;
                        this.globalLogger().throwError("error censorship permanent", m.errors.UNSUPPORTED_OPERATION, {
                            operation: "setCensorship"
                        })
                    }
                    o = !!t, i = !!e
                }
                static setLogLevel(t) {
                    const e = s[t.toLowerCase()];
                    null != e ? a = e : m.globalLogger().warn("invalid log level - " + t)
                }
                static from(t) {
                    return new m(t)
                }
            }
            m.errors = c, m.levels = f;
            const p = "bytes/5.6.1",
                g = new m(p);

            function v(t) {
                return !!t.toHexString
            }

            function y(t) {
                return t.slice || (t.slice = function() {
                    const e = Array.prototype.slice.call(arguments);
                    return y(new Uint8Array(Array.prototype.slice.apply(t, e)))
                }), t
            }

            function w(t) {
                return S(t) && !(t.length % 2) || M(t)
            }

            function b(t) {
                return "number" === typeof t && t == t && t % 1 === 0
            }

            function M(t) {
                if (null == t) return !1;
                if (t.constructor === Uint8Array) return !0;
                if ("string" === typeof t) return !1;
                if (!b(t.length) || t.length < 0) return !1;
                for (let e = 0; e < t.length; e++) {
                    const r = t[e];
                    if (!b(r) || r < 0 || r >= 256) return !1
                }
                return !0
            }

            function E(t, e) {
                if (e || (e = {}), "number" === typeof t) {
                    g.checkSafeUint53(t, "invalid arrayify value");
                    const e = [];
                    while (t) e.unshift(255 & t), t = parseInt(String(t / 256));
                    return 0 === e.length && e.push(0), y(new Uint8Array(e))
                }
                if (e.allowMissingPrefix && "string" === typeof t && "0x" !== t.substring(0, 2) && (t = "0x" + t), v(t) && (t = t.toHexString()), S(t)) {
                    let r = t.substring(2);
                    r.length % 2 && ("left" === e.hexPad ? r = "0" + r : "right" === e.hexPad ? r += "0" : g.throwArgumentError("hex data is odd-length", "value", t));
                    const n = [];
                    for (let t = 0; t < r.length; t += 2) n.push(parseInt(r.substring(t, t + 2), 16));
                    return y(new Uint8Array(n))
                }
                return M(t) ? y(new Uint8Array(t)) : g.throwArgumentError("invalid arrayify value", "value", t)
            }

            function N(t) {
                const e = t.map(t => E(t)),
                    r = e.reduce((t, e) => t + e.length, 0),
                    n = new Uint8Array(r);
                return e.reduce((t, e) => (n.set(e, t), t + e.length), 0), y(n)
            }

            function A(t) {
                let e = E(t);
                if (0 === e.length) return e;
                let r = 0;
                while (r < e.length && 0 === e[r]) r++;
                return r && (e = e.slice(r)), e
            }

            function _(t, e) {
                t = E(t), t.length > e && g.throwArgumentError("value out of range", "value", arguments[0]);
                const r = new Uint8Array(e);
                return r.set(t, e - t.length), y(r)
            }

            function S(t, e) {
                return !("string" !== typeof t || !t.match(/^0x[0-9A-Fa-f]*$/)) && (!e || t.length === 2 + 2 * e)
            }
            const I = "0123456789abcdef";

            function R(t, e) {
                if (e || (e = {}), "number" === typeof t) {
                    g.checkSafeUint53(t, "invalid hexlify value");
                    let e = "";
                    while (t) e = I[15 & t] + e, t = Math.floor(t / 16);
                    return e.length ? (e.length % 2 && (e = "0" + e), "0x" + e) : "0x00"
                }
                if ("bigint" === typeof t) return t = t.toString(16), t.length % 2 ? "0x0" + t : "0x" + t;
                if (e.allowMissingPrefix && "string" === typeof t && "0x" !== t.substring(0, 2) && (t = "0x" + t), v(t)) return t.toHexString();
                if (S(t)) return t.length % 2 && ("left" === e.hexPad ? t = "0x0" + t.substring(2) : "right" === e.hexPad ? t += "0" : g.throwArgumentError("hex data is odd-length", "value", t)), t.toLowerCase();
                if (M(t)) {
                    let e = "0x";
                    for (let r = 0; r < t.length; r++) {
                        let n = t[r];
                        e += I[(240 & n) >> 4] + I[15 & n]
                    }
                    return e
                }
                return g.throwArgumentError("invalid hexlify value", "value", t)
            }

            function P(t) {
                if ("string" !== typeof t) t = R(t);
                else if (!S(t) || t.length % 2) return null;
                return (t.length - 2) / 2
            }

            function k(t, e, r) {
                return "string" !== typeof t ? t = R(t) : (!S(t) || t.length % 2) && g.throwArgumentError("invalid hexData", "value", t), e = 2 + 2 * e, null != r ? "0x" + t.substring(e, 2 + 2 * r) : "0x" + t.substring(e)
            }

            function x(t) {
                let e = "0x";
                return t.forEach(t => {
                    e += R(t).substring(2)
                }), e
            }

            function T(t, e) {
                "string" !== typeof t ? t = R(t) : S(t) || g.throwArgumentError("invalid hex string", "value", t), t.length > 2 * e + 2 && g.throwArgumentError("value out of range", "value", arguments[1]);
                while (t.length < 2 * e + 2) t = "0x0" + t.substring(2);
                return t
            }

            function O(t) {
                const e = {
                    r: "0x",
                    s: "0x",
                    _vs: "0x",
                    recoveryParam: 0,
                    v: 0,
                    yParityAndS: "0x",
                    compact: "0x"
                };
                if (w(t)) {
                    let r = E(t);
                    64 === r.length ? (e.v = 27 + (r[32] >> 7), r[32] &= 127, e.r = R(r.slice(0, 32)), e.s = R(r.slice(32, 64))) : 65 === r.length ? (e.r = R(r.slice(0, 32)), e.s = R(r.slice(32, 64)), e.v = r[64]) : g.throwArgumentError("invalid signature string", "signature", t), e.v < 27 && (0 === e.v || 1 === e.v ? e.v += 27 : g.throwArgumentError("signature invalid v byte", "signature", t)), e.recoveryParam = 1 - e.v % 2, e.recoveryParam && (r[32] |= 128), e._vs = R(r.slice(32, 64))
                } else {
                    if (e.r = t.r, e.s = t.s, e.v = t.v, e.recoveryParam = t.recoveryParam, e._vs = t._vs, null != e._vs) {
                        const r = _(E(e._vs), 32);
                        e._vs = R(r);
                        const n = r[0] >= 128 ? 1 : 0;
                        null == e.recoveryParam ? e.recoveryParam = n : e.recoveryParam !== n && g.throwArgumentError("signature recoveryParam mismatch _vs", "signature", t), r[0] &= 127;
                        const i = R(r);
                        null == e.s ? e.s = i : e.s !== i && g.throwArgumentError("signature v mismatch _vs", "signature", t)
                    }
                    if (null == e.recoveryParam) null == e.v ? g.throwArgumentError("signature missing v and recoveryParam", "signature", t) : 0 === e.v || 1 === e.v ? e.recoveryParam = e.v : e.recoveryParam = 1 - e.v % 2;
                    else if (null == e.v) e.v = 27 + e.recoveryParam;
                    else {
                        const r = 0 === e.v || 1 === e.v ? e.v : 1 - e.v % 2;
                        e.recoveryParam !== r && g.throwArgumentError("signature recoveryParam mismatch v", "signature", t)
                    }
                    null != e.r && S(e.r) ? e.r = T(e.r, 32) : g.throwArgumentError("signature missing or invalid r", "signature", t), null != e.s && S(e.s) ? e.s = T(e.s, 32) : g.throwArgumentError("signature missing or invalid s", "signature", t);
                    const r = E(e.s);
                    r[0] >= 128 && g.throwArgumentError("signature s out of range", "signature", t), e.recoveryParam && (r[0] |= 128);
                    const n = R(r);
                    e._vs && (S(e._vs) || g.throwArgumentError("signature invalid _vs", "signature", t), e._vs = T(e._vs, 32)), null == e._vs ? e._vs = n : e._vs !== n && g.throwArgumentError("signature _vs mismatch v and s", "signature", t)
                }
                return e.yParityAndS = e._vs, e.compact = e.r + e.yParityAndS.substring(2), e
            }

            function C(t) {
                return t = O(t), R(N([t.r, t.s, t.recoveryParam ? "0x1c" : "0x1b"]))
            }
            var U = r("7a6b"),
                F = r.n(U);
            const B = "bignumber/5.6.0";
            var L = F.a.BN;
            const D = new m(B),
                G = {},
                j = 9007199254740991;
            let q = !1;
            class z {
                constructor(t, e) {
                    D.checkNew(new.target, z), t !== G && D.throwError("cannot call constructor directly; use BigNumber.from", m.errors.UNSUPPORTED_OPERATION, {
                        operation: "new (BigNumber)"
                    }), this._hex = e, this._isBigNumber = !0, Object.freeze(this)
                }
                fromTwos(t) {
                    return W(V(this).fromTwos(t))
                }
                toTwos(t) {
                    return W(V(this).toTwos(t))
                }
                abs() {
                    return "-" === this._hex[0] ? z.from(this._hex.substring(1)) : this
                }
                add(t) {
                    return W(V(this).add(V(t)))
                }
                sub(t) {
                    return W(V(this).sub(V(t)))
                }
                div(t) {
                    const e = z.from(t);
                    return e.isZero() && H("division-by-zero", "div"), W(V(this).div(V(t)))
                }
                mul(t) {
                    return W(V(this).mul(V(t)))
                }
                mod(t) {
                    const e = V(t);
                    return e.isNeg() && H("division-by-zero", "mod"), W(V(this).umod(e))
                }
                pow(t) {
                    const e = V(t);
                    return e.isNeg() && H("negative-power", "pow"), W(V(this).pow(e))
                }
                and(t) {
                    const e = V(t);
                    return (this.isNegative() || e.isNeg()) && H("unbound-bitwise-result", "and"), W(V(this).and(e))
                }
                or(t) {
                    const e = V(t);
                    return (this.isNegative() || e.isNeg()) && H("unbound-bitwise-result", "or"), W(V(this).or(e))
                }
                xor(t) {
                    const e = V(t);
                    return (this.isNegative() || e.isNeg()) && H("unbound-bitwise-result", "xor"), W(V(this).xor(e))
                }
                mask(t) {
                    return (this.isNegative() || t < 0) && H("negative-width", "mask"), W(V(this).maskn(t))
                }
                shl(t) {
                    return (this.isNegative() || t < 0) && H("negative-width", "shl"), W(V(this).shln(t))
                }
                shr(t) {
                    return (this.isNegative() || t < 0) && H("negative-width", "shr"), W(V(this).shrn(t))
                }
                eq(t) {
                    return V(this).eq(V(t))
                }
                lt(t) {
                    return V(this).lt(V(t))
                }
                lte(t) {
                    return V(this).lte(V(t))
                }
                gt(t) {
                    return V(this).gt(V(t))
                }
                gte(t) {
                    return V(this).gte(V(t))
                }
                isNegative() {
                    return "-" === this._hex[0]
                }
                isZero() {
                    return V(this).isZero()
                }
                toNumber() {
                    try {
                        return V(this).toNumber()
                    } catch (t) {
                        H("overflow", "toNumber", this.toString())
                    }
                    return null
                }
                toBigInt() {
                    try {
                        return BigInt(this.toString())
                    } catch (t) {}
                    return D.throwError("this platform does not support BigInt", m.errors.UNSUPPORTED_OPERATION, {
                        value: this.toString()
                    })
                }
                toString() {
                    return arguments.length > 0 && (10 === arguments[0] ? q || (q = !0, D.warn("BigNumber.toString does not accept any parameters; base-10 is assumed")) : 16 === arguments[0] ? D.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()", m.errors.UNEXPECTED_ARGUMENT, {}) : D.throwError("BigNumber.toString does not accept parameters", m.errors.UNEXPECTED_ARGUMENT, {})), V(this).toString(10)
                }
                toHexString() {
                    return this._hex
                }
                toJSON(t) {
                    return {
                        type: "BigNumber",
                        hex: this.toHexString()
                    }
                }
                static from(t) {
                    if (t instanceof z) return t;
                    if ("string" === typeof t) return t.match(/^-?0x[0-9a-f]+$/i) ? new z(G, K(t)) : t.match(/^-?[0-9]+$/) ? new z(G, K(new L(t))) : D.throwArgumentError("invalid BigNumber string", "value", t);
                    if ("number" === typeof t) return t % 1 && H("underflow", "BigNumber.from", t), (t >= j || t <= -j) && H("overflow", "BigNumber.from", t), z.from(String(t));
                    const e = t;
                    if ("bigint" === typeof e) return z.from(e.toString());
                    if (M(e)) return z.from(R(e));
                    if (e)
                        if (e.toHexString) {
                            const t = e.toHexString();
                            if ("string" === typeof t) return z.from(t)
                        } else {
                            let t = e._hex;
                            if (null == t && "BigNumber" === e.type && (t = e.hex), "string" === typeof t && (S(t) || "-" === t[0] && S(t.substring(1)))) return z.from(t)
                        }
                    return D.throwArgumentError("invalid BigNumber value", "value", t)
                }
                static isBigNumber(t) {
                    return !(!t || !t._isBigNumber)
                }
            }

            function K(t) {
                if ("string" !== typeof t) return K(t.toString(16));
                if ("-" === t[0]) return t = t.substring(1), "-" === t[0] && D.throwArgumentError("invalid hex", "value", t), t = K(t), "0x00" === t ? t : "-" + t;
                if ("0x" !== t.substring(0, 2) && (t = "0x" + t), "0x" === t) return "0x00";
                t.length % 2 && (t = "0x0" + t.substring(2));
                while (t.length > 4 && "0x00" === t.substring(0, 4)) t = "0x" + t.substring(4);
                return t
            }

            function W(t) {
                return z.from(K(t))
            }

            function V(t) {
                const e = z.from(t).toHexString();
                return "-" === e[0] ? new L("-" + e.substring(3), 16) : new L(e.substring(2), 16)
            }

            function H(t, e, r) {
                const n = {
                    fault: t,
                    operation: e
                };
                return null != r && (n.value = r), D.throwError(t, m.errors.NUMERIC_FAULT, n)
            }

            function J(t) {
                return new L(t, 36).toString(16)
            }
            var Z = r("1c55"),
                X = r.n(Z);

            function $(t) {
                return "0x" + X.a.keccak_256(E(t))
            }
            const Y = "rlp/5.6.0",
                Q = new m(Y);

            function tt(t) {
                const e = [];
                while (t) e.unshift(255 & t), t >>= 8;
                return e
            }

            function et(t) {
                if (Array.isArray(t)) {
                    let e = [];
                    if (t.forEach((function(t) {
                            e = e.concat(et(t))
                        })), e.length <= 55) return e.unshift(192 + e.length), e;
                    const r = tt(e.length);
                    return r.unshift(247 + r.length), r.concat(e)
                }
                w(t) || Q.throwArgumentError("RLP object must be BytesLike", "object", t);
                const e = Array.prototype.slice.call(E(t));
                if (1 === e.length && e[0] <= 127) return e;
                if (e.length <= 55) return e.unshift(128 + e.length), e;
                const r = tt(e.length);
                return r.unshift(183 + r.length), r.concat(e)
            }

            function rt(t) {
                return R(et(t))
            }
            const nt = "address/5.6.0",
                it = new m(nt);

            function ot(t) {
                S(t, 20) || it.throwArgumentError("invalid address", "address", t), t = t.toLowerCase();
                const e = t.substring(2).split(""),
                    r = new Uint8Array(40);
                for (let i = 0; i < 40; i++) r[i] = e[i].charCodeAt(0);
                const n = E($(r));
                for (let i = 0; i < 40; i += 2) n[i >> 1] >> 4 >= 8 && (e[i] = e[i].toUpperCase()), (15 & n[i >> 1]) >= 8 && (e[i + 1] = e[i + 1].toUpperCase());
                return "0x" + e.join("")
            }
            const st = 9007199254740991;

            function at(t) {
                return Math.log10 ? Math.log10(t) : Math.log(t) / Math.LN10
            }
            const ut = {};
            for (let ze = 0; ze < 10; ze++) ut[String(ze)] = String(ze);
            for (let ze = 0; ze < 26; ze++) ut[String.fromCharCode(65 + ze)] = String(10 + ze);
            const ht = Math.floor(at(st));

            function lt(t) {
                t = t.toUpperCase(), t = t.substring(4) + t.substring(0, 2) + "00";
                let e = t.split("").map(t => ut[t]).join("");
                while (e.length >= ht) {
                    let t = e.substring(0, ht);
                    e = parseInt(t, 10) % 97 + e.substring(t.length)
                }
                let r = String(98 - parseInt(e, 10) % 97);
                while (r.length < 2) r = "0" + r;
                return r
            }

            function ft(t) {
                let e = null;
                if ("string" !== typeof t && it.throwArgumentError("invalid address", "address", t), t.match(/^(0x)?[0-9a-fA-F]{40}$/)) "0x" !== t.substring(0, 2) && (t = "0x" + t), e = ot(t), t.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && e !== t && it.throwArgumentError("bad address checksum", "address", t);
                else if (t.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
                    t.substring(2, 4) !== lt(t) && it.throwArgumentError("bad icap checksum", "address", t), e = J(t.substring(4));
                    while (e.length < 40) e = "0" + e;
                    e = ot("0x" + e)
                } else it.throwArgumentError("invalid address", "address", t);
                return e
            }
            const ct = "properties/5.6.0";
            var dt = function(t, e, r, n) {
                function i(t) {
                    return t instanceof r ? t : new r((function(e) {
                        e(t)
                    }))
                }
                return new(r || (r = Promise))((function(r, o) {
                    function s(t) {
                        try {
                            u(n.next(t))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function a(t) {
                        try {
                            u(n["throw"](t))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function u(t) {
                        t.done ? r(t.value) : i(t.value).then(s, a)
                    }
                    u((n = n.apply(t, e || [])).next())
                }))
            };
            const mt = new m(ct);

            function pt(t, e, r) {
                Object.defineProperty(t, e, {
                    enumerable: !0,
                    value: r,
                    writable: !1
                })
            }

            function gt(t) {
                return dt(this, void 0, void 0, (function*() {
                    const e = Object.keys(t).map(e => {
                            const r = t[e];
                            return Promise.resolve(r).then(t => ({
                                key: e,
                                value: t
                            }))
                        }),
                        r = yield Promise.all(e);
                    return r.reduce((t, e) => (t[e.key] = e.value, t), {})
                }))
            }

            function vt(t, e) {
                t && "object" === typeof t || mt.throwArgumentError("invalid object", "object", t), Object.keys(t).forEach(r => {
                    e[r] || mt.throwArgumentError("invalid object key - " + r, "transaction:" + r, t)
                })
            }

            function yt(t) {
                const e = {};
                for (const r in t) e[r] = t[r];
                return e
            }
            const wt = {
                bigint: !0,
                boolean: !0,
                function: !0,
                number: !0,
                string: !0
            };

            function bt(t) {
                if (void 0 === t || null === t || wt[typeof t]) return !0;
                if (Array.isArray(t) || "object" === typeof t) {
                    if (!Object.isFrozen(t)) return !1;
                    const r = Object.keys(t);
                    for (let n = 0; n < r.length; n++) {
                        let i = null;
                        try {
                            i = t[r[n]]
                        } catch (e) {
                            continue
                        }
                        if (!bt(i)) return !1
                    }
                    return !0
                }
                return mt.throwArgumentError("Cannot deepCopy " + typeof t, "object", t)
            }

            function Mt(t) {
                if (bt(t)) return t;
                if (Array.isArray(t)) return Object.freeze(t.map(t => Et(t)));
                if ("object" === typeof t) {
                    const e = {};
                    for (const r in t) {
                        const n = t[r];
                        void 0 !== n && pt(e, r, Et(n))
                    }
                    return e
                }
                return mt.throwArgumentError("Cannot deepCopy " + typeof t, "object", t)
            }

            function Et(t) {
                return Mt(t)
            }
            const Nt = "abstract-provider/5.6.0";
            var At = function(t, e, r, n) {
                function i(t) {
                    return t instanceof r ? t : new r((function(e) {
                        e(t)
                    }))
                }
                return new(r || (r = Promise))((function(r, o) {
                    function s(t) {
                        try {
                            u(n.next(t))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function a(t) {
                        try {
                            u(n["throw"](t))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function u(t) {
                        t.done ? r(t.value) : i(t.value).then(s, a)
                    }
                    u((n = n.apply(t, e || [])).next())
                }))
            };
            const _t = new m(Nt);
            class St {
                constructor() {
                    _t.checkAbstract(new.target, St), pt(this, "_isProvider", !0)
                }
                getFeeData() {
                    return At(this, void 0, void 0, (function*() {
                        const {
                            block: t,
                            gasPrice: e
                        } = yield gt({
                            block: this.getBlock("latest"),
                            gasPrice: this.getGasPrice().catch(t => null)
                        });
                        let r = null,
                            n = null;
                        return t && t.baseFeePerGas && (n = z.from("1500000000"), r = t.baseFeePerGas.mul(2).add(n)), {
                            maxFeePerGas: r,
                            maxPriorityFeePerGas: n,
                            gasPrice: e
                        }
                    }))
                }
                addListener(t, e) {
                    return this.on(t, e)
                }
                removeListener(t, e) {
                    return this.off(t, e)
                }
                static isProvider(t) {
                    return !(!t || !t._isProvider)
                }
            }
            const It = "abstract-signer/5.6.0";
            var Rt = function(t, e, r, n) {
                function i(t) {
                    return t instanceof r ? t : new r((function(e) {
                        e(t)
                    }))
                }
                return new(r || (r = Promise))((function(r, o) {
                    function s(t) {
                        try {
                            u(n.next(t))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function a(t) {
                        try {
                            u(n["throw"](t))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function u(t) {
                        t.done ? r(t.value) : i(t.value).then(s, a)
                    }
                    u((n = n.apply(t, e || [])).next())
                }))
            };
            const Pt = new m(It),
                kt = ["accessList", "ccipReadEnabled", "chainId", "customData", "data", "from", "gasLimit", "gasPrice", "maxFeePerGas", "maxPriorityFeePerGas", "nonce", "to", "type", "value"],
                xt = [m.errors.INSUFFICIENT_FUNDS, m.errors.NONCE_EXPIRED, m.errors.REPLACEMENT_UNDERPRICED];
            class Tt {
                constructor() {
                    Pt.checkAbstract(new.target, Tt), pt(this, "_isSigner", !0)
                }
                getBalance(t) {
                    return Rt(this, void 0, void 0, (function*() {
                        return this._checkProvider("getBalance"), yield this.provider.getBalance(this.getAddress(), t)
                    }))
                }
                getTransactionCount(t) {
                    return Rt(this, void 0, void 0, (function*() {
                        return this._checkProvider("getTransactionCount"), yield this.provider.getTransactionCount(this.getAddress(), t)
                    }))
                }
                estimateGas(t) {
                    return Rt(this, void 0, void 0, (function*() {
                        this._checkProvider("estimateGas");
                        const e = yield gt(this.checkTransaction(t));
                        return yield this.provider.estimateGas(e)
                    }))
                }
                call(t, e) {
                    return Rt(this, void 0, void 0, (function*() {
                        this._checkProvider("call");
                        const r = yield gt(this.checkTransaction(t));
                        return yield this.provider.call(r, e)
                    }))
                }
                sendTransaction(t) {
                    return Rt(this, void 0, void 0, (function*() {
                        this._checkProvider("sendTransaction");
                        const e = yield this.populateTransaction(t), r = yield this.signTransaction(e);
                        return yield this.provider.sendTransaction(r)
                    }))
                }
                getChainId() {
                    return Rt(this, void 0, void 0, (function*() {
                        this._checkProvider("getChainId");
                        const t = yield this.provider.getNetwork();
                        return t.chainId
                    }))
                }
                getGasPrice() {
                    return Rt(this, void 0, void 0, (function*() {
                        return this._checkProvider("getGasPrice"), yield this.provider.getGasPrice()
                    }))
                }
                getFeeData() {
                    return Rt(this, void 0, void 0, (function*() {
                        return this._checkProvider("getFeeData"), yield this.provider.getFeeData()
                    }))
                }
                resolveName(t) {
                    return Rt(this, void 0, void 0, (function*() {
                        return this._checkProvider("resolveName"), yield this.provider.resolveName(t)
                    }))
                }
                checkTransaction(t) {
                    for (const r in t) - 1 === kt.indexOf(r) && Pt.throwArgumentError("invalid transaction key: " + r, "transaction", t);
                    const e = yt(t);
                    return null == e.from ? e.from = this.getAddress() : e.from = Promise.all([Promise.resolve(e.from), this.getAddress()]).then(e => (e[0].toLowerCase() !== e[1].toLowerCase() && Pt.throwArgumentError("from address mismatch", "transaction", t), e[0])), e
                }
                populateTransaction(t) {
                    return Rt(this, void 0, void 0, (function*() {
                        const e = yield gt(this.checkTransaction(t));
                        null != e.to && (e.to = Promise.resolve(e.to).then(t => Rt(this, void 0, void 0, (function*() {
                            if (null == t) return null;
                            const e = yield this.resolveName(t);
                            return null == e && Pt.throwArgumentError("provided ENS name resolves to null", "tx.to", t), e
                        }))), e.to.catch(t => {}));
                        const r = null != e.maxFeePerGas || null != e.maxPriorityFeePerGas;
                        if (null == e.gasPrice || 2 !== e.type && !r ? 0 !== e.type && 1 !== e.type || !r || Pt.throwArgumentError("pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas", "transaction", t) : Pt.throwArgumentError("eip-1559 transaction do not support gasPrice", "transaction", t), 2 !== e.type && null != e.type || null == e.maxFeePerGas || null == e.maxPriorityFeePerGas)
                            if (0 === e.type || 1 === e.type) null == e.gasPrice && (e.gasPrice = this.getGasPrice());
                            else {
                                const t = yield this.getFeeData();
                                if (null == e.type)
                                    if (null != t.maxFeePerGas && null != t.maxPriorityFeePerGas)
                                        if (e.type = 2, null != e.gasPrice) {
                                            const t = e.gasPrice;
                                            delete e.gasPrice, e.maxFeePerGas = t, e.maxPriorityFeePerGas = t
                                        } else null == e.maxFeePerGas && (e.maxFeePerGas = t.maxFeePerGas), null == e.maxPriorityFeePerGas && (e.maxPriorityFeePerGas = t.maxPriorityFeePerGas);
                                else null != t.gasPrice ? (r && Pt.throwError("network does not support EIP-1559", m.errors.UNSUPPORTED_OPERATION, {
                                    operation: "populateTransaction"
                                }), null == e.gasPrice && (e.gasPrice = t.gasPrice), e.type = 0) : Pt.throwError("failed to get consistent fee data", m.errors.UNSUPPORTED_OPERATION, {
                                    operation: "signer.getFeeData"
                                });
                                else 2 === e.type && (null == e.maxFeePerGas && (e.maxFeePerGas = t.maxFeePerGas), null == e.maxPriorityFeePerGas && (e.maxPriorityFeePerGas = t.maxPriorityFeePerGas))
                            }
                        else e.type = 2;
                        return null == e.nonce && (e.nonce = this.getTransactionCount("pending")), null == e.gasLimit && (e.gasLimit = this.estimateGas(e).catch(t => {
                            if (xt.indexOf(t.code) >= 0) throw t;
                            return Pt.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", m.errors.UNPREDICTABLE_GAS_LIMIT, {
                                error: t,
                                tx: e
                            })
                        })), null == e.chainId ? e.chainId = this.getChainId() : e.chainId = Promise.all([Promise.resolve(e.chainId), this.getChainId()]).then(e => (0 !== e[1] && e[0] !== e[1] && Pt.throwArgumentError("chainId address mismatch", "transaction", t), e[0])), yield gt(e)
                    }))
                }
                _checkProvider(t) {
                    this.provider || Pt.throwError("missing provider", m.errors.UNSUPPORTED_OPERATION, {
                        operation: t || "_checkProvider"
                    })
                }
                static isSigner(t) {
                    return !(!t || !t._isSigner)
                }
            }
            const Ot = "strings/5.6.0",
                Ct = new m(Ot);
            var Ut, Ft;

            function Bt(t, e, r, n, i) {
                return Ct.throwArgumentError(`invalid codepoint at offset ${e}; ${t}`, "bytes", r)
            }

            function Lt(t, e, r, n, i) {
                if (t === Ft.BAD_PREFIX || t === Ft.UNEXPECTED_CONTINUE) {
                    let t = 0;
                    for (let n = e + 1; n < r.length; n++) {
                        if (r[n] >> 6 !== 2) break;
                        t++
                    }
                    return t
                }
                return t === Ft.OVERRUN ? r.length - e - 1 : 0
            }

            function Dt(t, e, r, n, i) {
                return t === Ft.OVERLONG ? (n.push(i), 0) : (n.push(65533), Lt(t, e, r, n, i))
            }(function(t) {
                t["current"] = "", t["NFC"] = "NFC", t["NFD"] = "NFD", t["NFKC"] = "NFKC", t["NFKD"] = "NFKD"
            })(Ut || (Ut = {})),
            function(t) {
                t["UNEXPECTED_CONTINUE"] = "unexpected continuation byte", t["BAD_PREFIX"] = "bad codepoint prefix", t["OVERRUN"] = "string overrun", t["MISSING_CONTINUE"] = "missing continuation byte", t["OUT_OF_RANGE"] = "out of UTF-8 range", t["UTF16_SURROGATE"] = "UTF-16 surrogate", t["OVERLONG"] = "overlong representation"
            }(Ft || (Ft = {}));
            Object.freeze({
                error: Bt,
                ignore: Lt,
                replace: Dt
            });

            function Gt(t, e = Ut.current) {
                e != Ut.current && (Ct.checkNormalize(), t = t.normalize(e));
                let r = [];
                for (let n = 0; n < t.length; n++) {
                    const e = t.charCodeAt(n);
                    if (e < 128) r.push(e);
                    else if (e < 2048) r.push(e >> 6 | 192), r.push(63 & e | 128);
                    else if (55296 == (64512 & e)) {
                        n++;
                        const i = t.charCodeAt(n);
                        if (n >= t.length || 56320 !== (64512 & i)) throw new Error("invalid utf-8 string");
                        const o = 65536 + ((1023 & e) << 10) + (1023 & i);
                        r.push(o >> 18 | 240), r.push(o >> 12 & 63 | 128), r.push(o >> 6 & 63 | 128), r.push(63 & o | 128)
                    } else r.push(e >> 12 | 224), r.push(e >> 6 & 63 | 128), r.push(63 & e | 128)
                }
                return E(r)
            }
            const jt = "Ethereum Signed Message:\n";

            function qt(t) {
                return "string" === typeof t && (t = Gt(t)), $(N([Gt(jt), Gt(String(t.length)), t]))
            }
            const zt = "hash/5.6.0";

            function Kt(t) {
                return $(Gt(t))
            }
            var Wt = function(t, e, r, n) {
                function i(t) {
                    return t instanceof r ? t : new r((function(e) {
                        e(t)
                    }))
                }
                return new(r || (r = Promise))((function(r, o) {
                    function s(t) {
                        try {
                            u(n.next(t))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function a(t) {
                        try {
                            u(n["throw"](t))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function u(t) {
                        t.done ? r(t.value) : i(t.value).then(s, a)
                    }
                    u((n = n.apply(t, e || [])).next())
                }))
            };
            const Vt = new m(zt),
                Ht = new Uint8Array(32);
            Ht.fill(0);
            const Jt = z.from(-1),
                Zt = z.from(0),
                Xt = z.from(1),
                $t = z.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");

            function Yt(t) {
                const e = E(t),
                    r = e.length % 32;
                return r ? x([e, Ht.slice(r)]) : R(e)
            }
            const Qt = T(Xt.toHexString(), 32),
                te = T(Zt.toHexString(), 32),
                ee = {
                    name: "string",
                    version: "string",
                    chainId: "uint256",
                    verifyingContract: "address",
                    salt: "bytes32"
                },
                re = ["name", "version", "chainId", "verifyingContract", "salt"];

            function ne(t) {
                return function(e) {
                    return "string" !== typeof e && Vt.throwArgumentError("invalid domain value for " + JSON.stringify(t), "domain." + t, e), e
                }
            }
            const ie = {
                name: ne("name"),
                version: ne("version"),
                chainId: function(t) {
                    try {
                        return z.from(t).toString()
                    } catch (e) {}
                    return Vt.throwArgumentError('invalid domain value for "chainId"', "domain.chainId", t)
                },
                verifyingContract: function(t) {
                    try {
                        return ft(t).toLowerCase()
                    } catch (e) {}
                    return Vt.throwArgumentError('invalid domain value "verifyingContract"', "domain.verifyingContract", t)
                },
                salt: function(t) {
                    try {
                        const e = E(t);
                        if (32 !== e.length) throw new Error("bad length");
                        return R(e)
                    } catch (e) {}
                    return Vt.throwArgumentError('invalid domain value "salt"', "domain.salt", t)
                }
            };

            function oe(t) {
                {
                    const e = t.match(/^(u?)int(\d*)$/);
                    if (e) {
                        const r = "" === e[1],
                            n = parseInt(e[2] || "256");
                        (n % 8 !== 0 || n > 256 || e[2] && e[2] !== String(n)) && Vt.throwArgumentError("invalid numeric width", "type", t);
                        const i = $t.mask(r ? n - 1 : n),
                            o = r ? i.add(Xt).mul(Jt) : Zt;
                        return function(e) {
                            const r = z.from(e);
                            return (r.lt(o) || r.gt(i)) && Vt.throwArgumentError("value out-of-bounds for " + t, "value", e), T(r.toTwos(256).toHexString(), 32)
                        }
                    }
                } {
                    const e = t.match(/^bytes(\d+)$/);
                    if (e) {
                        const r = parseInt(e[1]);
                        return (0 === r || r > 32 || e[1] !== String(r)) && Vt.throwArgumentError("invalid bytes width", "type", t),
                            function(e) {
                                const n = E(e);
                                return n.length !== r && Vt.throwArgumentError("invalid length for " + t, "value", e), Yt(e)
                            }
                    }
                }
                switch (t) {
                    case "address":
                        return function(t) {
                            return T(ft(t), 32)
                        };
                    case "bool":
                        return function(t) {
                            return t ? Qt : te
                        };
                    case "bytes":
                        return function(t) {
                            return $(t)
                        };
                    case "string":
                        return function(t) {
                            return Kt(t)
                        }
                }
                return null
            }

            function se(t, e) {
                return `${t}(${e.map(({name:t,type:e})=>e+" "+t).join(",")})`
            }
            class ae {
                constructor(t) {
                    pt(this, "types", Object.freeze(Et(t))), pt(this, "_encoderCache", {}), pt(this, "_types", {});
                    const e = {},
                        r = {},
                        n = {};
                    Object.keys(t).forEach(t => {
                        e[t] = {}, r[t] = [], n[t] = {}
                    });
                    for (const s in t) {
                        const n = {};
                        t[s].forEach(i => {
                            n[i.name] && Vt.throwArgumentError(`duplicate variable name ${JSON.stringify(i.name)} in ${JSON.stringify(s)}`, "types", t), n[i.name] = !0;
                            const o = i.type.match(/^([^\x5b]*)(\x5b|$)/)[1];
                            o === s && Vt.throwArgumentError("circular type reference to " + JSON.stringify(o), "types", t);
                            const a = oe(o);
                            a || (r[o] || Vt.throwArgumentError("unknown type " + JSON.stringify(o), "types", t), r[o].push(s), e[s][o] = !0)
                        })
                    }
                    const i = Object.keys(r).filter(t => 0 === r[t].length);

                    function o(i, s) {
                        s[i] && Vt.throwArgumentError("circular type reference to " + JSON.stringify(i), "types", t), s[i] = !0, Object.keys(e[i]).forEach(t => {
                            r[t] && (o(t, s), Object.keys(s).forEach(e => {
                                n[e][t] = !0
                            }))
                        }), delete s[i]
                    }
                    0 === i.length ? Vt.throwArgumentError("missing primary type", "types", t) : i.length > 1 && Vt.throwArgumentError("ambiguous primary types or unused types: " + i.map(t => JSON.stringify(t)).join(", "), "types", t), pt(this, "primaryType", i[0]), o(this.primaryType, {});
                    for (const s in n) {
                        const e = Object.keys(n[s]);
                        e.sort(), this._types[s] = se(s, t[s]) + e.map(e => se(e, t[e])).join("")
                    }
                }
                getEncoder(t) {
                    let e = this._encoderCache[t];
                    return e || (e = this._encoderCache[t] = this._getEncoder(t)), e
                }
                _getEncoder(t) {
                    {
                        const e = oe(t);
                        if (e) return e
                    }
                    const e = t.match(/^(.*)(\x5b(\d*)\x5d)$/);
                    if (e) {
                        const t = e[1],
                            r = this.getEncoder(t),
                            n = parseInt(e[3]);
                        return e => {
                            n >= 0 && e.length !== n && Vt.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", e);
                            let i = e.map(r);
                            return this._types[t] && (i = i.map($)), $(x(i))
                        }
                    }
                    const r = this.types[t];
                    if (r) {
                        const e = Kt(this._types[t]);
                        return t => {
                            const n = r.map(({
                                name: e,
                                type: r
                            }) => {
                                const n = this.getEncoder(r)(t[e]);
                                return this._types[r] ? $(n) : n
                            });
                            return n.unshift(e), x(n)
                        }
                    }
                    return Vt.throwArgumentError("unknown type: " + t, "type", t)
                }
                encodeType(t) {
                    const e = this._types[t];
                    return e || Vt.throwArgumentError("unknown type: " + JSON.stringify(t), "name", t), e
                }
                encodeData(t, e) {
                    return this.getEncoder(t)(e)
                }
                hashStruct(t, e) {
                    return $(this.encodeData(t, e))
                }
                encode(t) {
                    return this.encodeData(this.primaryType, t)
                }
                hash(t) {
                    return this.hashStruct(this.primaryType, t)
                }
                _visit(t, e, r) {
                    {
                        const n = oe(t);
                        if (n) return r(t, e)
                    }
                    const n = t.match(/^(.*)(\x5b(\d*)\x5d)$/);
                    if (n) {
                        const t = n[1],
                            i = parseInt(n[3]);
                        return i >= 0 && e.length !== i && Vt.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", e), e.map(e => this._visit(t, e, r))
                    }
                    const i = this.types[t];
                    return i ? i.reduce((t, {
                        name: n,
                        type: i
                    }) => (t[n] = this._visit(i, e[n], r), t), {}) : Vt.throwArgumentError("unknown type: " + t, "type", t)
                }
                visit(t, e) {
                    return this._visit(this.primaryType, t, e)
                }
                static from(t) {
                    return new ae(t)
                }
                static getPrimaryType(t) {
                    return ae.from(t).primaryType
                }
                static hashStruct(t, e, r) {
                    return ae.from(e).hashStruct(t, r)
                }
                static hashDomain(t) {
                    const e = [];
                    for (const r in t) {
                        const n = ee[r];
                        n || Vt.throwArgumentError("invalid typed-data domain key: " + JSON.stringify(r), "domain", t), e.push({
                            name: r,
                            type: n
                        })
                    }
                    return e.sort((t, e) => re.indexOf(t.name) - re.indexOf(e.name)), ae.hashStruct("EIP712Domain", {
                        EIP712Domain: e
                    }, t)
                }
                static encode(t, e, r) {
                    return x(["0x1901", ae.hashDomain(t), ae.from(e).hash(r)])
                }
                static hash(t, e, r) {
                    return $(ae.encode(t, e, r))
                }
                static resolveNames(t, e, r, n) {
                    return Wt(this, void 0, void 0, (function*() {
                        t = yt(t);
                        const i = {};
                        t.verifyingContract && !S(t.verifyingContract, 20) && (i[t.verifyingContract] = "0x");
                        const o = ae.from(e);
                        o.visit(r, (t, e) => ("address" !== t || S(e, 20) || (i[e] = "0x"), e));
                        for (const t in i) i[t] = yield n(t);
                        return t.verifyingContract && i[t.verifyingContract] && (t.verifyingContract = i[t.verifyingContract]), r = o.visit(r, (t, e) => "address" === t && i[e] ? i[e] : e), {
                            domain: t,
                            value: r
                        }
                    }))
                }
                static getPayload(t, e, r) {
                    ae.hashDomain(t);
                    const n = {},
                        i = [];
                    re.forEach(e => {
                        const r = t[e];
                        null != r && (n[e] = ie[e](r), i.push({
                            name: e,
                            type: ee[e]
                        }))
                    });
                    const o = ae.from(e),
                        s = yt(e);
                    return s.EIP712Domain ? Vt.throwArgumentError("types must not contain EIP712Domain type", "types.EIP712Domain", e) : s.EIP712Domain = i, o.encode(r), {
                        types: s,
                        domain: n,
                        primaryType: o.primaryType,
                        message: o.visit(r, (t, e) => {
                            if (t.match(/^bytes(\d*)/)) return R(E(e));
                            if (t.match(/^u?int/)) return z.from(e).toString();
                            switch (t) {
                                case "address":
                                    return e.toLowerCase();
                                case "bool":
                                    return !!e;
                                case "string":
                                    return "string" !== typeof e && Vt.throwArgumentError("invalid string", "value", e), e
                            }
                            return Vt.throwArgumentError("unsupported type", "type", t)
                        })
                    }
                }
            }
            var ue = r("f002"),
                he = r("6e45"),
                le = r("2b92");
            const fe = "signing-key/5.6.0",
                ce = new m(fe);
            let de = null;

            function me() {
                return de || (de = new le["a"]("secp256k1")), de
            }
            class pe {
                constructor(t) {
                    pt(this, "curve", "secp256k1"), pt(this, "privateKey", R(t));
                    const e = me().keyFromPrivate(E(this.privateKey));
                    pt(this, "publicKey", "0x" + e.getPublic(!1, "hex")), pt(this, "compressedPublicKey", "0x" + e.getPublic(!0, "hex")), pt(this, "_isSigningKey", !0)
                }
                _addPoint(t) {
                    const e = me().keyFromPublic(E(this.publicKey)),
                        r = me().keyFromPublic(E(t));
                    return "0x" + e.pub.add(r.pub).encodeCompressed("hex")
                }
                signDigest(t) {
                    const e = me().keyFromPrivate(E(this.privateKey)),
                        r = E(t);
                    32 !== r.length && ce.throwArgumentError("bad digest length", "digest", t);
                    const n = e.sign(r, {
                        canonical: !0
                    });
                    return O({
                        recoveryParam: n.recoveryParam,
                        r: T("0x" + n.r.toString(16), 32),
                        s: T("0x" + n.s.toString(16), 32)
                    })
                }
                computeSharedSecret(t) {
                    const e = me().keyFromPrivate(E(this.privateKey)),
                        r = me().keyFromPublic(E(ve(t)));
                    return T("0x" + e.derive(r.getPublic()).toString(16), 32)
                }
                static isSigningKey(t) {
                    return !(!t || !t._isSigningKey)
                }
            }

            function ge(t, e) {
                const r = O(e),
                    n = {
                        r: E(r.r),
                        s: E(r.s)
                    };
                return "0x" + me().recoverPubKey(E(t), n, r.recoveryParam).encode("hex", !1)
            }

            function ve(t, e) {
                const r = E(t);
                if (32 === r.length) {
                    const t = new pe(r);
                    return e ? "0x" + me().keyFromPrivate(r).getPublic(!0, "hex") : t.publicKey
                }
                return 33 === r.length ? e ? R(r) : "0x" + me().keyFromPublic(r).getPublic(!1, "hex") : 65 === r.length ? e ? "0x" + me().keyFromPublic(r).getPublic(!0, "hex") : R(r) : ce.throwArgumentError("invalid public or private key", "key", "[REDACTED]")
            }
            var ye = r("9cf4"),
                we = r("ce42");
            const be = "transactions/5.6.0",
                Me = new m(be);
            var Ee;
            (function(t) {
                t[t["legacy"] = 0] = "legacy", t[t["eip2930"] = 1] = "eip2930", t[t["eip1559"] = 2] = "eip1559"
            })(Ee || (Ee = {}));
            const Ne = [{
                    name: "nonce",
                    maxLength: 32,
                    numeric: !0
                }, {
                    name: "gasPrice",
                    maxLength: 32,
                    numeric: !0
                }, {
                    name: "gasLimit",
                    maxLength: 32,
                    numeric: !0
                }, {
                    name: "to",
                    length: 20
                }, {
                    name: "value",
                    maxLength: 32,
                    numeric: !0
                }, {
                    name: "data"
                }],
                Ae = {
                    chainId: !0,
                    data: !0,
                    gasLimit: !0,
                    gasPrice: !0,
                    nonce: !0,
                    to: !0,
                    type: !0,
                    value: !0
                };

            function _e(t) {
                const e = ve(t);
                return ft(k($(k(e, 1)), 12))
            }

            function Se(t, e) {
                return _e(ge(E(t), e))
            }

            function Ie(t, e) {
                const r = A(z.from(t).toHexString());
                return r.length > 32 && Me.throwArgumentError("invalid length for " + e, "transaction:" + e, t), r
            }

            function Re(t, e) {
                return {
                    address: ft(t),
                    storageKeys: (e || []).map((e, r) => (32 !== P(e) && Me.throwArgumentError("invalid access list storageKey", `accessList[${t}:${r}]`, e), e.toLowerCase()))
                }
            }

            function Pe(t) {
                if (Array.isArray(t)) return t.map((t, e) => Array.isArray(t) ? (t.length > 2 && Me.throwArgumentError("access list expected to be [ address, storageKeys[] ]", `value[${e}]`, t), Re(t[0], t[1])) : Re(t.address, t.storageKeys));
                const e = Object.keys(t).map(e => {
                    const r = t[e].reduce((t, e) => (t[e] = !0, t), {});
                    return Re(e, Object.keys(r).sort())
                });
                return e.sort((t, e) => t.address.localeCompare(e.address)), e
            }

            function ke(t) {
                return Pe(t).map(t => [t.address, t.storageKeys])
            }

            function xe(t, e) {
                if (null != t.gasPrice) {
                    const e = z.from(t.gasPrice),
                        r = z.from(t.maxFeePerGas || 0);
                    e.eq(r) || Me.throwArgumentError("mismatch EIP-1559 gasPrice != maxFeePerGas", "tx", {
                        gasPrice: e,
                        maxFeePerGas: r
                    })
                }
                const r = [Ie(t.chainId || 0, "chainId"), Ie(t.nonce || 0, "nonce"), Ie(t.maxPriorityFeePerGas || 0, "maxPriorityFeePerGas"), Ie(t.maxFeePerGas || 0, "maxFeePerGas"), Ie(t.gasLimit || 0, "gasLimit"), null != t.to ? ft(t.to) : "0x", Ie(t.value || 0, "value"), t.data || "0x", ke(t.accessList || [])];
                if (e) {
                    const t = O(e);
                    r.push(Ie(t.recoveryParam, "recoveryParam")), r.push(A(t.r)), r.push(A(t.s))
                }
                return x(["0x02", rt(r)])
            }

            function Te(t, e) {
                const r = [Ie(t.chainId || 0, "chainId"), Ie(t.nonce || 0, "nonce"), Ie(t.gasPrice || 0, "gasPrice"), Ie(t.gasLimit || 0, "gasLimit"), null != t.to ? ft(t.to) : "0x", Ie(t.value || 0, "value"), t.data || "0x", ke(t.accessList || [])];
                if (e) {
                    const t = O(e);
                    r.push(Ie(t.recoveryParam, "recoveryParam")), r.push(A(t.r)), r.push(A(t.s))
                }
                return x(["0x01", rt(r)])
            }

            function Oe(t, e) {
                vt(t, Ae);
                const r = [];
                Ne.forEach((function(e) {
                    let n = t[e.name] || [];
                    const i = {};
                    e.numeric && (i.hexPad = "left"), n = E(R(n, i)), e.length && n.length !== e.length && n.length > 0 && Me.throwArgumentError("invalid length for " + e.name, "transaction:" + e.name, n), e.maxLength && (n = A(n), n.length > e.maxLength && Me.throwArgumentError("invalid length for " + e.name, "transaction:" + e.name, n)), r.push(R(n))
                }));
                let n = 0;
                if (null != t.chainId ? (n = t.chainId, "number" !== typeof n && Me.throwArgumentError("invalid transaction.chainId", "transaction", t)) : e && !w(e) && e.v > 28 && (n = Math.floor((e.v - 35) / 2)), 0 !== n && (r.push(R(n)), r.push("0x"), r.push("0x")), !e) return rt(r);
                const i = O(e);
                let o = 27 + i.recoveryParam;
                return 0 !== n ? (r.pop(), r.pop(), r.pop(), o += 2 * n + 8, i.v > 28 && i.v !== o && Me.throwArgumentError("transaction.chainId/signature.v mismatch", "signature", e)) : i.v !== o && Me.throwArgumentError("transaction.chainId/signature.v mismatch", "signature", e), r.push(R(o)), r.push(A(E(i.r))), r.push(A(E(i.s))), rt(r)
            }

            function Ce(t, e) {
                if (null == t.type || 0 === t.type) return null != t.accessList && Me.throwArgumentError("untyped transactions do not support accessList; include type: 1", "transaction", t), Oe(t, e);
                switch (t.type) {
                    case 1:
                        return Te(t, e);
                    case 2:
                        return xe(t, e);
                    default:
                        break
                }
                return Me.throwError("unsupported transaction type: " + t.type, m.errors.UNSUPPORTED_OPERATION, {
                    operation: "serializeTransaction",
                    transactionType: t.type
                })
            }
            const Ue = "wallet/5.6.0";
            var Fe = function(t, e, r, n) {
                function i(t) {
                    return t instanceof r ? t : new r((function(e) {
                        e(t)
                    }))
                }
                return new(r || (r = Promise))((function(r, o) {
                    function s(t) {
                        try {
                            u(n.next(t))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function a(t) {
                        try {
                            u(n["throw"](t))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function u(t) {
                        t.done ? r(t.value) : i(t.value).then(s, a)
                    }
                    u((n = n.apply(t, e || [])).next())
                }))
            };
            const Be = new m(Ue);

            function Le(t) {
                return null != t && S(t.privateKey, 32) && null != t.address
            }

            function De(t) {
                const e = t.mnemonic;
                return e && e.phrase
            }
            class Ge extends Tt {
                constructor(t, e) {
                    if (Be.checkNew(new.target, Ge), super(), Le(t)) {
                        const e = new pe(t.privateKey);
                        if (pt(this, "_signingKey", () => e), pt(this, "address", _e(this.publicKey)), this.address !== ft(t.address) && Be.throwArgumentError("privateKey/address mismatch", "privateKey", "[REDACTED]"), De(t)) {
                            const e = t.mnemonic;
                            pt(this, "_mnemonic", () => ({
                                phrase: e.phrase,
                                path: e.path || ue["b"],
                                locale: e.locale || "en"
                            }));
                            const r = this.mnemonic,
                                n = ue["a"].fromMnemonic(r.phrase, null, r.locale).derivePath(r.path);
                            _e(n.privateKey) !== this.address && Be.throwArgumentError("mnemonic/address mismatch", "privateKey", "[REDACTED]")
                        } else pt(this, "_mnemonic", () => null)
                    } else {
                        if (pe.isSigningKey(t)) "secp256k1" !== t.curve && Be.throwArgumentError("unsupported curve; must be secp256k1", "privateKey", "[REDACTED]"), pt(this, "_signingKey", () => t);
                        else {
                            "string" === typeof t && t.match(/^[0-9a-f]*$/i) && 64 === t.length && (t = "0x" + t);
                            const e = new pe(t);
                            pt(this, "_signingKey", () => e)
                        }
                        pt(this, "_mnemonic", () => null), pt(this, "address", _e(this.publicKey))
                    }
                    e && !St.isProvider(e) && Be.throwArgumentError("invalid provider", "provider", e), pt(this, "provider", e || null)
                }
                get mnemonic() {
                    return this._mnemonic()
                }
                get privateKey() {
                    return this._signingKey().privateKey
                }
                get publicKey() {
                    return this._signingKey().publicKey
                }
                getAddress() {
                    return Promise.resolve(this.address)
                }
                connect(t) {
                    return new Ge(this, t)
                }
                signTransaction(t) {
                    return gt(t).then(e => {
                        null != e.from && (ft(e.from) !== this.address && Be.throwArgumentError("transaction from address mismatch", "transaction.from", t.from), delete e.from);
                        const r = this._signingKey().signDigest($(Ce(e)));
                        return Ce(e, r)
                    })
                }
                signMessage(t) {
                    return Fe(this, void 0, void 0, (function*() {
                        return C(this._signingKey().signDigest(qt(t)))
                    }))
                }
                _signTypedData(t, e, r) {
                    return Fe(this, void 0, void 0, (function*() {
                        const n = yield ae.resolveNames(t, e, r, t => (null == this.provider && Be.throwError("cannot resolve ENS names without a provider", m.errors.UNSUPPORTED_OPERATION, {
                            operation: "resolveName",
                            value: t
                        }), this.provider.resolveName(t)));
                        return C(this._signingKey().signDigest(ae.hash(n.domain, e, n.value)))
                    }))
                }
                encrypt(t, e, r) {
                    if ("function" !== typeof e || r || (r = e, e = {}), r && "function" !== typeof r) throw new Error("invalid callback");
                    return e || (e = {}), Object(ye["c"])(this, t, e, r)
                }
                static createRandom(t) {
                    let e = Object(he["a"])(16);
                    t || (t = {}), t.extraEntropy && (e = E(k($(N([e, t.extraEntropy])), 0, 16)));
                    const r = Object(ue["c"])(e, t.locale);
                    return Ge.fromMnemonic(r, t.path, t.locale)
                }
                static fromEncryptedJson(t, e, r) {
                    return Object(we["a"])(t, e, r).then(t => new Ge(t))
                }
                static fromEncryptedJsonSync(t, e) {
                    return new Ge(Object(we["b"])(t, e))
                }
                static fromMnemonic(t, e, r) {
                    return e || (e = ue["b"]), new Ge(ue["a"].fromMnemonic(t, null, r).derivePath(e))
                }
            }

            function je(t, e) {
                return Se(qt(t), e)
            }

            function qe(t, e, r, n) {
                return Se(ae.hash(t, e, r), n)
            }
        },
        "2b92": function(t, e, r) {
            "use strict";
            (function(t) {
                r.d(e, "a", (function() {
                    return K
                }));
                var n = r("7a6b"),
                    i = r.n(n),
                    o = r("7d92"),
                    s = r.n(o);
                "undefined" !== typeof globalThis ? globalThis : "undefined" !== typeof window ? window : "undefined" !== typeof t || "undefined" !== typeof self && self;

                function a(t, e, r) {
                    return r = {
                        path: e,
                        exports: {},
                        require: function(t, e) {
                            return u(t, void 0 === e || null === e ? r.path : e)
                        }
                    }, t(r, r.exports), r.exports
                }

                function u() {
                    throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")
                }
                var h = l;

                function l(t, e) {
                    if (!t) throw new Error(e || "Assertion failed")
                }
                l.equal = function(t, e, r) {
                    if (t != e) throw new Error(r || "Assertion failed: " + t + " != " + e)
                };
                var f = a((function(t, e) {
                        var r = e;

                        function n(t, e) {
                            if (Array.isArray(t)) return t.slice();
                            if (!t) return [];
                            var r = [];
                            if ("string" !== typeof t) {
                                for (var n = 0; n < t.length; n++) r[n] = 0 | t[n];
                                return r
                            }
                            if ("hex" === e) {
                                t = t.replace(/[^a-z0-9]+/gi, ""), t.length % 2 !== 0 && (t = "0" + t);
                                for (n = 0; n < t.length; n += 2) r.push(parseInt(t[n] + t[n + 1], 16))
                            } else
                                for (n = 0; n < t.length; n++) {
                                    var i = t.charCodeAt(n),
                                        o = i >> 8,
                                        s = 255 & i;
                                    o ? r.push(o, s) : r.push(s)
                                }
                            return r
                        }

                        function i(t) {
                            return 1 === t.length ? "0" + t : t
                        }

                        function o(t) {
                            for (var e = "", r = 0; r < t.length; r++) e += i(t[r].toString(16));
                            return e
                        }
                        r.toArray = n, r.zero2 = i, r.toHex = o, r.encode = function(t, e) {
                            return "hex" === e ? o(t) : t
                        }
                    })),
                    c = a((function(t, e) {
                        var r = e;

                        function n(t, e, r) {
                            var n = new Array(Math.max(t.bitLength(), r) + 1);
                            n.fill(0);
                            for (var i = 1 << e + 1, o = t.clone(), s = 0; s < n.length; s++) {
                                var a, u = o.andln(i - 1);
                                o.isOdd() ? (a = u > (i >> 1) - 1 ? (i >> 1) - u : u, o.isubn(a)) : a = 0, n[s] = a, o.iushrn(1)
                            }
                            return n
                        }

                        function o(t, e) {
                            var r = [
                                [],
                                []
                            ];
                            t = t.clone(), e = e.clone();
                            var n, i = 0,
                                o = 0;
                            while (t.cmpn(-i) > 0 || e.cmpn(-o) > 0) {
                                var s, a, u = t.andln(3) + i & 3,
                                    h = e.andln(3) + o & 3;
                                3 === u && (u = -1), 3 === h && (h = -1), 0 === (1 & u) ? s = 0 : (n = t.andln(7) + i & 7, s = 3 !== n && 5 !== n || 2 !== h ? u : -u), r[0].push(s), 0 === (1 & h) ? a = 0 : (n = e.andln(7) + o & 7, a = 3 !== n && 5 !== n || 2 !== u ? h : -h), r[1].push(a), 2 * i === s + 1 && (i = 1 - i), 2 * o === a + 1 && (o = 1 - o), t.iushrn(1), e.iushrn(1)
                            }
                            return r
                        }

                        function s(t, e, r) {
                            var n = "_" + e;
                            t.prototype[e] = function() {
                                return void 0 !== this[n] ? this[n] : this[n] = r.call(this)
                            }
                        }

                        function a(t) {
                            return "string" === typeof t ? r.toArray(t, "hex") : t
                        }

                        function u(t) {
                            return new i.a(t, "hex", "le")
                        }
                        r.assert = h, r.toArray = f.toArray, r.zero2 = f.zero2, r.toHex = f.toHex, r.encode = f.encode, r.getNAF = n, r.getJSF = o, r.cachedProperty = s, r.parseBytes = a, r.intFromLE = u
                    })),
                    d = c.getNAF,
                    m = c.getJSF,
                    p = c.assert;

                function g(t, e) {
                    this.type = t, this.p = new i.a(e.p, 16), this.red = e.prime ? i.a.red(e.prime) : i.a.mont(this.p), this.zero = new i.a(0).toRed(this.red), this.one = new i.a(1).toRed(this.red), this.two = new i.a(2).toRed(this.red), this.n = e.n && new i.a(e.n, 16), this.g = e.g && this.pointFromJSON(e.g, e.gRed), this._wnafT1 = new Array(4), this._wnafT2 = new Array(4), this._wnafT3 = new Array(4), this._wnafT4 = new Array(4), this._bitLength = this.n ? this.n.bitLength() : 0;
                    var r = this.n && this.p.div(this.n);
                    !r || r.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = !0, this.redN = this.n.toRed(this.red))
                }
                var v = g;

                function y(t, e) {
                    this.curve = t, this.type = e, this.precomputed = null
                }
                g.prototype.point = function() {
                    throw new Error("Not implemented")
                }, g.prototype.validate = function() {
                    throw new Error("Not implemented")
                }, g.prototype._fixedNafMul = function(t, e) {
                    p(t.precomputed);
                    var r = t._getDoubles(),
                        n = d(e, 1, this._bitLength),
                        i = (1 << r.step + 1) - (r.step % 2 === 0 ? 2 : 1);
                    i /= 3;
                    var o, s, a = [];
                    for (o = 0; o < n.length; o += r.step) {
                        s = 0;
                        for (var u = o + r.step - 1; u >= o; u--) s = (s << 1) + n[u];
                        a.push(s)
                    }
                    for (var h = this.jpoint(null, null, null), l = this.jpoint(null, null, null), f = i; f > 0; f--) {
                        for (o = 0; o < a.length; o++) s = a[o], s === f ? l = l.mixedAdd(r.points[o]) : s === -f && (l = l.mixedAdd(r.points[o].neg()));
                        h = h.add(l)
                    }
                    return h.toP()
                }, g.prototype._wnafMul = function(t, e) {
                    var r = 4,
                        n = t._getNAFPoints(r);
                    r = n.wnd;
                    for (var i = n.points, o = d(e, r, this._bitLength), s = this.jpoint(null, null, null), a = o.length - 1; a >= 0; a--) {
                        for (var u = 0; a >= 0 && 0 === o[a]; a--) u++;
                        if (a >= 0 && u++, s = s.dblp(u), a < 0) break;
                        var h = o[a];
                        p(0 !== h), s = "affine" === t.type ? h > 0 ? s.mixedAdd(i[h - 1 >> 1]) : s.mixedAdd(i[-h - 1 >> 1].neg()) : h > 0 ? s.add(i[h - 1 >> 1]) : s.add(i[-h - 1 >> 1].neg())
                    }
                    return "affine" === t.type ? s.toP() : s
                }, g.prototype._wnafMulAdd = function(t, e, r, n, i) {
                    var o, s, a, u = this._wnafT1,
                        h = this._wnafT2,
                        l = this._wnafT3,
                        f = 0;
                    for (o = 0; o < n; o++) {
                        a = e[o];
                        var c = a._getNAFPoints(t);
                        u[o] = c.wnd, h[o] = c.points
                    }
                    for (o = n - 1; o >= 1; o -= 2) {
                        var p = o - 1,
                            g = o;
                        if (1 === u[p] && 1 === u[g]) {
                            var v = [e[p], null, null, e[g]];
                            0 === e[p].y.cmp(e[g].y) ? (v[1] = e[p].add(e[g]), v[2] = e[p].toJ().mixedAdd(e[g].neg())) : 0 === e[p].y.cmp(e[g].y.redNeg()) ? (v[1] = e[p].toJ().mixedAdd(e[g]), v[2] = e[p].add(e[g].neg())) : (v[1] = e[p].toJ().mixedAdd(e[g]), v[2] = e[p].toJ().mixedAdd(e[g].neg()));
                            var y = [-3, -1, -5, -7, 0, 7, 5, 1, 3],
                                w = m(r[p], r[g]);
                            for (f = Math.max(w[0].length, f), l[p] = new Array(f), l[g] = new Array(f), s = 0; s < f; s++) {
                                var b = 0 | w[0][s],
                                    M = 0 | w[1][s];
                                l[p][s] = y[3 * (b + 1) + (M + 1)], l[g][s] = 0, h[p] = v
                            }
                        } else l[p] = d(r[p], u[p], this._bitLength), l[g] = d(r[g], u[g], this._bitLength), f = Math.max(l[p].length, f), f = Math.max(l[g].length, f)
                    }
                    var E = this.jpoint(null, null, null),
                        N = this._wnafT4;
                    for (o = f; o >= 0; o--) {
                        var A = 0;
                        while (o >= 0) {
                            var _ = !0;
                            for (s = 0; s < n; s++) N[s] = 0 | l[s][o], 0 !== N[s] && (_ = !1);
                            if (!_) break;
                            A++, o--
                        }
                        if (o >= 0 && A++, E = E.dblp(A), o < 0) break;
                        for (s = 0; s < n; s++) {
                            var S = N[s];
                            0 !== S && (S > 0 ? a = h[s][S - 1 >> 1] : S < 0 && (a = h[s][-S - 1 >> 1].neg()), E = "affine" === a.type ? E.mixedAdd(a) : E.add(a))
                        }
                    }
                    for (o = 0; o < n; o++) h[o] = null;
                    return i ? E : E.toP()
                }, g.BasePoint = y, y.prototype.eq = function() {
                    throw new Error("Not implemented")
                }, y.prototype.validate = function() {
                    return this.curve.validate(this)
                }, g.prototype.decodePoint = function(t, e) {
                    t = c.toArray(t, e);
                    var r = this.p.byteLength();
                    if ((4 === t[0] || 6 === t[0] || 7 === t[0]) && t.length - 1 === 2 * r) {
                        6 === t[0] ? p(t[t.length - 1] % 2 === 0) : 7 === t[0] && p(t[t.length - 1] % 2 === 1);
                        var n = this.point(t.slice(1, 1 + r), t.slice(1 + r, 1 + 2 * r));
                        return n
                    }
                    if ((2 === t[0] || 3 === t[0]) && t.length - 1 === r) return this.pointFromX(t.slice(1, 1 + r), 3 === t[0]);
                    throw new Error("Unknown point format")
                }, y.prototype.encodeCompressed = function(t) {
                    return this.encode(t, !0)
                }, y.prototype._encode = function(t) {
                    var e = this.curve.p.byteLength(),
                        r = this.getX().toArray("be", e);
                    return t ? [this.getY().isEven() ? 2 : 3].concat(r) : [4].concat(r, this.getY().toArray("be", e))
                }, y.prototype.encode = function(t, e) {
                    return c.encode(this._encode(e), t)
                }, y.prototype.precompute = function(t) {
                    if (this.precomputed) return this;
                    var e = {
                        doubles: null,
                        naf: null,
                        beta: null
                    };
                    return e.naf = this._getNAFPoints(8), e.doubles = this._getDoubles(4, t), e.beta = this._getBeta(), this.precomputed = e, this
                }, y.prototype._hasDoubles = function(t) {
                    if (!this.precomputed) return !1;
                    var e = this.precomputed.doubles;
                    return !!e && e.points.length >= Math.ceil((t.bitLength() + 1) / e.step)
                }, y.prototype._getDoubles = function(t, e) {
                    if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;
                    for (var r = [this], n = this, i = 0; i < e; i += t) {
                        for (var o = 0; o < t; o++) n = n.dbl();
                        r.push(n)
                    }
                    return {
                        step: t,
                        points: r
                    }
                }, y.prototype._getNAFPoints = function(t) {
                    if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;
                    for (var e = [this], r = (1 << t) - 1, n = 1 === r ? null : this.dbl(), i = 1; i < r; i++) e[i] = e[i - 1].add(n);
                    return {
                        wnd: t,
                        points: e
                    }
                }, y.prototype._getBeta = function() {
                    return null
                }, y.prototype.dblp = function(t) {
                    for (var e = this, r = 0; r < t; r++) e = e.dbl();
                    return e
                };
                var w = a((function(t) {
                        "function" === typeof Object.create ? t.exports = function(t, e) {
                            e && (t.super_ = e, t.prototype = Object.create(e.prototype, {
                                constructor: {
                                    value: t,
                                    enumerable: !1,
                                    writable: !0,
                                    configurable: !0
                                }
                            }))
                        } : t.exports = function(t, e) {
                            if (e) {
                                t.super_ = e;
                                var r = function() {};
                                r.prototype = e.prototype, t.prototype = new r, t.prototype.constructor = t
                            }
                        }
                    })),
                    b = c.assert;

                function M(t) {
                    v.call(this, "short", t), this.a = new i.a(t.a, 16).toRed(this.red), this.b = new i.a(t.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = 0 === this.a.fromRed().cmpn(0), this.threeA = 0 === this.a.fromRed().sub(this.p).cmpn(-3), this.endo = this._getEndomorphism(t), this._endoWnafT1 = new Array(4), this._endoWnafT2 = new Array(4)
                }
                w(M, v);
                var E = M;

                function N(t, e, r, n) {
                    v.BasePoint.call(this, t, "affine"), null === e && null === r ? (this.x = null, this.y = null, this.inf = !0) : (this.x = new i.a(e, 16), this.y = new i.a(r, 16), n && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = !1)
                }

                function A(t, e, r, n) {
                    v.BasePoint.call(this, t, "jacobian"), null === e && null === r && null === n ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new i.a(0)) : (this.x = new i.a(e, 16), this.y = new i.a(r, 16), this.z = new i.a(n, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one
                }
                M.prototype._getEndomorphism = function(t) {
                    if (this.zeroA && this.g && this.n && 1 === this.p.modn(3)) {
                        var e, r, n;
                        if (t.beta) e = new i.a(t.beta, 16).toRed(this.red);
                        else {
                            var o = this._getEndoRoots(this.p);
                            e = o[0].cmp(o[1]) < 0 ? o[0] : o[1], e = e.toRed(this.red)
                        }
                        if (t.lambda) r = new i.a(t.lambda, 16);
                        else {
                            var s = this._getEndoRoots(this.n);
                            0 === this.g.mul(s[0]).x.cmp(this.g.x.redMul(e)) ? r = s[0] : (r = s[1], b(0 === this.g.mul(r).x.cmp(this.g.x.redMul(e))))
                        }
                        return n = t.basis ? t.basis.map((function(t) {
                            return {
                                a: new i.a(t.a, 16),
                                b: new i.a(t.b, 16)
                            }
                        })) : this._getEndoBasis(r), {
                            beta: e,
                            lambda: r,
                            basis: n
                        }
                    }
                }, M.prototype._getEndoRoots = function(t) {
                    var e = t === this.p ? this.red : i.a.mont(t),
                        r = new i.a(2).toRed(e).redInvm(),
                        n = r.redNeg(),
                        o = new i.a(3).toRed(e).redNeg().redSqrt().redMul(r),
                        s = n.redAdd(o).fromRed(),
                        a = n.redSub(o).fromRed();
                    return [s, a]
                }, M.prototype._getEndoBasis = function(t) {
                    var e, r, n, o, s, a, u, h, l, f = this.n.ushrn(Math.floor(this.n.bitLength() / 2)),
                        c = t,
                        d = this.n.clone(),
                        m = new i.a(1),
                        p = new i.a(0),
                        g = new i.a(0),
                        v = new i.a(1),
                        y = 0;
                    while (0 !== c.cmpn(0)) {
                        var w = d.div(c);
                        h = d.sub(w.mul(c)), l = g.sub(w.mul(m));
                        var b = v.sub(w.mul(p));
                        if (!n && h.cmp(f) < 0) e = u.neg(), r = m, n = h.neg(), o = l;
                        else if (n && 2 === ++y) break;
                        u = h, d = c, c = h, g = m, m = l, v = p, p = b
                    }
                    s = h.neg(), a = l;
                    var M = n.sqr().add(o.sqr()),
                        E = s.sqr().add(a.sqr());
                    return E.cmp(M) >= 0 && (s = e, a = r), n.negative && (n = n.neg(), o = o.neg()), s.negative && (s = s.neg(), a = a.neg()), [{
                        a: n,
                        b: o
                    }, {
                        a: s,
                        b: a
                    }]
                }, M.prototype._endoSplit = function(t) {
                    var e = this.endo.basis,
                        r = e[0],
                        n = e[1],
                        i = n.b.mul(t).divRound(this.n),
                        o = r.b.neg().mul(t).divRound(this.n),
                        s = i.mul(r.a),
                        a = o.mul(n.a),
                        u = i.mul(r.b),
                        h = o.mul(n.b),
                        l = t.sub(s).sub(a),
                        f = u.add(h).neg();
                    return {
                        k1: l,
                        k2: f
                    }
                }, M.prototype.pointFromX = function(t, e) {
                    t = new i.a(t, 16), t.red || (t = t.toRed(this.red));
                    var r = t.redSqr().redMul(t).redIAdd(t.redMul(this.a)).redIAdd(this.b),
                        n = r.redSqrt();
                    if (0 !== n.redSqr().redSub(r).cmp(this.zero)) throw new Error("invalid point");
                    var o = n.fromRed().isOdd();
                    return (e && !o || !e && o) && (n = n.redNeg()), this.point(t, n)
                }, M.prototype.validate = function(t) {
                    if (t.inf) return !0;
                    var e = t.x,
                        r = t.y,
                        n = this.a.redMul(e),
                        i = e.redSqr().redMul(e).redIAdd(n).redIAdd(this.b);
                    return 0 === r.redSqr().redISub(i).cmpn(0)
                }, M.prototype._endoWnafMulAdd = function(t, e, r) {
                    for (var n = this._endoWnafT1, i = this._endoWnafT2, o = 0; o < t.length; o++) {
                        var s = this._endoSplit(e[o]),
                            a = t[o],
                            u = a._getBeta();
                        s.k1.negative && (s.k1.ineg(), a = a.neg(!0)), s.k2.negative && (s.k2.ineg(), u = u.neg(!0)), n[2 * o] = a, n[2 * o + 1] = u, i[2 * o] = s.k1, i[2 * o + 1] = s.k2
                    }
                    for (var h = this._wnafMulAdd(1, n, i, 2 * o, r), l = 0; l < 2 * o; l++) n[l] = null, i[l] = null;
                    return h
                }, w(N, v.BasePoint), M.prototype.point = function(t, e, r) {
                    return new N(this, t, e, r)
                }, M.prototype.pointFromJSON = function(t, e) {
                    return N.fromJSON(this, t, e)
                }, N.prototype._getBeta = function() {
                    if (this.curve.endo) {
                        var t = this.precomputed;
                        if (t && t.beta) return t.beta;
                        var e = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
                        if (t) {
                            var r = this.curve,
                                n = function(t) {
                                    return r.point(t.x.redMul(r.endo.beta), t.y)
                                };
                            t.beta = e, e.precomputed = {
                                beta: null,
                                naf: t.naf && {
                                    wnd: t.naf.wnd,
                                    points: t.naf.points.map(n)
                                },
                                doubles: t.doubles && {
                                    step: t.doubles.step,
                                    points: t.doubles.points.map(n)
                                }
                            }
                        }
                        return e
                    }
                }, N.prototype.toJSON = function() {
                    return this.precomputed ? [this.x, this.y, this.precomputed && {
                        doubles: this.precomputed.doubles && {
                            step: this.precomputed.doubles.step,
                            points: this.precomputed.doubles.points.slice(1)
                        },
                        naf: this.precomputed.naf && {
                            wnd: this.precomputed.naf.wnd,
                            points: this.precomputed.naf.points.slice(1)
                        }
                    }] : [this.x, this.y]
                }, N.fromJSON = function(t, e, r) {
                    "string" === typeof e && (e = JSON.parse(e));
                    var n = t.point(e[0], e[1], r);
                    if (!e[2]) return n;

                    function i(e) {
                        return t.point(e[0], e[1], r)
                    }
                    var o = e[2];
                    return n.precomputed = {
                        beta: null,
                        doubles: o.doubles && {
                            step: o.doubles.step,
                            points: [n].concat(o.doubles.points.map(i))
                        },
                        naf: o.naf && {
                            wnd: o.naf.wnd,
                            points: [n].concat(o.naf.points.map(i))
                        }
                    }, n
                }, N.prototype.inspect = function() {
                    return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">"
                }, N.prototype.isInfinity = function() {
                    return this.inf
                }, N.prototype.add = function(t) {
                    if (this.inf) return t;
                    if (t.inf) return this;
                    if (this.eq(t)) return this.dbl();
                    if (this.neg().eq(t)) return this.curve.point(null, null);
                    if (0 === this.x.cmp(t.x)) return this.curve.point(null, null);
                    var e = this.y.redSub(t.y);
                    0 !== e.cmpn(0) && (e = e.redMul(this.x.redSub(t.x).redInvm()));
                    var r = e.redSqr().redISub(this.x).redISub(t.x),
                        n = e.redMul(this.x.redSub(r)).redISub(this.y);
                    return this.curve.point(r, n)
                }, N.prototype.dbl = function() {
                    if (this.inf) return this;
                    var t = this.y.redAdd(this.y);
                    if (0 === t.cmpn(0)) return this.curve.point(null, null);
                    var e = this.curve.a,
                        r = this.x.redSqr(),
                        n = t.redInvm(),
                        i = r.redAdd(r).redIAdd(r).redIAdd(e).redMul(n),
                        o = i.redSqr().redISub(this.x.redAdd(this.x)),
                        s = i.redMul(this.x.redSub(o)).redISub(this.y);
                    return this.curve.point(o, s)
                }, N.prototype.getX = function() {
                    return this.x.fromRed()
                }, N.prototype.getY = function() {
                    return this.y.fromRed()
                }, N.prototype.mul = function(t) {
                    return t = new i.a(t, 16), this.isInfinity() ? this : this._hasDoubles(t) ? this.curve._fixedNafMul(this, t) : this.curve.endo ? this.curve._endoWnafMulAdd([this], [t]) : this.curve._wnafMul(this, t)
                }, N.prototype.mulAdd = function(t, e, r) {
                    var n = [this, e],
                        i = [t, r];
                    return this.curve.endo ? this.curve._endoWnafMulAdd(n, i) : this.curve._wnafMulAdd(1, n, i, 2)
                }, N.prototype.jmulAdd = function(t, e, r) {
                    var n = [this, e],
                        i = [t, r];
                    return this.curve.endo ? this.curve._endoWnafMulAdd(n, i, !0) : this.curve._wnafMulAdd(1, n, i, 2, !0)
                }, N.prototype.eq = function(t) {
                    return this === t || this.inf === t.inf && (this.inf || 0 === this.x.cmp(t.x) && 0 === this.y.cmp(t.y))
                }, N.prototype.neg = function(t) {
                    if (this.inf) return this;
                    var e = this.curve.point(this.x, this.y.redNeg());
                    if (t && this.precomputed) {
                        var r = this.precomputed,
                            n = function(t) {
                                return t.neg()
                            };
                        e.precomputed = {
                            naf: r.naf && {
                                wnd: r.naf.wnd,
                                points: r.naf.points.map(n)
                            },
                            doubles: r.doubles && {
                                step: r.doubles.step,
                                points: r.doubles.points.map(n)
                            }
                        }
                    }
                    return e
                }, N.prototype.toJ = function() {
                    if (this.inf) return this.curve.jpoint(null, null, null);
                    var t = this.curve.jpoint(this.x, this.y, this.curve.one);
                    return t
                }, w(A, v.BasePoint), M.prototype.jpoint = function(t, e, r) {
                    return new A(this, t, e, r)
                }, A.prototype.toP = function() {
                    if (this.isInfinity()) return this.curve.point(null, null);
                    var t = this.z.redInvm(),
                        e = t.redSqr(),
                        r = this.x.redMul(e),
                        n = this.y.redMul(e).redMul(t);
                    return this.curve.point(r, n)
                }, A.prototype.neg = function() {
                    return this.curve.jpoint(this.x, this.y.redNeg(), this.z)
                }, A.prototype.add = function(t) {
                    if (this.isInfinity()) return t;
                    if (t.isInfinity()) return this;
                    var e = t.z.redSqr(),
                        r = this.z.redSqr(),
                        n = this.x.redMul(e),
                        i = t.x.redMul(r),
                        o = this.y.redMul(e.redMul(t.z)),
                        s = t.y.redMul(r.redMul(this.z)),
                        a = n.redSub(i),
                        u = o.redSub(s);
                    if (0 === a.cmpn(0)) return 0 !== u.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
                    var h = a.redSqr(),
                        l = h.redMul(a),
                        f = n.redMul(h),
                        c = u.redSqr().redIAdd(l).redISub(f).redISub(f),
                        d = u.redMul(f.redISub(c)).redISub(o.redMul(l)),
                        m = this.z.redMul(t.z).redMul(a);
                    return this.curve.jpoint(c, d, m)
                }, A.prototype.mixedAdd = function(t) {
                    if (this.isInfinity()) return t.toJ();
                    if (t.isInfinity()) return this;
                    var e = this.z.redSqr(),
                        r = this.x,
                        n = t.x.redMul(e),
                        i = this.y,
                        o = t.y.redMul(e).redMul(this.z),
                        s = r.redSub(n),
                        a = i.redSub(o);
                    if (0 === s.cmpn(0)) return 0 !== a.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
                    var u = s.redSqr(),
                        h = u.redMul(s),
                        l = r.redMul(u),
                        f = a.redSqr().redIAdd(h).redISub(l).redISub(l),
                        c = a.redMul(l.redISub(f)).redISub(i.redMul(h)),
                        d = this.z.redMul(s);
                    return this.curve.jpoint(f, c, d)
                }, A.prototype.dblp = function(t) {
                    if (0 === t) return this;
                    if (this.isInfinity()) return this;
                    if (!t) return this.dbl();
                    var e;
                    if (this.curve.zeroA || this.curve.threeA) {
                        var r = this;
                        for (e = 0; e < t; e++) r = r.dbl();
                        return r
                    }
                    var n = this.curve.a,
                        i = this.curve.tinv,
                        o = this.x,
                        s = this.y,
                        a = this.z,
                        u = a.redSqr().redSqr(),
                        h = s.redAdd(s);
                    for (e = 0; e < t; e++) {
                        var l = o.redSqr(),
                            f = h.redSqr(),
                            c = f.redSqr(),
                            d = l.redAdd(l).redIAdd(l).redIAdd(n.redMul(u)),
                            m = o.redMul(f),
                            p = d.redSqr().redISub(m.redAdd(m)),
                            g = m.redISub(p),
                            v = d.redMul(g);
                        v = v.redIAdd(v).redISub(c);
                        var y = h.redMul(a);
                        e + 1 < t && (u = u.redMul(c)), o = p, a = y, h = v
                    }
                    return this.curve.jpoint(o, h.redMul(i), a)
                }, A.prototype.dbl = function() {
                    return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl()
                }, A.prototype._zeroDbl = function() {
                    var t, e, r;
                    if (this.zOne) {
                        var n = this.x.redSqr(),
                            i = this.y.redSqr(),
                            o = i.redSqr(),
                            s = this.x.redAdd(i).redSqr().redISub(n).redISub(o);
                        s = s.redIAdd(s);
                        var a = n.redAdd(n).redIAdd(n),
                            u = a.redSqr().redISub(s).redISub(s),
                            h = o.redIAdd(o);
                        h = h.redIAdd(h), h = h.redIAdd(h), t = u, e = a.redMul(s.redISub(u)).redISub(h), r = this.y.redAdd(this.y)
                    } else {
                        var l = this.x.redSqr(),
                            f = this.y.redSqr(),
                            c = f.redSqr(),
                            d = this.x.redAdd(f).redSqr().redISub(l).redISub(c);
                        d = d.redIAdd(d);
                        var m = l.redAdd(l).redIAdd(l),
                            p = m.redSqr(),
                            g = c.redIAdd(c);
                        g = g.redIAdd(g), g = g.redIAdd(g), t = p.redISub(d).redISub(d), e = m.redMul(d.redISub(t)).redISub(g), r = this.y.redMul(this.z), r = r.redIAdd(r)
                    }
                    return this.curve.jpoint(t, e, r)
                }, A.prototype._threeDbl = function() {
                    var t, e, r;
                    if (this.zOne) {
                        var n = this.x.redSqr(),
                            i = this.y.redSqr(),
                            o = i.redSqr(),
                            s = this.x.redAdd(i).redSqr().redISub(n).redISub(o);
                        s = s.redIAdd(s);
                        var a = n.redAdd(n).redIAdd(n).redIAdd(this.curve.a),
                            u = a.redSqr().redISub(s).redISub(s);
                        t = u;
                        var h = o.redIAdd(o);
                        h = h.redIAdd(h), h = h.redIAdd(h), e = a.redMul(s.redISub(u)).redISub(h), r = this.y.redAdd(this.y)
                    } else {
                        var l = this.z.redSqr(),
                            f = this.y.redSqr(),
                            c = this.x.redMul(f),
                            d = this.x.redSub(l).redMul(this.x.redAdd(l));
                        d = d.redAdd(d).redIAdd(d);
                        var m = c.redIAdd(c);
                        m = m.redIAdd(m);
                        var p = m.redAdd(m);
                        t = d.redSqr().redISub(p), r = this.y.redAdd(this.z).redSqr().redISub(f).redISub(l);
                        var g = f.redSqr();
                        g = g.redIAdd(g), g = g.redIAdd(g), g = g.redIAdd(g), e = d.redMul(m.redISub(t)).redISub(g)
                    }
                    return this.curve.jpoint(t, e, r)
                }, A.prototype._dbl = function() {
                    var t = this.curve.a,
                        e = this.x,
                        r = this.y,
                        n = this.z,
                        i = n.redSqr().redSqr(),
                        o = e.redSqr(),
                        s = r.redSqr(),
                        a = o.redAdd(o).redIAdd(o).redIAdd(t.redMul(i)),
                        u = e.redAdd(e);
                    u = u.redIAdd(u);
                    var h = u.redMul(s),
                        l = a.redSqr().redISub(h.redAdd(h)),
                        f = h.redISub(l),
                        c = s.redSqr();
                    c = c.redIAdd(c), c = c.redIAdd(c), c = c.redIAdd(c);
                    var d = a.redMul(f).redISub(c),
                        m = r.redAdd(r).redMul(n);
                    return this.curve.jpoint(l, d, m)
                }, A.prototype.trpl = function() {
                    if (!this.curve.zeroA) return this.dbl().add(this);
                    var t = this.x.redSqr(),
                        e = this.y.redSqr(),
                        r = this.z.redSqr(),
                        n = e.redSqr(),
                        i = t.redAdd(t).redIAdd(t),
                        o = i.redSqr(),
                        s = this.x.redAdd(e).redSqr().redISub(t).redISub(n);
                    s = s.redIAdd(s), s = s.redAdd(s).redIAdd(s), s = s.redISub(o);
                    var a = s.redSqr(),
                        u = n.redIAdd(n);
                    u = u.redIAdd(u), u = u.redIAdd(u), u = u.redIAdd(u);
                    var h = i.redIAdd(s).redSqr().redISub(o).redISub(a).redISub(u),
                        l = e.redMul(h);
                    l = l.redIAdd(l), l = l.redIAdd(l);
                    var f = this.x.redMul(a).redISub(l);
                    f = f.redIAdd(f), f = f.redIAdd(f);
                    var c = this.y.redMul(h.redMul(u.redISub(h)).redISub(s.redMul(a)));
                    c = c.redIAdd(c), c = c.redIAdd(c), c = c.redIAdd(c);
                    var d = this.z.redAdd(s).redSqr().redISub(r).redISub(a);
                    return this.curve.jpoint(f, c, d)
                }, A.prototype.mul = function(t, e) {
                    return t = new i.a(t, e), this.curve._wnafMul(this, t)
                }, A.prototype.eq = function(t) {
                    if ("affine" === t.type) return this.eq(t.toJ());
                    if (this === t) return !0;
                    var e = this.z.redSqr(),
                        r = t.z.redSqr();
                    if (0 !== this.x.redMul(r).redISub(t.x.redMul(e)).cmpn(0)) return !1;
                    var n = e.redMul(this.z),
                        i = r.redMul(t.z);
                    return 0 === this.y.redMul(i).redISub(t.y.redMul(n)).cmpn(0)
                }, A.prototype.eqXToP = function(t) {
                    var e = this.z.redSqr(),
                        r = t.toRed(this.curve.red).redMul(e);
                    if (0 === this.x.cmp(r)) return !0;
                    for (var n = t.clone(), i = this.curve.redN.redMul(e);;) {
                        if (n.iadd(this.curve.n), n.cmp(this.curve.p) >= 0) return !1;
                        if (r.redIAdd(i), 0 === this.x.cmp(r)) return !0
                    }
                }, A.prototype.inspect = function() {
                    return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">"
                }, A.prototype.isInfinity = function() {
                    return 0 === this.z.cmpn(0)
                };
                var _ = a((function(t, e) {
                        var r = e;
                        r.base = v, r.short = E, r.mont = null, r.edwards = null
                    })),
                    S = a((function(t, e) {
                        var r, n = e,
                            i = c.assert;

                        function o(t) {
                            "short" === t.type ? this.curve = new _.short(t) : "edwards" === t.type ? this.curve = new _.edwards(t) : this.curve = new _.mont(t), this.g = this.curve.g, this.n = this.curve.n, this.hash = t.hash, i(this.g.validate(), "Invalid curve"), i(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O")
                        }

                        function a(t, e) {
                            Object.defineProperty(n, t, {
                                configurable: !0,
                                enumerable: !0,
                                get: function() {
                                    var r = new o(e);
                                    return Object.defineProperty(n, t, {
                                        configurable: !0,
                                        enumerable: !0,
                                        value: r
                                    }), r
                                }
                            })
                        }
                        n.PresetCurve = o, a("p192", {
                            type: "short",
                            prime: "p192",
                            p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
                            a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
                            b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
                            n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
                            hash: s.a.sha256,
                            gRed: !1,
                            g: ["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012", "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]
                        }), a("p224", {
                            type: "short",
                            prime: "p224",
                            p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
                            a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
                            b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
                            n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
                            hash: s.a.sha256,
                            gRed: !1,
                            g: ["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21", "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]
                        }), a("p256", {
                            type: "short",
                            prime: null,
                            p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
                            a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
                            b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
                            n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
                            hash: s.a.sha256,
                            gRed: !1,
                            g: ["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296", "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]
                        }), a("p384", {
                            type: "short",
                            prime: null,
                            p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
                            a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
                            b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
                            n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
                            hash: s.a.sha384,
                            gRed: !1,
                            g: ["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7", "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]
                        }), a("p521", {
                            type: "short",
                            prime: null,
                            p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
                            a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
                            b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
                            n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
                            hash: s.a.sha512,
                            gRed: !1,
                            g: ["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66", "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"]
                        }), a("curve25519", {
                            type: "mont",
                            prime: "p25519",
                            p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
                            a: "76d06",
                            b: "1",
                            n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
                            hash: s.a.sha256,
                            gRed: !1,
                            g: ["9"]
                        }), a("ed25519", {
                            type: "edwards",
                            prime: "p25519",
                            p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
                            a: "-1",
                            c: "1",
                            d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
                            n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
                            hash: s.a.sha256,
                            gRed: !1,
                            g: ["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a", "6666666666666666666666666666666666666666666666666666666666666658"]
                        });
                        try {
                            r = null.crash()
                        } catch (u) {
                            r = void 0
                        }
                        a("secp256k1", {
                            type: "short",
                            prime: "k256",
                            p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
                            a: "0",
                            b: "7",
                            n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
                            h: "1",
                            hash: s.a.sha256,
                            beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
                            lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
                            basis: [{
                                a: "3086d221a7d46bcde86c90e49284eb15",
                                b: "-e4437ed6010e88286f547fa90abfe4c3"
                            }, {
                                a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
                                b: "3086d221a7d46bcde86c90e49284eb15"
                            }],
                            gRed: !1,
                            g: ["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798", "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8", r]
                        })
                    }));

                function I(t) {
                    if (!(this instanceof I)) return new I(t);
                    this.hash = t.hash, this.predResist = !!t.predResist, this.outLen = this.hash.outSize, this.minEntropy = t.minEntropy || this.hash.hmacStrength, this._reseed = null, this.reseedInterval = null, this.K = null, this.V = null;
                    var e = f.toArray(t.entropy, t.entropyEnc || "hex"),
                        r = f.toArray(t.nonce, t.nonceEnc || "hex"),
                        n = f.toArray(t.pers, t.persEnc || "hex");
                    h(e.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._init(e, r, n)
                }
                var R = I;
                I.prototype._init = function(t, e, r) {
                    var n = t.concat(e).concat(r);
                    this.K = new Array(this.outLen / 8), this.V = new Array(this.outLen / 8);
                    for (var i = 0; i < this.V.length; i++) this.K[i] = 0, this.V[i] = 1;
                    this._update(n), this._reseed = 1, this.reseedInterval = 281474976710656
                }, I.prototype._hmac = function() {
                    return new s.a.hmac(this.hash, this.K)
                }, I.prototype._update = function(t) {
                    var e = this._hmac().update(this.V).update([0]);
                    t && (e = e.update(t)), this.K = e.digest(), this.V = this._hmac().update(this.V).digest(), t && (this.K = this._hmac().update(this.V).update([1]).update(t).digest(), this.V = this._hmac().update(this.V).digest())
                }, I.prototype.reseed = function(t, e, r, n) {
                    "string" !== typeof e && (n = r, r = e, e = null), t = f.toArray(t, e), r = f.toArray(r, n), h(t.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._update(t.concat(r || [])), this._reseed = 1
                }, I.prototype.generate = function(t, e, r, n) {
                    if (this._reseed > this.reseedInterval) throw new Error("Reseed is required");
                    "string" !== typeof e && (n = r, r = e, e = null), r && (r = f.toArray(r, n || "hex"), this._update(r));
                    var i = [];
                    while (i.length < t) this.V = this._hmac().update(this.V).digest(), i = i.concat(this.V);
                    var o = i.slice(0, t);
                    return this._update(r), this._reseed++, f.encode(o, e)
                };
                var P = c.assert;

                function k(t, e) {
                    this.ec = t, this.priv = null, this.pub = null, e.priv && this._importPrivate(e.priv, e.privEnc), e.pub && this._importPublic(e.pub, e.pubEnc)
                }
                var x = k;
                k.fromPublic = function(t, e, r) {
                    return e instanceof k ? e : new k(t, {
                        pub: e,
                        pubEnc: r
                    })
                }, k.fromPrivate = function(t, e, r) {
                    return e instanceof k ? e : new k(t, {
                        priv: e,
                        privEnc: r
                    })
                }, k.prototype.validate = function() {
                    var t = this.getPublic();
                    return t.isInfinity() ? {
                        result: !1,
                        reason: "Invalid public key"
                    } : t.validate() ? t.mul(this.ec.curve.n).isInfinity() ? {
                        result: !0,
                        reason: null
                    } : {
                        result: !1,
                        reason: "Public key * N != O"
                    } : {
                        result: !1,
                        reason: "Public key is not a point"
                    }
                }, k.prototype.getPublic = function(t, e) {
                    return "string" === typeof t && (e = t, t = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), e ? this.pub.encode(e, t) : this.pub
                }, k.prototype.getPrivate = function(t) {
                    return "hex" === t ? this.priv.toString(16, 2) : this.priv
                }, k.prototype._importPrivate = function(t, e) {
                    this.priv = new i.a(t, e || 16), this.priv = this.priv.umod(this.ec.curve.n)
                }, k.prototype._importPublic = function(t, e) {
                    if (t.x || t.y) return "mont" === this.ec.curve.type ? P(t.x, "Need x coordinate") : "short" !== this.ec.curve.type && "edwards" !== this.ec.curve.type || P(t.x && t.y, "Need both x and y coordinate"), void(this.pub = this.ec.curve.point(t.x, t.y));
                    this.pub = this.ec.curve.decodePoint(t, e)
                }, k.prototype.derive = function(t) {
                    return t.validate() || P(t.validate(), "public point not validated"), t.mul(this.priv).getX()
                }, k.prototype.sign = function(t, e, r) {
                    return this.ec.sign(t, this, e, r)
                }, k.prototype.verify = function(t, e) {
                    return this.ec.verify(t, e, this)
                }, k.prototype.inspect = function() {
                    return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >"
                };
                var T = c.assert;

                function O(t, e) {
                    if (t instanceof O) return t;
                    this._importDER(t, e) || (T(t.r && t.s, "Signature without r or s"), this.r = new i.a(t.r, 16), this.s = new i.a(t.s, 16), void 0 === t.recoveryParam ? this.recoveryParam = null : this.recoveryParam = t.recoveryParam)
                }
                var C = O;

                function U() {
                    this.place = 0
                }

                function F(t, e) {
                    var r = t[e.place++];
                    if (!(128 & r)) return r;
                    var n = 15 & r;
                    if (0 === n || n > 4) return !1;
                    for (var i = 0, o = 0, s = e.place; o < n; o++, s++) i <<= 8, i |= t[s], i >>>= 0;
                    return !(i <= 127) && (e.place = s, i)
                }

                function B(t) {
                    var e = 0,
                        r = t.length - 1;
                    while (!t[e] && !(128 & t[e + 1]) && e < r) e++;
                    return 0 === e ? t : t.slice(e)
                }

                function L(t, e) {
                    if (e < 128) t.push(e);
                    else {
                        var r = 1 + (Math.log(e) / Math.LN2 >>> 3);
                        t.push(128 | r);
                        while (--r) t.push(e >>> (r << 3) & 255);
                        t.push(e)
                    }
                }
                O.prototype._importDER = function(t, e) {
                    t = c.toArray(t, e);
                    var r = new U;
                    if (48 !== t[r.place++]) return !1;
                    var n = F(t, r);
                    if (!1 === n) return !1;
                    if (n + r.place !== t.length) return !1;
                    if (2 !== t[r.place++]) return !1;
                    var o = F(t, r);
                    if (!1 === o) return !1;
                    var s = t.slice(r.place, o + r.place);
                    if (r.place += o, 2 !== t[r.place++]) return !1;
                    var a = F(t, r);
                    if (!1 === a) return !1;
                    if (t.length !== a + r.place) return !1;
                    var u = t.slice(r.place, a + r.place);
                    if (0 === s[0]) {
                        if (!(128 & s[1])) return !1;
                        s = s.slice(1)
                    }
                    if (0 === u[0]) {
                        if (!(128 & u[1])) return !1;
                        u = u.slice(1)
                    }
                    return this.r = new i.a(s), this.s = new i.a(u), this.recoveryParam = null, !0
                }, O.prototype.toDER = function(t) {
                    var e = this.r.toArray(),
                        r = this.s.toArray();
                    128 & e[0] && (e = [0].concat(e)), 128 & r[0] && (r = [0].concat(r)), e = B(e), r = B(r);
                    while (!r[0] && !(128 & r[1])) r = r.slice(1);
                    var n = [2];
                    L(n, e.length), n = n.concat(e), n.push(2), L(n, r.length);
                    var i = n.concat(r),
                        o = [48];
                    return L(o, i.length), o = o.concat(i), c.encode(o, t)
                };
                var D = function() {
                        throw new Error("unsupported")
                    },
                    G = c.assert;

                function j(t) {
                    if (!(this instanceof j)) return new j(t);
                    "string" === typeof t && (G(Object.prototype.hasOwnProperty.call(S, t), "Unknown curve " + t), t = S[t]), t instanceof S.PresetCurve && (t = {
                        curve: t
                    }), this.curve = t.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), this.g = this.curve.g, this.g = t.curve.g, this.g.precompute(t.curve.n.bitLength() + 1), this.hash = t.hash || t.curve.hash
                }
                var q = j;
                j.prototype.keyPair = function(t) {
                    return new x(this, t)
                }, j.prototype.keyFromPrivate = function(t, e) {
                    return x.fromPrivate(this, t, e)
                }, j.prototype.keyFromPublic = function(t, e) {
                    return x.fromPublic(this, t, e)
                }, j.prototype.genKeyPair = function(t) {
                    t || (t = {});
                    for (var e = new R({
                            hash: this.hash,
                            pers: t.pers,
                            persEnc: t.persEnc || "utf8",
                            entropy: t.entropy || D(this.hash.hmacStrength),
                            entropyEnc: t.entropy && t.entropyEnc || "utf8",
                            nonce: this.n.toArray()
                        }), r = this.n.byteLength(), n = this.n.sub(new i.a(2));;) {
                        var o = new i.a(e.generate(r));
                        if (!(o.cmp(n) > 0)) return o.iaddn(1), this.keyFromPrivate(o)
                    }
                }, j.prototype._truncateToN = function(t, e) {
                    var r = 8 * t.byteLength() - this.n.bitLength();
                    return r > 0 && (t = t.ushrn(r)), !e && t.cmp(this.n) >= 0 ? t.sub(this.n) : t
                }, j.prototype.sign = function(t, e, r, n) {
                    "object" === typeof r && (n = r, r = null), n || (n = {}), e = this.keyFromPrivate(e, r), t = this._truncateToN(new i.a(t, 16));
                    for (var o = this.n.byteLength(), s = e.getPrivate().toArray("be", o), a = t.toArray("be", o), u = new R({
                            hash: this.hash,
                            entropy: s,
                            nonce: a,
                            pers: n.pers,
                            persEnc: n.persEnc || "utf8"
                        }), h = this.n.sub(new i.a(1)), l = 0;; l++) {
                        var f = n.k ? n.k(l) : new i.a(u.generate(this.n.byteLength()));
                        if (f = this._truncateToN(f, !0), !(f.cmpn(1) <= 0 || f.cmp(h) >= 0)) {
                            var c = this.g.mul(f);
                            if (!c.isInfinity()) {
                                var d = c.getX(),
                                    m = d.umod(this.n);
                                if (0 !== m.cmpn(0)) {
                                    var p = f.invm(this.n).mul(m.mul(e.getPrivate()).iadd(t));
                                    if (p = p.umod(this.n), 0 !== p.cmpn(0)) {
                                        var g = (c.getY().isOdd() ? 1 : 0) | (0 !== d.cmp(m) ? 2 : 0);
                                        return n.canonical && p.cmp(this.nh) > 0 && (p = this.n.sub(p), g ^= 1), new C({
                                            r: m,
                                            s: p,
                                            recoveryParam: g
                                        })
                                    }
                                }
                            }
                        }
                    }
                }, j.prototype.verify = function(t, e, r, n) {
                    t = this._truncateToN(new i.a(t, 16)), r = this.keyFromPublic(r, n), e = new C(e, "hex");
                    var o = e.r,
                        s = e.s;
                    if (o.cmpn(1) < 0 || o.cmp(this.n) >= 0) return !1;
                    if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0) return !1;
                    var a, u = s.invm(this.n),
                        h = u.mul(t).umod(this.n),
                        l = u.mul(o).umod(this.n);
                    return this.curve._maxwellTrick ? (a = this.g.jmulAdd(h, r.getPublic(), l), !a.isInfinity() && a.eqXToP(o)) : (a = this.g.mulAdd(h, r.getPublic(), l), !a.isInfinity() && 0 === a.getX().umod(this.n).cmp(o))
                }, j.prototype.recoverPubKey = function(t, e, r, n) {
                    G((3 & r) === r, "The recovery param is more than two bits"), e = new C(e, n);
                    var o = this.n,
                        s = new i.a(t),
                        a = e.r,
                        u = e.s,
                        h = 1 & r,
                        l = r >> 1;
                    if (a.cmp(this.curve.p.umod(this.curve.n)) >= 0 && l) throw new Error("Unable to find sencond key candinate");
                    a = l ? this.curve.pointFromX(a.add(this.curve.n), h) : this.curve.pointFromX(a, h);
                    var f = e.r.invm(o),
                        c = o.sub(s).mul(f).umod(o),
                        d = u.mul(f).umod(o);
                    return this.g.mulAdd(c, a, d)
                }, j.prototype.getKeyRecoveryParam = function(t, e, r, n) {
                    if (e = new C(e, n), null !== e.recoveryParam) return e.recoveryParam;
                    for (var i = 0; i < 4; i++) {
                        var o;
                        try {
                            o = this.recoverPubKey(t, e, i)
                        } catch (t) {
                            continue
                        }
                        if (o.eq(r)) return i
                    }
                    throw new Error("Unable to find valid recovery factor")
                };
                var z = a((function(t, e) {
                        var r = e;
                        r.version = {
                            version: "6.5.4"
                        }.version, r.utils = c, r.rand = function() {
                            throw new Error("unsupported")
                        }, r.curve = _, r.curves = S, r.ec = q, r.eddsa = null
                    })),
                    K = z.ec
            }).call(this, r("c8ba"))
        },
        3796: function(t, e, r) {
            "use strict";
            r.d(e, "b", (function() {
                return R
            })), r.d(e, "c", (function() {
                return P
            })), r.d(e, "d", (function() {
                return k
            })), r.d(e, "a", (function() {
                return x
            }));
            var n = r("7d92"),
                i = r.n(n);
            const o = "logger/5.6.0";
            let s = !1,
                a = !1;
            const u = {
                debug: 1,
                default: 2,
                info: 2,
                warning: 3,
                error: 4,
                off: 5
            };
            let h = u["default"],
                l = null;

            function f() {
                try {
                    const t = [];
                    if (["NFD", "NFC", "NFKD", "NFKC"].forEach(e => {
                            try {
                                if ("test" !== "test".normalize(e)) throw new Error("bad normalize")
                            } catch (r) {
                                t.push(e)
                            }
                        }), t.length) throw new Error("missing " + t.join(", "));
                    if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) throw new Error("broken implementation")
                } catch (t) {
                    return t.message
                }
                return null
            }
            const c = f();
            var d, m;
            (function(t) {
                t["DEBUG"] = "DEBUG", t["INFO"] = "INFO", t["WARNING"] = "WARNING", t["ERROR"] = "ERROR", t["OFF"] = "OFF"
            })(d || (d = {})),
            function(t) {
                t["UNKNOWN_ERROR"] = "UNKNOWN_ERROR", t["NOT_IMPLEMENTED"] = "NOT_IMPLEMENTED", t["UNSUPPORTED_OPERATION"] = "UNSUPPORTED_OPERATION", t["NETWORK_ERROR"] = "NETWORK_ERROR", t["SERVER_ERROR"] = "SERVER_ERROR", t["TIMEOUT"] = "TIMEOUT", t["BUFFER_OVERRUN"] = "BUFFER_OVERRUN", t["NUMERIC_FAULT"] = "NUMERIC_FAULT", t["MISSING_NEW"] = "MISSING_NEW", t["INVALID_ARGUMENT"] = "INVALID_ARGUMENT", t["MISSING_ARGUMENT"] = "MISSING_ARGUMENT", t["UNEXPECTED_ARGUMENT"] = "UNEXPECTED_ARGUMENT", t["CALL_EXCEPTION"] = "CALL_EXCEPTION", t["INSUFFICIENT_FUNDS"] = "INSUFFICIENT_FUNDS", t["NONCE_EXPIRED"] = "NONCE_EXPIRED", t["REPLACEMENT_UNDERPRICED"] = "REPLACEMENT_UNDERPRICED", t["UNPREDICTABLE_GAS_LIMIT"] = "UNPREDICTABLE_GAS_LIMIT", t["TRANSACTION_REPLACED"] = "TRANSACTION_REPLACED"
            }(m || (m = {}));
            const p = "0123456789abcdef";
            class g {
                constructor(t) {
                    Object.defineProperty(this, "version", {
                        enumerable: !0,
                        value: t,
                        writable: !1
                    })
                }
                _log(t, e) {
                    const r = t.toLowerCase();
                    null == u[r] && this.throwArgumentError("invalid log level name", "logLevel", t), h > u[r] || console.log.apply(console, e)
                }
                debug(...t) {
                    this._log(g.levels.DEBUG, t)
                }
                info(...t) {
                    this._log(g.levels.INFO, t)
                }
                warn(...t) {
                    this._log(g.levels.WARNING, t)
                }
                makeError(t, e, r) {
                    if (a) return this.makeError("censored error", e, {});
                    e || (e = g.errors.UNKNOWN_ERROR), r || (r = {});
                    const n = [];
                    Object.keys(r).forEach(t => {
                        const e = r[t];
                        try {
                            if (e instanceof Uint8Array) {
                                let r = "";
                                for (let t = 0; t < e.length; t++) r += p[e[t] >> 4], r += p[15 & e[t]];
                                n.push(t + "=Uint8Array(0x" + r + ")")
                            } else n.push(t + "=" + JSON.stringify(e))
                        } catch (s) {
                            n.push(t + "=" + JSON.stringify(r[t].toString()))
                        }
                    }), n.push("code=" + e), n.push("version=" + this.version);
                    const i = t;
                    let o = "";
                    switch (e) {
                        case m.NUMERIC_FAULT:
                            {
                                o = "NUMERIC_FAULT";
                                const e = t;
                                switch (e) {
                                    case "overflow":
                                    case "underflow":
                                    case "division-by-zero":
                                        o += "-" + e;
                                        break;
                                    case "negative-power":
                                    case "negative-width":
                                        o += "-unsupported";
                                        break;
                                    case "unbound-bitwise-result":
                                        o += "-unbound-result";
                                        break
                                }
                                break
                            }
                        case m.CALL_EXCEPTION:
                        case m.INSUFFICIENT_FUNDS:
                        case m.MISSING_NEW:
                        case m.NONCE_EXPIRED:
                        case m.REPLACEMENT_UNDERPRICED:
                        case m.TRANSACTION_REPLACED:
                        case m.UNPREDICTABLE_GAS_LIMIT:
                            o = e;
                            break
                    }
                    o && (t += " [ See: https://links.ethers.org/v5-errors-" + o + " ]"), n.length && (t += " (" + n.join(", ") + ")");
                    const s = new Error(t);
                    return s.reason = i, s.code = e, Object.keys(r).forEach((function(t) {
                        s[t] = r[t]
                    })), s
                }
                throwError(t, e, r) {
                    throw this.makeError(t, e, r)
                }
                throwArgumentError(t, e, r) {
                    return this.throwError(t, g.errors.INVALID_ARGUMENT, {
                        argument: e,
                        value: r
                    })
                }
                assert(t, e, r, n) {
                    t || this.throwError(e, r, n)
                }
                assertArgument(t, e, r, n) {
                    t || this.throwArgumentError(e, r, n)
                }
                checkNormalize(t) {
                    null == t && (t = "platform missing String.prototype.normalize"), c && this.throwError("platform missing String.prototype.normalize", g.errors.UNSUPPORTED_OPERATION, {
                        operation: "String.prototype.normalize",
                        form: c
                    })
                }
                checkSafeUint53(t, e) {
                    "number" === typeof t && (null == e && (e = "value not safe"), (t < 0 || t >= 9007199254740991) && this.throwError(e, g.errors.NUMERIC_FAULT, {
                        operation: "checkSafeInteger",
                        fault: "out-of-safe-range",
                        value: t
                    }), t % 1 && this.throwError(e, g.errors.NUMERIC_FAULT, {
                        operation: "checkSafeInteger",
                        fault: "non-integer",
                        value: t
                    }))
                }
                checkArgumentCount(t, e, r) {
                    r = r ? ": " + r : "", t < e && this.throwError("missing argument" + r, g.errors.MISSING_ARGUMENT, {
                        count: t,
                        expectedCount: e
                    }), t > e && this.throwError("too many arguments" + r, g.errors.UNEXPECTED_ARGUMENT, {
                        count: t,
                        expectedCount: e
                    })
                }
                checkNew(t, e) {
                    t !== Object && null != t || this.throwError("missing new", g.errors.MISSING_NEW, {
                        name: e.name
                    })
                }
                checkAbstract(t, e) {
                    t === e ? this.throwError("cannot instantiate abstract class " + JSON.stringify(e.name) + " directly; use a sub-class", g.errors.UNSUPPORTED_OPERATION, {
                        name: t.name,
                        operation: "new"
                    }) : t !== Object && null != t || this.throwError("missing new", g.errors.MISSING_NEW, {
                        name: e.name
                    })
                }
                static globalLogger() {
                    return l || (l = new g(o)), l
                }
                static setCensorship(t, e) {
                    if (!t && e && this.globalLogger().throwError("cannot permanently disable censorship", g.errors.UNSUPPORTED_OPERATION, {
                            operation: "setCensorship"
                        }), s) {
                        if (!t) return;
                        this.globalLogger().throwError("error censorship permanent", g.errors.UNSUPPORTED_OPERATION, {
                            operation: "setCensorship"
                        })
                    }
                    a = !!t, s = !!e
                }
                static setLogLevel(t) {
                    const e = u[t.toLowerCase()];
                    null != e ? h = e : g.globalLogger().warn("invalid log level - " + t)
                }
                static from(t) {
                    return new g(t)
                }
            }
            g.errors = m, g.levels = d;
            const v = "bytes/5.6.1",
                y = new g(v);

            function w(t) {
                return !!t.toHexString
            }

            function b(t) {
                return t.slice || (t.slice = function() {
                    const e = Array.prototype.slice.call(arguments);
                    return b(new Uint8Array(Array.prototype.slice.apply(t, e)))
                }), t
            }

            function M(t) {
                return "number" === typeof t && t == t && t % 1 === 0
            }

            function E(t) {
                if (null == t) return !1;
                if (t.constructor === Uint8Array) return !0;
                if ("string" === typeof t) return !1;
                if (!M(t.length) || t.length < 0) return !1;
                for (let e = 0; e < t.length; e++) {
                    const r = t[e];
                    if (!M(r) || r < 0 || r >= 256) return !1
                }
                return !0
            }

            function N(t, e) {
                if (e || (e = {}), "number" === typeof t) {
                    y.checkSafeUint53(t, "invalid arrayify value");
                    const e = [];
                    while (t) e.unshift(255 & t), t = parseInt(String(t / 256));
                    return 0 === e.length && e.push(0), b(new Uint8Array(e))
                }
                if (e.allowMissingPrefix && "string" === typeof t && "0x" !== t.substring(0, 2) && (t = "0x" + t), w(t) && (t = t.toHexString()), A(t)) {
                    let r = t.substring(2);
                    r.length % 2 && ("left" === e.hexPad ? r = "0" + r : "right" === e.hexPad ? r += "0" : y.throwArgumentError("hex data is odd-length", "value", t));
                    const n = [];
                    for (let t = 0; t < r.length; t += 2) n.push(parseInt(r.substring(t, t + 2), 16));
                    return b(new Uint8Array(n))
                }
                return E(t) ? b(new Uint8Array(t)) : y.throwArgumentError("invalid arrayify value", "value", t)
            }

            function A(t, e) {
                return !("string" !== typeof t || !t.match(/^0x[0-9A-Fa-f]*$/)) && (!e || t.length === 2 + 2 * e)
            }
            var _ = r("d457");
            const S = "sha2/5.6.0",
                I = new g(S);

            function R(t) {
                return "0x" + i.a.ripemd160().update(N(t)).digest("hex")
            }

            function P(t) {
                return "0x" + i.a.sha256().update(N(t)).digest("hex")
            }

            function k(t) {
                return "0x" + i.a.sha512().update(N(t)).digest("hex")
            }

            function x(t, e, r) {
                return _["a"][t] || I.throwError("unsupported algorithm " + t, g.errors.UNSUPPORTED_OPERATION, {
                    operation: "hmac",
                    algorithm: t
                }), "0x" + i.a.hmac(i.a[t], N(e)).update(N(r)).digest("hex")
            }
        },
        "37ed": function(t, e, r) {
            "use strict";
            r.d(e, "a", (function() {
                return l
            }));
            var n = r("82e0");
            const i = "bytes/5.6.1",
                o = new n["a"](i);

            function s(t) {
                return !!t.toHexString
            }

            function a(t) {
                return t.slice || (t.slice = function() {
                    const e = Array.prototype.slice.call(arguments);
                    return a(new Uint8Array(Array.prototype.slice.apply(t, e)))
                }), t
            }

            function u(t) {
                return "number" === typeof t && t == t && t % 1 === 0
            }

            function h(t) {
                if (null == t) return !1;
                if (t.constructor === Uint8Array) return !0;
                if ("string" === typeof t) return !1;
                if (!u(t.length) || t.length < 0) return !1;
                for (let e = 0; e < t.length; e++) {
                    const r = t[e];
                    if (!u(r) || r < 0 || r >= 256) return !1
                }
                return !0
            }

            function l(t, e) {
                if (e || (e = {}), "number" === typeof t) {
                    o.checkSafeUint53(t, "invalid arrayify value");
                    const e = [];
                    while (t) e.unshift(255 & t), t = parseInt(String(t / 256));
                    return 0 === e.length && e.push(0), a(new Uint8Array(e))
                }
                if (e.allowMissingPrefix && "string" === typeof t && "0x" !== t.substring(0, 2) && (t = "0x" + t), s(t) && (t = t.toHexString()), f(t)) {
                    let r = t.substring(2);
                    r.length % 2 && ("left" === e.hexPad ? r = "0" + r : "right" === e.hexPad ? r += "0" : o.throwArgumentError("hex data is odd-length", "value", t));
                    const n = [];
                    for (let t = 0; t < r.length; t += 2) n.push(parseInt(r.substring(t, t + 2), 16));
                    return a(new Uint8Array(n))
                }
                return h(t) ? a(new Uint8Array(t)) : o.throwArgumentError("invalid arrayify value", "value", t)
            }

            function f(t, e) {
                return !("string" !== typeof t || !t.match(/^0x[0-9A-Fa-f]*$/)) && (!e || t.length === 2 + 2 * e)
            }
        },
        4105: function(t, e, r) {
            "use strict";
            r.d(e, "a", (function() {
                return S
            }));
            const n = "logger/5.6.0";
            let i = !1,
                o = !1;
            const s = {
                debug: 1,
                default: 2,
                info: 2,
                warning: 3,
                error: 4,
                off: 5
            };
            let a = s["default"],
                u = null;

            function h() {
                try {
                    const t = [];
                    if (["NFD", "NFC", "NFKD", "NFKC"].forEach(e => {
                            try {
                                if ("test" !== "test".normalize(e)) throw new Error("bad normalize")
                            } catch (r) {
                                t.push(e)
                            }
                        }), t.length) throw new Error("missing " + t.join(", "));
                    if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) throw new Error("broken implementation")
                } catch (t) {
                    return t.message
                }
                return null
            }
            const l = h();
            var f, c;
            (function(t) {
                t["DEBUG"] = "DEBUG", t["INFO"] = "INFO", t["WARNING"] = "WARNING", t["ERROR"] = "ERROR", t["OFF"] = "OFF"
            })(f || (f = {})),
            function(t) {
                t["UNKNOWN_ERROR"] = "UNKNOWN_ERROR", t["NOT_IMPLEMENTED"] = "NOT_IMPLEMENTED", t["UNSUPPORTED_OPERATION"] = "UNSUPPORTED_OPERATION", t["NETWORK_ERROR"] = "NETWORK_ERROR", t["SERVER_ERROR"] = "SERVER_ERROR", t["TIMEOUT"] = "TIMEOUT", t["BUFFER_OVERRUN"] = "BUFFER_OVERRUN", t["NUMERIC_FAULT"] = "NUMERIC_FAULT", t["MISSING_NEW"] = "MISSING_NEW", t["INVALID_ARGUMENT"] = "INVALID_ARGUMENT", t["MISSING_ARGUMENT"] = "MISSING_ARGUMENT", t["UNEXPECTED_ARGUMENT"] = "UNEXPECTED_ARGUMENT", t["CALL_EXCEPTION"] = "CALL_EXCEPTION", t["INSUFFICIENT_FUNDS"] = "INSUFFICIENT_FUNDS", t["NONCE_EXPIRED"] = "NONCE_EXPIRED", t["REPLACEMENT_UNDERPRICED"] = "REPLACEMENT_UNDERPRICED", t["UNPREDICTABLE_GAS_LIMIT"] = "UNPREDICTABLE_GAS_LIMIT", t["TRANSACTION_REPLACED"] = "TRANSACTION_REPLACED"
            }(c || (c = {}));
            const d = "0123456789abcdef";
            class m {
                constructor(t) {
                    Object.defineProperty(this, "version", {
                        enumerable: !0,
                        value: t,
                        writable: !1
                    })
                }
                _log(t, e) {
                    const r = t.toLowerCase();
                    null == s[r] && this.throwArgumentError("invalid log level name", "logLevel", t), a > s[r] || console.log.apply(console, e)
                }
                debug(...t) {
                    this._log(m.levels.DEBUG, t)
                }
                info(...t) {
                    this._log(m.levels.INFO, t)
                }
                warn(...t) {
                    this._log(m.levels.WARNING, t)
                }
                makeError(t, e, r) {
                    if (o) return this.makeError("censored error", e, {});
                    e || (e = m.errors.UNKNOWN_ERROR), r || (r = {});
                    const n = [];
                    Object.keys(r).forEach(t => {
                        const e = r[t];
                        try {
                            if (e instanceof Uint8Array) {
                                let r = "";
                                for (let t = 0; t < e.length; t++) r += d[e[t] >> 4], r += d[15 & e[t]];
                                n.push(t + "=Uint8Array(0x" + r + ")")
                            } else n.push(t + "=" + JSON.stringify(e))
                        } catch (a) {
                            n.push(t + "=" + JSON.stringify(r[t].toString()))
                        }
                    }), n.push("code=" + e), n.push("version=" + this.version);
                    const i = t;
                    let s = "";
                    switch (e) {
                        case c.NUMERIC_FAULT:
                            {
                                s = "NUMERIC_FAULT";
                                const e = t;
                                switch (e) {
                                    case "overflow":
                                    case "underflow":
                                    case "division-by-zero":
                                        s += "-" + e;
                                        break;
                                    case "negative-power":
                                    case "negative-width":
                                        s += "-unsupported";
                                        break;
                                    case "unbound-bitwise-result":
                                        s += "-unbound-result";
                                        break
                                }
                                break
                            }
                        case c.CALL_EXCEPTION:
                        case c.INSUFFICIENT_FUNDS:
                        case c.MISSING_NEW:
                        case c.NONCE_EXPIRED:
                        case c.REPLACEMENT_UNDERPRICED:
                        case c.TRANSACTION_REPLACED:
                        case c.UNPREDICTABLE_GAS_LIMIT:
                            s = e;
                            break
                    }
                    s && (t += " [ See: https://links.ethers.org/v5-errors-" + s + " ]"), n.length && (t += " (" + n.join(", ") + ")");
                    const a = new Error(t);
                    return a.reason = i, a.code = e, Object.keys(r).forEach((function(t) {
                        a[t] = r[t]
                    })), a
                }
                throwError(t, e, r) {
                    throw this.makeError(t, e, r)
                }
                throwArgumentError(t, e, r) {
                    return this.throwError(t, m.errors.INVALID_ARGUMENT, {
                        argument: e,
                        value: r
                    })
                }
                assert(t, e, r, n) {
                    t || this.throwError(e, r, n)
                }
                assertArgument(t, e, r, n) {
                    t || this.throwArgumentError(e, r, n)
                }
                checkNormalize(t) {
                    null == t && (t = "platform missing String.prototype.normalize"), l && this.throwError("platform missing String.prototype.normalize", m.errors.UNSUPPORTED_OPERATION, {
                        operation: "String.prototype.normalize",
                        form: l
                    })
                }
                checkSafeUint53(t, e) {
                    "number" === typeof t && (null == e && (e = "value not safe"), (t < 0 || t >= 9007199254740991) && this.throwError(e, m.errors.NUMERIC_FAULT, {
                        operation: "checkSafeInteger",
                        fault: "out-of-safe-range",
                        value: t
                    }), t % 1 && this.throwError(e, m.errors.NUMERIC_FAULT, {
                        operation: "checkSafeInteger",
                        fault: "non-integer",
                        value: t
                    }))
                }
                checkArgumentCount(t, e, r) {
                    r = r ? ": " + r : "", t < e && this.throwError("missing argument" + r, m.errors.MISSING_ARGUMENT, {
                        count: t,
                        expectedCount: e
                    }), t > e && this.throwError("too many arguments" + r, m.errors.UNEXPECTED_ARGUMENT, {
                        count: t,
                        expectedCount: e
                    })
                }
                checkNew(t, e) {
                    t !== Object && null != t || this.throwError("missing new", m.errors.MISSING_NEW, {
                        name: e.name
                    })
                }
                checkAbstract(t, e) {
                    t === e ? this.throwError("cannot instantiate abstract class " + JSON.stringify(e.name) + " directly; use a sub-class", m.errors.UNSUPPORTED_OPERATION, {
                        name: t.name,
                        operation: "new"
                    }) : t !== Object && null != t || this.throwError("missing new", m.errors.MISSING_NEW, {
                        name: e.name
                    })
                }
                static globalLogger() {
                    return u || (u = new m(n)), u
                }
                static setCensorship(t, e) {
                    if (!t && e && this.globalLogger().throwError("cannot permanently disable censorship", m.errors.UNSUPPORTED_OPERATION, {
                            operation: "setCensorship"
                        }), i) {
                        if (!t) return;
                        this.globalLogger().throwError("error censorship permanent", m.errors.UNSUPPORTED_OPERATION, {
                            operation: "setCensorship"
                        })
                    }
                    o = !!t, i = !!e
                }
                static setLogLevel(t) {
                    const e = s[t.toLowerCase()];
                    null != e ? a = e : m.globalLogger().warn("invalid log level - " + t)
                }
                static from(t) {
                    return new m(t)
                }
            }
            m.errors = c, m.levels = f;
            const p = "bytes/5.6.1",
                g = new m(p);

            function v(t) {
                return !!t.toHexString
            }

            function y(t) {
                return t.slice || (t.slice = function() {
                    const e = Array.prototype.slice.call(arguments);
                    return y(new Uint8Array(Array.prototype.slice.apply(t, e)))
                }), t
            }

            function w(t) {
                return "number" === typeof t && t == t && t % 1 === 0
            }

            function b(t) {
                if (null == t) return !1;
                if (t.constructor === Uint8Array) return !0;
                if ("string" === typeof t) return !1;
                if (!w(t.length) || t.length < 0) return !1;
                for (let e = 0; e < t.length; e++) {
                    const r = t[e];
                    if (!w(r) || r < 0 || r >= 256) return !1
                }
                return !0
            }

            function M(t, e) {
                if (e || (e = {}), "number" === typeof t) {
                    g.checkSafeUint53(t, "invalid arrayify value");
                    const e = [];
                    while (t) e.unshift(255 & t), t = parseInt(String(t / 256));
                    return 0 === e.length && e.push(0), y(new Uint8Array(e))
                }
                if (e.allowMissingPrefix && "string" === typeof t && "0x" !== t.substring(0, 2) && (t = "0x" + t), v(t) && (t = t.toHexString()), E(t)) {
                    let r = t.substring(2);
                    r.length % 2 && ("left" === e.hexPad ? r = "0" + r : "right" === e.hexPad ? r += "0" : g.throwArgumentError("hex data is odd-length", "value", t));
                    const n = [];
                    for (let t = 0; t < r.length; t += 2) n.push(parseInt(r.substring(t, t + 2), 16));
                    return y(new Uint8Array(n))
                }
                return b(t) ? y(new Uint8Array(t)) : g.throwArgumentError("invalid arrayify value", "value", t)
            }

            function E(t, e) {
                return !("string" !== typeof t || !t.match(/^0x[0-9A-Fa-f]*$/)) && (!e || t.length === 2 + 2 * e)
            }
            const N = "0123456789abcdef";

            function A(t, e) {
                if (e || (e = {}), "number" === typeof t) {
                    g.checkSafeUint53(t, "invalid hexlify value");
                    let e = "";
                    while (t) e = N[15 & t] + e, t = Math.floor(t / 16);
                    return e.length ? (e.length % 2 && (e = "0" + e), "0x" + e) : "0x00"
                }
                if ("bigint" === typeof t) return t = t.toString(16), t.length % 2 ? "0x0" + t : "0x" + t;
                if (e.allowMissingPrefix && "string" === typeof t && "0x" !== t.substring(0, 2) && (t = "0x" + t), v(t)) return t.toHexString();
                if (E(t)) return t.length % 2 && ("left" === e.hexPad ? t = "0x0" + t.substring(2) : "right" === e.hexPad ? t += "0" : g.throwArgumentError("hex data is odd-length", "value", t)), t.toLowerCase();
                if (b(t)) {
                    let e = "0x";
                    for (let r = 0; r < t.length; r++) {
                        let n = t[r];
                        e += N[(240 & n) >> 4] + N[15 & n]
                    }
                    return e
                }
                return g.throwArgumentError("invalid hexlify value", "value", t)
            }
            var _ = r("3796");

            function S(t, e, r, n, i) {
                let o;
                t = M(t), e = M(e);
                let s = 1;
                const a = new Uint8Array(n),
                    u = new Uint8Array(e.length + 4);
                let h, l;
                u.set(e);
                for (let f = 1; f <= s; f++) {
                    u[e.length] = f >> 24 & 255, u[e.length + 1] = f >> 16 & 255, u[e.length + 2] = f >> 8 & 255, u[e.length + 3] = 255 & f;
                    let c = M(Object(_["a"])(i, t, u));
                    o || (o = c.length, l = new Uint8Array(o), s = Math.ceil(n / o), h = n - (s - 1) * o), l.set(c);
                    for (let e = 1; e < r; e++) {
                        c = M(Object(_["a"])(i, t, c));
                        for (let t = 0; t < o; t++) l[t] ^= c[t]
                    }
                    const d = (f - 1) * o,
                        m = f === s ? h : o;
                    a.set(M(l).slice(0, m), d)
                }
                return A(a)
            }
        },
        4121: function(t, e, r) {
            (function(t) {
                (function(t, e) {
                    "use strict";

                    function n(t, e) {
                        if (!t) throw new Error(e || "Assertion failed")
                    }

                    function i(t, e) {
                        t.super_ = e;
                        var r = function() {};
                        r.prototype = e.prototype, t.prototype = new r, t.prototype.constructor = t
                    }

                    function o(t, e, r) {
                        if (o.isBN(t)) return t;
                        this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== t && ("le" !== e && "be" !== e || (r = e, e = 10), this._init(t || 0, e || 10, r || "be"))
                    }
                    var s;
                    "object" === typeof t ? t.exports = o : e.BN = o, o.BN = o, o.wordSize = 26;
                    try {
                        s = "undefined" !== typeof window && "undefined" !== typeof window.Buffer ? window.Buffer : r(37).Buffer
                    } catch (I) {}

                    function a(t, e) {
                        var r = t.charCodeAt(e);
                        return r >= 65 && r <= 70 ? r - 55 : r >= 97 && r <= 102 ? r - 87 : r - 48 & 15
                    }

                    function u(t, e, r) {
                        var n = a(t, r);
                        return r - 1 >= e && (n |= a(t, r - 1) << 4), n
                    }

                    function h(t, e, r, n) {
                        for (var i = 0, o = Math.min(t.length, r), s = e; s < o; s++) {
                            var a = t.charCodeAt(s) - 48;
                            i *= n, i += a >= 49 ? a - 49 + 10 : a >= 17 ? a - 17 + 10 : a
                        }
                        return i
                    }
                    o.isBN = function(t) {
                        return t instanceof o || null !== t && "object" === typeof t && t.constructor.wordSize === o.wordSize && Array.isArray(t.words)
                    }, o.max = function(t, e) {
                        return t.cmp(e) > 0 ? t : e
                    }, o.min = function(t, e) {
                        return t.cmp(e) < 0 ? t : e
                    }, o.prototype._init = function(t, e, r) {
                        if ("number" === typeof t) return this._initNumber(t, e, r);
                        if ("object" === typeof t) return this._initArray(t, e, r);
                        "hex" === e && (e = 16), n(e === (0 | e) && e >= 2 && e <= 36), t = t.toString().replace(/\s+/g, "");
                        var i = 0;
                        "-" === t[0] && (i++, this.negative = 1), i < t.length && (16 === e ? this._parseHex(t, i, r) : (this._parseBase(t, e, i), "le" === r && this._initArray(this.toArray(), e, r)))
                    }, o.prototype._initNumber = function(t, e, r) {
                        t < 0 && (this.negative = 1, t = -t), t < 67108864 ? (this.words = [67108863 & t], this.length = 1) : t < 4503599627370496 ? (this.words = [67108863 & t, t / 67108864 & 67108863], this.length = 2) : (n(t < 9007199254740992), this.words = [67108863 & t, t / 67108864 & 67108863, 1], this.length = 3), "le" === r && this._initArray(this.toArray(), e, r)
                    }, o.prototype._initArray = function(t, e, r) {
                        if (n("number" === typeof t.length), t.length <= 0) return this.words = [0], this.length = 1, this;
                        this.length = Math.ceil(t.length / 3), this.words = new Array(this.length);
                        for (var i = 0; i < this.length; i++) this.words[i] = 0;
                        var o, s, a = 0;
                        if ("be" === r)
                            for (i = t.length - 1, o = 0; i >= 0; i -= 3) s = t[i] | t[i - 1] << 8 | t[i - 2] << 16, this.words[o] |= s << a & 67108863, this.words[o + 1] = s >>> 26 - a & 67108863, a += 24, a >= 26 && (a -= 26, o++);
                        else if ("le" === r)
                            for (i = 0, o = 0; i < t.length; i += 3) s = t[i] | t[i + 1] << 8 | t[i + 2] << 16, this.words[o] |= s << a & 67108863, this.words[o + 1] = s >>> 26 - a & 67108863, a += 24, a >= 26 && (a -= 26, o++);
                        return this.strip()
                    }, o.prototype._parseHex = function(t, e, r) {
                        this.length = Math.ceil((t.length - e) / 6), this.words = new Array(this.length);
                        for (var n = 0; n < this.length; n++) this.words[n] = 0;
                        var i, o = 0,
                            s = 0;
                        if ("be" === r)
                            for (n = t.length - 1; n >= e; n -= 2) i = u(t, e, n) << o, this.words[s] |= 67108863 & i, o >= 18 ? (o -= 18, s += 1, this.words[s] |= i >>> 26) : o += 8;
                        else {
                            var a = t.length - e;
                            for (n = a % 2 === 0 ? e + 1 : e; n < t.length; n += 2) i = u(t, e, n) << o, this.words[s] |= 67108863 & i, o >= 18 ? (o -= 18, s += 1, this.words[s] |= i >>> 26) : o += 8
                        }
                        this.strip()
                    }, o.prototype._parseBase = function(t, e, r) {
                        this.words = [0], this.length = 1;
                        for (var n = 0, i = 1; i <= 67108863; i *= e) n++;
                        n--, i = i / e | 0;
                        for (var o = t.length - r, s = o % n, a = Math.min(o, o - s) + r, u = 0, l = r; l < a; l += n) u = h(t, l, l + n, e), this.imuln(i), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
                        if (0 !== s) {
                            var f = 1;
                            for (u = h(t, l, t.length, e), l = 0; l < s; l++) f *= e;
                            this.imuln(f), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u)
                        }
                        this.strip()
                    }, o.prototype.copy = function(t) {
                        t.words = new Array(this.length);
                        for (var e = 0; e < this.length; e++) t.words[e] = this.words[e];
                        t.length = this.length, t.negative = this.negative, t.red = this.red
                    }, o.prototype.clone = function() {
                        var t = new o(null);
                        return this.copy(t), t
                    }, o.prototype._expand = function(t) {
                        while (this.length < t) this.words[this.length++] = 0;
                        return this
                    }, o.prototype.strip = function() {
                        while (this.length > 1 && 0 === this.words[this.length - 1]) this.length--;
                        return this._normSign()
                    }, o.prototype._normSign = function() {
                        return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this
                    }, o.prototype.inspect = function() {
                        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">"
                    };
                    var l = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"],
                        f = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                        c = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];

                    function d(t) {
                        for (var e = new Array(t.bitLength()), r = 0; r < e.length; r++) {
                            var n = r / 26 | 0,
                                i = r % 26;
                            e[r] = (t.words[n] & 1 << i) >>> i
                        }
                        return e
                    }

                    function m(t, e, r) {
                        r.negative = e.negative ^ t.negative;
                        var n = t.length + e.length | 0;
                        r.length = n, n = n - 1 | 0;
                        var i = 0 | t.words[0],
                            o = 0 | e.words[0],
                            s = i * o,
                            a = 67108863 & s,
                            u = s / 67108864 | 0;
                        r.words[0] = a;
                        for (var h = 1; h < n; h++) {
                            for (var l = u >>> 26, f = 67108863 & u, c = Math.min(h, e.length - 1), d = Math.max(0, h - t.length + 1); d <= c; d++) {
                                var m = h - d | 0;
                                i = 0 | t.words[m], o = 0 | e.words[d], s = i * o + f, l += s / 67108864 | 0, f = 67108863 & s
                            }
                            r.words[h] = 0 | f, u = 0 | l
                        }
                        return 0 !== u ? r.words[h] = 0 | u : r.length--, r.strip()
                    }
                    o.prototype.toString = function(t, e) {
                        var r;
                        if (t = t || 10, e = 0 | e || 1, 16 === t || "hex" === t) {
                            r = "";
                            for (var i = 0, o = 0, s = 0; s < this.length; s++) {
                                var a = this.words[s],
                                    u = (16777215 & (a << i | o)).toString(16);
                                o = a >>> 24 - i & 16777215, r = 0 !== o || s !== this.length - 1 ? l[6 - u.length] + u + r : u + r, i += 2, i >= 26 && (i -= 26, s--)
                            }
                            0 !== o && (r = o.toString(16) + r);
                            while (r.length % e !== 0) r = "0" + r;
                            return 0 !== this.negative && (r = "-" + r), r
                        }
                        if (t === (0 | t) && t >= 2 && t <= 36) {
                            var h = f[t],
                                d = c[t];
                            r = "";
                            var m = this.clone();
                            m.negative = 0;
                            while (!m.isZero()) {
                                var p = m.modn(d).toString(t);
                                m = m.idivn(d), r = m.isZero() ? p + r : l[h - p.length] + p + r
                            }
                            this.isZero() && (r = "0" + r);
                            while (r.length % e !== 0) r = "0" + r;
                            return 0 !== this.negative && (r = "-" + r), r
                        }
                        n(!1, "Base should be between 2 and 36")
                    }, o.prototype.toNumber = function() {
                        var t = this.words[0];
                        return 2 === this.length ? t += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && n(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -t : t
                    }, o.prototype.toJSON = function() {
                        return this.toString(16)
                    }, o.prototype.toBuffer = function(t, e) {
                        return n("undefined" !== typeof s), this.toArrayLike(s, t, e)
                    }, o.prototype.toArray = function(t, e) {
                        return this.toArrayLike(Array, t, e)
                    }, o.prototype.toArrayLike = function(t, e, r) {
                        var i = this.byteLength(),
                            o = r || Math.max(1, i);
                        n(i <= o, "byte array longer than desired length"), n(o > 0, "Requested array length <= 0"), this.strip();
                        var s, a, u = "le" === e,
                            h = new t(o),
                            l = this.clone();
                        if (u) {
                            for (a = 0; !l.isZero(); a++) s = l.andln(255), l.iushrn(8), h[a] = s;
                            for (; a < o; a++) h[a] = 0
                        } else {
                            for (a = 0; a < o - i; a++) h[a] = 0;
                            for (a = 0; !l.isZero(); a++) s = l.andln(255), l.iushrn(8), h[o - a - 1] = s
                        }
                        return h
                    }, Math.clz32 ? o.prototype._countBits = function(t) {
                        return 32 - Math.clz32(t)
                    } : o.prototype._countBits = function(t) {
                        var e = t,
                            r = 0;
                        return e >= 4096 && (r += 13, e >>>= 13), e >= 64 && (r += 7, e >>>= 7), e >= 8 && (r += 4, e >>>= 4), e >= 2 && (r += 2, e >>>= 2), r + e
                    }, o.prototype._zeroBits = function(t) {
                        if (0 === t) return 26;
                        var e = t,
                            r = 0;
                        return 0 === (8191 & e) && (r += 13, e >>>= 13), 0 === (127 & e) && (r += 7, e >>>= 7), 0 === (15 & e) && (r += 4, e >>>= 4), 0 === (3 & e) && (r += 2, e >>>= 2), 0 === (1 & e) && r++, r
                    }, o.prototype.bitLength = function() {
                        var t = this.words[this.length - 1],
                            e = this._countBits(t);
                        return 26 * (this.length - 1) + e
                    }, o.prototype.zeroBits = function() {
                        if (this.isZero()) return 0;
                        for (var t = 0, e = 0; e < this.length; e++) {
                            var r = this._zeroBits(this.words[e]);
                            if (t += r, 26 !== r) break
                        }
                        return t
                    }, o.prototype.byteLength = function() {
                        return Math.ceil(this.bitLength() / 8)
                    }, o.prototype.toTwos = function(t) {
                        return 0 !== this.negative ? this.abs().inotn(t).iaddn(1) : this.clone()
                    }, o.prototype.fromTwos = function(t) {
                        return this.testn(t - 1) ? this.notn(t).iaddn(1).ineg() : this.clone()
                    }, o.prototype.isNeg = function() {
                        return 0 !== this.negative
                    }, o.prototype.neg = function() {
                        return this.clone().ineg()
                    }, o.prototype.ineg = function() {
                        return this.isZero() || (this.negative ^= 1), this
                    }, o.prototype.iuor = function(t) {
                        while (this.length < t.length) this.words[this.length++] = 0;
                        for (var e = 0; e < t.length; e++) this.words[e] = this.words[e] | t.words[e];
                        return this.strip()
                    }, o.prototype.ior = function(t) {
                        return n(0 === (this.negative | t.negative)), this.iuor(t)
                    }, o.prototype.or = function(t) {
                        return this.length > t.length ? this.clone().ior(t) : t.clone().ior(this)
                    }, o.prototype.uor = function(t) {
                        return this.length > t.length ? this.clone().iuor(t) : t.clone().iuor(this)
                    }, o.prototype.iuand = function(t) {
                        var e;
                        e = this.length > t.length ? t : this;
                        for (var r = 0; r < e.length; r++) this.words[r] = this.words[r] & t.words[r];
                        return this.length = e.length, this.strip()
                    }, o.prototype.iand = function(t) {
                        return n(0 === (this.negative | t.negative)), this.iuand(t)
                    }, o.prototype.and = function(t) {
                        return this.length > t.length ? this.clone().iand(t) : t.clone().iand(this)
                    }, o.prototype.uand = function(t) {
                        return this.length > t.length ? this.clone().iuand(t) : t.clone().iuand(this)
                    }, o.prototype.iuxor = function(t) {
                        var e, r;
                        this.length > t.length ? (e = this, r = t) : (e = t, r = this);
                        for (var n = 0; n < r.length; n++) this.words[n] = e.words[n] ^ r.words[n];
                        if (this !== e)
                            for (; n < e.length; n++) this.words[n] = e.words[n];
                        return this.length = e.length, this.strip()
                    }, o.prototype.ixor = function(t) {
                        return n(0 === (this.negative | t.negative)), this.iuxor(t)
                    }, o.prototype.xor = function(t) {
                        return this.length > t.length ? this.clone().ixor(t) : t.clone().ixor(this)
                    }, o.prototype.uxor = function(t) {
                        return this.length > t.length ? this.clone().iuxor(t) : t.clone().iuxor(this)
                    }, o.prototype.inotn = function(t) {
                        n("number" === typeof t && t >= 0);
                        var e = 0 | Math.ceil(t / 26),
                            r = t % 26;
                        this._expand(e), r > 0 && e--;
                        for (var i = 0; i < e; i++) this.words[i] = 67108863 & ~this.words[i];
                        return r > 0 && (this.words[i] = ~this.words[i] & 67108863 >> 26 - r), this.strip()
                    }, o.prototype.notn = function(t) {
                        return this.clone().inotn(t)
                    }, o.prototype.setn = function(t, e) {
                        n("number" === typeof t && t >= 0);
                        var r = t / 26 | 0,
                            i = t % 26;
                        return this._expand(r + 1), this.words[r] = e ? this.words[r] | 1 << i : this.words[r] & ~(1 << i), this.strip()
                    }, o.prototype.iadd = function(t) {
                        var e, r, n;
                        if (0 !== this.negative && 0 === t.negative) return this.negative = 0, e = this.isub(t), this.negative ^= 1, this._normSign();
                        if (0 === this.negative && 0 !== t.negative) return t.negative = 0, e = this.isub(t), t.negative = 1, e._normSign();
                        this.length > t.length ? (r = this, n = t) : (r = t, n = this);
                        for (var i = 0, o = 0; o < n.length; o++) e = (0 | r.words[o]) + (0 | n.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                        for (; 0 !== i && o < r.length; o++) e = (0 | r.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                        if (this.length = r.length, 0 !== i) this.words[this.length] = i, this.length++;
                        else if (r !== this)
                            for (; o < r.length; o++) this.words[o] = r.words[o];
                        return this
                    }, o.prototype.add = function(t) {
                        var e;
                        return 0 !== t.negative && 0 === this.negative ? (t.negative = 0, e = this.sub(t), t.negative ^= 1, e) : 0 === t.negative && 0 !== this.negative ? (this.negative = 0, e = t.sub(this), this.negative = 1, e) : this.length > t.length ? this.clone().iadd(t) : t.clone().iadd(this)
                    }, o.prototype.isub = function(t) {
                        if (0 !== t.negative) {
                            t.negative = 0;
                            var e = this.iadd(t);
                            return t.negative = 1, e._normSign()
                        }
                        if (0 !== this.negative) return this.negative = 0, this.iadd(t), this.negative = 1, this._normSign();
                        var r, n, i = this.cmp(t);
                        if (0 === i) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
                        i > 0 ? (r = this, n = t) : (r = t, n = this);
                        for (var o = 0, s = 0; s < n.length; s++) e = (0 | r.words[s]) - (0 | n.words[s]) + o, o = e >> 26, this.words[s] = 67108863 & e;
                        for (; 0 !== o && s < r.length; s++) e = (0 | r.words[s]) + o, o = e >> 26, this.words[s] = 67108863 & e;
                        if (0 === o && s < r.length && r !== this)
                            for (; s < r.length; s++) this.words[s] = r.words[s];
                        return this.length = Math.max(this.length, s), r !== this && (this.negative = 1), this.strip()
                    }, o.prototype.sub = function(t) {
                        return this.clone().isub(t)
                    };
                    var p = function(t, e, r) {
                        var n, i, o, s = t.words,
                            a = e.words,
                            u = r.words,
                            h = 0,
                            l = 0 | s[0],
                            f = 8191 & l,
                            c = l >>> 13,
                            d = 0 | s[1],
                            m = 8191 & d,
                            p = d >>> 13,
                            g = 0 | s[2],
                            v = 8191 & g,
                            y = g >>> 13,
                            w = 0 | s[3],
                            b = 8191 & w,
                            M = w >>> 13,
                            E = 0 | s[4],
                            N = 8191 & E,
                            A = E >>> 13,
                            _ = 0 | s[5],
                            S = 8191 & _,
                            I = _ >>> 13,
                            R = 0 | s[6],
                            P = 8191 & R,
                            k = R >>> 13,
                            x = 0 | s[7],
                            T = 8191 & x,
                            O = x >>> 13,
                            C = 0 | s[8],
                            U = 8191 & C,
                            F = C >>> 13,
                            B = 0 | s[9],
                            L = 8191 & B,
                            D = B >>> 13,
                            G = 0 | a[0],
                            j = 8191 & G,
                            q = G >>> 13,
                            z = 0 | a[1],
                            K = 8191 & z,
                            W = z >>> 13,
                            V = 0 | a[2],
                            H = 8191 & V,
                            J = V >>> 13,
                            Z = 0 | a[3],
                            X = 8191 & Z,
                            $ = Z >>> 13,
                            Y = 0 | a[4],
                            Q = 8191 & Y,
                            tt = Y >>> 13,
                            et = 0 | a[5],
                            rt = 8191 & et,
                            nt = et >>> 13,
                            it = 0 | a[6],
                            ot = 8191 & it,
                            st = it >>> 13,
                            at = 0 | a[7],
                            ut = 8191 & at,
                            ht = at >>> 13,
                            lt = 0 | a[8],
                            ft = 8191 & lt,
                            ct = lt >>> 13,
                            dt = 0 | a[9],
                            mt = 8191 & dt,
                            pt = dt >>> 13;
                        r.negative = t.negative ^ e.negative, r.length = 19, n = Math.imul(f, j), i = Math.imul(f, q), i = i + Math.imul(c, j) | 0, o = Math.imul(c, q);
                        var gt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (gt >>> 26) | 0, gt &= 67108863, n = Math.imul(m, j), i = Math.imul(m, q), i = i + Math.imul(p, j) | 0, o = Math.imul(p, q), n = n + Math.imul(f, K) | 0, i = i + Math.imul(f, W) | 0, i = i + Math.imul(c, K) | 0, o = o + Math.imul(c, W) | 0;
                        var vt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (vt >>> 26) | 0, vt &= 67108863, n = Math.imul(v, j), i = Math.imul(v, q), i = i + Math.imul(y, j) | 0, o = Math.imul(y, q), n = n + Math.imul(m, K) | 0, i = i + Math.imul(m, W) | 0, i = i + Math.imul(p, K) | 0, o = o + Math.imul(p, W) | 0, n = n + Math.imul(f, H) | 0, i = i + Math.imul(f, J) | 0, i = i + Math.imul(c, H) | 0, o = o + Math.imul(c, J) | 0;
                        var yt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (yt >>> 26) | 0, yt &= 67108863, n = Math.imul(b, j), i = Math.imul(b, q), i = i + Math.imul(M, j) | 0, o = Math.imul(M, q), n = n + Math.imul(v, K) | 0, i = i + Math.imul(v, W) | 0, i = i + Math.imul(y, K) | 0, o = o + Math.imul(y, W) | 0, n = n + Math.imul(m, H) | 0, i = i + Math.imul(m, J) | 0, i = i + Math.imul(p, H) | 0, o = o + Math.imul(p, J) | 0, n = n + Math.imul(f, X) | 0, i = i + Math.imul(f, $) | 0, i = i + Math.imul(c, X) | 0, o = o + Math.imul(c, $) | 0;
                        var wt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (wt >>> 26) | 0, wt &= 67108863, n = Math.imul(N, j), i = Math.imul(N, q), i = i + Math.imul(A, j) | 0, o = Math.imul(A, q), n = n + Math.imul(b, K) | 0, i = i + Math.imul(b, W) | 0, i = i + Math.imul(M, K) | 0, o = o + Math.imul(M, W) | 0, n = n + Math.imul(v, H) | 0, i = i + Math.imul(v, J) | 0, i = i + Math.imul(y, H) | 0, o = o + Math.imul(y, J) | 0, n = n + Math.imul(m, X) | 0, i = i + Math.imul(m, $) | 0, i = i + Math.imul(p, X) | 0, o = o + Math.imul(p, $) | 0, n = n + Math.imul(f, Q) | 0, i = i + Math.imul(f, tt) | 0, i = i + Math.imul(c, Q) | 0, o = o + Math.imul(c, tt) | 0;
                        var bt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (bt >>> 26) | 0, bt &= 67108863, n = Math.imul(S, j), i = Math.imul(S, q), i = i + Math.imul(I, j) | 0, o = Math.imul(I, q), n = n + Math.imul(N, K) | 0, i = i + Math.imul(N, W) | 0, i = i + Math.imul(A, K) | 0, o = o + Math.imul(A, W) | 0, n = n + Math.imul(b, H) | 0, i = i + Math.imul(b, J) | 0, i = i + Math.imul(M, H) | 0, o = o + Math.imul(M, J) | 0, n = n + Math.imul(v, X) | 0, i = i + Math.imul(v, $) | 0, i = i + Math.imul(y, X) | 0, o = o + Math.imul(y, $) | 0, n = n + Math.imul(m, Q) | 0, i = i + Math.imul(m, tt) | 0, i = i + Math.imul(p, Q) | 0, o = o + Math.imul(p, tt) | 0, n = n + Math.imul(f, rt) | 0, i = i + Math.imul(f, nt) | 0, i = i + Math.imul(c, rt) | 0, o = o + Math.imul(c, nt) | 0;
                        var Mt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (Mt >>> 26) | 0, Mt &= 67108863, n = Math.imul(P, j), i = Math.imul(P, q), i = i + Math.imul(k, j) | 0, o = Math.imul(k, q), n = n + Math.imul(S, K) | 0, i = i + Math.imul(S, W) | 0, i = i + Math.imul(I, K) | 0, o = o + Math.imul(I, W) | 0, n = n + Math.imul(N, H) | 0, i = i + Math.imul(N, J) | 0, i = i + Math.imul(A, H) | 0, o = o + Math.imul(A, J) | 0, n = n + Math.imul(b, X) | 0, i = i + Math.imul(b, $) | 0, i = i + Math.imul(M, X) | 0, o = o + Math.imul(M, $) | 0, n = n + Math.imul(v, Q) | 0, i = i + Math.imul(v, tt) | 0, i = i + Math.imul(y, Q) | 0, o = o + Math.imul(y, tt) | 0, n = n + Math.imul(m, rt) | 0, i = i + Math.imul(m, nt) | 0, i = i + Math.imul(p, rt) | 0, o = o + Math.imul(p, nt) | 0, n = n + Math.imul(f, ot) | 0, i = i + Math.imul(f, st) | 0, i = i + Math.imul(c, ot) | 0, o = o + Math.imul(c, st) | 0;
                        var Et = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (Et >>> 26) | 0, Et &= 67108863, n = Math.imul(T, j), i = Math.imul(T, q), i = i + Math.imul(O, j) | 0, o = Math.imul(O, q), n = n + Math.imul(P, K) | 0, i = i + Math.imul(P, W) | 0, i = i + Math.imul(k, K) | 0, o = o + Math.imul(k, W) | 0, n = n + Math.imul(S, H) | 0, i = i + Math.imul(S, J) | 0, i = i + Math.imul(I, H) | 0, o = o + Math.imul(I, J) | 0, n = n + Math.imul(N, X) | 0, i = i + Math.imul(N, $) | 0, i = i + Math.imul(A, X) | 0, o = o + Math.imul(A, $) | 0, n = n + Math.imul(b, Q) | 0, i = i + Math.imul(b, tt) | 0, i = i + Math.imul(M, Q) | 0, o = o + Math.imul(M, tt) | 0, n = n + Math.imul(v, rt) | 0, i = i + Math.imul(v, nt) | 0, i = i + Math.imul(y, rt) | 0, o = o + Math.imul(y, nt) | 0, n = n + Math.imul(m, ot) | 0, i = i + Math.imul(m, st) | 0, i = i + Math.imul(p, ot) | 0, o = o + Math.imul(p, st) | 0, n = n + Math.imul(f, ut) | 0, i = i + Math.imul(f, ht) | 0, i = i + Math.imul(c, ut) | 0, o = o + Math.imul(c, ht) | 0;
                        var Nt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (Nt >>> 26) | 0, Nt &= 67108863, n = Math.imul(U, j), i = Math.imul(U, q), i = i + Math.imul(F, j) | 0, o = Math.imul(F, q), n = n + Math.imul(T, K) | 0, i = i + Math.imul(T, W) | 0, i = i + Math.imul(O, K) | 0, o = o + Math.imul(O, W) | 0, n = n + Math.imul(P, H) | 0, i = i + Math.imul(P, J) | 0, i = i + Math.imul(k, H) | 0, o = o + Math.imul(k, J) | 0, n = n + Math.imul(S, X) | 0, i = i + Math.imul(S, $) | 0, i = i + Math.imul(I, X) | 0, o = o + Math.imul(I, $) | 0, n = n + Math.imul(N, Q) | 0, i = i + Math.imul(N, tt) | 0, i = i + Math.imul(A, Q) | 0, o = o + Math.imul(A, tt) | 0, n = n + Math.imul(b, rt) | 0, i = i + Math.imul(b, nt) | 0, i = i + Math.imul(M, rt) | 0, o = o + Math.imul(M, nt) | 0, n = n + Math.imul(v, ot) | 0, i = i + Math.imul(v, st) | 0, i = i + Math.imul(y, ot) | 0, o = o + Math.imul(y, st) | 0, n = n + Math.imul(m, ut) | 0, i = i + Math.imul(m, ht) | 0, i = i + Math.imul(p, ut) | 0, o = o + Math.imul(p, ht) | 0, n = n + Math.imul(f, ft) | 0, i = i + Math.imul(f, ct) | 0, i = i + Math.imul(c, ft) | 0, o = o + Math.imul(c, ct) | 0;
                        var At = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (At >>> 26) | 0, At &= 67108863, n = Math.imul(L, j), i = Math.imul(L, q), i = i + Math.imul(D, j) | 0, o = Math.imul(D, q), n = n + Math.imul(U, K) | 0, i = i + Math.imul(U, W) | 0, i = i + Math.imul(F, K) | 0, o = o + Math.imul(F, W) | 0, n = n + Math.imul(T, H) | 0, i = i + Math.imul(T, J) | 0, i = i + Math.imul(O, H) | 0, o = o + Math.imul(O, J) | 0, n = n + Math.imul(P, X) | 0, i = i + Math.imul(P, $) | 0, i = i + Math.imul(k, X) | 0, o = o + Math.imul(k, $) | 0, n = n + Math.imul(S, Q) | 0, i = i + Math.imul(S, tt) | 0, i = i + Math.imul(I, Q) | 0, o = o + Math.imul(I, tt) | 0, n = n + Math.imul(N, rt) | 0, i = i + Math.imul(N, nt) | 0, i = i + Math.imul(A, rt) | 0, o = o + Math.imul(A, nt) | 0, n = n + Math.imul(b, ot) | 0, i = i + Math.imul(b, st) | 0, i = i + Math.imul(M, ot) | 0, o = o + Math.imul(M, st) | 0, n = n + Math.imul(v, ut) | 0, i = i + Math.imul(v, ht) | 0, i = i + Math.imul(y, ut) | 0, o = o + Math.imul(y, ht) | 0, n = n + Math.imul(m, ft) | 0, i = i + Math.imul(m, ct) | 0, i = i + Math.imul(p, ft) | 0, o = o + Math.imul(p, ct) | 0, n = n + Math.imul(f, mt) | 0, i = i + Math.imul(f, pt) | 0, i = i + Math.imul(c, mt) | 0, o = o + Math.imul(c, pt) | 0;
                        var _t = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (_t >>> 26) | 0, _t &= 67108863, n = Math.imul(L, K), i = Math.imul(L, W), i = i + Math.imul(D, K) | 0, o = Math.imul(D, W), n = n + Math.imul(U, H) | 0, i = i + Math.imul(U, J) | 0, i = i + Math.imul(F, H) | 0, o = o + Math.imul(F, J) | 0, n = n + Math.imul(T, X) | 0, i = i + Math.imul(T, $) | 0, i = i + Math.imul(O, X) | 0, o = o + Math.imul(O, $) | 0, n = n + Math.imul(P, Q) | 0, i = i + Math.imul(P, tt) | 0, i = i + Math.imul(k, Q) | 0, o = o + Math.imul(k, tt) | 0, n = n + Math.imul(S, rt) | 0, i = i + Math.imul(S, nt) | 0, i = i + Math.imul(I, rt) | 0, o = o + Math.imul(I, nt) | 0, n = n + Math.imul(N, ot) | 0, i = i + Math.imul(N, st) | 0, i = i + Math.imul(A, ot) | 0, o = o + Math.imul(A, st) | 0, n = n + Math.imul(b, ut) | 0, i = i + Math.imul(b, ht) | 0, i = i + Math.imul(M, ut) | 0, o = o + Math.imul(M, ht) | 0, n = n + Math.imul(v, ft) | 0, i = i + Math.imul(v, ct) | 0, i = i + Math.imul(y, ft) | 0, o = o + Math.imul(y, ct) | 0, n = n + Math.imul(m, mt) | 0, i = i + Math.imul(m, pt) | 0, i = i + Math.imul(p, mt) | 0, o = o + Math.imul(p, pt) | 0;
                        var St = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (St >>> 26) | 0, St &= 67108863, n = Math.imul(L, H), i = Math.imul(L, J), i = i + Math.imul(D, H) | 0, o = Math.imul(D, J), n = n + Math.imul(U, X) | 0, i = i + Math.imul(U, $) | 0, i = i + Math.imul(F, X) | 0, o = o + Math.imul(F, $) | 0, n = n + Math.imul(T, Q) | 0, i = i + Math.imul(T, tt) | 0, i = i + Math.imul(O, Q) | 0, o = o + Math.imul(O, tt) | 0, n = n + Math.imul(P, rt) | 0, i = i + Math.imul(P, nt) | 0, i = i + Math.imul(k, rt) | 0, o = o + Math.imul(k, nt) | 0, n = n + Math.imul(S, ot) | 0, i = i + Math.imul(S, st) | 0, i = i + Math.imul(I, ot) | 0, o = o + Math.imul(I, st) | 0, n = n + Math.imul(N, ut) | 0, i = i + Math.imul(N, ht) | 0, i = i + Math.imul(A, ut) | 0, o = o + Math.imul(A, ht) | 0, n = n + Math.imul(b, ft) | 0, i = i + Math.imul(b, ct) | 0, i = i + Math.imul(M, ft) | 0, o = o + Math.imul(M, ct) | 0, n = n + Math.imul(v, mt) | 0, i = i + Math.imul(v, pt) | 0, i = i + Math.imul(y, mt) | 0, o = o + Math.imul(y, pt) | 0;
                        var It = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (It >>> 26) | 0, It &= 67108863, n = Math.imul(L, X), i = Math.imul(L, $), i = i + Math.imul(D, X) | 0, o = Math.imul(D, $), n = n + Math.imul(U, Q) | 0, i = i + Math.imul(U, tt) | 0, i = i + Math.imul(F, Q) | 0, o = o + Math.imul(F, tt) | 0, n = n + Math.imul(T, rt) | 0, i = i + Math.imul(T, nt) | 0, i = i + Math.imul(O, rt) | 0, o = o + Math.imul(O, nt) | 0, n = n + Math.imul(P, ot) | 0, i = i + Math.imul(P, st) | 0, i = i + Math.imul(k, ot) | 0, o = o + Math.imul(k, st) | 0, n = n + Math.imul(S, ut) | 0, i = i + Math.imul(S, ht) | 0, i = i + Math.imul(I, ut) | 0, o = o + Math.imul(I, ht) | 0, n = n + Math.imul(N, ft) | 0, i = i + Math.imul(N, ct) | 0, i = i + Math.imul(A, ft) | 0, o = o + Math.imul(A, ct) | 0, n = n + Math.imul(b, mt) | 0, i = i + Math.imul(b, pt) | 0, i = i + Math.imul(M, mt) | 0, o = o + Math.imul(M, pt) | 0;
                        var Rt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (Rt >>> 26) | 0, Rt &= 67108863, n = Math.imul(L, Q), i = Math.imul(L, tt), i = i + Math.imul(D, Q) | 0, o = Math.imul(D, tt), n = n + Math.imul(U, rt) | 0, i = i + Math.imul(U, nt) | 0, i = i + Math.imul(F, rt) | 0, o = o + Math.imul(F, nt) | 0, n = n + Math.imul(T, ot) | 0, i = i + Math.imul(T, st) | 0, i = i + Math.imul(O, ot) | 0, o = o + Math.imul(O, st) | 0, n = n + Math.imul(P, ut) | 0, i = i + Math.imul(P, ht) | 0, i = i + Math.imul(k, ut) | 0, o = o + Math.imul(k, ht) | 0, n = n + Math.imul(S, ft) | 0, i = i + Math.imul(S, ct) | 0, i = i + Math.imul(I, ft) | 0, o = o + Math.imul(I, ct) | 0, n = n + Math.imul(N, mt) | 0, i = i + Math.imul(N, pt) | 0, i = i + Math.imul(A, mt) | 0, o = o + Math.imul(A, pt) | 0;
                        var Pt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (Pt >>> 26) | 0, Pt &= 67108863, n = Math.imul(L, rt), i = Math.imul(L, nt), i = i + Math.imul(D, rt) | 0, o = Math.imul(D, nt), n = n + Math.imul(U, ot) | 0, i = i + Math.imul(U, st) | 0, i = i + Math.imul(F, ot) | 0, o = o + Math.imul(F, st) | 0, n = n + Math.imul(T, ut) | 0, i = i + Math.imul(T, ht) | 0, i = i + Math.imul(O, ut) | 0, o = o + Math.imul(O, ht) | 0, n = n + Math.imul(P, ft) | 0, i = i + Math.imul(P, ct) | 0, i = i + Math.imul(k, ft) | 0, o = o + Math.imul(k, ct) | 0, n = n + Math.imul(S, mt) | 0, i = i + Math.imul(S, pt) | 0, i = i + Math.imul(I, mt) | 0, o = o + Math.imul(I, pt) | 0;
                        var kt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (kt >>> 26) | 0, kt &= 67108863, n = Math.imul(L, ot), i = Math.imul(L, st), i = i + Math.imul(D, ot) | 0, o = Math.imul(D, st), n = n + Math.imul(U, ut) | 0, i = i + Math.imul(U, ht) | 0, i = i + Math.imul(F, ut) | 0, o = o + Math.imul(F, ht) | 0, n = n + Math.imul(T, ft) | 0, i = i + Math.imul(T, ct) | 0, i = i + Math.imul(O, ft) | 0, o = o + Math.imul(O, ct) | 0, n = n + Math.imul(P, mt) | 0, i = i + Math.imul(P, pt) | 0, i = i + Math.imul(k, mt) | 0, o = o + Math.imul(k, pt) | 0;
                        var xt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (xt >>> 26) | 0, xt &= 67108863, n = Math.imul(L, ut), i = Math.imul(L, ht), i = i + Math.imul(D, ut) | 0, o = Math.imul(D, ht), n = n + Math.imul(U, ft) | 0, i = i + Math.imul(U, ct) | 0, i = i + Math.imul(F, ft) | 0, o = o + Math.imul(F, ct) | 0, n = n + Math.imul(T, mt) | 0, i = i + Math.imul(T, pt) | 0, i = i + Math.imul(O, mt) | 0, o = o + Math.imul(O, pt) | 0;
                        var Tt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (Tt >>> 26) | 0, Tt &= 67108863, n = Math.imul(L, ft), i = Math.imul(L, ct), i = i + Math.imul(D, ft) | 0, o = Math.imul(D, ct), n = n + Math.imul(U, mt) | 0, i = i + Math.imul(U, pt) | 0, i = i + Math.imul(F, mt) | 0, o = o + Math.imul(F, pt) | 0;
                        var Ot = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (Ot >>> 26) | 0, Ot &= 67108863, n = Math.imul(L, mt), i = Math.imul(L, pt), i = i + Math.imul(D, mt) | 0, o = Math.imul(D, pt);
                        var Ct = (h + n | 0) + ((8191 & i) << 13) | 0;
                        return h = (o + (i >>> 13) | 0) + (Ct >>> 26) | 0, Ct &= 67108863, u[0] = gt, u[1] = vt, u[2] = yt, u[3] = wt, u[4] = bt, u[5] = Mt, u[6] = Et, u[7] = Nt, u[8] = At, u[9] = _t, u[10] = St, u[11] = It, u[12] = Rt, u[13] = Pt, u[14] = kt, u[15] = xt, u[16] = Tt, u[17] = Ot, u[18] = Ct, 0 !== h && (u[19] = h, r.length++), r
                    };

                    function g(t, e, r) {
                        r.negative = e.negative ^ t.negative, r.length = t.length + e.length;
                        for (var n = 0, i = 0, o = 0; o < r.length - 1; o++) {
                            var s = i;
                            i = 0;
                            for (var a = 67108863 & n, u = Math.min(o, e.length - 1), h = Math.max(0, o - t.length + 1); h <= u; h++) {
                                var l = o - h,
                                    f = 0 | t.words[l],
                                    c = 0 | e.words[h],
                                    d = f * c,
                                    m = 67108863 & d;
                                s = s + (d / 67108864 | 0) | 0, m = m + a | 0, a = 67108863 & m, s = s + (m >>> 26) | 0, i += s >>> 26, s &= 67108863
                            }
                            r.words[o] = a, n = s, s = i
                        }
                        return 0 !== n ? r.words[o] = n : r.length--, r.strip()
                    }

                    function v(t, e, r) {
                        var n = new y;
                        return n.mulp(t, e, r)
                    }

                    function y(t, e) {
                        this.x = t, this.y = e
                    }
                    Math.imul || (p = m), o.prototype.mulTo = function(t, e) {
                        var r, n = this.length + t.length;
                        return r = 10 === this.length && 10 === t.length ? p(this, t, e) : n < 63 ? m(this, t, e) : n < 1024 ? g(this, t, e) : v(this, t, e), r
                    }, y.prototype.makeRBT = function(t) {
                        for (var e = new Array(t), r = o.prototype._countBits(t) - 1, n = 0; n < t; n++) e[n] = this.revBin(n, r, t);
                        return e
                    }, y.prototype.revBin = function(t, e, r) {
                        if (0 === t || t === r - 1) return t;
                        for (var n = 0, i = 0; i < e; i++) n |= (1 & t) << e - i - 1, t >>= 1;
                        return n
                    }, y.prototype.permute = function(t, e, r, n, i, o) {
                        for (var s = 0; s < o; s++) n[s] = e[t[s]], i[s] = r[t[s]]
                    }, y.prototype.transform = function(t, e, r, n, i, o) {
                        this.permute(o, t, e, r, n, i);
                        for (var s = 1; s < i; s <<= 1)
                            for (var a = s << 1, u = Math.cos(2 * Math.PI / a), h = Math.sin(2 * Math.PI / a), l = 0; l < i; l += a)
                                for (var f = u, c = h, d = 0; d < s; d++) {
                                    var m = r[l + d],
                                        p = n[l + d],
                                        g = r[l + d + s],
                                        v = n[l + d + s],
                                        y = f * g - c * v;
                                    v = f * v + c * g, g = y, r[l + d] = m + g, n[l + d] = p + v, r[l + d + s] = m - g, n[l + d + s] = p - v, d !== a && (y = u * f - h * c, c = u * c + h * f, f = y)
                                }
                    }, y.prototype.guessLen13b = function(t, e) {
                        var r = 1 | Math.max(e, t),
                            n = 1 & r,
                            i = 0;
                        for (r = r / 2 | 0; r; r >>>= 1) i++;
                        return 1 << i + 1 + n
                    }, y.prototype.conjugate = function(t, e, r) {
                        if (!(r <= 1))
                            for (var n = 0; n < r / 2; n++) {
                                var i = t[n];
                                t[n] = t[r - n - 1], t[r - n - 1] = i, i = e[n], e[n] = -e[r - n - 1], e[r - n - 1] = -i
                            }
                    }, y.prototype.normalize13b = function(t, e) {
                        for (var r = 0, n = 0; n < e / 2; n++) {
                            var i = 8192 * Math.round(t[2 * n + 1] / e) + Math.round(t[2 * n] / e) + r;
                            t[n] = 67108863 & i, r = i < 67108864 ? 0 : i / 67108864 | 0
                        }
                        return t
                    }, y.prototype.convert13b = function(t, e, r, i) {
                        for (var o = 0, s = 0; s < e; s++) o += 0 | t[s], r[2 * s] = 8191 & o, o >>>= 13, r[2 * s + 1] = 8191 & o, o >>>= 13;
                        for (s = 2 * e; s < i; ++s) r[s] = 0;
                        n(0 === o), n(0 === (-8192 & o))
                    }, y.prototype.stub = function(t) {
                        for (var e = new Array(t), r = 0; r < t; r++) e[r] = 0;
                        return e
                    }, y.prototype.mulp = function(t, e, r) {
                        var n = 2 * this.guessLen13b(t.length, e.length),
                            i = this.makeRBT(n),
                            o = this.stub(n),
                            s = new Array(n),
                            a = new Array(n),
                            u = new Array(n),
                            h = new Array(n),
                            l = new Array(n),
                            f = new Array(n),
                            c = r.words;
                        c.length = n, this.convert13b(t.words, t.length, s, n), this.convert13b(e.words, e.length, h, n), this.transform(s, o, a, u, n, i), this.transform(h, o, l, f, n, i);
                        for (var d = 0; d < n; d++) {
                            var m = a[d] * l[d] - u[d] * f[d];
                            u[d] = a[d] * f[d] + u[d] * l[d], a[d] = m
                        }
                        return this.conjugate(a, u, n), this.transform(a, u, c, o, n, i), this.conjugate(c, o, n), this.normalize13b(c, n), r.negative = t.negative ^ e.negative, r.length = t.length + e.length, r.strip()
                    }, o.prototype.mul = function(t) {
                        var e = new o(null);
                        return e.words = new Array(this.length + t.length), this.mulTo(t, e)
                    }, o.prototype.mulf = function(t) {
                        var e = new o(null);
                        return e.words = new Array(this.length + t.length), v(this, t, e)
                    }, o.prototype.imul = function(t) {
                        return this.clone().mulTo(t, this)
                    }, o.prototype.imuln = function(t) {
                        n("number" === typeof t), n(t < 67108864);
                        for (var e = 0, r = 0; r < this.length; r++) {
                            var i = (0 | this.words[r]) * t,
                                o = (67108863 & i) + (67108863 & e);
                            e >>= 26, e += i / 67108864 | 0, e += o >>> 26, this.words[r] = 67108863 & o
                        }
                        return 0 !== e && (this.words[r] = e, this.length++), this
                    }, o.prototype.muln = function(t) {
                        return this.clone().imuln(t)
                    }, o.prototype.sqr = function() {
                        return this.mul(this)
                    }, o.prototype.isqr = function() {
                        return this.imul(this.clone())
                    }, o.prototype.pow = function(t) {
                        var e = d(t);
                        if (0 === e.length) return new o(1);
                        for (var r = this, n = 0; n < e.length; n++, r = r.sqr())
                            if (0 !== e[n]) break;
                        if (++n < e.length)
                            for (var i = r.sqr(); n < e.length; n++, i = i.sqr()) 0 !== e[n] && (r = r.mul(i));
                        return r
                    }, o.prototype.iushln = function(t) {
                        n("number" === typeof t && t >= 0);
                        var e, r = t % 26,
                            i = (t - r) / 26,
                            o = 67108863 >>> 26 - r << 26 - r;
                        if (0 !== r) {
                            var s = 0;
                            for (e = 0; e < this.length; e++) {
                                var a = this.words[e] & o,
                                    u = (0 | this.words[e]) - a << r;
                                this.words[e] = u | s, s = a >>> 26 - r
                            }
                            s && (this.words[e] = s, this.length++)
                        }
                        if (0 !== i) {
                            for (e = this.length - 1; e >= 0; e--) this.words[e + i] = this.words[e];
                            for (e = 0; e < i; e++) this.words[e] = 0;
                            this.length += i
                        }
                        return this.strip()
                    }, o.prototype.ishln = function(t) {
                        return n(0 === this.negative), this.iushln(t)
                    }, o.prototype.iushrn = function(t, e, r) {
                        var i;
                        n("number" === typeof t && t >= 0), i = e ? (e - e % 26) / 26 : 0;
                        var o = t % 26,
                            s = Math.min((t - o) / 26, this.length),
                            a = 67108863 ^ 67108863 >>> o << o,
                            u = r;
                        if (i -= s, i = Math.max(0, i), u) {
                            for (var h = 0; h < s; h++) u.words[h] = this.words[h];
                            u.length = s
                        }
                        if (0 === s);
                        else if (this.length > s)
                            for (this.length -= s, h = 0; h < this.length; h++) this.words[h] = this.words[h + s];
                        else this.words[0] = 0, this.length = 1;
                        var l = 0;
                        for (h = this.length - 1; h >= 0 && (0 !== l || h >= i); h--) {
                            var f = 0 | this.words[h];
                            this.words[h] = l << 26 - o | f >>> o, l = f & a
                        }
                        return u && 0 !== l && (u.words[u.length++] = l), 0 === this.length && (this.words[0] = 0, this.length = 1), this.strip()
                    }, o.prototype.ishrn = function(t, e, r) {
                        return n(0 === this.negative), this.iushrn(t, e, r)
                    }, o.prototype.shln = function(t) {
                        return this.clone().ishln(t)
                    }, o.prototype.ushln = function(t) {
                        return this.clone().iushln(t)
                    }, o.prototype.shrn = function(t) {
                        return this.clone().ishrn(t)
                    }, o.prototype.ushrn = function(t) {
                        return this.clone().iushrn(t)
                    }, o.prototype.testn = function(t) {
                        n("number" === typeof t && t >= 0);
                        var e = t % 26,
                            r = (t - e) / 26,
                            i = 1 << e;
                        if (this.length <= r) return !1;
                        var o = this.words[r];
                        return !!(o & i)
                    }, o.prototype.imaskn = function(t) {
                        n("number" === typeof t && t >= 0);
                        var e = t % 26,
                            r = (t - e) / 26;
                        if (n(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r) return this;
                        if (0 !== e && r++, this.length = Math.min(r, this.length), 0 !== e) {
                            var i = 67108863 ^ 67108863 >>> e << e;
                            this.words[this.length - 1] &= i
                        }
                        return this.strip()
                    }, o.prototype.maskn = function(t) {
                        return this.clone().imaskn(t)
                    }, o.prototype.iaddn = function(t) {
                        return n("number" === typeof t), n(t < 67108864), t < 0 ? this.isubn(-t) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) < t ? (this.words[0] = t - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(t), this.negative = 1, this) : this._iaddn(t)
                    }, o.prototype._iaddn = function(t) {
                        this.words[0] += t;
                        for (var e = 0; e < this.length && this.words[e] >= 67108864; e++) this.words[e] -= 67108864, e === this.length - 1 ? this.words[e + 1] = 1 : this.words[e + 1]++;
                        return this.length = Math.max(this.length, e + 1), this
                    }, o.prototype.isubn = function(t) {
                        if (n("number" === typeof t), n(t < 67108864), t < 0) return this.iaddn(-t);
                        if (0 !== this.negative) return this.negative = 0, this.iaddn(t), this.negative = 1, this;
                        if (this.words[0] -= t, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
                        else
                            for (var e = 0; e < this.length && this.words[e] < 0; e++) this.words[e] += 67108864, this.words[e + 1] -= 1;
                        return this.strip()
                    }, o.prototype.addn = function(t) {
                        return this.clone().iaddn(t)
                    }, o.prototype.subn = function(t) {
                        return this.clone().isubn(t)
                    }, o.prototype.iabs = function() {
                        return this.negative = 0, this
                    }, o.prototype.abs = function() {
                        return this.clone().iabs()
                    }, o.prototype._ishlnsubmul = function(t, e, r) {
                        var i, o, s = t.length + r;
                        this._expand(s);
                        var a = 0;
                        for (i = 0; i < t.length; i++) {
                            o = (0 | this.words[i + r]) + a;
                            var u = (0 | t.words[i]) * e;
                            o -= 67108863 & u, a = (o >> 26) - (u / 67108864 | 0), this.words[i + r] = 67108863 & o
                        }
                        for (; i < this.length - r; i++) o = (0 | this.words[i + r]) + a, a = o >> 26, this.words[i + r] = 67108863 & o;
                        if (0 === a) return this.strip();
                        for (n(-1 === a), a = 0, i = 0; i < this.length; i++) o = -(0 | this.words[i]) + a, a = o >> 26, this.words[i] = 67108863 & o;
                        return this.negative = 1, this.strip()
                    }, o.prototype._wordDiv = function(t, e) {
                        var r = this.length - t.length,
                            n = this.clone(),
                            i = t,
                            s = 0 | i.words[i.length - 1],
                            a = this._countBits(s);
                        r = 26 - a, 0 !== r && (i = i.ushln(r), n.iushln(r), s = 0 | i.words[i.length - 1]);
                        var u, h = n.length - i.length;
                        if ("mod" !== e) {
                            u = new o(null), u.length = h + 1, u.words = new Array(u.length);
                            for (var l = 0; l < u.length; l++) u.words[l] = 0
                        }
                        var f = n.clone()._ishlnsubmul(i, 1, h);
                        0 === f.negative && (n = f, u && (u.words[h] = 1));
                        for (var c = h - 1; c >= 0; c--) {
                            var d = 67108864 * (0 | n.words[i.length + c]) + (0 | n.words[i.length + c - 1]);
                            d = Math.min(d / s | 0, 67108863), n._ishlnsubmul(i, d, c);
                            while (0 !== n.negative) d--, n.negative = 0, n._ishlnsubmul(i, 1, c), n.isZero() || (n.negative ^= 1);
                            u && (u.words[c] = d)
                        }
                        return u && u.strip(), n.strip(), "div" !== e && 0 !== r && n.iushrn(r), {
                            div: u || null,
                            mod: n
                        }
                    }, o.prototype.divmod = function(t, e, r) {
                        return n(!t.isZero()), this.isZero() ? {
                            div: new o(0),
                            mod: new o(0)
                        } : 0 !== this.negative && 0 === t.negative ? (a = this.neg().divmod(t, e), "mod" !== e && (i = a.div.neg()), "div" !== e && (s = a.mod.neg(), r && 0 !== s.negative && s.iadd(t)), {
                            div: i,
                            mod: s
                        }) : 0 === this.negative && 0 !== t.negative ? (a = this.divmod(t.neg(), e), "mod" !== e && (i = a.div.neg()), {
                            div: i,
                            mod: a.mod
                        }) : 0 !== (this.negative & t.negative) ? (a = this.neg().divmod(t.neg(), e), "div" !== e && (s = a.mod.neg(), r && 0 !== s.negative && s.isub(t)), {
                            div: a.div,
                            mod: s
                        }) : t.length > this.length || this.cmp(t) < 0 ? {
                            div: new o(0),
                            mod: this
                        } : 1 === t.length ? "div" === e ? {
                            div: this.divn(t.words[0]),
                            mod: null
                        } : "mod" === e ? {
                            div: null,
                            mod: new o(this.modn(t.words[0]))
                        } : {
                            div: this.divn(t.words[0]),
                            mod: new o(this.modn(t.words[0]))
                        } : this._wordDiv(t, e);
                        var i, s, a
                    }, o.prototype.div = function(t) {
                        return this.divmod(t, "div", !1).div
                    }, o.prototype.mod = function(t) {
                        return this.divmod(t, "mod", !1).mod
                    }, o.prototype.umod = function(t) {
                        return this.divmod(t, "mod", !0).mod
                    }, o.prototype.divRound = function(t) {
                        var e = this.divmod(t);
                        if (e.mod.isZero()) return e.div;
                        var r = 0 !== e.div.negative ? e.mod.isub(t) : e.mod,
                            n = t.ushrn(1),
                            i = t.andln(1),
                            o = r.cmp(n);
                        return o < 0 || 1 === i && 0 === o ? e.div : 0 !== e.div.negative ? e.div.isubn(1) : e.div.iaddn(1)
                    }, o.prototype.modn = function(t) {
                        n(t <= 67108863);
                        for (var e = (1 << 26) % t, r = 0, i = this.length - 1; i >= 0; i--) r = (e * r + (0 | this.words[i])) % t;
                        return r
                    }, o.prototype.idivn = function(t) {
                        n(t <= 67108863);
                        for (var e = 0, r = this.length - 1; r >= 0; r--) {
                            var i = (0 | this.words[r]) + 67108864 * e;
                            this.words[r] = i / t | 0, e = i % t
                        }
                        return this.strip()
                    }, o.prototype.divn = function(t) {
                        return this.clone().idivn(t)
                    }, o.prototype.egcd = function(t) {
                        n(0 === t.negative), n(!t.isZero());
                        var e = this,
                            r = t.clone();
                        e = 0 !== e.negative ? e.umod(t) : e.clone();
                        var i = new o(1),
                            s = new o(0),
                            a = new o(0),
                            u = new o(1),
                            h = 0;
                        while (e.isEven() && r.isEven()) e.iushrn(1), r.iushrn(1), ++h;
                        var l = r.clone(),
                            f = e.clone();
                        while (!e.isZero()) {
                            for (var c = 0, d = 1; 0 === (e.words[0] & d) && c < 26; ++c, d <<= 1);
                            if (c > 0) {
                                e.iushrn(c);
                                while (c-- > 0)(i.isOdd() || s.isOdd()) && (i.iadd(l), s.isub(f)), i.iushrn(1), s.iushrn(1)
                            }
                            for (var m = 0, p = 1; 0 === (r.words[0] & p) && m < 26; ++m, p <<= 1);
                            if (m > 0) {
                                r.iushrn(m);
                                while (m-- > 0)(a.isOdd() || u.isOdd()) && (a.iadd(l), u.isub(f)), a.iushrn(1), u.iushrn(1)
                            }
                            e.cmp(r) >= 0 ? (e.isub(r), i.isub(a), s.isub(u)) : (r.isub(e), a.isub(i), u.isub(s))
                        }
                        return {
                            a: a,
                            b: u,
                            gcd: r.iushln(h)
                        }
                    }, o.prototype._invmp = function(t) {
                        n(0 === t.negative), n(!t.isZero());
                        var e = this,
                            r = t.clone();
                        e = 0 !== e.negative ? e.umod(t) : e.clone();
                        var i, s = new o(1),
                            a = new o(0),
                            u = r.clone();
                        while (e.cmpn(1) > 0 && r.cmpn(1) > 0) {
                            for (var h = 0, l = 1; 0 === (e.words[0] & l) && h < 26; ++h, l <<= 1);
                            if (h > 0) {
                                e.iushrn(h);
                                while (h-- > 0) s.isOdd() && s.iadd(u), s.iushrn(1)
                            }
                            for (var f = 0, c = 1; 0 === (r.words[0] & c) && f < 26; ++f, c <<= 1);
                            if (f > 0) {
                                r.iushrn(f);
                                while (f-- > 0) a.isOdd() && a.iadd(u), a.iushrn(1)
                            }
                            e.cmp(r) >= 0 ? (e.isub(r), s.isub(a)) : (r.isub(e), a.isub(s))
                        }
                        return i = 0 === e.cmpn(1) ? s : a, i.cmpn(0) < 0 && i.iadd(t), i
                    }, o.prototype.gcd = function(t) {
                        if (this.isZero()) return t.abs();
                        if (t.isZero()) return this.abs();
                        var e = this.clone(),
                            r = t.clone();
                        e.negative = 0, r.negative = 0;
                        for (var n = 0; e.isEven() && r.isEven(); n++) e.iushrn(1), r.iushrn(1);
                        do {
                            while (e.isEven()) e.iushrn(1);
                            while (r.isEven()) r.iushrn(1);
                            var i = e.cmp(r);
                            if (i < 0) {
                                var o = e;
                                e = r, r = o
                            } else if (0 === i || 0 === r.cmpn(1)) break;
                            e.isub(r)
                        } while (1);
                        return r.iushln(n)
                    }, o.prototype.invm = function(t) {
                        return this.egcd(t).a.umod(t)
                    }, o.prototype.isEven = function() {
                        return 0 === (1 & this.words[0])
                    }, o.prototype.isOdd = function() {
                        return 1 === (1 & this.words[0])
                    }, o.prototype.andln = function(t) {
                        return this.words[0] & t
                    }, o.prototype.bincn = function(t) {
                        n("number" === typeof t);
                        var e = t % 26,
                            r = (t - e) / 26,
                            i = 1 << e;
                        if (this.length <= r) return this._expand(r + 1), this.words[r] |= i, this;
                        for (var o = i, s = r; 0 !== o && s < this.length; s++) {
                            var a = 0 | this.words[s];
                            a += o, o = a >>> 26, a &= 67108863, this.words[s] = a
                        }
                        return 0 !== o && (this.words[s] = o, this.length++), this
                    }, o.prototype.isZero = function() {
                        return 1 === this.length && 0 === this.words[0]
                    }, o.prototype.cmpn = function(t) {
                        var e, r = t < 0;
                        if (0 !== this.negative && !r) return -1;
                        if (0 === this.negative && r) return 1;
                        if (this.strip(), this.length > 1) e = 1;
                        else {
                            r && (t = -t), n(t <= 67108863, "Number is too big");
                            var i = 0 | this.words[0];
                            e = i === t ? 0 : i < t ? -1 : 1
                        }
                        return 0 !== this.negative ? 0 | -e : e
                    }, o.prototype.cmp = function(t) {
                        if (0 !== this.negative && 0 === t.negative) return -1;
                        if (0 === this.negative && 0 !== t.negative) return 1;
                        var e = this.ucmp(t);
                        return 0 !== this.negative ? 0 | -e : e
                    }, o.prototype.ucmp = function(t) {
                        if (this.length > t.length) return 1;
                        if (this.length < t.length) return -1;
                        for (var e = 0, r = this.length - 1; r >= 0; r--) {
                            var n = 0 | this.words[r],
                                i = 0 | t.words[r];
                            if (n !== i) {
                                n < i ? e = -1 : n > i && (e = 1);
                                break
                            }
                        }
                        return e
                    }, o.prototype.gtn = function(t) {
                        return 1 === this.cmpn(t)
                    }, o.prototype.gt = function(t) {
                        return 1 === this.cmp(t)
                    }, o.prototype.gten = function(t) {
                        return this.cmpn(t) >= 0
                    }, o.prototype.gte = function(t) {
                        return this.cmp(t) >= 0
                    }, o.prototype.ltn = function(t) {
                        return -1 === this.cmpn(t)
                    }, o.prototype.lt = function(t) {
                        return -1 === this.cmp(t)
                    }, o.prototype.lten = function(t) {
                        return this.cmpn(t) <= 0
                    }, o.prototype.lte = function(t) {
                        return this.cmp(t) <= 0
                    }, o.prototype.eqn = function(t) {
                        return 0 === this.cmpn(t)
                    }, o.prototype.eq = function(t) {
                        return 0 === this.cmp(t)
                    }, o.red = function(t) {
                        return new _(t)
                    }, o.prototype.toRed = function(t) {
                        return n(!this.red, "Already a number in reduction context"), n(0 === this.negative, "red works only with positives"), t.convertTo(this)._forceRed(t)
                    }, o.prototype.fromRed = function() {
                        return n(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this)
                    }, o.prototype._forceRed = function(t) {
                        return this.red = t, this
                    }, o.prototype.forceRed = function(t) {
                        return n(!this.red, "Already a number in reduction context"), this._forceRed(t)
                    }, o.prototype.redAdd = function(t) {
                        return n(this.red, "redAdd works only with red numbers"), this.red.add(this, t)
                    }, o.prototype.redIAdd = function(t) {
                        return n(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t)
                    }, o.prototype.redSub = function(t) {
                        return n(this.red, "redSub works only with red numbers"), this.red.sub(this, t)
                    }, o.prototype.redISub = function(t) {
                        return n(this.red, "redISub works only with red numbers"), this.red.isub(this, t)
                    }, o.prototype.redShl = function(t) {
                        return n(this.red, "redShl works only with red numbers"), this.red.shl(this, t)
                    }, o.prototype.redMul = function(t) {
                        return n(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.mul(this, t)
                    }, o.prototype.redIMul = function(t) {
                        return n(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.imul(this, t)
                    }, o.prototype.redSqr = function() {
                        return n(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this)
                    }, o.prototype.redISqr = function() {
                        return n(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this)
                    }, o.prototype.redSqrt = function() {
                        return n(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this)
                    }, o.prototype.redInvm = function() {
                        return n(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this)
                    }, o.prototype.redNeg = function() {
                        return n(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this)
                    }, o.prototype.redPow = function(t) {
                        return n(this.red && !t.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t)
                    };
                    var w = {
                        k256: null,
                        p224: null,
                        p192: null,
                        p25519: null
                    };

                    function b(t, e) {
                        this.name = t, this.p = new o(e, 16), this.n = this.p.bitLength(), this.k = new o(1).iushln(this.n).isub(this.p), this.tmp = this._tmp()
                    }

                    function M() {
                        b.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")
                    }

                    function E() {
                        b.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")
                    }

                    function N() {
                        b.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")
                    }

                    function A() {
                        b.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")
                    }

                    function _(t) {
                        if ("string" === typeof t) {
                            var e = o._prime(t);
                            this.m = e.p, this.prime = e
                        } else n(t.gtn(1), "modulus must be greater than 1"), this.m = t, this.prime = null
                    }

                    function S(t) {
                        _.call(this, t), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new o(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv)
                    }
                    b.prototype._tmp = function() {
                        var t = new o(null);
                        return t.words = new Array(Math.ceil(this.n / 13)), t
                    }, b.prototype.ireduce = function(t) {
                        var e, r = t;
                        do {
                            this.split(r, this.tmp), r = this.imulK(r), r = r.iadd(this.tmp), e = r.bitLength()
                        } while (e > this.n);
                        var n = e < this.n ? -1 : r.ucmp(this.p);
                        return 0 === n ? (r.words[0] = 0, r.length = 1) : n > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r
                    }, b.prototype.split = function(t, e) {
                        t.iushrn(this.n, 0, e)
                    }, b.prototype.imulK = function(t) {
                        return t.imul(this.k)
                    }, i(M, b), M.prototype.split = function(t, e) {
                        for (var r = 4194303, n = Math.min(t.length, 9), i = 0; i < n; i++) e.words[i] = t.words[i];
                        if (e.length = n, t.length <= 9) return t.words[0] = 0, void(t.length = 1);
                        var o = t.words[9];
                        for (e.words[e.length++] = o & r, i = 10; i < t.length; i++) {
                            var s = 0 | t.words[i];
                            t.words[i - 10] = (s & r) << 4 | o >>> 22, o = s
                        }
                        o >>>= 22, t.words[i - 10] = o, 0 === o && t.length > 10 ? t.length -= 10 : t.length -= 9
                    }, M.prototype.imulK = function(t) {
                        t.words[t.length] = 0, t.words[t.length + 1] = 0, t.length += 2;
                        for (var e = 0, r = 0; r < t.length; r++) {
                            var n = 0 | t.words[r];
                            e += 977 * n, t.words[r] = 67108863 & e, e = 64 * n + (e / 67108864 | 0)
                        }
                        return 0 === t.words[t.length - 1] && (t.length--, 0 === t.words[t.length - 1] && t.length--), t
                    }, i(E, b), i(N, b), i(A, b), A.prototype.imulK = function(t) {
                        for (var e = 0, r = 0; r < t.length; r++) {
                            var n = 19 * (0 | t.words[r]) + e,
                                i = 67108863 & n;
                            n >>>= 26, t.words[r] = i, e = n
                        }
                        return 0 !== e && (t.words[t.length++] = e), t
                    }, o._prime = function(t) {
                        if (w[t]) return w[t];
                        var e;
                        if ("k256" === t) e = new M;
                        else if ("p224" === t) e = new E;
                        else if ("p192" === t) e = new N;
                        else {
                            if ("p25519" !== t) throw new Error("Unknown prime " + t);
                            e = new A
                        }
                        return w[t] = e, e
                    }, _.prototype._verify1 = function(t) {
                        n(0 === t.negative, "red works only with positives"), n(t.red, "red works only with red numbers")
                    }, _.prototype._verify2 = function(t, e) {
                        n(0 === (t.negative | e.negative), "red works only with positives"), n(t.red && t.red === e.red, "red works only with red numbers")
                    }, _.prototype.imod = function(t) {
                        return this.prime ? this.prime.ireduce(t)._forceRed(this) : t.umod(this.m)._forceRed(this)
                    }, _.prototype.neg = function(t) {
                        return t.isZero() ? t.clone() : this.m.sub(t)._forceRed(this)
                    }, _.prototype.add = function(t, e) {
                        this._verify2(t, e);
                        var r = t.add(e);
                        return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this)
                    }, _.prototype.iadd = function(t, e) {
                        this._verify2(t, e);
                        var r = t.iadd(e);
                        return r.cmp(this.m) >= 0 && r.isub(this.m), r
                    }, _.prototype.sub = function(t, e) {
                        this._verify2(t, e);
                        var r = t.sub(e);
                        return r.cmpn(0) < 0 && r.iadd(this.m), r._forceRed(this)
                    }, _.prototype.isub = function(t, e) {
                        this._verify2(t, e);
                        var r = t.isub(e);
                        return r.cmpn(0) < 0 && r.iadd(this.m), r
                    }, _.prototype.shl = function(t, e) {
                        return this._verify1(t), this.imod(t.ushln(e))
                    }, _.prototype.imul = function(t, e) {
                        return this._verify2(t, e), this.imod(t.imul(e))
                    }, _.prototype.mul = function(t, e) {
                        return this._verify2(t, e), this.imod(t.mul(e))
                    }, _.prototype.isqr = function(t) {
                        return this.imul(t, t.clone())
                    }, _.prototype.sqr = function(t) {
                        return this.mul(t, t)
                    }, _.prototype.sqrt = function(t) {
                        if (t.isZero()) return t.clone();
                        var e = this.m.andln(3);
                        if (n(e % 2 === 1), 3 === e) {
                            var r = this.m.add(new o(1)).iushrn(2);
                            return this.pow(t, r)
                        }
                        var i = this.m.subn(1),
                            s = 0;
                        while (!i.isZero() && 0 === i.andln(1)) s++, i.iushrn(1);
                        n(!i.isZero());
                        var a = new o(1).toRed(this),
                            u = a.redNeg(),
                            h = this.m.subn(1).iushrn(1),
                            l = this.m.bitLength();
                        l = new o(2 * l * l).toRed(this);
                        while (0 !== this.pow(l, h).cmp(u)) l.redIAdd(u);
                        var f = this.pow(l, i),
                            c = this.pow(t, i.addn(1).iushrn(1)),
                            d = this.pow(t, i),
                            m = s;
                        while (0 !== d.cmp(a)) {
                            for (var p = d, g = 0; 0 !== p.cmp(a); g++) p = p.redSqr();
                            n(g < m);
                            var v = this.pow(f, new o(1).iushln(m - g - 1));
                            c = c.redMul(v), f = v.redSqr(), d = d.redMul(f), m = g
                        }
                        return c
                    }, _.prototype.invm = function(t) {
                        var e = t._invmp(this.m);
                        return 0 !== e.negative ? (e.negative = 0, this.imod(e).redNeg()) : this.imod(e)
                    }, _.prototype.pow = function(t, e) {
                        if (e.isZero()) return new o(1).toRed(this);
                        if (0 === e.cmpn(1)) return t.clone();
                        var r = 4,
                            n = new Array(1 << r);
                        n[0] = new o(1).toRed(this), n[1] = t;
                        for (var i = 2; i < n.length; i++) n[i] = this.mul(n[i - 1], t);
                        var s = n[0],
                            a = 0,
                            u = 0,
                            h = e.bitLength() % 26;
                        for (0 === h && (h = 26), i = e.length - 1; i >= 0; i--) {
                            for (var l = e.words[i], f = h - 1; f >= 0; f--) {
                                var c = l >> f & 1;
                                s !== n[0] && (s = this.sqr(s)), 0 !== c || 0 !== a ? (a <<= 1, a |= c, u++, (u === r || 0 === i && 0 === f) && (s = this.mul(s, n[a]), u = 0, a = 0)) : u = 0
                            }
                            h = 26
                        }
                        return s
                    }, _.prototype.convertTo = function(t) {
                        var e = t.umod(this.m);
                        return e === t ? e.clone() : e
                    }, _.prototype.convertFrom = function(t) {
                        var e = t.clone();
                        return e.red = null, e
                    }, o.mont = function(t) {
                        return new S(t)
                    }, i(S, _), S.prototype.convertTo = function(t) {
                        return this.imod(t.ushln(this.shift))
                    }, S.prototype.convertFrom = function(t) {
                        var e = this.imod(t.mul(this.rinv));
                        return e.red = null, e
                    }, S.prototype.imul = function(t, e) {
                        if (t.isZero() || e.isZero()) return t.words[0] = 0, t.length = 1, t;
                        var r = t.imul(e),
                            n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                            i = r.isub(n).iushrn(this.shift),
                            o = i;
                        return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this)
                    }, S.prototype.mul = function(t, e) {
                        if (t.isZero() || e.isZero()) return new o(0)._forceRed(this);
                        var r = t.mul(e),
                            n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                            i = r.isub(n).iushrn(this.shift),
                            s = i;
                        return i.cmp(this.m) >= 0 ? s = i.isub(this.m) : i.cmpn(0) < 0 && (s = i.iadd(this.m)), s._forceRed(this)
                    }, S.prototype.invm = function(t) {
                        var e = this.imod(t._invmp(this.m).mul(this.r2));
                        return e._forceRed(this)
                    }
                })(t, this)
            }).call(this, r("62e4")(t))
        },
        5273: function(t, e, r) {
            "use strict";
            r.d(e, "a", (function() {
                return a
            })), r.d(e, "c", (function() {
                return u
            })), r.d(e, "b", (function() {
                return c
            })), r.d(e, "f", (function() {
                return m
            })), r.d(e, "d", (function() {
                return g
            })), r.d(e, "e", (function() {
                return v
            })), r.d(e, "h", (function() {
                return y
            })), r.d(e, "g", (function() {
                return w
            }));
            var n = r("549e"),
                i = r("ffb2");
            const o = "strings/5.5.0",
                s = new i["a"](o);
            var a, u;

            function h(t, e, r, n, i) {
                return s.throwArgumentError(`invalid codepoint at offset ${e}; ${t}`, "bytes", r)
            }

            function l(t, e, r, n, i) {
                if (t === u.BAD_PREFIX || t === u.UNEXPECTED_CONTINUE) {
                    let t = 0;
                    for (let n = e + 1; n < r.length; n++) {
                        if (r[n] >> 6 !== 2) break;
                        t++
                    }
                    return t
                }
                return t === u.OVERRUN ? r.length - e - 1 : 0
            }

            function f(t, e, r, n, i) {
                return t === u.OVERLONG ? (n.push(i), 0) : (n.push(65533), l(t, e, r, n, i))
            }(function(t) {
                t["current"] = "", t["NFC"] = "NFC", t["NFD"] = "NFD", t["NFKC"] = "NFKC", t["NFKD"] = "NFKD"
            })(a || (a = {})),
            function(t) {
                t["UNEXPECTED_CONTINUE"] = "unexpected continuation byte", t["BAD_PREFIX"] = "bad codepoint prefix", t["OVERRUN"] = "string overrun", t["MISSING_CONTINUE"] = "missing continuation byte", t["OUT_OF_RANGE"] = "out of UTF-8 range", t["UTF16_SURROGATE"] = "UTF-16 surrogate", t["OVERLONG"] = "overlong representation"
            }(u || (u = {}));
            const c = Object.freeze({
                error: h,
                ignore: l,
                replace: f
            });

            function d(t, e) {
                null == e && (e = c.error), t = Object(n["a"])(t);
                const r = [];
                let i = 0;
                while (i < t.length) {
                    const n = t[i++];
                    if (n >> 7 === 0) {
                        r.push(n);
                        continue
                    }
                    let o = null,
                        s = null;
                    if (192 === (224 & n)) o = 1, s = 127;
                    else if (224 === (240 & n)) o = 2, s = 2047;
                    else {
                        if (240 !== (248 & n)) {
                            i += e(128 === (192 & n) ? u.UNEXPECTED_CONTINUE : u.BAD_PREFIX, i - 1, t, r);
                            continue
                        }
                        o = 3, s = 65535
                    }
                    if (i - 1 + o >= t.length) {
                        i += e(u.OVERRUN, i - 1, t, r);
                        continue
                    }
                    let a = n & (1 << 8 - o - 1) - 1;
                    for (let h = 0; h < o; h++) {
                        let n = t[i];
                        if (128 != (192 & n)) {
                            i += e(u.MISSING_CONTINUE, i, t, r), a = null;
                            break
                        }
                        a = a << 6 | 63 & n, i++
                    }
                    null !== a && (a > 1114111 ? i += e(u.OUT_OF_RANGE, i - 1 - o, t, r, a) : a >= 55296 && a <= 57343 ? i += e(u.UTF16_SURROGATE, i - 1 - o, t, r, a) : a <= s ? i += e(u.OVERLONG, i - 1 - o, t, r, a) : r.push(a))
                }
                return r
            }

            function m(t, e = a.current) {
                e != a.current && (s.checkNormalize(), t = t.normalize(e));
                let r = [];
                for (let n = 0; n < t.length; n++) {
                    const e = t.charCodeAt(n);
                    if (e < 128) r.push(e);
                    else if (e < 2048) r.push(e >> 6 | 192), r.push(63 & e | 128);
                    else if (55296 == (64512 & e)) {
                        n++;
                        const i = t.charCodeAt(n);
                        if (n >= t.length || 56320 !== (64512 & i)) throw new Error("invalid utf-8 string");
                        const o = 65536 + ((1023 & e) << 10) + (1023 & i);
                        r.push(o >> 18 | 240), r.push(o >> 12 & 63 | 128), r.push(o >> 6 & 63 | 128), r.push(63 & o | 128)
                    } else r.push(e >> 12 | 224), r.push(e >> 6 & 63 | 128), r.push(63 & e | 128)
                }
                return Object(n["a"])(r)
            }

            function p(t) {
                const e = "0000" + t.toString(16);
                return "\\u" + e.substring(e.length - 4)
            }

            function g(t, e) {
                return '"' + d(t, e).map(t => {
                    if (t < 256) {
                        switch (t) {
                            case 8:
                                return "\\b";
                            case 9:
                                return "\\t";
                            case 10:
                                return "\\n";
                            case 13:
                                return "\\r";
                            case 34:
                                return '\\"';
                            case 92:
                                return "\\\\"
                        }
                        if (t >= 32 && t < 127) return String.fromCharCode(t)
                    }
                    return t <= 65535 ? p(t) : (t -= 65536, p(55296 + (t >> 10 & 1023)) + p(56320 + (1023 & t)))
                }).join("") + '"'
            }

            function v(t) {
                return t.map(t => t <= 65535 ? String.fromCharCode(t) : (t -= 65536, String.fromCharCode(55296 + (t >> 10 & 1023), 56320 + (1023 & t)))).join("")
            }

            function y(t, e) {
                return v(d(t, e))
            }

            function w(t, e = a.current) {
                return d(m(t, e))
            }
        },
        5553: function(t, e, r) {
            "use strict";

            function n(t) {
                t = t.slice();
                for (let e = t.length - 1; e > 0; e--) {
                    const r = Math.floor(Math.random() * (e + 1)),
                        n = t[e];
                    t[e] = t[r], t[r] = n
                }
                return t
            }
            r.d(e, "a", (function() {
                return n
            }))
        },
        5605: function(t, e, r) {
            "use strict";
            r.d(e, "a", (function() {
                return h
            }));
            var n = r("bd9b");
            const i = "AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo";
            let o = null;

            function s(t) {
                if (null == o && (o = i.replace(/([A-Z])/g, " $1").toLowerCase().substring(1).split(" "), "0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60" !== n["a"].check(t))) throw o = null, new Error("BIP39 Wordlist for en (English) FAILED")
            }
            class a extends n["a"] {
                constructor() {
                    super("en")
                }
                getWord(t) {
                    return s(this), o[t]
                }
                getWordIndex(t) {
                    return s(this), o.indexOf(t)
                }
            }
            const u = new a;
            n["a"].register(u);
            const h = {
                en: u
            }
        },
        "5ac3": function(t, e, r) {
            "use strict";
            r.d(e, "a", (function() {
                return m
            })), r.d(e, "c", (function() {
                return w
            })), r.d(e, "e", (function() {
                return b
            })), r.d(e, "b", (function() {
                return N
            })), r.d(e, "f", (function() {
                return R
            })), r.d(e, "d", (function() {
                return O
            }));
            var n = r("3b1c"),
                i = r("e36d"),
                o = r("549e"),
                s = r("9d56"),
                a = r("6f5a"),
                u = r("9bda"),
                h = r("e165"),
                l = r("ae1c"),
                f = r("ffb2");
            const c = "transactions/5.5.0",
                d = new f["a"](c);
            var m;

            function p(t) {
                return "0x" === t ? null : Object(n["a"])(t)
            }

            function g(t) {
                return "0x" === t ? s["d"] : i["a"].from(t)
            }(function(t) {
                t[t["legacy"] = 0] = "legacy", t[t["eip2930"] = 1] = "eip2930", t[t["eip1559"] = 2] = "eip1559"
            })(m || (m = {}));
            const v = [{
                    name: "nonce",
                    maxLength: 32,
                    numeric: !0
                }, {
                    name: "gasPrice",
                    maxLength: 32,
                    numeric: !0
                }, {
                    name: "gasLimit",
                    maxLength: 32,
                    numeric: !0
                }, {
                    name: "to",
                    length: 20
                }, {
                    name: "value",
                    maxLength: 32,
                    numeric: !0
                }, {
                    name: "data"
                }],
                y = {
                    chainId: !0,
                    data: !0,
                    gasLimit: !0,
                    gasPrice: !0,
                    nonce: !0,
                    to: !0,
                    type: !0,
                    value: !0
                };

            function w(t) {
                const e = Object(l["b"])(t);
                return Object(n["a"])(Object(o["e"])(Object(a["a"])(Object(o["e"])(e, 1)), 12))
            }

            function b(t, e) {
                return w(Object(l["c"])(Object(o["a"])(t), e))
            }

            function M(t, e) {
                const r = Object(o["o"])(i["a"].from(t).toHexString());
                return r.length > 32 && d.throwArgumentError("invalid length for " + e, "transaction:" + e, t), r
            }

            function E(t, e) {
                return {
                    address: Object(n["a"])(t),
                    storageKeys: (e || []).map((e, r) => (32 !== Object(o["d"])(e) && d.throwArgumentError("invalid access list storageKey", `accessList[${t}:${r}]`, e), e.toLowerCase()))
                }
            }

            function N(t) {
                if (Array.isArray(t)) return t.map((t, e) => Array.isArray(t) ? (t.length > 2 && d.throwArgumentError("access list expected to be [ address, storageKeys[] ]", `value[${e}]`, t), E(t[0], t[1])) : E(t.address, t.storageKeys));
                const e = Object.keys(t).map(e => {
                    const r = t[e].reduce((t, e) => (t[e] = !0, t), {});
                    return E(e, Object.keys(r).sort())
                });
                return e.sort((t, e) => t.address.localeCompare(e.address)), e
            }

            function A(t) {
                return N(t).map(t => [t.address, t.storageKeys])
            }

            function _(t, e) {
                if (null != t.gasPrice) {
                    const e = i["a"].from(t.gasPrice),
                        r = i["a"].from(t.maxFeePerGas || 0);
                    e.eq(r) || d.throwArgumentError("mismatch EIP-1559 gasPrice != maxFeePerGas", "tx", {
                        gasPrice: e,
                        maxFeePerGas: r
                    })
                }
                const r = [M(t.chainId || 0, "chainId"), M(t.nonce || 0, "nonce"), M(t.maxPriorityFeePerGas || 0, "maxPriorityFeePerGas"), M(t.maxFeePerGas || 0, "maxFeePerGas"), M(t.gasLimit || 0, "gasLimit"), null != t.to ? Object(n["a"])(t.to) : "0x", M(t.value || 0, "value"), t.data || "0x", A(t.accessList || [])];
                if (e) {
                    const t = Object(o["n"])(e);
                    r.push(M(t.recoveryParam, "recoveryParam")), r.push(Object(o["o"])(t.r)), r.push(Object(o["o"])(t.s))
                }
                return Object(o["c"])(["0x02", h["encode"](r)])
            }

            function S(t, e) {
                const r = [M(t.chainId || 0, "chainId"), M(t.nonce || 0, "nonce"), M(t.gasPrice || 0, "gasPrice"), M(t.gasLimit || 0, "gasLimit"), null != t.to ? Object(n["a"])(t.to) : "0x", M(t.value || 0, "value"), t.data || "0x", A(t.accessList || [])];
                if (e) {
                    const t = Object(o["n"])(e);
                    r.push(M(t.recoveryParam, "recoveryParam")), r.push(Object(o["o"])(t.r)), r.push(Object(o["o"])(t.s))
                }
                return Object(o["c"])(["0x01", h["encode"](r)])
            }

            function I(t, e) {
                Object(u["b"])(t, y);
                const r = [];
                v.forEach((function(e) {
                    let n = t[e.name] || [];
                    const i = {};
                    e.numeric && (i.hexPad = "left"), n = Object(o["a"])(Object(o["i"])(n, i)), e.length && n.length !== e.length && n.length > 0 && d.throwArgumentError("invalid length for " + e.name, "transaction:" + e.name, n), e.maxLength && (n = Object(o["o"])(n), n.length > e.maxLength && d.throwArgumentError("invalid length for " + e.name, "transaction:" + e.name, n)), r.push(Object(o["i"])(n))
                }));
                let n = 0;
                if (null != t.chainId ? (n = t.chainId, "number" !== typeof n && d.throwArgumentError("invalid transaction.chainId", "transaction", t)) : e && !Object(o["k"])(e) && e.v > 28 && (n = Math.floor((e.v - 35) / 2)), 0 !== n && (r.push(Object(o["i"])(n)), r.push("0x"), r.push("0x")), !e) return h["encode"](r);
                const i = Object(o["n"])(e);
                let s = 27 + i.recoveryParam;
                return 0 !== n ? (r.pop(), r.pop(), r.pop(), s += 2 * n + 8, i.v > 28 && i.v !== s && d.throwArgumentError("transaction.chainId/signature.v mismatch", "signature", e)) : i.v !== s && d.throwArgumentError("transaction.chainId/signature.v mismatch", "signature", e), r.push(Object(o["i"])(s)), r.push(Object(o["o"])(Object(o["a"])(i.r))), r.push(Object(o["o"])(Object(o["a"])(i.s))), h["encode"](r)
            }

            function R(t, e) {
                if (null == t.type || 0 === t.type) return null != t.accessList && d.throwArgumentError("untyped transactions do not support accessList; include type: 1", "transaction", t), I(t, e);
                switch (t.type) {
                    case 1:
                        return S(t, e);
                    case 2:
                        return _(t, e);
                    default:
                        break
                }
                return d.throwError("unsupported transaction type: " + t.type, f["a"].errors.UNSUPPORTED_OPERATION, {
                    operation: "serializeTransaction",
                    transactionType: t.type
                })
            }

            function P(t, e, r) {
                try {
                    const r = g(e[0]).toNumber();
                    if (0 !== r && 1 !== r) throw new Error("bad recid");
                    t.v = r
                } catch (n) {
                    d.throwArgumentError("invalid v for transaction type: 1", "v", e[0])
                }
                t.r = Object(o["h"])(e[1], 32), t.s = Object(o["h"])(e[2], 32);
                try {
                    const e = Object(a["a"])(r(t));
                    t.from = b(e, {
                        r: t.r,
                        s: t.s,
                        recoveryParam: t.v
                    })
                } catch (n) {
                    console.log(n)
                }
            }

            function k(t) {
                const e = h["decode"](t.slice(1));
                9 !== e.length && 12 !== e.length && d.throwArgumentError("invalid component count for transaction type: 2", "payload", Object(o["i"])(t));
                const r = g(e[2]),
                    n = g(e[3]),
                    i = {
                        type: 2,
                        chainId: g(e[0]).toNumber(),
                        nonce: g(e[1]).toNumber(),
                        maxPriorityFeePerGas: r,
                        maxFeePerGas: n,
                        gasPrice: null,
                        gasLimit: g(e[4]),
                        to: p(e[5]),
                        value: g(e[6]),
                        data: e[7],
                        accessList: N(e[8])
                    };
                return 9 === e.length || (i.hash = Object(a["a"])(t), P(i, e.slice(9), _)), i
            }

            function x(t) {
                const e = h["decode"](t.slice(1));
                8 !== e.length && 11 !== e.length && d.throwArgumentError("invalid component count for transaction type: 1", "payload", Object(o["i"])(t));
                const r = {
                    type: 1,
                    chainId: g(e[0]).toNumber(),
                    nonce: g(e[1]).toNumber(),
                    gasPrice: g(e[2]),
                    gasLimit: g(e[3]),
                    to: p(e[4]),
                    value: g(e[5]),
                    data: e[6],
                    accessList: N(e[7])
                };
                return 8 === e.length || (r.hash = Object(a["a"])(t), P(r, e.slice(8), S)), r
            }

            function T(t) {
                const e = h["decode"](t);
                9 !== e.length && 6 !== e.length && d.throwArgumentError("invalid raw transaction", "rawTransaction", t);
                const r = {
                    nonce: g(e[0]).toNumber(),
                    gasPrice: g(e[1]),
                    gasLimit: g(e[2]),
                    to: p(e[3]),
                    value: g(e[4]),
                    data: e[5],
                    chainId: 0
                };
                if (6 === e.length) return r;
                try {
                    r.v = i["a"].from(e[6]).toNumber()
                } catch (n) {
                    return console.log(n), r
                }
                if (r.r = Object(o["h"])(e[7], 32), r.s = Object(o["h"])(e[8], 32), i["a"].from(r.r).isZero() && i["a"].from(r.s).isZero()) r.chainId = r.v, r.v = 0;
                else {
                    r.chainId = Math.floor((r.v - 35) / 2), r.chainId < 0 && (r.chainId = 0);
                    let i = r.v - 27;
                    const s = e.slice(0, 6);
                    0 !== r.chainId && (s.push(Object(o["i"])(r.chainId)), s.push("0x"), s.push("0x"), i -= 2 * r.chainId + 8);
                    const u = Object(a["a"])(h["encode"](s));
                    try {
                        r.from = b(u, {
                            r: Object(o["i"])(r.r),
                            s: Object(o["i"])(r.s),
                            recoveryParam: i
                        })
                    } catch (n) {
                        console.log(n)
                    }
                    r.hash = Object(a["a"])(t)
                }
                return r.type = null, r
            }

            function O(t) {
                const e = Object(o["a"])(t);
                if (e[0] > 127) return T(e);
                switch (e[0]) {
                    case 1:
                        return x(e);
                    case 2:
                        return k(e);
                    default:
                        break
                }
                return d.throwError("unsupported transaction type: " + e[0], f["a"].errors.UNSUPPORTED_OPERATION, {
                    operation: "parseTransaction",
                    transactionType: e[0]
                })
            }
        },
        "6e45": function(t, e, r) {
            "use strict";
            (function(t) {
                r.d(e, "a", (function() {
                    return l
                }));
                var n = r("37ed"),
                    i = r("82e0"),
                    o = r("ff09");
                const s = new i["a"](o["a"]);

                function a() {
                    if ("undefined" !== typeof self) return self;
                    if ("undefined" !== typeof window) return window;
                    if ("undefined" !== typeof t) return t;
                    throw new Error("unable to locate global object")
                }
                const u = a();
                let h = u.crypto || u.msCrypto;

                function l(t) {
                    (t <= 0 || t > 1024 || t % 1 || t != t) && s.throwArgumentError("invalid length", "length", t);
                    const e = new Uint8Array(t);
                    return h.getRandomValues(e), Object(n["a"])(e)
                }
                h && h.getRandomValues || (s.warn("WARNING: Missing strong random number source"), h = {
                    getRandomValues: function(t) {
                        return s.throwError("no secure random source avaialble", i["a"].errors.UNSUPPORTED_OPERATION, {
                            operation: "crypto.getRandomValues"
                        })
                    }
                })
            }).call(this, r("c8ba"))
        },
        "70be": function(t, e, r) {
            "use strict";
            r.d(e, "a", (function() {
                return s
            })), r.d(e, "b", (function() {
                return a
            }));
            var n = r("4877"),
                i = r("549e"),
                o = r("5273");

            function s(t) {
                const e = Object(o["f"])(t);
                if (e.length > 31) throw new Error("bytes32 string must be less than 32 bytes");
                return Object(i["i"])(Object(i["b"])([e, n["a"]]).slice(0, 32))
            }

            function a(t) {
                const e = Object(i["a"])(t);
                if (32 !== e.length) throw new Error("invalid bytes32 - not 32 bytes long");
                if (0 !== e[31]) throw new Error("invalid bytes32 string - no null terminator");
                let r = 31;
                while (0 === e[r - 1]) r--;
                return Object(o["h"])(e.slice(0, r))
            }
        },
        7149: function(t, e, r) {
            "use strict";
            r.d(e, "a", (function() {
                return rt
            })), r.d(e, "c", (function() {
                return nt
            })), r.d(e, "e", (function() {
                return it
            })), r.d(e, "b", (function() {
                return ot
            })), r.d(e, "d", (function() {
                return st
            }));
            const n = "logger/5.6.0";
            let i = !1,
                o = !1;
            const s = {
                debug: 1,
                default: 2,
                info: 2,
                warning: 3,
                error: 4,
                off: 5
            };
            let a = s["default"],
                u = null;

            function h() {
                try {
                    const t = [];
                    if (["NFD", "NFC", "NFKD", "NFKC"].forEach(e => {
                            try {
                                if ("test" !== "test".normalize(e)) throw new Error("bad normalize")
                            } catch (r) {
                                t.push(e)
                            }
                        }), t.length) throw new Error("missing " + t.join(", "));
                    if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) throw new Error("broken implementation")
                } catch (t) {
                    return t.message
                }
                return null
            }
            const l = h();
            var f, c;
            (function(t) {
                t["DEBUG"] = "DEBUG", t["INFO"] = "INFO", t["WARNING"] = "WARNING", t["ERROR"] = "ERROR", t["OFF"] = "OFF"
            })(f || (f = {})),
            function(t) {
                t["UNKNOWN_ERROR"] = "UNKNOWN_ERROR", t["NOT_IMPLEMENTED"] = "NOT_IMPLEMENTED", t["UNSUPPORTED_OPERATION"] = "UNSUPPORTED_OPERATION", t["NETWORK_ERROR"] = "NETWORK_ERROR", t["SERVER_ERROR"] = "SERVER_ERROR", t["TIMEOUT"] = "TIMEOUT", t["BUFFER_OVERRUN"] = "BUFFER_OVERRUN", t["NUMERIC_FAULT"] = "NUMERIC_FAULT", t["MISSING_NEW"] = "MISSING_NEW", t["INVALID_ARGUMENT"] = "INVALID_ARGUMENT", t["MISSING_ARGUMENT"] = "MISSING_ARGUMENT", t["UNEXPECTED_ARGUMENT"] = "UNEXPECTED_ARGUMENT", t["CALL_EXCEPTION"] = "CALL_EXCEPTION", t["INSUFFICIENT_FUNDS"] = "INSUFFICIENT_FUNDS", t["NONCE_EXPIRED"] = "NONCE_EXPIRED", t["REPLACEMENT_UNDERPRICED"] = "REPLACEMENT_UNDERPRICED", t["UNPREDICTABLE_GAS_LIMIT"] = "UNPREDICTABLE_GAS_LIMIT", t["TRANSACTION_REPLACED"] = "TRANSACTION_REPLACED"
            }(c || (c = {}));
            const d = "0123456789abcdef";
            class m {
                constructor(t) {
                    Object.defineProperty(this, "version", {
                        enumerable: !0,
                        value: t,
                        writable: !1
                    })
                }
                _log(t, e) {
                    const r = t.toLowerCase();
                    null == s[r] && this.throwArgumentError("invalid log level name", "logLevel", t), a > s[r] || console.log.apply(console, e)
                }
                debug(...t) {
                    this._log(m.levels.DEBUG, t)
                }
                info(...t) {
                    this._log(m.levels.INFO, t)
                }
                warn(...t) {
                    this._log(m.levels.WARNING, t)
                }
                makeError(t, e, r) {
                    if (o) return this.makeError("censored error", e, {});
                    e || (e = m.errors.UNKNOWN_ERROR), r || (r = {});
                    const n = [];
                    Object.keys(r).forEach(t => {
                        const e = r[t];
                        try {
                            if (e instanceof Uint8Array) {
                                let r = "";
                                for (let t = 0; t < e.length; t++) r += d[e[t] >> 4], r += d[15 & e[t]];
                                n.push(t + "=Uint8Array(0x" + r + ")")
                            } else n.push(t + "=" + JSON.stringify(e))
                        } catch (a) {
                            n.push(t + "=" + JSON.stringify(r[t].toString()))
                        }
                    }), n.push("code=" + e), n.push("version=" + this.version);
                    const i = t;
                    let s = "";
                    switch (e) {
                        case c.NUMERIC_FAULT:
                            {
                                s = "NUMERIC_FAULT";
                                const e = t;
                                switch (e) {
                                    case "overflow":
                                    case "underflow":
                                    case "division-by-zero":
                                        s += "-" + e;
                                        break;
                                    case "negative-power":
                                    case "negative-width":
                                        s += "-unsupported";
                                        break;
                                    case "unbound-bitwise-result":
                                        s += "-unbound-result";
                                        break
                                }
                                break
                            }
                        case c.CALL_EXCEPTION:
                        case c.INSUFFICIENT_FUNDS:
                        case c.MISSING_NEW:
                        case c.NONCE_EXPIRED:
                        case c.REPLACEMENT_UNDERPRICED:
                        case c.TRANSACTION_REPLACED:
                        case c.UNPREDICTABLE_GAS_LIMIT:
                            s = e;
                            break
                    }
                    s && (t += " [ See: https://links.ethers.org/v5-errors-" + s + " ]"), n.length && (t += " (" + n.join(", ") + ")");
                    const a = new Error(t);
                    return a.reason = i, a.code = e, Object.keys(r).forEach((function(t) {
                        a[t] = r[t]
                    })), a
                }
                throwError(t, e, r) {
                    throw this.makeError(t, e, r)
                }
                throwArgumentError(t, e, r) {
                    return this.throwError(t, m.errors.INVALID_ARGUMENT, {
                        argument: e,
                        value: r
                    })
                }
                assert(t, e, r, n) {
                    t || this.throwError(e, r, n)
                }
                assertArgument(t, e, r, n) {
                    t || this.throwArgumentError(e, r, n)
                }
                checkNormalize(t) {
                    null == t && (t = "platform missing String.prototype.normalize"), l && this.throwError("platform missing String.prototype.normalize", m.errors.UNSUPPORTED_OPERATION, {
                        operation: "String.prototype.normalize",
                        form: l
                    })
                }
                checkSafeUint53(t, e) {
                    "number" === typeof t && (null == e && (e = "value not safe"), (t < 0 || t >= 9007199254740991) && this.throwError(e, m.errors.NUMERIC_FAULT, {
                        operation: "checkSafeInteger",
                        fault: "out-of-safe-range",
                        value: t
                    }), t % 1 && this.throwError(e, m.errors.NUMERIC_FAULT, {
                        operation: "checkSafeInteger",
                        fault: "non-integer",
                        value: t
                    }))
                }
                checkArgumentCount(t, e, r) {
                    r = r ? ": " + r : "", t < e && this.throwError("missing argument" + r, m.errors.MISSING_ARGUMENT, {
                        count: t,
                        expectedCount: e
                    }), t > e && this.throwError("too many arguments" + r, m.errors.UNEXPECTED_ARGUMENT, {
                        count: t,
                        expectedCount: e
                    })
                }
                checkNew(t, e) {
                    t !== Object && null != t || this.throwError("missing new", m.errors.MISSING_NEW, {
                        name: e.name
                    })
                }
                checkAbstract(t, e) {
                    t === e ? this.throwError("cannot instantiate abstract class " + JSON.stringify(e.name) + " directly; use a sub-class", m.errors.UNSUPPORTED_OPERATION, {
                        name: t.name,
                        operation: "new"
                    }) : t !== Object && null != t || this.throwError("missing new", m.errors.MISSING_NEW, {
                        name: e.name
                    })
                }
                static globalLogger() {
                    return u || (u = new m(n)), u
                }
                static setCensorship(t, e) {
                    if (!t && e && this.globalLogger().throwError("cannot permanently disable censorship", m.errors.UNSUPPORTED_OPERATION, {
                            operation: "setCensorship"
                        }), i) {
                        if (!t) return;
                        this.globalLogger().throwError("error censorship permanent", m.errors.UNSUPPORTED_OPERATION, {
                            operation: "setCensorship"
                        })
                    }
                    o = !!t, i = !!e
                }
                static setLogLevel(t) {
                    const e = s[t.toLowerCase()];
                    null != e ? a = e : m.globalLogger().warn("invalid log level - " + t)
                }
                static from(t) {
                    return new m(t)
                }
            }
            m.errors = c, m.levels = f;
            const p = "bytes/5.6.1",
                g = new m(p);

            function v(t) {
                return !!t.toHexString
            }

            function y(t) {
                return t.slice || (t.slice = function() {
                    const e = Array.prototype.slice.call(arguments);
                    return y(new Uint8Array(Array.prototype.slice.apply(t, e)))
                }), t
            }

            function w(t) {
                return "number" === typeof t && t == t && t % 1 === 0
            }

            function b(t) {
                if (null == t) return !1;
                if (t.constructor === Uint8Array) return !0;
                if ("string" === typeof t) return !1;
                if (!w(t.length) || t.length < 0) return !1;
                for (let e = 0; e < t.length; e++) {
                    const r = t[e];
                    if (!w(r) || r < 0 || r >= 256) return !1
                }
                return !0
            }

            function M(t, e) {
                if (e || (e = {}), "number" === typeof t) {
                    g.checkSafeUint53(t, "invalid arrayify value");
                    const e = [];
                    while (t) e.unshift(255 & t), t = parseInt(String(t / 256));
                    return 0 === e.length && e.push(0), y(new Uint8Array(e))
                }
                if (e.allowMissingPrefix && "string" === typeof t && "0x" !== t.substring(0, 2) && (t = "0x" + t), v(t) && (t = t.toHexString()), E(t)) {
                    let r = t.substring(2);
                    r.length % 2 && ("left" === e.hexPad ? r = "0" + r : "right" === e.hexPad ? r += "0" : g.throwArgumentError("hex data is odd-length", "value", t));
                    const n = [];
                    for (let t = 0; t < r.length; t += 2) n.push(parseInt(r.substring(t, t + 2), 16));
                    return y(new Uint8Array(n))
                }
                return b(t) ? y(new Uint8Array(t)) : g.throwArgumentError("invalid arrayify value", "value", t)
            }

            function E(t, e) {
                return !("string" !== typeof t || !t.match(/^0x[0-9A-Fa-f]*$/)) && (!e || t.length === 2 + 2 * e)
            }
            const N = "0123456789abcdef";

            function A(t, e) {
                if (e || (e = {}), "number" === typeof t) {
                    g.checkSafeUint53(t, "invalid hexlify value");
                    let e = "";
                    while (t) e = N[15 & t] + e, t = Math.floor(t / 16);
                    return e.length ? (e.length % 2 && (e = "0" + e), "0x" + e) : "0x00"
                }
                if ("bigint" === typeof t) return t = t.toString(16), t.length % 2 ? "0x0" + t : "0x" + t;
                if (e.allowMissingPrefix && "string" === typeof t && "0x" !== t.substring(0, 2) && (t = "0x" + t), v(t)) return t.toHexString();
                if (E(t)) return t.length % 2 && ("left" === e.hexPad ? t = "0x0" + t.substring(2) : "right" === e.hexPad ? t += "0" : g.throwArgumentError("hex data is odd-length", "value", t)), t.toLowerCase();
                if (b(t)) {
                    let e = "0x";
                    for (let r = 0; r < t.length; r++) {
                        let n = t[r];
                        e += N[(240 & n) >> 4] + N[15 & n]
                    }
                    return e
                }
                return g.throwArgumentError("invalid hexlify value", "value", t)
            }

            function _(t, e) {
                "string" !== typeof t ? t = A(t) : E(t) || g.throwArgumentError("invalid hex string", "value", t), t.length > 2 * e + 2 && g.throwArgumentError("value out of range", "value", arguments[1]);
                while (t.length < 2 * e + 2) t = "0x0" + t.substring(2);
                return t
            }
            const S = "bignumber/5.6.0";
            var I = r("9565"),
                R = r.n(I),
                P = R.a.BN;
            const k = new m(S),
                x = {},
                T = 9007199254740991;

            function O(t) {
                return null != t && (U.isBigNumber(t) || "number" === typeof t && t % 1 === 0 || "string" === typeof t && !!t.match(/^-?[0-9]+$/) || E(t) || "bigint" === typeof t || b(t))
            }
            let C = !1;
            class U {
                constructor(t, e) {
                    k.checkNew(new.target, U), t !== x && k.throwError("cannot call constructor directly; use BigNumber.from", m.errors.UNSUPPORTED_OPERATION, {
                        operation: "new (BigNumber)"
                    }), this._hex = e, this._isBigNumber = !0, Object.freeze(this)
                }
                fromTwos(t) {
                    return B(L(this).fromTwos(t))
                }
                toTwos(t) {
                    return B(L(this).toTwos(t))
                }
                abs() {
                    return "-" === this._hex[0] ? U.from(this._hex.substring(1)) : this
                }
                add(t) {
                    return B(L(this).add(L(t)))
                }
                sub(t) {
                    return B(L(this).sub(L(t)))
                }
                div(t) {
                    const e = U.from(t);
                    return e.isZero() && D("division-by-zero", "div"), B(L(this).div(L(t)))
                }
                mul(t) {
                    return B(L(this).mul(L(t)))
                }
                mod(t) {
                    const e = L(t);
                    return e.isNeg() && D("division-by-zero", "mod"), B(L(this).umod(e))
                }
                pow(t) {
                    const e = L(t);
                    return e.isNeg() && D("negative-power", "pow"), B(L(this).pow(e))
                }
                and(t) {
                    const e = L(t);
                    return (this.isNegative() || e.isNeg()) && D("unbound-bitwise-result", "and"), B(L(this).and(e))
                }
                or(t) {
                    const e = L(t);
                    return (this.isNegative() || e.isNeg()) && D("unbound-bitwise-result", "or"), B(L(this).or(e))
                }
                xor(t) {
                    const e = L(t);
                    return (this.isNegative() || e.isNeg()) && D("unbound-bitwise-result", "xor"), B(L(this).xor(e))
                }
                mask(t) {
                    return (this.isNegative() || t < 0) && D("negative-width", "mask"), B(L(this).maskn(t))
                }
                shl(t) {
                    return (this.isNegative() || t < 0) && D("negative-width", "shl"), B(L(this).shln(t))
                }
                shr(t) {
                    return (this.isNegative() || t < 0) && D("negative-width", "shr"), B(L(this).shrn(t))
                }
                eq(t) {
                    return L(this).eq(L(t))
                }
                lt(t) {
                    return L(this).lt(L(t))
                }
                lte(t) {
                    return L(this).lte(L(t))
                }
                gt(t) {
                    return L(this).gt(L(t))
                }
                gte(t) {
                    return L(this).gte(L(t))
                }
                isNegative() {
                    return "-" === this._hex[0]
                }
                isZero() {
                    return L(this).isZero()
                }
                toNumber() {
                    try {
                        return L(this).toNumber()
                    } catch (t) {
                        D("overflow", "toNumber", this.toString())
                    }
                    return null
                }
                toBigInt() {
                    try {
                        return BigInt(this.toString())
                    } catch (t) {}
                    return k.throwError("this platform does not support BigInt", m.errors.UNSUPPORTED_OPERATION, {
                        value: this.toString()
                    })
                }
                toString() {
                    return arguments.length > 0 && (10 === arguments[0] ? C || (C = !0, k.warn("BigNumber.toString does not accept any parameters; base-10 is assumed")) : 16 === arguments[0] ? k.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()", m.errors.UNEXPECTED_ARGUMENT, {}) : k.throwError("BigNumber.toString does not accept parameters", m.errors.UNEXPECTED_ARGUMENT, {})), L(this).toString(10)
                }
                toHexString() {
                    return this._hex
                }
                toJSON(t) {
                    return {
                        type: "BigNumber",
                        hex: this.toHexString()
                    }
                }
                static from(t) {
                    if (t instanceof U) return t;
                    if ("string" === typeof t) return t.match(/^-?0x[0-9a-f]+$/i) ? new U(x, F(t)) : t.match(/^-?[0-9]+$/) ? new U(x, F(new P(t))) : k.throwArgumentError("invalid BigNumber string", "value", t);
                    if ("number" === typeof t) return t % 1 && D("underflow", "BigNumber.from", t), (t >= T || t <= -T) && D("overflow", "BigNumber.from", t), U.from(String(t));
                    const e = t;
                    if ("bigint" === typeof e) return U.from(e.toString());
                    if (b(e)) return U.from(A(e));
                    if (e)
                        if (e.toHexString) {
                            const t = e.toHexString();
                            if ("string" === typeof t) return U.from(t)
                        } else {
                            let t = e._hex;
                            if (null == t && "BigNumber" === e.type && (t = e.hex), "string" === typeof t && (E(t) || "-" === t[0] && E(t.substring(1)))) return U.from(t)
                        }
                    return k.throwArgumentError("invalid BigNumber value", "value", t)
                }
                static isBigNumber(t) {
                    return !(!t || !t._isBigNumber)
                }
            }

            function F(t) {
                if ("string" !== typeof t) return F(t.toString(16));
                if ("-" === t[0]) return t = t.substring(1), "-" === t[0] && k.throwArgumentError("invalid hex", "value", t), t = F(t), "0x00" === t ? t : "-" + t;
                if ("0x" !== t.substring(0, 2) && (t = "0x" + t), "0x" === t) return "0x00";
                t.length % 2 && (t = "0x0" + t.substring(2));
                while (t.length > 4 && "0x00" === t.substring(0, 4)) t = "0x" + t.substring(4);
                return t
            }

            function B(t) {
                return U.from(F(t))
            }

            function L(t) {
                const e = U.from(t).toHexString();
                return "-" === e[0] ? new P("-" + e.substring(3), 16) : new P(e.substring(2), 16)
            }

            function D(t, e, r) {
                const n = {
                    fault: t,
                    operation: e
                };
                return null != r && (n.value = r), k.throwError(t, m.errors.NUMERIC_FAULT, n)
            }
            const G = new m(S),
                j = {},
                q = U.from(0),
                z = U.from(-1);

            function K(t, e, r, n) {
                const i = {
                    fault: e,
                    operation: r
                };
                return void 0 !== n && (i.value = n), G.throwError(t, m.errors.NUMERIC_FAULT, i)
            }
            let W = "0";
            while (W.length < 256) W += W;

            function V(t) {
                if ("number" !== typeof t) try {
                    t = U.from(t).toNumber()
                } catch (e) {}
                return "number" === typeof t && t >= 0 && t <= 256 && !(t % 1) ? "1" + W.substring(0, t) : G.throwArgumentError("invalid decimal size", "decimals", t)
            }

            function H(t, e) {
                null == e && (e = 0);
                const r = V(e);
                t = U.from(t);
                const n = t.lt(q);
                n && (t = t.mul(z));
                let i = t.mod(r).toString();
                while (i.length < r.length - 1) i = "0" + i;
                i = i.match(/^([0-9]*[1-9]|0)(0*)/)[1];
                const o = t.div(r).toString();
                return t = 1 === r.length ? o : o + "." + i, n && (t = "-" + t), t
            }

            function J(t, e) {
                null == e && (e = 0);
                const r = V(e);
                "string" === typeof t && t.match(/^-?[0-9.]+$/) || G.throwArgumentError("invalid decimal value", "value", t);
                const n = "-" === t.substring(0, 1);
                n && (t = t.substring(1)), "." === t && G.throwArgumentError("missing value", "value", t);
                const i = t.split(".");
                i.length > 2 && G.throwArgumentError("too many decimal points", "value", t);
                let o = i[0],
                    s = i[1];
                o || (o = "0"), s || (s = "0");
                while ("0" === s[s.length - 1]) s = s.substring(0, s.length - 1);
                s.length > r.length - 1 && K("fractional component exceeds decimals", "underflow", "parseFixed"), "" === s && (s = "0");
                while (s.length < r.length - 1) s += "0";
                const a = U.from(o),
                    u = U.from(s);
                let h = a.mul(r).add(u);
                return n && (h = h.mul(z)), h
            }
            class Z {
                constructor(t, e, r, n) {
                    t !== j && G.throwError("cannot use FixedFormat constructor; use FixedFormat.from", m.errors.UNSUPPORTED_OPERATION, {
                        operation: "new FixedFormat"
                    }), this.signed = e, this.width = r, this.decimals = n, this.name = (e ? "" : "u") + "fixed" + String(r) + "x" + String(n), this._multiplier = V(n), Object.freeze(this)
                }
                static from(t) {
                    if (t instanceof Z) return t;
                    "number" === typeof t && (t = "fixed128x" + t);
                    let e = !0,
                        r = 128,
                        n = 18;
                    if ("string" === typeof t)
                        if ("fixed" === t);
                        else if ("ufixed" === t) e = !1;
                    else {
                        const i = t.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);
                        i || G.throwArgumentError("invalid fixed format", "format", t), e = "u" !== i[1], r = parseInt(i[2]), n = parseInt(i[3])
                    } else if (t) {
                        const i = (e, r, n) => null == t[e] ? n : (typeof t[e] !== r && G.throwArgumentError("invalid fixed format (" + e + " not " + r + ")", "format." + e, t[e]), t[e]);
                        e = i("signed", "boolean", e), r = i("width", "number", r), n = i("decimals", "number", n)
                    }
                    return r % 8 && G.throwArgumentError("invalid fixed format width (not byte aligned)", "format.width", r), n > 80 && G.throwArgumentError("invalid fixed format (decimals too large)", "format.decimals", n), new Z(j, e, r, n)
                }
            }
            class X {
                constructor(t, e, r, n) {
                    G.checkNew(new.target, X), t !== j && G.throwError("cannot use FixedNumber constructor; use FixedNumber.from", m.errors.UNSUPPORTED_OPERATION, {
                        operation: "new FixedFormat"
                    }), this.format = n, this._hex = e, this._value = r, this._isFixedNumber = !0, Object.freeze(this)
                }
                _checkFormat(t) {
                    this.format.name !== t.format.name && G.throwArgumentError("incompatible format; use fixedNumber.toFormat", "other", t)
                }
                addUnsafe(t) {
                    this._checkFormat(t);
                    const e = J(this._value, this.format.decimals),
                        r = J(t._value, t.format.decimals);
                    return X.fromValue(e.add(r), this.format.decimals, this.format)
                }
                subUnsafe(t) {
                    this._checkFormat(t);
                    const e = J(this._value, this.format.decimals),
                        r = J(t._value, t.format.decimals);
                    return X.fromValue(e.sub(r), this.format.decimals, this.format)
                }
                mulUnsafe(t) {
                    this._checkFormat(t);
                    const e = J(this._value, this.format.decimals),
                        r = J(t._value, t.format.decimals);
                    return X.fromValue(e.mul(r).div(this.format._multiplier), this.format.decimals, this.format)
                }
                divUnsafe(t) {
                    this._checkFormat(t);
                    const e = J(this._value, this.format.decimals),
                        r = J(t._value, t.format.decimals);
                    return X.fromValue(e.mul(this.format._multiplier).div(r), this.format.decimals, this.format)
                }
                floor() {
                    const t = this.toString().split(".");
                    1 === t.length && t.push("0");
                    let e = X.from(t[0], this.format);
                    const r = !t[1].match(/^(0*)$/);
                    return this.isNegative() && r && (e = e.subUnsafe($.toFormat(e.format))), e
                }
                ceiling() {
                    const t = this.toString().split(".");
                    1 === t.length && t.push("0");
                    let e = X.from(t[0], this.format);
                    const r = !t[1].match(/^(0*)$/);
                    return !this.isNegative() && r && (e = e.addUnsafe($.toFormat(e.format))), e
                }
                round(t) {
                    null == t && (t = 0);
                    const e = this.toString().split(".");
                    if (1 === e.length && e.push("0"), (t < 0 || t > 80 || t % 1) && G.throwArgumentError("invalid decimal count", "decimals", t), e[1].length <= t) return this;
                    const r = X.from("1" + W.substring(0, t), this.format),
                        n = Y.toFormat(this.format);
                    return this.mulUnsafe(r).addUnsafe(n).floor().divUnsafe(r)
                }
                isZero() {
                    return "0.0" === this._value || "0" === this._value
                }
                isNegative() {
                    return "-" === this._value[0]
                }
                toString() {
                    return this._value
                }
                toHexString(t) {
                    if (null == t) return this._hex;
                    t % 8 && G.throwArgumentError("invalid byte width", "width", t);
                    const e = U.from(this._hex).fromTwos(this.format.width).toTwos(t).toHexString();
                    return _(e, t / 8)
                }
                toUnsafeFloat() {
                    return parseFloat(this.toString())
                }
                toFormat(t) {
                    return X.fromString(this._value, t)
                }
                static fromValue(t, e, r) {
                    return null != r || null == e || O(e) || (r = e, e = null), null == e && (e = 0), null == r && (r = "fixed"), X.fromString(H(t, e), Z.from(r))
                }
                static fromString(t, e) {
                    null == e && (e = "fixed");
                    const r = Z.from(e),
                        n = J(t, r.decimals);
                    !r.signed && n.lt(q) && K("unsigned value cannot be negative", "overflow", "value", t);
                    let i = null;
                    r.signed ? i = n.toTwos(r.width).toHexString() : (i = n.toHexString(), i = _(i, r.width / 8));
                    const o = H(n, r.decimals);
                    return new X(j, i, o, r)
                }
                static fromBytes(t, e) {
                    null == e && (e = "fixed");
                    const r = Z.from(e);
                    if (M(t).length > r.width / 8) throw new Error("overflow");
                    let n = U.from(t);
                    r.signed && (n = n.fromTwos(r.width));
                    const i = n.toTwos((r.signed ? 0 : 1) + r.width).toHexString(),
                        o = H(n, r.decimals);
                    return new X(j, i, o, r)
                }
                static from(t, e) {
                    if ("string" === typeof t) return X.fromString(t, e);
                    if (b(t)) return X.fromBytes(t, e);
                    try {
                        return X.fromValue(t, 0, e)
                    } catch (r) {
                        if (r.code !== m.errors.INVALID_ARGUMENT) throw r
                    }
                    return G.throwArgumentError("invalid FixedNumber value", "value", t)
                }
                static isFixedNumber(t) {
                    return !(!t || !t._isFixedNumber)
                }
            }
            const $ = X.from(1),
                Y = X.from("0.5"),
                Q = "units/5.6.0",
                tt = new m(Q),
                et = ["wei", "kwei", "mwei", "gwei", "szabo", "finney", "ether"];

            function rt(t) {
                const e = String(t).split(".");
                (e.length > 2 || !e[0].match(/^-?[0-9]*$/) || e[1] && !e[1].match(/^[0-9]*$/) || "." === t || "-." === t) && tt.throwArgumentError("invalid value", "value", t);
                let r = e[0],
                    n = "";
                "-" === r.substring(0, 1) && (n = "-", r = r.substring(1));
                while ("0" === r.substring(0, 1)) r = r.substring(1);
                "" === r && (r = "0");
                let i = "";
                2 === e.length && (i = "." + (e[1] || "0"));
                while (i.length > 2 && "0" === i[i.length - 1]) i = i.substring(0, i.length - 1);
                const o = [];
                while (r.length) {
                    if (r.length <= 3) {
                        o.unshift(r);
                        break
                    } {
                        const t = r.length - 3;
                        o.unshift(r.substring(t)), r = r.substring(0, t)
                    }
                }
                return n + o.join(",") + i
            }

            function nt(t, e) {
                if ("string" === typeof e) {
                    const t = et.indexOf(e); - 1 !== t && (e = 3 * t)
                }
                return H(t, null != e ? e : 18)
            }

            function it(t, e) {
                if ("string" !== typeof t && tt.throwArgumentError("value must be a string", "value", t), "string" === typeof e) {
                    const t = et.indexOf(e); - 1 !== t && (e = 3 * t)
                }
                return J(t, null != e ? e : 18)
            }

            function ot(t) {
                return nt(t, 18)
            }

            function st(t) {
                return it(t, 18)
            }
        },
        "7a6b": function(t, e, r) {
            (function(t) {
                (function(t, e) {
                    "use strict";

                    function n(t, e) {
                        if (!t) throw new Error(e || "Assertion failed")
                    }

                    function i(t, e) {
                        t.super_ = e;
                        var r = function() {};
                        r.prototype = e.prototype, t.prototype = new r, t.prototype.constructor = t
                    }

                    function o(t, e, r) {
                        if (o.isBN(t)) return t;
                        this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== t && ("le" !== e && "be" !== e || (r = e, e = 10), this._init(t || 0, e || 10, r || "be"))
                    }
                    var s;
                    "object" === typeof t ? t.exports = o : e.BN = o, o.BN = o, o.wordSize = 26;
                    try {
                        s = "undefined" !== typeof window && "undefined" !== typeof window.Buffer ? window.Buffer : r(8).Buffer
                    } catch (I) {}

                    function a(t, e) {
                        var r = t.charCodeAt(e);
                        return r >= 65 && r <= 70 ? r - 55 : r >= 97 && r <= 102 ? r - 87 : r - 48 & 15
                    }

                    function u(t, e, r) {
                        var n = a(t, r);
                        return r - 1 >= e && (n |= a(t, r - 1) << 4), n
                    }

                    function h(t, e, r, n) {
                        for (var i = 0, o = Math.min(t.length, r), s = e; s < o; s++) {
                            var a = t.charCodeAt(s) - 48;
                            i *= n, i += a >= 49 ? a - 49 + 10 : a >= 17 ? a - 17 + 10 : a
                        }
                        return i
                    }
                    o.isBN = function(t) {
                        return t instanceof o || null !== t && "object" === typeof t && t.constructor.wordSize === o.wordSize && Array.isArray(t.words)
                    }, o.max = function(t, e) {
                        return t.cmp(e) > 0 ? t : e
                    }, o.min = function(t, e) {
                        return t.cmp(e) < 0 ? t : e
                    }, o.prototype._init = function(t, e, r) {
                        if ("number" === typeof t) return this._initNumber(t, e, r);
                        if ("object" === typeof t) return this._initArray(t, e, r);
                        "hex" === e && (e = 16), n(e === (0 | e) && e >= 2 && e <= 36), t = t.toString().replace(/\s+/g, "");
                        var i = 0;
                        "-" === t[0] && (i++, this.negative = 1), i < t.length && (16 === e ? this._parseHex(t, i, r) : (this._parseBase(t, e, i), "le" === r && this._initArray(this.toArray(), e, r)))
                    }, o.prototype._initNumber = function(t, e, r) {
                        t < 0 && (this.negative = 1, t = -t), t < 67108864 ? (this.words = [67108863 & t], this.length = 1) : t < 4503599627370496 ? (this.words = [67108863 & t, t / 67108864 & 67108863], this.length = 2) : (n(t < 9007199254740992), this.words = [67108863 & t, t / 67108864 & 67108863, 1], this.length = 3), "le" === r && this._initArray(this.toArray(), e, r)
                    }, o.prototype._initArray = function(t, e, r) {
                        if (n("number" === typeof t.length), t.length <= 0) return this.words = [0], this.length = 1, this;
                        this.length = Math.ceil(t.length / 3), this.words = new Array(this.length);
                        for (var i = 0; i < this.length; i++) this.words[i] = 0;
                        var o, s, a = 0;
                        if ("be" === r)
                            for (i = t.length - 1, o = 0; i >= 0; i -= 3) s = t[i] | t[i - 1] << 8 | t[i - 2] << 16, this.words[o] |= s << a & 67108863, this.words[o + 1] = s >>> 26 - a & 67108863, a += 24, a >= 26 && (a -= 26, o++);
                        else if ("le" === r)
                            for (i = 0, o = 0; i < t.length; i += 3) s = t[i] | t[i + 1] << 8 | t[i + 2] << 16, this.words[o] |= s << a & 67108863, this.words[o + 1] = s >>> 26 - a & 67108863, a += 24, a >= 26 && (a -= 26, o++);
                        return this.strip()
                    }, o.prototype._parseHex = function(t, e, r) {
                        this.length = Math.ceil((t.length - e) / 6), this.words = new Array(this.length);
                        for (var n = 0; n < this.length; n++) this.words[n] = 0;
                        var i, o = 0,
                            s = 0;
                        if ("be" === r)
                            for (n = t.length - 1; n >= e; n -= 2) i = u(t, e, n) << o, this.words[s] |= 67108863 & i, o >= 18 ? (o -= 18, s += 1, this.words[s] |= i >>> 26) : o += 8;
                        else {
                            var a = t.length - e;
                            for (n = a % 2 === 0 ? e + 1 : e; n < t.length; n += 2) i = u(t, e, n) << o, this.words[s] |= 67108863 & i, o >= 18 ? (o -= 18, s += 1, this.words[s] |= i >>> 26) : o += 8
                        }
                        this.strip()
                    }, o.prototype._parseBase = function(t, e, r) {
                        this.words = [0], this.length = 1;
                        for (var n = 0, i = 1; i <= 67108863; i *= e) n++;
                        n--, i = i / e | 0;
                        for (var o = t.length - r, s = o % n, a = Math.min(o, o - s) + r, u = 0, l = r; l < a; l += n) u = h(t, l, l + n, e), this.imuln(i), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
                        if (0 !== s) {
                            var f = 1;
                            for (u = h(t, l, t.length, e), l = 0; l < s; l++) f *= e;
                            this.imuln(f), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u)
                        }
                        this.strip()
                    }, o.prototype.copy = function(t) {
                        t.words = new Array(this.length);
                        for (var e = 0; e < this.length; e++) t.words[e] = this.words[e];
                        t.length = this.length, t.negative = this.negative, t.red = this.red
                    }, o.prototype.clone = function() {
                        var t = new o(null);
                        return this.copy(t), t
                    }, o.prototype._expand = function(t) {
                        while (this.length < t) this.words[this.length++] = 0;
                        return this
                    }, o.prototype.strip = function() {
                        while (this.length > 1 && 0 === this.words[this.length - 1]) this.length--;
                        return this._normSign()
                    }, o.prototype._normSign = function() {
                        return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this
                    }, o.prototype.inspect = function() {
                        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">"
                    };
                    var l = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"],
                        f = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                        c = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];

                    function d(t) {
                        for (var e = new Array(t.bitLength()), r = 0; r < e.length; r++) {
                            var n = r / 26 | 0,
                                i = r % 26;
                            e[r] = (t.words[n] & 1 << i) >>> i
                        }
                        return e
                    }

                    function m(t, e, r) {
                        r.negative = e.negative ^ t.negative;
                        var n = t.length + e.length | 0;
                        r.length = n, n = n - 1 | 0;
                        var i = 0 | t.words[0],
                            o = 0 | e.words[0],
                            s = i * o,
                            a = 67108863 & s,
                            u = s / 67108864 | 0;
                        r.words[0] = a;
                        for (var h = 1; h < n; h++) {
                            for (var l = u >>> 26, f = 67108863 & u, c = Math.min(h, e.length - 1), d = Math.max(0, h - t.length + 1); d <= c; d++) {
                                var m = h - d | 0;
                                i = 0 | t.words[m], o = 0 | e.words[d], s = i * o + f, l += s / 67108864 | 0, f = 67108863 & s
                            }
                            r.words[h] = 0 | f, u = 0 | l
                        }
                        return 0 !== u ? r.words[h] = 0 | u : r.length--, r.strip()
                    }
                    o.prototype.toString = function(t, e) {
                        var r;
                        if (t = t || 10, e = 0 | e || 1, 16 === t || "hex" === t) {
                            r = "";
                            for (var i = 0, o = 0, s = 0; s < this.length; s++) {
                                var a = this.words[s],
                                    u = (16777215 & (a << i | o)).toString(16);
                                o = a >>> 24 - i & 16777215, r = 0 !== o || s !== this.length - 1 ? l[6 - u.length] + u + r : u + r, i += 2, i >= 26 && (i -= 26, s--)
                            }
                            0 !== o && (r = o.toString(16) + r);
                            while (r.length % e !== 0) r = "0" + r;
                            return 0 !== this.negative && (r = "-" + r), r
                        }
                        if (t === (0 | t) && t >= 2 && t <= 36) {
                            var h = f[t],
                                d = c[t];
                            r = "";
                            var m = this.clone();
                            m.negative = 0;
                            while (!m.isZero()) {
                                var p = m.modn(d).toString(t);
                                m = m.idivn(d), r = m.isZero() ? p + r : l[h - p.length] + p + r
                            }
                            this.isZero() && (r = "0" + r);
                            while (r.length % e !== 0) r = "0" + r;
                            return 0 !== this.negative && (r = "-" + r), r
                        }
                        n(!1, "Base should be between 2 and 36")
                    }, o.prototype.toNumber = function() {
                        var t = this.words[0];
                        return 2 === this.length ? t += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && n(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -t : t
                    }, o.prototype.toJSON = function() {
                        return this.toString(16)
                    }, o.prototype.toBuffer = function(t, e) {
                        return n("undefined" !== typeof s), this.toArrayLike(s, t, e)
                    }, o.prototype.toArray = function(t, e) {
                        return this.toArrayLike(Array, t, e)
                    }, o.prototype.toArrayLike = function(t, e, r) {
                        var i = this.byteLength(),
                            o = r || Math.max(1, i);
                        n(i <= o, "byte array longer than desired length"), n(o > 0, "Requested array length <= 0"), this.strip();
                        var s, a, u = "le" === e,
                            h = new t(o),
                            l = this.clone();
                        if (u) {
                            for (a = 0; !l.isZero(); a++) s = l.andln(255), l.iushrn(8), h[a] = s;
                            for (; a < o; a++) h[a] = 0
                        } else {
                            for (a = 0; a < o - i; a++) h[a] = 0;
                            for (a = 0; !l.isZero(); a++) s = l.andln(255), l.iushrn(8), h[o - a - 1] = s
                        }
                        return h
                    }, Math.clz32 ? o.prototype._countBits = function(t) {
                        return 32 - Math.clz32(t)
                    } : o.prototype._countBits = function(t) {
                        var e = t,
                            r = 0;
                        return e >= 4096 && (r += 13, e >>>= 13), e >= 64 && (r += 7, e >>>= 7), e >= 8 && (r += 4, e >>>= 4), e >= 2 && (r += 2, e >>>= 2), r + e
                    }, o.prototype._zeroBits = function(t) {
                        if (0 === t) return 26;
                        var e = t,
                            r = 0;
                        return 0 === (8191 & e) && (r += 13, e >>>= 13), 0 === (127 & e) && (r += 7, e >>>= 7), 0 === (15 & e) && (r += 4, e >>>= 4), 0 === (3 & e) && (r += 2, e >>>= 2), 0 === (1 & e) && r++, r
                    }, o.prototype.bitLength = function() {
                        var t = this.words[this.length - 1],
                            e = this._countBits(t);
                        return 26 * (this.length - 1) + e
                    }, o.prototype.zeroBits = function() {
                        if (this.isZero()) return 0;
                        for (var t = 0, e = 0; e < this.length; e++) {
                            var r = this._zeroBits(this.words[e]);
                            if (t += r, 26 !== r) break
                        }
                        return t
                    }, o.prototype.byteLength = function() {
                        return Math.ceil(this.bitLength() / 8)
                    }, o.prototype.toTwos = function(t) {
                        return 0 !== this.negative ? this.abs().inotn(t).iaddn(1) : this.clone()
                    }, o.prototype.fromTwos = function(t) {
                        return this.testn(t - 1) ? this.notn(t).iaddn(1).ineg() : this.clone()
                    }, o.prototype.isNeg = function() {
                        return 0 !== this.negative
                    }, o.prototype.neg = function() {
                        return this.clone().ineg()
                    }, o.prototype.ineg = function() {
                        return this.isZero() || (this.negative ^= 1), this
                    }, o.prototype.iuor = function(t) {
                        while (this.length < t.length) this.words[this.length++] = 0;
                        for (var e = 0; e < t.length; e++) this.words[e] = this.words[e] | t.words[e];
                        return this.strip()
                    }, o.prototype.ior = function(t) {
                        return n(0 === (this.negative | t.negative)), this.iuor(t)
                    }, o.prototype.or = function(t) {
                        return this.length > t.length ? this.clone().ior(t) : t.clone().ior(this)
                    }, o.prototype.uor = function(t) {
                        return this.length > t.length ? this.clone().iuor(t) : t.clone().iuor(this)
                    }, o.prototype.iuand = function(t) {
                        var e;
                        e = this.length > t.length ? t : this;
                        for (var r = 0; r < e.length; r++) this.words[r] = this.words[r] & t.words[r];
                        return this.length = e.length, this.strip()
                    }, o.prototype.iand = function(t) {
                        return n(0 === (this.negative | t.negative)), this.iuand(t)
                    }, o.prototype.and = function(t) {
                        return this.length > t.length ? this.clone().iand(t) : t.clone().iand(this)
                    }, o.prototype.uand = function(t) {
                        return this.length > t.length ? this.clone().iuand(t) : t.clone().iuand(this)
                    }, o.prototype.iuxor = function(t) {
                        var e, r;
                        this.length > t.length ? (e = this, r = t) : (e = t, r = this);
                        for (var n = 0; n < r.length; n++) this.words[n] = e.words[n] ^ r.words[n];
                        if (this !== e)
                            for (; n < e.length; n++) this.words[n] = e.words[n];
                        return this.length = e.length, this.strip()
                    }, o.prototype.ixor = function(t) {
                        return n(0 === (this.negative | t.negative)), this.iuxor(t)
                    }, o.prototype.xor = function(t) {
                        return this.length > t.length ? this.clone().ixor(t) : t.clone().ixor(this)
                    }, o.prototype.uxor = function(t) {
                        return this.length > t.length ? this.clone().iuxor(t) : t.clone().iuxor(this)
                    }, o.prototype.inotn = function(t) {
                        n("number" === typeof t && t >= 0);
                        var e = 0 | Math.ceil(t / 26),
                            r = t % 26;
                        this._expand(e), r > 0 && e--;
                        for (var i = 0; i < e; i++) this.words[i] = 67108863 & ~this.words[i];
                        return r > 0 && (this.words[i] = ~this.words[i] & 67108863 >> 26 - r), this.strip()
                    }, o.prototype.notn = function(t) {
                        return this.clone().inotn(t)
                    }, o.prototype.setn = function(t, e) {
                        n("number" === typeof t && t >= 0);
                        var r = t / 26 | 0,
                            i = t % 26;
                        return this._expand(r + 1), this.words[r] = e ? this.words[r] | 1 << i : this.words[r] & ~(1 << i), this.strip()
                    }, o.prototype.iadd = function(t) {
                        var e, r, n;
                        if (0 !== this.negative && 0 === t.negative) return this.negative = 0, e = this.isub(t), this.negative ^= 1, this._normSign();
                        if (0 === this.negative && 0 !== t.negative) return t.negative = 0, e = this.isub(t), t.negative = 1, e._normSign();
                        this.length > t.length ? (r = this, n = t) : (r = t, n = this);
                        for (var i = 0, o = 0; o < n.length; o++) e = (0 | r.words[o]) + (0 | n.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                        for (; 0 !== i && o < r.length; o++) e = (0 | r.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                        if (this.length = r.length, 0 !== i) this.words[this.length] = i, this.length++;
                        else if (r !== this)
                            for (; o < r.length; o++) this.words[o] = r.words[o];
                        return this
                    }, o.prototype.add = function(t) {
                        var e;
                        return 0 !== t.negative && 0 === this.negative ? (t.negative = 0, e = this.sub(t), t.negative ^= 1, e) : 0 === t.negative && 0 !== this.negative ? (this.negative = 0, e = t.sub(this), this.negative = 1, e) : this.length > t.length ? this.clone().iadd(t) : t.clone().iadd(this)
                    }, o.prototype.isub = function(t) {
                        if (0 !== t.negative) {
                            t.negative = 0;
                            var e = this.iadd(t);
                            return t.negative = 1, e._normSign()
                        }
                        if (0 !== this.negative) return this.negative = 0, this.iadd(t), this.negative = 1, this._normSign();
                        var r, n, i = this.cmp(t);
                        if (0 === i) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
                        i > 0 ? (r = this, n = t) : (r = t, n = this);
                        for (var o = 0, s = 0; s < n.length; s++) e = (0 | r.words[s]) - (0 | n.words[s]) + o, o = e >> 26, this.words[s] = 67108863 & e;
                        for (; 0 !== o && s < r.length; s++) e = (0 | r.words[s]) + o, o = e >> 26, this.words[s] = 67108863 & e;
                        if (0 === o && s < r.length && r !== this)
                            for (; s < r.length; s++) this.words[s] = r.words[s];
                        return this.length = Math.max(this.length, s), r !== this && (this.negative = 1), this.strip()
                    }, o.prototype.sub = function(t) {
                        return this.clone().isub(t)
                    };
                    var p = function(t, e, r) {
                        var n, i, o, s = t.words,
                            a = e.words,
                            u = r.words,
                            h = 0,
                            l = 0 | s[0],
                            f = 8191 & l,
                            c = l >>> 13,
                            d = 0 | s[1],
                            m = 8191 & d,
                            p = d >>> 13,
                            g = 0 | s[2],
                            v = 8191 & g,
                            y = g >>> 13,
                            w = 0 | s[3],
                            b = 8191 & w,
                            M = w >>> 13,
                            E = 0 | s[4],
                            N = 8191 & E,
                            A = E >>> 13,
                            _ = 0 | s[5],
                            S = 8191 & _,
                            I = _ >>> 13,
                            R = 0 | s[6],
                            P = 8191 & R,
                            k = R >>> 13,
                            x = 0 | s[7],
                            T = 8191 & x,
                            O = x >>> 13,
                            C = 0 | s[8],
                            U = 8191 & C,
                            F = C >>> 13,
                            B = 0 | s[9],
                            L = 8191 & B,
                            D = B >>> 13,
                            G = 0 | a[0],
                            j = 8191 & G,
                            q = G >>> 13,
                            z = 0 | a[1],
                            K = 8191 & z,
                            W = z >>> 13,
                            V = 0 | a[2],
                            H = 8191 & V,
                            J = V >>> 13,
                            Z = 0 | a[3],
                            X = 8191 & Z,
                            $ = Z >>> 13,
                            Y = 0 | a[4],
                            Q = 8191 & Y,
                            tt = Y >>> 13,
                            et = 0 | a[5],
                            rt = 8191 & et,
                            nt = et >>> 13,
                            it = 0 | a[6],
                            ot = 8191 & it,
                            st = it >>> 13,
                            at = 0 | a[7],
                            ut = 8191 & at,
                            ht = at >>> 13,
                            lt = 0 | a[8],
                            ft = 8191 & lt,
                            ct = lt >>> 13,
                            dt = 0 | a[9],
                            mt = 8191 & dt,
                            pt = dt >>> 13;
                        r.negative = t.negative ^ e.negative, r.length = 19, n = Math.imul(f, j), i = Math.imul(f, q), i = i + Math.imul(c, j) | 0, o = Math.imul(c, q);
                        var gt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (gt >>> 26) | 0, gt &= 67108863, n = Math.imul(m, j), i = Math.imul(m, q), i = i + Math.imul(p, j) | 0, o = Math.imul(p, q), n = n + Math.imul(f, K) | 0, i = i + Math.imul(f, W) | 0, i = i + Math.imul(c, K) | 0, o = o + Math.imul(c, W) | 0;
                        var vt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (vt >>> 26) | 0, vt &= 67108863, n = Math.imul(v, j), i = Math.imul(v, q), i = i + Math.imul(y, j) | 0, o = Math.imul(y, q), n = n + Math.imul(m, K) | 0, i = i + Math.imul(m, W) | 0, i = i + Math.imul(p, K) | 0, o = o + Math.imul(p, W) | 0, n = n + Math.imul(f, H) | 0, i = i + Math.imul(f, J) | 0, i = i + Math.imul(c, H) | 0, o = o + Math.imul(c, J) | 0;
                        var yt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (yt >>> 26) | 0, yt &= 67108863, n = Math.imul(b, j), i = Math.imul(b, q), i = i + Math.imul(M, j) | 0, o = Math.imul(M, q), n = n + Math.imul(v, K) | 0, i = i + Math.imul(v, W) | 0, i = i + Math.imul(y, K) | 0, o = o + Math.imul(y, W) | 0, n = n + Math.imul(m, H) | 0, i = i + Math.imul(m, J) | 0, i = i + Math.imul(p, H) | 0, o = o + Math.imul(p, J) | 0, n = n + Math.imul(f, X) | 0, i = i + Math.imul(f, $) | 0, i = i + Math.imul(c, X) | 0, o = o + Math.imul(c, $) | 0;
                        var wt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (wt >>> 26) | 0, wt &= 67108863, n = Math.imul(N, j), i = Math.imul(N, q), i = i + Math.imul(A, j) | 0, o = Math.imul(A, q), n = n + Math.imul(b, K) | 0, i = i + Math.imul(b, W) | 0, i = i + Math.imul(M, K) | 0, o = o + Math.imul(M, W) | 0, n = n + Math.imul(v, H) | 0, i = i + Math.imul(v, J) | 0, i = i + Math.imul(y, H) | 0, o = o + Math.imul(y, J) | 0, n = n + Math.imul(m, X) | 0, i = i + Math.imul(m, $) | 0, i = i + Math.imul(p, X) | 0, o = o + Math.imul(p, $) | 0, n = n + Math.imul(f, Q) | 0, i = i + Math.imul(f, tt) | 0, i = i + Math.imul(c, Q) | 0, o = o + Math.imul(c, tt) | 0;
                        var bt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (bt >>> 26) | 0, bt &= 67108863, n = Math.imul(S, j), i = Math.imul(S, q), i = i + Math.imul(I, j) | 0, o = Math.imul(I, q), n = n + Math.imul(N, K) | 0, i = i + Math.imul(N, W) | 0, i = i + Math.imul(A, K) | 0, o = o + Math.imul(A, W) | 0, n = n + Math.imul(b, H) | 0, i = i + Math.imul(b, J) | 0, i = i + Math.imul(M, H) | 0, o = o + Math.imul(M, J) | 0, n = n + Math.imul(v, X) | 0, i = i + Math.imul(v, $) | 0, i = i + Math.imul(y, X) | 0, o = o + Math.imul(y, $) | 0, n = n + Math.imul(m, Q) | 0, i = i + Math.imul(m, tt) | 0, i = i + Math.imul(p, Q) | 0, o = o + Math.imul(p, tt) | 0, n = n + Math.imul(f, rt) | 0, i = i + Math.imul(f, nt) | 0, i = i + Math.imul(c, rt) | 0, o = o + Math.imul(c, nt) | 0;
                        var Mt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (Mt >>> 26) | 0, Mt &= 67108863, n = Math.imul(P, j), i = Math.imul(P, q), i = i + Math.imul(k, j) | 0, o = Math.imul(k, q), n = n + Math.imul(S, K) | 0, i = i + Math.imul(S, W) | 0, i = i + Math.imul(I, K) | 0, o = o + Math.imul(I, W) | 0, n = n + Math.imul(N, H) | 0, i = i + Math.imul(N, J) | 0, i = i + Math.imul(A, H) | 0, o = o + Math.imul(A, J) | 0, n = n + Math.imul(b, X) | 0, i = i + Math.imul(b, $) | 0, i = i + Math.imul(M, X) | 0, o = o + Math.imul(M, $) | 0, n = n + Math.imul(v, Q) | 0, i = i + Math.imul(v, tt) | 0, i = i + Math.imul(y, Q) | 0, o = o + Math.imul(y, tt) | 0, n = n + Math.imul(m, rt) | 0, i = i + Math.imul(m, nt) | 0, i = i + Math.imul(p, rt) | 0, o = o + Math.imul(p, nt) | 0, n = n + Math.imul(f, ot) | 0, i = i + Math.imul(f, st) | 0, i = i + Math.imul(c, ot) | 0, o = o + Math.imul(c, st) | 0;
                        var Et = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (Et >>> 26) | 0, Et &= 67108863, n = Math.imul(T, j), i = Math.imul(T, q), i = i + Math.imul(O, j) | 0, o = Math.imul(O, q), n = n + Math.imul(P, K) | 0, i = i + Math.imul(P, W) | 0, i = i + Math.imul(k, K) | 0, o = o + Math.imul(k, W) | 0, n = n + Math.imul(S, H) | 0, i = i + Math.imul(S, J) | 0, i = i + Math.imul(I, H) | 0, o = o + Math.imul(I, J) | 0, n = n + Math.imul(N, X) | 0, i = i + Math.imul(N, $) | 0, i = i + Math.imul(A, X) | 0, o = o + Math.imul(A, $) | 0, n = n + Math.imul(b, Q) | 0, i = i + Math.imul(b, tt) | 0, i = i + Math.imul(M, Q) | 0, o = o + Math.imul(M, tt) | 0, n = n + Math.imul(v, rt) | 0, i = i + Math.imul(v, nt) | 0, i = i + Math.imul(y, rt) | 0, o = o + Math.imul(y, nt) | 0, n = n + Math.imul(m, ot) | 0, i = i + Math.imul(m, st) | 0, i = i + Math.imul(p, ot) | 0, o = o + Math.imul(p, st) | 0, n = n + Math.imul(f, ut) | 0, i = i + Math.imul(f, ht) | 0, i = i + Math.imul(c, ut) | 0, o = o + Math.imul(c, ht) | 0;
                        var Nt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (Nt >>> 26) | 0, Nt &= 67108863, n = Math.imul(U, j), i = Math.imul(U, q), i = i + Math.imul(F, j) | 0, o = Math.imul(F, q), n = n + Math.imul(T, K) | 0, i = i + Math.imul(T, W) | 0, i = i + Math.imul(O, K) | 0, o = o + Math.imul(O, W) | 0, n = n + Math.imul(P, H) | 0, i = i + Math.imul(P, J) | 0, i = i + Math.imul(k, H) | 0, o = o + Math.imul(k, J) | 0, n = n + Math.imul(S, X) | 0, i = i + Math.imul(S, $) | 0, i = i + Math.imul(I, X) | 0, o = o + Math.imul(I, $) | 0, n = n + Math.imul(N, Q) | 0, i = i + Math.imul(N, tt) | 0, i = i + Math.imul(A, Q) | 0, o = o + Math.imul(A, tt) | 0, n = n + Math.imul(b, rt) | 0, i = i + Math.imul(b, nt) | 0, i = i + Math.imul(M, rt) | 0, o = o + Math.imul(M, nt) | 0, n = n + Math.imul(v, ot) | 0, i = i + Math.imul(v, st) | 0, i = i + Math.imul(y, ot) | 0, o = o + Math.imul(y, st) | 0, n = n + Math.imul(m, ut) | 0, i = i + Math.imul(m, ht) | 0, i = i + Math.imul(p, ut) | 0, o = o + Math.imul(p, ht) | 0, n = n + Math.imul(f, ft) | 0, i = i + Math.imul(f, ct) | 0, i = i + Math.imul(c, ft) | 0, o = o + Math.imul(c, ct) | 0;
                        var At = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (At >>> 26) | 0, At &= 67108863, n = Math.imul(L, j), i = Math.imul(L, q), i = i + Math.imul(D, j) | 0, o = Math.imul(D, q), n = n + Math.imul(U, K) | 0, i = i + Math.imul(U, W) | 0, i = i + Math.imul(F, K) | 0, o = o + Math.imul(F, W) | 0, n = n + Math.imul(T, H) | 0, i = i + Math.imul(T, J) | 0, i = i + Math.imul(O, H) | 0, o = o + Math.imul(O, J) | 0, n = n + Math.imul(P, X) | 0, i = i + Math.imul(P, $) | 0, i = i + Math.imul(k, X) | 0, o = o + Math.imul(k, $) | 0, n = n + Math.imul(S, Q) | 0, i = i + Math.imul(S, tt) | 0, i = i + Math.imul(I, Q) | 0, o = o + Math.imul(I, tt) | 0, n = n + Math.imul(N, rt) | 0, i = i + Math.imul(N, nt) | 0, i = i + Math.imul(A, rt) | 0, o = o + Math.imul(A, nt) | 0, n = n + Math.imul(b, ot) | 0, i = i + Math.imul(b, st) | 0, i = i + Math.imul(M, ot) | 0, o = o + Math.imul(M, st) | 0, n = n + Math.imul(v, ut) | 0, i = i + Math.imul(v, ht) | 0, i = i + Math.imul(y, ut) | 0, o = o + Math.imul(y, ht) | 0, n = n + Math.imul(m, ft) | 0, i = i + Math.imul(m, ct) | 0, i = i + Math.imul(p, ft) | 0, o = o + Math.imul(p, ct) | 0, n = n + Math.imul(f, mt) | 0, i = i + Math.imul(f, pt) | 0, i = i + Math.imul(c, mt) | 0, o = o + Math.imul(c, pt) | 0;
                        var _t = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (_t >>> 26) | 0, _t &= 67108863, n = Math.imul(L, K), i = Math.imul(L, W), i = i + Math.imul(D, K) | 0, o = Math.imul(D, W), n = n + Math.imul(U, H) | 0, i = i + Math.imul(U, J) | 0, i = i + Math.imul(F, H) | 0, o = o + Math.imul(F, J) | 0, n = n + Math.imul(T, X) | 0, i = i + Math.imul(T, $) | 0, i = i + Math.imul(O, X) | 0, o = o + Math.imul(O, $) | 0, n = n + Math.imul(P, Q) | 0, i = i + Math.imul(P, tt) | 0, i = i + Math.imul(k, Q) | 0, o = o + Math.imul(k, tt) | 0, n = n + Math.imul(S, rt) | 0, i = i + Math.imul(S, nt) | 0, i = i + Math.imul(I, rt) | 0, o = o + Math.imul(I, nt) | 0, n = n + Math.imul(N, ot) | 0, i = i + Math.imul(N, st) | 0, i = i + Math.imul(A, ot) | 0, o = o + Math.imul(A, st) | 0, n = n + Math.imul(b, ut) | 0, i = i + Math.imul(b, ht) | 0, i = i + Math.imul(M, ut) | 0, o = o + Math.imul(M, ht) | 0, n = n + Math.imul(v, ft) | 0, i = i + Math.imul(v, ct) | 0, i = i + Math.imul(y, ft) | 0, o = o + Math.imul(y, ct) | 0, n = n + Math.imul(m, mt) | 0, i = i + Math.imul(m, pt) | 0, i = i + Math.imul(p, mt) | 0, o = o + Math.imul(p, pt) | 0;
                        var St = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (St >>> 26) | 0, St &= 67108863, n = Math.imul(L, H), i = Math.imul(L, J), i = i + Math.imul(D, H) | 0, o = Math.imul(D, J), n = n + Math.imul(U, X) | 0, i = i + Math.imul(U, $) | 0, i = i + Math.imul(F, X) | 0, o = o + Math.imul(F, $) | 0, n = n + Math.imul(T, Q) | 0, i = i + Math.imul(T, tt) | 0, i = i + Math.imul(O, Q) | 0, o = o + Math.imul(O, tt) | 0, n = n + Math.imul(P, rt) | 0, i = i + Math.imul(P, nt) | 0, i = i + Math.imul(k, rt) | 0, o = o + Math.imul(k, nt) | 0, n = n + Math.imul(S, ot) | 0, i = i + Math.imul(S, st) | 0, i = i + Math.imul(I, ot) | 0, o = o + Math.imul(I, st) | 0, n = n + Math.imul(N, ut) | 0, i = i + Math.imul(N, ht) | 0, i = i + Math.imul(A, ut) | 0, o = o + Math.imul(A, ht) | 0, n = n + Math.imul(b, ft) | 0, i = i + Math.imul(b, ct) | 0, i = i + Math.imul(M, ft) | 0, o = o + Math.imul(M, ct) | 0, n = n + Math.imul(v, mt) | 0, i = i + Math.imul(v, pt) | 0, i = i + Math.imul(y, mt) | 0, o = o + Math.imul(y, pt) | 0;
                        var It = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (It >>> 26) | 0, It &= 67108863, n = Math.imul(L, X), i = Math.imul(L, $), i = i + Math.imul(D, X) | 0, o = Math.imul(D, $), n = n + Math.imul(U, Q) | 0, i = i + Math.imul(U, tt) | 0, i = i + Math.imul(F, Q) | 0, o = o + Math.imul(F, tt) | 0, n = n + Math.imul(T, rt) | 0, i = i + Math.imul(T, nt) | 0, i = i + Math.imul(O, rt) | 0, o = o + Math.imul(O, nt) | 0, n = n + Math.imul(P, ot) | 0, i = i + Math.imul(P, st) | 0, i = i + Math.imul(k, ot) | 0, o = o + Math.imul(k, st) | 0, n = n + Math.imul(S, ut) | 0, i = i + Math.imul(S, ht) | 0, i = i + Math.imul(I, ut) | 0, o = o + Math.imul(I, ht) | 0, n = n + Math.imul(N, ft) | 0, i = i + Math.imul(N, ct) | 0, i = i + Math.imul(A, ft) | 0, o = o + Math.imul(A, ct) | 0, n = n + Math.imul(b, mt) | 0, i = i + Math.imul(b, pt) | 0, i = i + Math.imul(M, mt) | 0, o = o + Math.imul(M, pt) | 0;
                        var Rt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (Rt >>> 26) | 0, Rt &= 67108863, n = Math.imul(L, Q), i = Math.imul(L, tt), i = i + Math.imul(D, Q) | 0, o = Math.imul(D, tt), n = n + Math.imul(U, rt) | 0, i = i + Math.imul(U, nt) | 0, i = i + Math.imul(F, rt) | 0, o = o + Math.imul(F, nt) | 0, n = n + Math.imul(T, ot) | 0, i = i + Math.imul(T, st) | 0, i = i + Math.imul(O, ot) | 0, o = o + Math.imul(O, st) | 0, n = n + Math.imul(P, ut) | 0, i = i + Math.imul(P, ht) | 0, i = i + Math.imul(k, ut) | 0, o = o + Math.imul(k, ht) | 0, n = n + Math.imul(S, ft) | 0, i = i + Math.imul(S, ct) | 0, i = i + Math.imul(I, ft) | 0, o = o + Math.imul(I, ct) | 0, n = n + Math.imul(N, mt) | 0, i = i + Math.imul(N, pt) | 0, i = i + Math.imul(A, mt) | 0, o = o + Math.imul(A, pt) | 0;
                        var Pt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (Pt >>> 26) | 0, Pt &= 67108863, n = Math.imul(L, rt), i = Math.imul(L, nt), i = i + Math.imul(D, rt) | 0, o = Math.imul(D, nt), n = n + Math.imul(U, ot) | 0, i = i + Math.imul(U, st) | 0, i = i + Math.imul(F, ot) | 0, o = o + Math.imul(F, st) | 0, n = n + Math.imul(T, ut) | 0, i = i + Math.imul(T, ht) | 0, i = i + Math.imul(O, ut) | 0, o = o + Math.imul(O, ht) | 0, n = n + Math.imul(P, ft) | 0, i = i + Math.imul(P, ct) | 0, i = i + Math.imul(k, ft) | 0, o = o + Math.imul(k, ct) | 0, n = n + Math.imul(S, mt) | 0, i = i + Math.imul(S, pt) | 0, i = i + Math.imul(I, mt) | 0, o = o + Math.imul(I, pt) | 0;
                        var kt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (kt >>> 26) | 0, kt &= 67108863, n = Math.imul(L, ot), i = Math.imul(L, st), i = i + Math.imul(D, ot) | 0, o = Math.imul(D, st), n = n + Math.imul(U, ut) | 0, i = i + Math.imul(U, ht) | 0, i = i + Math.imul(F, ut) | 0, o = o + Math.imul(F, ht) | 0, n = n + Math.imul(T, ft) | 0, i = i + Math.imul(T, ct) | 0, i = i + Math.imul(O, ft) | 0, o = o + Math.imul(O, ct) | 0, n = n + Math.imul(P, mt) | 0, i = i + Math.imul(P, pt) | 0, i = i + Math.imul(k, mt) | 0, o = o + Math.imul(k, pt) | 0;
                        var xt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (xt >>> 26) | 0, xt &= 67108863, n = Math.imul(L, ut), i = Math.imul(L, ht), i = i + Math.imul(D, ut) | 0, o = Math.imul(D, ht), n = n + Math.imul(U, ft) | 0, i = i + Math.imul(U, ct) | 0, i = i + Math.imul(F, ft) | 0, o = o + Math.imul(F, ct) | 0, n = n + Math.imul(T, mt) | 0, i = i + Math.imul(T, pt) | 0, i = i + Math.imul(O, mt) | 0, o = o + Math.imul(O, pt) | 0;
                        var Tt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (Tt >>> 26) | 0, Tt &= 67108863, n = Math.imul(L, ft), i = Math.imul(L, ct), i = i + Math.imul(D, ft) | 0, o = Math.imul(D, ct), n = n + Math.imul(U, mt) | 0, i = i + Math.imul(U, pt) | 0, i = i + Math.imul(F, mt) | 0, o = o + Math.imul(F, pt) | 0;
                        var Ot = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (Ot >>> 26) | 0, Ot &= 67108863, n = Math.imul(L, mt), i = Math.imul(L, pt), i = i + Math.imul(D, mt) | 0, o = Math.imul(D, pt);
                        var Ct = (h + n | 0) + ((8191 & i) << 13) | 0;
                        return h = (o + (i >>> 13) | 0) + (Ct >>> 26) | 0, Ct &= 67108863, u[0] = gt, u[1] = vt, u[2] = yt, u[3] = wt, u[4] = bt, u[5] = Mt, u[6] = Et, u[7] = Nt, u[8] = At, u[9] = _t, u[10] = St, u[11] = It, u[12] = Rt, u[13] = Pt, u[14] = kt, u[15] = xt, u[16] = Tt, u[17] = Ot, u[18] = Ct, 0 !== h && (u[19] = h, r.length++), r
                    };

                    function g(t, e, r) {
                        r.negative = e.negative ^ t.negative, r.length = t.length + e.length;
                        for (var n = 0, i = 0, o = 0; o < r.length - 1; o++) {
                            var s = i;
                            i = 0;
                            for (var a = 67108863 & n, u = Math.min(o, e.length - 1), h = Math.max(0, o - t.length + 1); h <= u; h++) {
                                var l = o - h,
                                    f = 0 | t.words[l],
                                    c = 0 | e.words[h],
                                    d = f * c,
                                    m = 67108863 & d;
                                s = s + (d / 67108864 | 0) | 0, m = m + a | 0, a = 67108863 & m, s = s + (m >>> 26) | 0, i += s >>> 26, s &= 67108863
                            }
                            r.words[o] = a, n = s, s = i
                        }
                        return 0 !== n ? r.words[o] = n : r.length--, r.strip()
                    }

                    function v(t, e, r) {
                        var n = new y;
                        return n.mulp(t, e, r)
                    }

                    function y(t, e) {
                        this.x = t, this.y = e
                    }
                    Math.imul || (p = m), o.prototype.mulTo = function(t, e) {
                        var r, n = this.length + t.length;
                        return r = 10 === this.length && 10 === t.length ? p(this, t, e) : n < 63 ? m(this, t, e) : n < 1024 ? g(this, t, e) : v(this, t, e), r
                    }, y.prototype.makeRBT = function(t) {
                        for (var e = new Array(t), r = o.prototype._countBits(t) - 1, n = 0; n < t; n++) e[n] = this.revBin(n, r, t);
                        return e
                    }, y.prototype.revBin = function(t, e, r) {
                        if (0 === t || t === r - 1) return t;
                        for (var n = 0, i = 0; i < e; i++) n |= (1 & t) << e - i - 1, t >>= 1;
                        return n
                    }, y.prototype.permute = function(t, e, r, n, i, o) {
                        for (var s = 0; s < o; s++) n[s] = e[t[s]], i[s] = r[t[s]]
                    }, y.prototype.transform = function(t, e, r, n, i, o) {
                        this.permute(o, t, e, r, n, i);
                        for (var s = 1; s < i; s <<= 1)
                            for (var a = s << 1, u = Math.cos(2 * Math.PI / a), h = Math.sin(2 * Math.PI / a), l = 0; l < i; l += a)
                                for (var f = u, c = h, d = 0; d < s; d++) {
                                    var m = r[l + d],
                                        p = n[l + d],
                                        g = r[l + d + s],
                                        v = n[l + d + s],
                                        y = f * g - c * v;
                                    v = f * v + c * g, g = y, r[l + d] = m + g, n[l + d] = p + v, r[l + d + s] = m - g, n[l + d + s] = p - v, d !== a && (y = u * f - h * c, c = u * c + h * f, f = y)
                                }
                    }, y.prototype.guessLen13b = function(t, e) {
                        var r = 1 | Math.max(e, t),
                            n = 1 & r,
                            i = 0;
                        for (r = r / 2 | 0; r; r >>>= 1) i++;
                        return 1 << i + 1 + n
                    }, y.prototype.conjugate = function(t, e, r) {
                        if (!(r <= 1))
                            for (var n = 0; n < r / 2; n++) {
                                var i = t[n];
                                t[n] = t[r - n - 1], t[r - n - 1] = i, i = e[n], e[n] = -e[r - n - 1], e[r - n - 1] = -i
                            }
                    }, y.prototype.normalize13b = function(t, e) {
                        for (var r = 0, n = 0; n < e / 2; n++) {
                            var i = 8192 * Math.round(t[2 * n + 1] / e) + Math.round(t[2 * n] / e) + r;
                            t[n] = 67108863 & i, r = i < 67108864 ? 0 : i / 67108864 | 0
                        }
                        return t
                    }, y.prototype.convert13b = function(t, e, r, i) {
                        for (var o = 0, s = 0; s < e; s++) o += 0 | t[s], r[2 * s] = 8191 & o, o >>>= 13, r[2 * s + 1] = 8191 & o, o >>>= 13;
                        for (s = 2 * e; s < i; ++s) r[s] = 0;
                        n(0 === o), n(0 === (-8192 & o))
                    }, y.prototype.stub = function(t) {
                        for (var e = new Array(t), r = 0; r < t; r++) e[r] = 0;
                        return e
                    }, y.prototype.mulp = function(t, e, r) {
                        var n = 2 * this.guessLen13b(t.length, e.length),
                            i = this.makeRBT(n),
                            o = this.stub(n),
                            s = new Array(n),
                            a = new Array(n),
                            u = new Array(n),
                            h = new Array(n),
                            l = new Array(n),
                            f = new Array(n),
                            c = r.words;
                        c.length = n, this.convert13b(t.words, t.length, s, n), this.convert13b(e.words, e.length, h, n), this.transform(s, o, a, u, n, i), this.transform(h, o, l, f, n, i);
                        for (var d = 0; d < n; d++) {
                            var m = a[d] * l[d] - u[d] * f[d];
                            u[d] = a[d] * f[d] + u[d] * l[d], a[d] = m
                        }
                        return this.conjugate(a, u, n), this.transform(a, u, c, o, n, i), this.conjugate(c, o, n), this.normalize13b(c, n), r.negative = t.negative ^ e.negative, r.length = t.length + e.length, r.strip()
                    }, o.prototype.mul = function(t) {
                        var e = new o(null);
                        return e.words = new Array(this.length + t.length), this.mulTo(t, e)
                    }, o.prototype.mulf = function(t) {
                        var e = new o(null);
                        return e.words = new Array(this.length + t.length), v(this, t, e)
                    }, o.prototype.imul = function(t) {
                        return this.clone().mulTo(t, this)
                    }, o.prototype.imuln = function(t) {
                        n("number" === typeof t), n(t < 67108864);
                        for (var e = 0, r = 0; r < this.length; r++) {
                            var i = (0 | this.words[r]) * t,
                                o = (67108863 & i) + (67108863 & e);
                            e >>= 26, e += i / 67108864 | 0, e += o >>> 26, this.words[r] = 67108863 & o
                        }
                        return 0 !== e && (this.words[r] = e, this.length++), this
                    }, o.prototype.muln = function(t) {
                        return this.clone().imuln(t)
                    }, o.prototype.sqr = function() {
                        return this.mul(this)
                    }, o.prototype.isqr = function() {
                        return this.imul(this.clone())
                    }, o.prototype.pow = function(t) {
                        var e = d(t);
                        if (0 === e.length) return new o(1);
                        for (var r = this, n = 0; n < e.length; n++, r = r.sqr())
                            if (0 !== e[n]) break;
                        if (++n < e.length)
                            for (var i = r.sqr(); n < e.length; n++, i = i.sqr()) 0 !== e[n] && (r = r.mul(i));
                        return r
                    }, o.prototype.iushln = function(t) {
                        n("number" === typeof t && t >= 0);
                        var e, r = t % 26,
                            i = (t - r) / 26,
                            o = 67108863 >>> 26 - r << 26 - r;
                        if (0 !== r) {
                            var s = 0;
                            for (e = 0; e < this.length; e++) {
                                var a = this.words[e] & o,
                                    u = (0 | this.words[e]) - a << r;
                                this.words[e] = u | s, s = a >>> 26 - r
                            }
                            s && (this.words[e] = s, this.length++)
                        }
                        if (0 !== i) {
                            for (e = this.length - 1; e >= 0; e--) this.words[e + i] = this.words[e];
                            for (e = 0; e < i; e++) this.words[e] = 0;
                            this.length += i
                        }
                        return this.strip()
                    }, o.prototype.ishln = function(t) {
                        return n(0 === this.negative), this.iushln(t)
                    }, o.prototype.iushrn = function(t, e, r) {
                        var i;
                        n("number" === typeof t && t >= 0), i = e ? (e - e % 26) / 26 : 0;
                        var o = t % 26,
                            s = Math.min((t - o) / 26, this.length),
                            a = 67108863 ^ 67108863 >>> o << o,
                            u = r;
                        if (i -= s, i = Math.max(0, i), u) {
                            for (var h = 0; h < s; h++) u.words[h] = this.words[h];
                            u.length = s
                        }
                        if (0 === s);
                        else if (this.length > s)
                            for (this.length -= s, h = 0; h < this.length; h++) this.words[h] = this.words[h + s];
                        else this.words[0] = 0, this.length = 1;
                        var l = 0;
                        for (h = this.length - 1; h >= 0 && (0 !== l || h >= i); h--) {
                            var f = 0 | this.words[h];
                            this.words[h] = l << 26 - o | f >>> o, l = f & a
                        }
                        return u && 0 !== l && (u.words[u.length++] = l), 0 === this.length && (this.words[0] = 0, this.length = 1), this.strip()
                    }, o.prototype.ishrn = function(t, e, r) {
                        return n(0 === this.negative), this.iushrn(t, e, r)
                    }, o.prototype.shln = function(t) {
                        return this.clone().ishln(t)
                    }, o.prototype.ushln = function(t) {
                        return this.clone().iushln(t)
                    }, o.prototype.shrn = function(t) {
                        return this.clone().ishrn(t)
                    }, o.prototype.ushrn = function(t) {
                        return this.clone().iushrn(t)
                    }, o.prototype.testn = function(t) {
                        n("number" === typeof t && t >= 0);
                        var e = t % 26,
                            r = (t - e) / 26,
                            i = 1 << e;
                        if (this.length <= r) return !1;
                        var o = this.words[r];
                        return !!(o & i)
                    }, o.prototype.imaskn = function(t) {
                        n("number" === typeof t && t >= 0);
                        var e = t % 26,
                            r = (t - e) / 26;
                        if (n(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r) return this;
                        if (0 !== e && r++, this.length = Math.min(r, this.length), 0 !== e) {
                            var i = 67108863 ^ 67108863 >>> e << e;
                            this.words[this.length - 1] &= i
                        }
                        return this.strip()
                    }, o.prototype.maskn = function(t) {
                        return this.clone().imaskn(t)
                    }, o.prototype.iaddn = function(t) {
                        return n("number" === typeof t), n(t < 67108864), t < 0 ? this.isubn(-t) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) < t ? (this.words[0] = t - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(t), this.negative = 1, this) : this._iaddn(t)
                    }, o.prototype._iaddn = function(t) {
                        this.words[0] += t;
                        for (var e = 0; e < this.length && this.words[e] >= 67108864; e++) this.words[e] -= 67108864, e === this.length - 1 ? this.words[e + 1] = 1 : this.words[e + 1]++;
                        return this.length = Math.max(this.length, e + 1), this
                    }, o.prototype.isubn = function(t) {
                        if (n("number" === typeof t), n(t < 67108864), t < 0) return this.iaddn(-t);
                        if (0 !== this.negative) return this.negative = 0, this.iaddn(t), this.negative = 1, this;
                        if (this.words[0] -= t, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
                        else
                            for (var e = 0; e < this.length && this.words[e] < 0; e++) this.words[e] += 67108864, this.words[e + 1] -= 1;
                        return this.strip()
                    }, o.prototype.addn = function(t) {
                        return this.clone().iaddn(t)
                    }, o.prototype.subn = function(t) {
                        return this.clone().isubn(t)
                    }, o.prototype.iabs = function() {
                        return this.negative = 0, this
                    }, o.prototype.abs = function() {
                        return this.clone().iabs()
                    }, o.prototype._ishlnsubmul = function(t, e, r) {
                        var i, o, s = t.length + r;
                        this._expand(s);
                        var a = 0;
                        for (i = 0; i < t.length; i++) {
                            o = (0 | this.words[i + r]) + a;
                            var u = (0 | t.words[i]) * e;
                            o -= 67108863 & u, a = (o >> 26) - (u / 67108864 | 0), this.words[i + r] = 67108863 & o
                        }
                        for (; i < this.length - r; i++) o = (0 | this.words[i + r]) + a, a = o >> 26, this.words[i + r] = 67108863 & o;
                        if (0 === a) return this.strip();
                        for (n(-1 === a), a = 0, i = 0; i < this.length; i++) o = -(0 | this.words[i]) + a, a = o >> 26, this.words[i] = 67108863 & o;
                        return this.negative = 1, this.strip()
                    }, o.prototype._wordDiv = function(t, e) {
                        var r = this.length - t.length,
                            n = this.clone(),
                            i = t,
                            s = 0 | i.words[i.length - 1],
                            a = this._countBits(s);
                        r = 26 - a, 0 !== r && (i = i.ushln(r), n.iushln(r), s = 0 | i.words[i.length - 1]);
                        var u, h = n.length - i.length;
                        if ("mod" !== e) {
                            u = new o(null), u.length = h + 1, u.words = new Array(u.length);
                            for (var l = 0; l < u.length; l++) u.words[l] = 0
                        }
                        var f = n.clone()._ishlnsubmul(i, 1, h);
                        0 === f.negative && (n = f, u && (u.words[h] = 1));
                        for (var c = h - 1; c >= 0; c--) {
                            var d = 67108864 * (0 | n.words[i.length + c]) + (0 | n.words[i.length + c - 1]);
                            d = Math.min(d / s | 0, 67108863), n._ishlnsubmul(i, d, c);
                            while (0 !== n.negative) d--, n.negative = 0, n._ishlnsubmul(i, 1, c), n.isZero() || (n.negative ^= 1);
                            u && (u.words[c] = d)
                        }
                        return u && u.strip(), n.strip(), "div" !== e && 0 !== r && n.iushrn(r), {
                            div: u || null,
                            mod: n
                        }
                    }, o.prototype.divmod = function(t, e, r) {
                        return n(!t.isZero()), this.isZero() ? {
                            div: new o(0),
                            mod: new o(0)
                        } : 0 !== this.negative && 0 === t.negative ? (a = this.neg().divmod(t, e), "mod" !== e && (i = a.div.neg()), "div" !== e && (s = a.mod.neg(), r && 0 !== s.negative && s.iadd(t)), {
                            div: i,
                            mod: s
                        }) : 0 === this.negative && 0 !== t.negative ? (a = this.divmod(t.neg(), e), "mod" !== e && (i = a.div.neg()), {
                            div: i,
                            mod: a.mod
                        }) : 0 !== (this.negative & t.negative) ? (a = this.neg().divmod(t.neg(), e), "div" !== e && (s = a.mod.neg(), r && 0 !== s.negative && s.isub(t)), {
                            div: a.div,
                            mod: s
                        }) : t.length > this.length || this.cmp(t) < 0 ? {
                            div: new o(0),
                            mod: this
                        } : 1 === t.length ? "div" === e ? {
                            div: this.divn(t.words[0]),
                            mod: null
                        } : "mod" === e ? {
                            div: null,
                            mod: new o(this.modn(t.words[0]))
                        } : {
                            div: this.divn(t.words[0]),
                            mod: new o(this.modn(t.words[0]))
                        } : this._wordDiv(t, e);
                        var i, s, a
                    }, o.prototype.div = function(t) {
                        return this.divmod(t, "div", !1).div
                    }, o.prototype.mod = function(t) {
                        return this.divmod(t, "mod", !1).mod
                    }, o.prototype.umod = function(t) {
                        return this.divmod(t, "mod", !0).mod
                    }, o.prototype.divRound = function(t) {
                        var e = this.divmod(t);
                        if (e.mod.isZero()) return e.div;
                        var r = 0 !== e.div.negative ? e.mod.isub(t) : e.mod,
                            n = t.ushrn(1),
                            i = t.andln(1),
                            o = r.cmp(n);
                        return o < 0 || 1 === i && 0 === o ? e.div : 0 !== e.div.negative ? e.div.isubn(1) : e.div.iaddn(1)
                    }, o.prototype.modn = function(t) {
                        n(t <= 67108863);
                        for (var e = (1 << 26) % t, r = 0, i = this.length - 1; i >= 0; i--) r = (e * r + (0 | this.words[i])) % t;
                        return r
                    }, o.prototype.idivn = function(t) {
                        n(t <= 67108863);
                        for (var e = 0, r = this.length - 1; r >= 0; r--) {
                            var i = (0 | this.words[r]) + 67108864 * e;
                            this.words[r] = i / t | 0, e = i % t
                        }
                        return this.strip()
                    }, o.prototype.divn = function(t) {
                        return this.clone().idivn(t)
                    }, o.prototype.egcd = function(t) {
                        n(0 === t.negative), n(!t.isZero());
                        var e = this,
                            r = t.clone();
                        e = 0 !== e.negative ? e.umod(t) : e.clone();
                        var i = new o(1),
                            s = new o(0),
                            a = new o(0),
                            u = new o(1),
                            h = 0;
                        while (e.isEven() && r.isEven()) e.iushrn(1), r.iushrn(1), ++h;
                        var l = r.clone(),
                            f = e.clone();
                        while (!e.isZero()) {
                            for (var c = 0, d = 1; 0 === (e.words[0] & d) && c < 26; ++c, d <<= 1);
                            if (c > 0) {
                                e.iushrn(c);
                                while (c-- > 0)(i.isOdd() || s.isOdd()) && (i.iadd(l), s.isub(f)), i.iushrn(1), s.iushrn(1)
                            }
                            for (var m = 0, p = 1; 0 === (r.words[0] & p) && m < 26; ++m, p <<= 1);
                            if (m > 0) {
                                r.iushrn(m);
                                while (m-- > 0)(a.isOdd() || u.isOdd()) && (a.iadd(l), u.isub(f)), a.iushrn(1), u.iushrn(1)
                            }
                            e.cmp(r) >= 0 ? (e.isub(r), i.isub(a), s.isub(u)) : (r.isub(e), a.isub(i), u.isub(s))
                        }
                        return {
                            a: a,
                            b: u,
                            gcd: r.iushln(h)
                        }
                    }, o.prototype._invmp = function(t) {
                        n(0 === t.negative), n(!t.isZero());
                        var e = this,
                            r = t.clone();
                        e = 0 !== e.negative ? e.umod(t) : e.clone();
                        var i, s = new o(1),
                            a = new o(0),
                            u = r.clone();
                        while (e.cmpn(1) > 0 && r.cmpn(1) > 0) {
                            for (var h = 0, l = 1; 0 === (e.words[0] & l) && h < 26; ++h, l <<= 1);
                            if (h > 0) {
                                e.iushrn(h);
                                while (h-- > 0) s.isOdd() && s.iadd(u), s.iushrn(1)
                            }
                            for (var f = 0, c = 1; 0 === (r.words[0] & c) && f < 26; ++f, c <<= 1);
                            if (f > 0) {
                                r.iushrn(f);
                                while (f-- > 0) a.isOdd() && a.iadd(u), a.iushrn(1)
                            }
                            e.cmp(r) >= 0 ? (e.isub(r), s.isub(a)) : (r.isub(e), a.isub(s))
                        }
                        return i = 0 === e.cmpn(1) ? s : a, i.cmpn(0) < 0 && i.iadd(t), i
                    }, o.prototype.gcd = function(t) {
                        if (this.isZero()) return t.abs();
                        if (t.isZero()) return this.abs();
                        var e = this.clone(),
                            r = t.clone();
                        e.negative = 0, r.negative = 0;
                        for (var n = 0; e.isEven() && r.isEven(); n++) e.iushrn(1), r.iushrn(1);
                        do {
                            while (e.isEven()) e.iushrn(1);
                            while (r.isEven()) r.iushrn(1);
                            var i = e.cmp(r);
                            if (i < 0) {
                                var o = e;
                                e = r, r = o
                            } else if (0 === i || 0 === r.cmpn(1)) break;
                            e.isub(r)
                        } while (1);
                        return r.iushln(n)
                    }, o.prototype.invm = function(t) {
                        return this.egcd(t).a.umod(t)
                    }, o.prototype.isEven = function() {
                        return 0 === (1 & this.words[0])
                    }, o.prototype.isOdd = function() {
                        return 1 === (1 & this.words[0])
                    }, o.prototype.andln = function(t) {
                        return this.words[0] & t
                    }, o.prototype.bincn = function(t) {
                        n("number" === typeof t);
                        var e = t % 26,
                            r = (t - e) / 26,
                            i = 1 << e;
                        if (this.length <= r) return this._expand(r + 1), this.words[r] |= i, this;
                        for (var o = i, s = r; 0 !== o && s < this.length; s++) {
                            var a = 0 | this.words[s];
                            a += o, o = a >>> 26, a &= 67108863, this.words[s] = a
                        }
                        return 0 !== o && (this.words[s] = o, this.length++), this
                    }, o.prototype.isZero = function() {
                        return 1 === this.length && 0 === this.words[0]
                    }, o.prototype.cmpn = function(t) {
                        var e, r = t < 0;
                        if (0 !== this.negative && !r) return -1;
                        if (0 === this.negative && r) return 1;
                        if (this.strip(), this.length > 1) e = 1;
                        else {
                            r && (t = -t), n(t <= 67108863, "Number is too big");
                            var i = 0 | this.words[0];
                            e = i === t ? 0 : i < t ? -1 : 1
                        }
                        return 0 !== this.negative ? 0 | -e : e
                    }, o.prototype.cmp = function(t) {
                        if (0 !== this.negative && 0 === t.negative) return -1;
                        if (0 === this.negative && 0 !== t.negative) return 1;
                        var e = this.ucmp(t);
                        return 0 !== this.negative ? 0 | -e : e
                    }, o.prototype.ucmp = function(t) {
                        if (this.length > t.length) return 1;
                        if (this.length < t.length) return -1;
                        for (var e = 0, r = this.length - 1; r >= 0; r--) {
                            var n = 0 | this.words[r],
                                i = 0 | t.words[r];
                            if (n !== i) {
                                n < i ? e = -1 : n > i && (e = 1);
                                break
                            }
                        }
                        return e
                    }, o.prototype.gtn = function(t) {
                        return 1 === this.cmpn(t)
                    }, o.prototype.gt = function(t) {
                        return 1 === this.cmp(t)
                    }, o.prototype.gten = function(t) {
                        return this.cmpn(t) >= 0
                    }, o.prototype.gte = function(t) {
                        return this.cmp(t) >= 0
                    }, o.prototype.ltn = function(t) {
                        return -1 === this.cmpn(t)
                    }, o.prototype.lt = function(t) {
                        return -1 === this.cmp(t)
                    }, o.prototype.lten = function(t) {
                        return this.cmpn(t) <= 0
                    }, o.prototype.lte = function(t) {
                        return this.cmp(t) <= 0
                    }, o.prototype.eqn = function(t) {
                        return 0 === this.cmpn(t)
                    }, o.prototype.eq = function(t) {
                        return 0 === this.cmp(t)
                    }, o.red = function(t) {
                        return new _(t)
                    }, o.prototype.toRed = function(t) {
                        return n(!this.red, "Already a number in reduction context"), n(0 === this.negative, "red works only with positives"), t.convertTo(this)._forceRed(t)
                    }, o.prototype.fromRed = function() {
                        return n(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this)
                    }, o.prototype._forceRed = function(t) {
                        return this.red = t, this
                    }, o.prototype.forceRed = function(t) {
                        return n(!this.red, "Already a number in reduction context"), this._forceRed(t)
                    }, o.prototype.redAdd = function(t) {
                        return n(this.red, "redAdd works only with red numbers"), this.red.add(this, t)
                    }, o.prototype.redIAdd = function(t) {
                        return n(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t)
                    }, o.prototype.redSub = function(t) {
                        return n(this.red, "redSub works only with red numbers"), this.red.sub(this, t)
                    }, o.prototype.redISub = function(t) {
                        return n(this.red, "redISub works only with red numbers"), this.red.isub(this, t)
                    }, o.prototype.redShl = function(t) {
                        return n(this.red, "redShl works only with red numbers"), this.red.shl(this, t)
                    }, o.prototype.redMul = function(t) {
                        return n(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.mul(this, t)
                    }, o.prototype.redIMul = function(t) {
                        return n(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.imul(this, t)
                    }, o.prototype.redSqr = function() {
                        return n(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this)
                    }, o.prototype.redISqr = function() {
                        return n(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this)
                    }, o.prototype.redSqrt = function() {
                        return n(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this)
                    }, o.prototype.redInvm = function() {
                        return n(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this)
                    }, o.prototype.redNeg = function() {
                        return n(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this)
                    }, o.prototype.redPow = function(t) {
                        return n(this.red && !t.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t)
                    };
                    var w = {
                        k256: null,
                        p224: null,
                        p192: null,
                        p25519: null
                    };

                    function b(t, e) {
                        this.name = t, this.p = new o(e, 16), this.n = this.p.bitLength(), this.k = new o(1).iushln(this.n).isub(this.p), this.tmp = this._tmp()
                    }

                    function M() {
                        b.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")
                    }

                    function E() {
                        b.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")
                    }

                    function N() {
                        b.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")
                    }

                    function A() {
                        b.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")
                    }

                    function _(t) {
                        if ("string" === typeof t) {
                            var e = o._prime(t);
                            this.m = e.p, this.prime = e
                        } else n(t.gtn(1), "modulus must be greater than 1"), this.m = t, this.prime = null
                    }

                    function S(t) {
                        _.call(this, t), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new o(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv)
                    }
                    b.prototype._tmp = function() {
                        var t = new o(null);
                        return t.words = new Array(Math.ceil(this.n / 13)), t
                    }, b.prototype.ireduce = function(t) {
                        var e, r = t;
                        do {
                            this.split(r, this.tmp), r = this.imulK(r), r = r.iadd(this.tmp), e = r.bitLength()
                        } while (e > this.n);
                        var n = e < this.n ? -1 : r.ucmp(this.p);
                        return 0 === n ? (r.words[0] = 0, r.length = 1) : n > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r
                    }, b.prototype.split = function(t, e) {
                        t.iushrn(this.n, 0, e)
                    }, b.prototype.imulK = function(t) {
                        return t.imul(this.k)
                    }, i(M, b), M.prototype.split = function(t, e) {
                        for (var r = 4194303, n = Math.min(t.length, 9), i = 0; i < n; i++) e.words[i] = t.words[i];
                        if (e.length = n, t.length <= 9) return t.words[0] = 0, void(t.length = 1);
                        var o = t.words[9];
                        for (e.words[e.length++] = o & r, i = 10; i < t.length; i++) {
                            var s = 0 | t.words[i];
                            t.words[i - 10] = (s & r) << 4 | o >>> 22, o = s
                        }
                        o >>>= 22, t.words[i - 10] = o, 0 === o && t.length > 10 ? t.length -= 10 : t.length -= 9
                    }, M.prototype.imulK = function(t) {
                        t.words[t.length] = 0, t.words[t.length + 1] = 0, t.length += 2;
                        for (var e = 0, r = 0; r < t.length; r++) {
                            var n = 0 | t.words[r];
                            e += 977 * n, t.words[r] = 67108863 & e, e = 64 * n + (e / 67108864 | 0)
                        }
                        return 0 === t.words[t.length - 1] && (t.length--, 0 === t.words[t.length - 1] && t.length--), t
                    }, i(E, b), i(N, b), i(A, b), A.prototype.imulK = function(t) {
                        for (var e = 0, r = 0; r < t.length; r++) {
                            var n = 19 * (0 | t.words[r]) + e,
                                i = 67108863 & n;
                            n >>>= 26, t.words[r] = i, e = n
                        }
                        return 0 !== e && (t.words[t.length++] = e), t
                    }, o._prime = function(t) {
                        if (w[t]) return w[t];
                        var e;
                        if ("k256" === t) e = new M;
                        else if ("p224" === t) e = new E;
                        else if ("p192" === t) e = new N;
                        else {
                            if ("p25519" !== t) throw new Error("Unknown prime " + t);
                            e = new A
                        }
                        return w[t] = e, e
                    }, _.prototype._verify1 = function(t) {
                        n(0 === t.negative, "red works only with positives"), n(t.red, "red works only with red numbers")
                    }, _.prototype._verify2 = function(t, e) {
                        n(0 === (t.negative | e.negative), "red works only with positives"), n(t.red && t.red === e.red, "red works only with red numbers")
                    }, _.prototype.imod = function(t) {
                        return this.prime ? this.prime.ireduce(t)._forceRed(this) : t.umod(this.m)._forceRed(this)
                    }, _.prototype.neg = function(t) {
                        return t.isZero() ? t.clone() : this.m.sub(t)._forceRed(this)
                    }, _.prototype.add = function(t, e) {
                        this._verify2(t, e);
                        var r = t.add(e);
                        return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this)
                    }, _.prototype.iadd = function(t, e) {
                        this._verify2(t, e);
                        var r = t.iadd(e);
                        return r.cmp(this.m) >= 0 && r.isub(this.m), r
                    }, _.prototype.sub = function(t, e) {
                        this._verify2(t, e);
                        var r = t.sub(e);
                        return r.cmpn(0) < 0 && r.iadd(this.m), r._forceRed(this)
                    }, _.prototype.isub = function(t, e) {
                        this._verify2(t, e);
                        var r = t.isub(e);
                        return r.cmpn(0) < 0 && r.iadd(this.m), r
                    }, _.prototype.shl = function(t, e) {
                        return this._verify1(t), this.imod(t.ushln(e))
                    }, _.prototype.imul = function(t, e) {
                        return this._verify2(t, e), this.imod(t.imul(e))
                    }, _.prototype.mul = function(t, e) {
                        return this._verify2(t, e), this.imod(t.mul(e))
                    }, _.prototype.isqr = function(t) {
                        return this.imul(t, t.clone())
                    }, _.prototype.sqr = function(t) {
                        return this.mul(t, t)
                    }, _.prototype.sqrt = function(t) {
                        if (t.isZero()) return t.clone();
                        var e = this.m.andln(3);
                        if (n(e % 2 === 1), 3 === e) {
                            var r = this.m.add(new o(1)).iushrn(2);
                            return this.pow(t, r)
                        }
                        var i = this.m.subn(1),
                            s = 0;
                        while (!i.isZero() && 0 === i.andln(1)) s++, i.iushrn(1);
                        n(!i.isZero());
                        var a = new o(1).toRed(this),
                            u = a.redNeg(),
                            h = this.m.subn(1).iushrn(1),
                            l = this.m.bitLength();
                        l = new o(2 * l * l).toRed(this);
                        while (0 !== this.pow(l, h).cmp(u)) l.redIAdd(u);
                        var f = this.pow(l, i),
                            c = this.pow(t, i.addn(1).iushrn(1)),
                            d = this.pow(t, i),
                            m = s;
                        while (0 !== d.cmp(a)) {
                            for (var p = d, g = 0; 0 !== p.cmp(a); g++) p = p.redSqr();
                            n(g < m);
                            var v = this.pow(f, new o(1).iushln(m - g - 1));
                            c = c.redMul(v), f = v.redSqr(), d = d.redMul(f), m = g
                        }
                        return c
                    }, _.prototype.invm = function(t) {
                        var e = t._invmp(this.m);
                        return 0 !== e.negative ? (e.negative = 0, this.imod(e).redNeg()) : this.imod(e)
                    }, _.prototype.pow = function(t, e) {
                        if (e.isZero()) return new o(1).toRed(this);
                        if (0 === e.cmpn(1)) return t.clone();
                        var r = 4,
                            n = new Array(1 << r);
                        n[0] = new o(1).toRed(this), n[1] = t;
                        for (var i = 2; i < n.length; i++) n[i] = this.mul(n[i - 1], t);
                        var s = n[0],
                            a = 0,
                            u = 0,
                            h = e.bitLength() % 26;
                        for (0 === h && (h = 26), i = e.length - 1; i >= 0; i--) {
                            for (var l = e.words[i], f = h - 1; f >= 0; f--) {
                                var c = l >> f & 1;
                                s !== n[0] && (s = this.sqr(s)), 0 !== c || 0 !== a ? (a <<= 1, a |= c, u++, (u === r || 0 === i && 0 === f) && (s = this.mul(s, n[a]), u = 0, a = 0)) : u = 0
                            }
                            h = 26
                        }
                        return s
                    }, _.prototype.convertTo = function(t) {
                        var e = t.umod(this.m);
                        return e === t ? e.clone() : e
                    }, _.prototype.convertFrom = function(t) {
                        var e = t.clone();
                        return e.red = null, e
                    }, o.mont = function(t) {
                        return new S(t)
                    }, i(S, _), S.prototype.convertTo = function(t) {
                        return this.imod(t.ushln(this.shift))
                    }, S.prototype.convertFrom = function(t) {
                        var e = this.imod(t.mul(this.rinv));
                        return e.red = null, e
                    }, S.prototype.imul = function(t, e) {
                        if (t.isZero() || e.isZero()) return t.words[0] = 0, t.length = 1, t;
                        var r = t.imul(e),
                            n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                            i = r.isub(n).iushrn(this.shift),
                            o = i;
                        return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this)
                    }, S.prototype.mul = function(t, e) {
                        if (t.isZero() || e.isZero()) return new o(0)._forceRed(this);
                        var r = t.mul(e),
                            n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                            i = r.isub(n).iushrn(this.shift),
                            s = i;
                        return i.cmp(this.m) >= 0 ? s = i.isub(this.m) : i.cmpn(0) < 0 && (s = i.iadd(this.m)), s._forceRed(this)
                    }, S.prototype.invm = function(t) {
                        var e = this.imod(t._invmp(this.m).mul(this.r2));
                        return e._forceRed(this)
                    }
                })(t, this)
            }).call(this, r("62e4")(t))
        },
        "82e0": function(t, e, r) {
            "use strict";
            r.d(e, "a", (function() {
                return m
            }));
            const n = "logger/5.6.0";
            let i = !1,
                o = !1;
            const s = {
                debug: 1,
                default: 2,
                info: 2,
                warning: 3,
                error: 4,
                off: 5
            };
            let a = s["default"],
                u = null;

            function h() {
                try {
                    const t = [];
                    if (["NFD", "NFC", "NFKD", "NFKC"].forEach(e => {
                            try {
                                if ("test" !== "test".normalize(e)) throw new Error("bad normalize")
                            } catch (r) {
                                t.push(e)
                            }
                        }), t.length) throw new Error("missing " + t.join(", "));
                    if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) throw new Error("broken implementation")
                } catch (t) {
                    return t.message
                }
                return null
            }
            const l = h();
            var f, c;
            (function(t) {
                t["DEBUG"] = "DEBUG", t["INFO"] = "INFO", t["WARNING"] = "WARNING", t["ERROR"] = "ERROR", t["OFF"] = "OFF"
            })(f || (f = {})),
            function(t) {
                t["UNKNOWN_ERROR"] = "UNKNOWN_ERROR", t["NOT_IMPLEMENTED"] = "NOT_IMPLEMENTED", t["UNSUPPORTED_OPERATION"] = "UNSUPPORTED_OPERATION", t["NETWORK_ERROR"] = "NETWORK_ERROR", t["SERVER_ERROR"] = "SERVER_ERROR", t["TIMEOUT"] = "TIMEOUT", t["BUFFER_OVERRUN"] = "BUFFER_OVERRUN", t["NUMERIC_FAULT"] = "NUMERIC_FAULT", t["MISSING_NEW"] = "MISSING_NEW", t["INVALID_ARGUMENT"] = "INVALID_ARGUMENT", t["MISSING_ARGUMENT"] = "MISSING_ARGUMENT", t["UNEXPECTED_ARGUMENT"] = "UNEXPECTED_ARGUMENT", t["CALL_EXCEPTION"] = "CALL_EXCEPTION", t["INSUFFICIENT_FUNDS"] = "INSUFFICIENT_FUNDS", t["NONCE_EXPIRED"] = "NONCE_EXPIRED", t["REPLACEMENT_UNDERPRICED"] = "REPLACEMENT_UNDERPRICED", t["UNPREDICTABLE_GAS_LIMIT"] = "UNPREDICTABLE_GAS_LIMIT", t["TRANSACTION_REPLACED"] = "TRANSACTION_REPLACED"
            }(c || (c = {}));
            const d = "0123456789abcdef";
            class m {
                constructor(t) {
                    Object.defineProperty(this, "version", {
                        enumerable: !0,
                        value: t,
                        writable: !1
                    })
                }
                _log(t, e) {
                    const r = t.toLowerCase();
                    null == s[r] && this.throwArgumentError("invalid log level name", "logLevel", t), a > s[r] || console.log.apply(console, e)
                }
                debug(...t) {
                    this._log(m.levels.DEBUG, t)
                }
                info(...t) {
                    this._log(m.levels.INFO, t)
                }
                warn(...t) {
                    this._log(m.levels.WARNING, t)
                }
                makeError(t, e, r) {
                    if (o) return this.makeError("censored error", e, {});
                    e || (e = m.errors.UNKNOWN_ERROR), r || (r = {});
                    const n = [];
                    Object.keys(r).forEach(t => {
                        const e = r[t];
                        try {
                            if (e instanceof Uint8Array) {
                                let r = "";
                                for (let t = 0; t < e.length; t++) r += d[e[t] >> 4], r += d[15 & e[t]];
                                n.push(t + "=Uint8Array(0x" + r + ")")
                            } else n.push(t + "=" + JSON.stringify(e))
                        } catch (a) {
                            n.push(t + "=" + JSON.stringify(r[t].toString()))
                        }
                    }), n.push("code=" + e), n.push("version=" + this.version);
                    const i = t;
                    let s = "";
                    switch (e) {
                        case c.NUMERIC_FAULT:
                            {
                                s = "NUMERIC_FAULT";
                                const e = t;
                                switch (e) {
                                    case "overflow":
                                    case "underflow":
                                    case "division-by-zero":
                                        s += "-" + e;
                                        break;
                                    case "negative-power":
                                    case "negative-width":
                                        s += "-unsupported";
                                        break;
                                    case "unbound-bitwise-result":
                                        s += "-unbound-result";
                                        break
                                }
                                break
                            }
                        case c.CALL_EXCEPTION:
                        case c.INSUFFICIENT_FUNDS:
                        case c.MISSING_NEW:
                        case c.NONCE_EXPIRED:
                        case c.REPLACEMENT_UNDERPRICED:
                        case c.TRANSACTION_REPLACED:
                        case c.UNPREDICTABLE_GAS_LIMIT:
                            s = e;
                            break
                    }
                    s && (t += " [ See: https://links.ethers.org/v5-errors-" + s + " ]"), n.length && (t += " (" + n.join(", ") + ")");
                    const a = new Error(t);
                    return a.reason = i, a.code = e, Object.keys(r).forEach((function(t) {
                        a[t] = r[t]
                    })), a
                }
                throwError(t, e, r) {
                    throw this.makeError(t, e, r)
                }
                throwArgumentError(t, e, r) {
                    return this.throwError(t, m.errors.INVALID_ARGUMENT, {
                        argument: e,
                        value: r
                    })
                }
                assert(t, e, r, n) {
                    t || this.throwError(e, r, n)
                }
                assertArgument(t, e, r, n) {
                    t || this.throwArgumentError(e, r, n)
                }
                checkNormalize(t) {
                    null == t && (t = "platform missing String.prototype.normalize"), l && this.throwError("platform missing String.prototype.normalize", m.errors.UNSUPPORTED_OPERATION, {
                        operation: "String.prototype.normalize",
                        form: l
                    })
                }
                checkSafeUint53(t, e) {
                    "number" === typeof t && (null == e && (e = "value not safe"), (t < 0 || t >= 9007199254740991) && this.throwError(e, m.errors.NUMERIC_FAULT, {
                        operation: "checkSafeInteger",
                        fault: "out-of-safe-range",
                        value: t
                    }), t % 1 && this.throwError(e, m.errors.NUMERIC_FAULT, {
                        operation: "checkSafeInteger",
                        fault: "non-integer",
                        value: t
                    }))
                }
                checkArgumentCount(t, e, r) {
                    r = r ? ": " + r : "", t < e && this.throwError("missing argument" + r, m.errors.MISSING_ARGUMENT, {
                        count: t,
                        expectedCount: e
                    }), t > e && this.throwError("too many arguments" + r, m.errors.UNEXPECTED_ARGUMENT, {
                        count: t,
                        expectedCount: e
                    })
                }
                checkNew(t, e) {
                    t !== Object && null != t || this.throwError("missing new", m.errors.MISSING_NEW, {
                        name: e.name
                    })
                }
                checkAbstract(t, e) {
                    t === e ? this.throwError("cannot instantiate abstract class " + JSON.stringify(e.name) + " directly; use a sub-class", m.errors.UNSUPPORTED_OPERATION, {
                        name: t.name,
                        operation: "new"
                    }) : t !== Object && null != t || this.throwError("missing new", m.errors.MISSING_NEW, {
                        name: e.name
                    })
                }
                static globalLogger() {
                    return u || (u = new m(n)), u
                }
                static setCensorship(t, e) {
                    if (!t && e && this.globalLogger().throwError("cannot permanently disable censorship", m.errors.UNSUPPORTED_OPERATION, {
                            operation: "setCensorship"
                        }), i) {
                        if (!t) return;
                        this.globalLogger().throwError("error censorship permanent", m.errors.UNSUPPORTED_OPERATION, {
                            operation: "setCensorship"
                        })
                    }
                    o = !!t, i = !!e
                }
                static setLogLevel(t) {
                    const e = s[t.toLowerCase()];
                    null != e ? a = e : m.globalLogger().warn("invalid log level - " + t)
                }
                static from(t) {
                    return new m(t)
                }
            }
            m.errors = c, m.levels = f
        },
        8424: function(t, e, r) {
            "use strict";
            r.d(e, "a", (function() {
                return w
            }));
            var n = r("5273");

            function i(t) {
                if (t.length % 4 !== 0) throw new Error("bad data");
                let e = [];
                for (let r = 0; r < t.length; r += 4) e.push(parseInt(t.substring(r, r + 4), 16));
                return e
            }

            function o(t, e) {
                e || (e = function(t) {
                    return [parseInt(t, 16)]
                });
                let r = 0,
                    n = {};
                return t.split(",").forEach(t => {
                    let i = t.split(":");
                    r += parseInt(i[0], 16), n[r] = e(i[1])
                }), n
            }

            function s(t) {
                let e = 0;
                return t.split(",").map(t => {
                    let r = t.split("-");
                    1 === r.length ? r[1] = "0" : "" === r[1] && (r[1] = "1");
                    let n = e + parseInt(r[0], 16);
                    return e = parseInt(r[1], 16), {
                        l: n,
                        h: e
                    }
                })
            }

            function a(t, e) {
                let r = 0;
                for (let n = 0; n < e.length; n++) {
                    let i = e[n];
                    if (r += i.l, t >= r && t <= r + i.h && (t - r) % (i.d || 1) === 0) {
                        if (i.e && -1 !== i.e.indexOf(t - r)) continue;
                        return i
                    }
                }
                return null
            }
            const u = s("221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d"),
                h = "ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff".split(",").map(t => parseInt(t, 16)),
                l = [{
                    h: 25,
                    s: 32,
                    l: 65
                }, {
                    h: 30,
                    s: 32,
                    e: [23],
                    l: 127
                }, {
                    h: 54,
                    s: 1,
                    e: [48],
                    l: 64,
                    d: 2
                }, {
                    h: 14,
                    s: 1,
                    l: 57,
                    d: 2
                }, {
                    h: 44,
                    s: 1,
                    l: 17,
                    d: 2
                }, {
                    h: 10,
                    s: 1,
                    e: [2, 6, 8],
                    l: 61,
                    d: 2
                }, {
                    h: 16,
                    s: 1,
                    l: 68,
                    d: 2
                }, {
                    h: 84,
                    s: 1,
                    e: [18, 24, 66],
                    l: 19,
                    d: 2
                }, {
                    h: 26,
                    s: 32,
                    e: [17],
                    l: 435
                }, {
                    h: 22,
                    s: 1,
                    l: 71,
                    d: 2
                }, {
                    h: 15,
                    s: 80,
                    l: 40
                }, {
                    h: 31,
                    s: 32,
                    l: 16
                }, {
                    h: 32,
                    s: 1,
                    l: 80,
                    d: 2
                }, {
                    h: 52,
                    s: 1,
                    l: 42,
                    d: 2
                }, {
                    h: 12,
                    s: 1,
                    l: 55,
                    d: 2
                }, {
                    h: 40,
                    s: 1,
                    e: [38],
                    l: 15,
                    d: 2
                }, {
                    h: 14,
                    s: 1,
                    l: 48,
                    d: 2
                }, {
                    h: 37,
                    s: 48,
                    l: 49
                }, {
                    h: 148,
                    s: 1,
                    l: 6351,
                    d: 2
                }, {
                    h: 88,
                    s: 1,
                    l: 160,
                    d: 2
                }, {
                    h: 15,
                    s: 16,
                    l: 704
                }, {
                    h: 25,
                    s: 26,
                    l: 854
                }, {
                    h: 25,
                    s: 32,
                    l: 55915
                }, {
                    h: 37,
                    s: 40,
                    l: 1247
                }, {
                    h: 25,
                    s: -119711,
                    l: 53248
                }, {
                    h: 25,
                    s: -119763,
                    l: 52
                }, {
                    h: 25,
                    s: -119815,
                    l: 52
                }, {
                    h: 25,
                    s: -119867,
                    e: [1, 4, 5, 7, 8, 11, 12, 17],
                    l: 52
                }, {
                    h: 25,
                    s: -119919,
                    l: 52
                }, {
                    h: 24,
                    s: -119971,
                    e: [2, 7, 8, 17],
                    l: 52
                }, {
                    h: 24,
                    s: -120023,
                    e: [2, 7, 13, 15, 16, 17],
                    l: 52
                }, {
                    h: 25,
                    s: -120075,
                    l: 52
                }, {
                    h: 25,
                    s: -120127,
                    l: 52
                }, {
                    h: 25,
                    s: -120179,
                    l: 52
                }, {
                    h: 25,
                    s: -120231,
                    l: 52
                }, {
                    h: 25,
                    s: -120283,
                    l: 52
                }, {
                    h: 25,
                    s: -120335,
                    l: 52
                }, {
                    h: 24,
                    s: -119543,
                    e: [17],
                    l: 56
                }, {
                    h: 24,
                    s: -119601,
                    e: [17],
                    l: 58
                }, {
                    h: 24,
                    s: -119659,
                    e: [17],
                    l: 58
                }, {
                    h: 24,
                    s: -119717,
                    e: [17],
                    l: 58
                }, {
                    h: 24,
                    s: -119775,
                    e: [17],
                    l: 58
                }],
                f = o("b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3"),
                c = o("179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7"),
                d = o("df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D", i),
                m = s("80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001");

            function p(t) {
                return t.reduce((t, e) => (e.forEach(e => {
                    t.push(e)
                }), t), [])
            }

            function g(t) {
                return !!a(t, u)
            }

            function v(t) {
                let e = a(t, l);
                if (e) return [t + e.s];
                let r = f[t];
                if (r) return r;
                let n = c[t];
                if (n) return [t + n[0]];
                let i = d[t];
                return i || null
            }

            function y(t) {
                return !!a(t, m)
            }

            function w(t) {
                if (t.match(/^[a-z0-9-]*$/i) && t.length <= 59) return t.toLowerCase();
                let e = Object(n["g"])(t);
                e = p(e.map(t => {
                    if (h.indexOf(t) >= 0) return [];
                    if (t >= 65024 && t <= 65039) return [];
                    let e = v(t);
                    return e || [t]
                })), e = Object(n["g"])(Object(n["e"])(e), n["a"].NFKC), e.forEach(t => {
                    if (y(t)) throw new Error("STRINGPREP_CONTAINS_PROHIBITED")
                }), e.forEach(t => {
                    if (g(t)) throw new Error("STRINGPREP_CONTAINS_UNASSIGNED")
                });
                let r = Object(n["e"])(e);
                if ("-" === r.substring(0, 1) || "--" === r.substring(2, 4) || "-" === r.substring(r.length - 1)) throw new Error("invalid hyphen");
                if (r.length > 63) throw new Error("too long");
                return r
            }
        },
        "8cfa": function(t, e, r) {
            "use strict";
            for (var n = "qpzry9x8gf2tvdw0s3jn54khce6mua7l", i = {}, o = 0; o < n.length; o++) {
                var s = n.charAt(o);
                if (void 0 !== i[s]) throw new TypeError(s + " is ambiguous");
                i[s] = o
            }

            function a(t) {
                var e = t >> 25;
                return (33554431 & t) << 5 ^ 996825010 & -(e >> 0 & 1) ^ 642813549 & -(e >> 1 & 1) ^ 513874426 & -(e >> 2 & 1) ^ 1027748829 & -(e >> 3 & 1) ^ 705979059 & -(e >> 4 & 1)
            }

            function u(t) {
                for (var e = 1, r = 0; r < t.length; ++r) {
                    var n = t.charCodeAt(r);
                    if (n < 33 || n > 126) return "Invalid prefix (" + t + ")";
                    e = a(e) ^ n >> 5
                }
                for (e = a(e), r = 0; r < t.length; ++r) {
                    var i = t.charCodeAt(r);
                    e = a(e) ^ 31 & i
                }
                return e
            }

            function h(t, e, r) {
                if (r = r || 90, t.length + 7 + e.length > r) throw new TypeError("Exceeds length limit");
                t = t.toLowerCase();
                var i = u(t);
                if ("string" === typeof i) throw new Error(i);
                for (var o = t + "1", s = 0; s < e.length; ++s) {
                    var h = e[s];
                    if (h >> 5 !== 0) throw new Error("Non 5-bit word");
                    i = a(i) ^ h, o += n.charAt(h)
                }
                for (s = 0; s < 6; ++s) i = a(i);
                for (i ^= 1, s = 0; s < 6; ++s) {
                    var l = i >> 5 * (5 - s) & 31;
                    o += n.charAt(l)
                }
                return o
            }

            function l(t, e) {
                if (e = e || 90, t.length < 8) return t + " too short";
                if (t.length > e) return "Exceeds length limit";
                var r = t.toLowerCase(),
                    n = t.toUpperCase();
                if (t !== r && t !== n) return "Mixed-case string " + t;
                t = r;
                var o = t.lastIndexOf("1");
                if (-1 === o) return "No separator character for " + t;
                if (0 === o) return "Missing prefix for " + t;
                var s = t.slice(0, o),
                    h = t.slice(o + 1);
                if (h.length < 6) return "Data too short";
                var l = u(s);
                if ("string" === typeof l) return l;
                for (var f = [], c = 0; c < h.length; ++c) {
                    var d = h.charAt(c),
                        m = i[d];
                    if (void 0 === m) return "Unknown character " + d;
                    l = a(l) ^ m, c + 6 >= h.length || f.push(m)
                }
                return 1 !== l ? "Invalid checksum for " + t : {
                    prefix: s,
                    words: f
                }
            }

            function f() {
                var t = l.apply(null, arguments);
                if ("object" === typeof t) return t
            }

            function c(t) {
                var e = l.apply(null, arguments);
                if ("object" === typeof e) return e;
                throw new Error(e)
            }

            function d(t, e, r, n) {
                for (var i = 0, o = 0, s = (1 << r) - 1, a = [], u = 0; u < t.length; ++u) {
                    i = i << e | t[u], o += e;
                    while (o >= r) o -= r, a.push(i >> o & s)
                }
                if (n) o > 0 && a.push(i << r - o & s);
                else {
                    if (o >= e) return "Excess padding";
                    if (i << r - o & s) return "Non-zero padding"
                }
                return a
            }

            function m(t) {
                var e = d(t, 8, 5, !0);
                if (Array.isArray(e)) return e
            }

            function p(t) {
                var e = d(t, 8, 5, !0);
                if (Array.isArray(e)) return e;
                throw new Error(e)
            }

            function g(t) {
                var e = d(t, 5, 8, !1);
                if (Array.isArray(e)) return e
            }

            function v(t) {
                var e = d(t, 5, 8, !1);
                if (Array.isArray(e)) return e;
                throw new Error(e)
            }
            t.exports = {
                decodeUnsafe: f,
                decode: c,
                encode: h,
                toWordsUnsafe: m,
                toWords: p,
                fromWordsUnsafe: g,
                fromWords: v
            }
        },
        9352: function(t, e, r) {
            (function(t) {
                (function(t, e) {
                    "use strict";

                    function n(t, e) {
                        if (!t) throw new Error(e || "Assertion failed")
                    }

                    function i(t, e) {
                        t.super_ = e;
                        var r = function() {};
                        r.prototype = e.prototype, t.prototype = new r, t.prototype.constructor = t
                    }

                    function o(t, e, r) {
                        if (o.isBN(t)) return t;
                        this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== t && ("le" !== e && "be" !== e || (r = e, e = 10), this._init(t || 0, e || 10, r || "be"))
                    }
                    var s;
                    "object" === typeof t ? t.exports = o : e.BN = o, o.BN = o, o.wordSize = 26;
                    try {
                        s = "undefined" !== typeof window && "undefined" !== typeof window.Buffer ? window.Buffer : r(11).Buffer
                    } catch (I) {}

                    function a(t, e) {
                        var r = t.charCodeAt(e);
                        return r >= 65 && r <= 70 ? r - 55 : r >= 97 && r <= 102 ? r - 87 : r - 48 & 15
                    }

                    function u(t, e, r) {
                        var n = a(t, r);
                        return r - 1 >= e && (n |= a(t, r - 1) << 4), n
                    }

                    function h(t, e, r, n) {
                        for (var i = 0, o = Math.min(t.length, r), s = e; s < o; s++) {
                            var a = t.charCodeAt(s) - 48;
                            i *= n, i += a >= 49 ? a - 49 + 10 : a >= 17 ? a - 17 + 10 : a
                        }
                        return i
                    }
                    o.isBN = function(t) {
                        return t instanceof o || null !== t && "object" === typeof t && t.constructor.wordSize === o.wordSize && Array.isArray(t.words)
                    }, o.max = function(t, e) {
                        return t.cmp(e) > 0 ? t : e
                    }, o.min = function(t, e) {
                        return t.cmp(e) < 0 ? t : e
                    }, o.prototype._init = function(t, e, r) {
                        if ("number" === typeof t) return this._initNumber(t, e, r);
                        if ("object" === typeof t) return this._initArray(t, e, r);
                        "hex" === e && (e = 16), n(e === (0 | e) && e >= 2 && e <= 36), t = t.toString().replace(/\s+/g, "");
                        var i = 0;
                        "-" === t[0] && (i++, this.negative = 1), i < t.length && (16 === e ? this._parseHex(t, i, r) : (this._parseBase(t, e, i), "le" === r && this._initArray(this.toArray(), e, r)))
                    }, o.prototype._initNumber = function(t, e, r) {
                        t < 0 && (this.negative = 1, t = -t), t < 67108864 ? (this.words = [67108863 & t], this.length = 1) : t < 4503599627370496 ? (this.words = [67108863 & t, t / 67108864 & 67108863], this.length = 2) : (n(t < 9007199254740992), this.words = [67108863 & t, t / 67108864 & 67108863, 1], this.length = 3), "le" === r && this._initArray(this.toArray(), e, r)
                    }, o.prototype._initArray = function(t, e, r) {
                        if (n("number" === typeof t.length), t.length <= 0) return this.words = [0], this.length = 1, this;
                        this.length = Math.ceil(t.length / 3), this.words = new Array(this.length);
                        for (var i = 0; i < this.length; i++) this.words[i] = 0;
                        var o, s, a = 0;
                        if ("be" === r)
                            for (i = t.length - 1, o = 0; i >= 0; i -= 3) s = t[i] | t[i - 1] << 8 | t[i - 2] << 16, this.words[o] |= s << a & 67108863, this.words[o + 1] = s >>> 26 - a & 67108863, a += 24, a >= 26 && (a -= 26, o++);
                        else if ("le" === r)
                            for (i = 0, o = 0; i < t.length; i += 3) s = t[i] | t[i + 1] << 8 | t[i + 2] << 16, this.words[o] |= s << a & 67108863, this.words[o + 1] = s >>> 26 - a & 67108863, a += 24, a >= 26 && (a -= 26, o++);
                        return this.strip()
                    }, o.prototype._parseHex = function(t, e, r) {
                        this.length = Math.ceil((t.length - e) / 6), this.words = new Array(this.length);
                        for (var n = 0; n < this.length; n++) this.words[n] = 0;
                        var i, o = 0,
                            s = 0;
                        if ("be" === r)
                            for (n = t.length - 1; n >= e; n -= 2) i = u(t, e, n) << o, this.words[s] |= 67108863 & i, o >= 18 ? (o -= 18, s += 1, this.words[s] |= i >>> 26) : o += 8;
                        else {
                            var a = t.length - e;
                            for (n = a % 2 === 0 ? e + 1 : e; n < t.length; n += 2) i = u(t, e, n) << o, this.words[s] |= 67108863 & i, o >= 18 ? (o -= 18, s += 1, this.words[s] |= i >>> 26) : o += 8
                        }
                        this.strip()
                    }, o.prototype._parseBase = function(t, e, r) {
                        this.words = [0], this.length = 1;
                        for (var n = 0, i = 1; i <= 67108863; i *= e) n++;
                        n--, i = i / e | 0;
                        for (var o = t.length - r, s = o % n, a = Math.min(o, o - s) + r, u = 0, l = r; l < a; l += n) u = h(t, l, l + n, e), this.imuln(i), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
                        if (0 !== s) {
                            var f = 1;
                            for (u = h(t, l, t.length, e), l = 0; l < s; l++) f *= e;
                            this.imuln(f), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u)
                        }
                        this.strip()
                    }, o.prototype.copy = function(t) {
                        t.words = new Array(this.length);
                        for (var e = 0; e < this.length; e++) t.words[e] = this.words[e];
                        t.length = this.length, t.negative = this.negative, t.red = this.red
                    }, o.prototype.clone = function() {
                        var t = new o(null);
                        return this.copy(t), t
                    }, o.prototype._expand = function(t) {
                        while (this.length < t) this.words[this.length++] = 0;
                        return this
                    }, o.prototype.strip = function() {
                        while (this.length > 1 && 0 === this.words[this.length - 1]) this.length--;
                        return this._normSign()
                    }, o.prototype._normSign = function() {
                        return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this
                    }, o.prototype.inspect = function() {
                        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">"
                    };
                    var l = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"],
                        f = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                        c = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];

                    function d(t) {
                        for (var e = new Array(t.bitLength()), r = 0; r < e.length; r++) {
                            var n = r / 26 | 0,
                                i = r % 26;
                            e[r] = (t.words[n] & 1 << i) >>> i
                        }
                        return e
                    }

                    function m(t, e, r) {
                        r.negative = e.negative ^ t.negative;
                        var n = t.length + e.length | 0;
                        r.length = n, n = n - 1 | 0;
                        var i = 0 | t.words[0],
                            o = 0 | e.words[0],
                            s = i * o,
                            a = 67108863 & s,
                            u = s / 67108864 | 0;
                        r.words[0] = a;
                        for (var h = 1; h < n; h++) {
                            for (var l = u >>> 26, f = 67108863 & u, c = Math.min(h, e.length - 1), d = Math.max(0, h - t.length + 1); d <= c; d++) {
                                var m = h - d | 0;
                                i = 0 | t.words[m], o = 0 | e.words[d], s = i * o + f, l += s / 67108864 | 0, f = 67108863 & s
                            }
                            r.words[h] = 0 | f, u = 0 | l
                        }
                        return 0 !== u ? r.words[h] = 0 | u : r.length--, r.strip()
                    }
                    o.prototype.toString = function(t, e) {
                        var r;
                        if (t = t || 10, e = 0 | e || 1, 16 === t || "hex" === t) {
                            r = "";
                            for (var i = 0, o = 0, s = 0; s < this.length; s++) {
                                var a = this.words[s],
                                    u = (16777215 & (a << i | o)).toString(16);
                                o = a >>> 24 - i & 16777215, r = 0 !== o || s !== this.length - 1 ? l[6 - u.length] + u + r : u + r, i += 2, i >= 26 && (i -= 26, s--)
                            }
                            0 !== o && (r = o.toString(16) + r);
                            while (r.length % e !== 0) r = "0" + r;
                            return 0 !== this.negative && (r = "-" + r), r
                        }
                        if (t === (0 | t) && t >= 2 && t <= 36) {
                            var h = f[t],
                                d = c[t];
                            r = "";
                            var m = this.clone();
                            m.negative = 0;
                            while (!m.isZero()) {
                                var p = m.modn(d).toString(t);
                                m = m.idivn(d), r = m.isZero() ? p + r : l[h - p.length] + p + r
                            }
                            this.isZero() && (r = "0" + r);
                            while (r.length % e !== 0) r = "0" + r;
                            return 0 !== this.negative && (r = "-" + r), r
                        }
                        n(!1, "Base should be between 2 and 36")
                    }, o.prototype.toNumber = function() {
                        var t = this.words[0];
                        return 2 === this.length ? t += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && n(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -t : t
                    }, o.prototype.toJSON = function() {
                        return this.toString(16)
                    }, o.prototype.toBuffer = function(t, e) {
                        return n("undefined" !== typeof s), this.toArrayLike(s, t, e)
                    }, o.prototype.toArray = function(t, e) {
                        return this.toArrayLike(Array, t, e)
                    }, o.prototype.toArrayLike = function(t, e, r) {
                        var i = this.byteLength(),
                            o = r || Math.max(1, i);
                        n(i <= o, "byte array longer than desired length"), n(o > 0, "Requested array length <= 0"), this.strip();
                        var s, a, u = "le" === e,
                            h = new t(o),
                            l = this.clone();
                        if (u) {
                            for (a = 0; !l.isZero(); a++) s = l.andln(255), l.iushrn(8), h[a] = s;
                            for (; a < o; a++) h[a] = 0
                        } else {
                            for (a = 0; a < o - i; a++) h[a] = 0;
                            for (a = 0; !l.isZero(); a++) s = l.andln(255), l.iushrn(8), h[o - a - 1] = s
                        }
                        return h
                    }, Math.clz32 ? o.prototype._countBits = function(t) {
                        return 32 - Math.clz32(t)
                    } : o.prototype._countBits = function(t) {
                        var e = t,
                            r = 0;
                        return e >= 4096 && (r += 13, e >>>= 13), e >= 64 && (r += 7, e >>>= 7), e >= 8 && (r += 4, e >>>= 4), e >= 2 && (r += 2, e >>>= 2), r + e
                    }, o.prototype._zeroBits = function(t) {
                        if (0 === t) return 26;
                        var e = t,
                            r = 0;
                        return 0 === (8191 & e) && (r += 13, e >>>= 13), 0 === (127 & e) && (r += 7, e >>>= 7), 0 === (15 & e) && (r += 4, e >>>= 4), 0 === (3 & e) && (r += 2, e >>>= 2), 0 === (1 & e) && r++, r
                    }, o.prototype.bitLength = function() {
                        var t = this.words[this.length - 1],
                            e = this._countBits(t);
                        return 26 * (this.length - 1) + e
                    }, o.prototype.zeroBits = function() {
                        if (this.isZero()) return 0;
                        for (var t = 0, e = 0; e < this.length; e++) {
                            var r = this._zeroBits(this.words[e]);
                            if (t += r, 26 !== r) break
                        }
                        return t
                    }, o.prototype.byteLength = function() {
                        return Math.ceil(this.bitLength() / 8)
                    }, o.prototype.toTwos = function(t) {
                        return 0 !== this.negative ? this.abs().inotn(t).iaddn(1) : this.clone()
                    }, o.prototype.fromTwos = function(t) {
                        return this.testn(t - 1) ? this.notn(t).iaddn(1).ineg() : this.clone()
                    }, o.prototype.isNeg = function() {
                        return 0 !== this.negative
                    }, o.prototype.neg = function() {
                        return this.clone().ineg()
                    }, o.prototype.ineg = function() {
                        return this.isZero() || (this.negative ^= 1), this
                    }, o.prototype.iuor = function(t) {
                        while (this.length < t.length) this.words[this.length++] = 0;
                        for (var e = 0; e < t.length; e++) this.words[e] = this.words[e] | t.words[e];
                        return this.strip()
                    }, o.prototype.ior = function(t) {
                        return n(0 === (this.negative | t.negative)), this.iuor(t)
                    }, o.prototype.or = function(t) {
                        return this.length > t.length ? this.clone().ior(t) : t.clone().ior(this)
                    }, o.prototype.uor = function(t) {
                        return this.length > t.length ? this.clone().iuor(t) : t.clone().iuor(this)
                    }, o.prototype.iuand = function(t) {
                        var e;
                        e = this.length > t.length ? t : this;
                        for (var r = 0; r < e.length; r++) this.words[r] = this.words[r] & t.words[r];
                        return this.length = e.length, this.strip()
                    }, o.prototype.iand = function(t) {
                        return n(0 === (this.negative | t.negative)), this.iuand(t)
                    }, o.prototype.and = function(t) {
                        return this.length > t.length ? this.clone().iand(t) : t.clone().iand(this)
                    }, o.prototype.uand = function(t) {
                        return this.length > t.length ? this.clone().iuand(t) : t.clone().iuand(this)
                    }, o.prototype.iuxor = function(t) {
                        var e, r;
                        this.length > t.length ? (e = this, r = t) : (e = t, r = this);
                        for (var n = 0; n < r.length; n++) this.words[n] = e.words[n] ^ r.words[n];
                        if (this !== e)
                            for (; n < e.length; n++) this.words[n] = e.words[n];
                        return this.length = e.length, this.strip()
                    }, o.prototype.ixor = function(t) {
                        return n(0 === (this.negative | t.negative)), this.iuxor(t)
                    }, o.prototype.xor = function(t) {
                        return this.length > t.length ? this.clone().ixor(t) : t.clone().ixor(this)
                    }, o.prototype.uxor = function(t) {
                        return this.length > t.length ? this.clone().iuxor(t) : t.clone().iuxor(this)
                    }, o.prototype.inotn = function(t) {
                        n("number" === typeof t && t >= 0);
                        var e = 0 | Math.ceil(t / 26),
                            r = t % 26;
                        this._expand(e), r > 0 && e--;
                        for (var i = 0; i < e; i++) this.words[i] = 67108863 & ~this.words[i];
                        return r > 0 && (this.words[i] = ~this.words[i] & 67108863 >> 26 - r), this.strip()
                    }, o.prototype.notn = function(t) {
                        return this.clone().inotn(t)
                    }, o.prototype.setn = function(t, e) {
                        n("number" === typeof t && t >= 0);
                        var r = t / 26 | 0,
                            i = t % 26;
                        return this._expand(r + 1), this.words[r] = e ? this.words[r] | 1 << i : this.words[r] & ~(1 << i), this.strip()
                    }, o.prototype.iadd = function(t) {
                        var e, r, n;
                        if (0 !== this.negative && 0 === t.negative) return this.negative = 0, e = this.isub(t), this.negative ^= 1, this._normSign();
                        if (0 === this.negative && 0 !== t.negative) return t.negative = 0, e = this.isub(t), t.negative = 1, e._normSign();
                        this.length > t.length ? (r = this, n = t) : (r = t, n = this);
                        for (var i = 0, o = 0; o < n.length; o++) e = (0 | r.words[o]) + (0 | n.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                        for (; 0 !== i && o < r.length; o++) e = (0 | r.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                        if (this.length = r.length, 0 !== i) this.words[this.length] = i, this.length++;
                        else if (r !== this)
                            for (; o < r.length; o++) this.words[o] = r.words[o];
                        return this
                    }, o.prototype.add = function(t) {
                        var e;
                        return 0 !== t.negative && 0 === this.negative ? (t.negative = 0, e = this.sub(t), t.negative ^= 1, e) : 0 === t.negative && 0 !== this.negative ? (this.negative = 0, e = t.sub(this), this.negative = 1, e) : this.length > t.length ? this.clone().iadd(t) : t.clone().iadd(this)
                    }, o.prototype.isub = function(t) {
                        if (0 !== t.negative) {
                            t.negative = 0;
                            var e = this.iadd(t);
                            return t.negative = 1, e._normSign()
                        }
                        if (0 !== this.negative) return this.negative = 0, this.iadd(t), this.negative = 1, this._normSign();
                        var r, n, i = this.cmp(t);
                        if (0 === i) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
                        i > 0 ? (r = this, n = t) : (r = t, n = this);
                        for (var o = 0, s = 0; s < n.length; s++) e = (0 | r.words[s]) - (0 | n.words[s]) + o, o = e >> 26, this.words[s] = 67108863 & e;
                        for (; 0 !== o && s < r.length; s++) e = (0 | r.words[s]) + o, o = e >> 26, this.words[s] = 67108863 & e;
                        if (0 === o && s < r.length && r !== this)
                            for (; s < r.length; s++) this.words[s] = r.words[s];
                        return this.length = Math.max(this.length, s), r !== this && (this.negative = 1), this.strip()
                    }, o.prototype.sub = function(t) {
                        return this.clone().isub(t)
                    };
                    var p = function(t, e, r) {
                        var n, i, o, s = t.words,
                            a = e.words,
                            u = r.words,
                            h = 0,
                            l = 0 | s[0],
                            f = 8191 & l,
                            c = l >>> 13,
                            d = 0 | s[1],
                            m = 8191 & d,
                            p = d >>> 13,
                            g = 0 | s[2],
                            v = 8191 & g,
                            y = g >>> 13,
                            w = 0 | s[3],
                            b = 8191 & w,
                            M = w >>> 13,
                            E = 0 | s[4],
                            N = 8191 & E,
                            A = E >>> 13,
                            _ = 0 | s[5],
                            S = 8191 & _,
                            I = _ >>> 13,
                            R = 0 | s[6],
                            P = 8191 & R,
                            k = R >>> 13,
                            x = 0 | s[7],
                            T = 8191 & x,
                            O = x >>> 13,
                            C = 0 | s[8],
                            U = 8191 & C,
                            F = C >>> 13,
                            B = 0 | s[9],
                            L = 8191 & B,
                            D = B >>> 13,
                            G = 0 | a[0],
                            j = 8191 & G,
                            q = G >>> 13,
                            z = 0 | a[1],
                            K = 8191 & z,
                            W = z >>> 13,
                            V = 0 | a[2],
                            H = 8191 & V,
                            J = V >>> 13,
                            Z = 0 | a[3],
                            X = 8191 & Z,
                            $ = Z >>> 13,
                            Y = 0 | a[4],
                            Q = 8191 & Y,
                            tt = Y >>> 13,
                            et = 0 | a[5],
                            rt = 8191 & et,
                            nt = et >>> 13,
                            it = 0 | a[6],
                            ot = 8191 & it,
                            st = it >>> 13,
                            at = 0 | a[7],
                            ut = 8191 & at,
                            ht = at >>> 13,
                            lt = 0 | a[8],
                            ft = 8191 & lt,
                            ct = lt >>> 13,
                            dt = 0 | a[9],
                            mt = 8191 & dt,
                            pt = dt >>> 13;
                        r.negative = t.negative ^ e.negative, r.length = 19, n = Math.imul(f, j), i = Math.imul(f, q), i = i + Math.imul(c, j) | 0, o = Math.imul(c, q);
                        var gt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (gt >>> 26) | 0, gt &= 67108863, n = Math.imul(m, j), i = Math.imul(m, q), i = i + Math.imul(p, j) | 0, o = Math.imul(p, q), n = n + Math.imul(f, K) | 0, i = i + Math.imul(f, W) | 0, i = i + Math.imul(c, K) | 0, o = o + Math.imul(c, W) | 0;
                        var vt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (vt >>> 26) | 0, vt &= 67108863, n = Math.imul(v, j), i = Math.imul(v, q), i = i + Math.imul(y, j) | 0, o = Math.imul(y, q), n = n + Math.imul(m, K) | 0, i = i + Math.imul(m, W) | 0, i = i + Math.imul(p, K) | 0, o = o + Math.imul(p, W) | 0, n = n + Math.imul(f, H) | 0, i = i + Math.imul(f, J) | 0, i = i + Math.imul(c, H) | 0, o = o + Math.imul(c, J) | 0;
                        var yt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (yt >>> 26) | 0, yt &= 67108863, n = Math.imul(b, j), i = Math.imul(b, q), i = i + Math.imul(M, j) | 0, o = Math.imul(M, q), n = n + Math.imul(v, K) | 0, i = i + Math.imul(v, W) | 0, i = i + Math.imul(y, K) | 0, o = o + Math.imul(y, W) | 0, n = n + Math.imul(m, H) | 0, i = i + Math.imul(m, J) | 0, i = i + Math.imul(p, H) | 0, o = o + Math.imul(p, J) | 0, n = n + Math.imul(f, X) | 0, i = i + Math.imul(f, $) | 0, i = i + Math.imul(c, X) | 0, o = o + Math.imul(c, $) | 0;
                        var wt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (wt >>> 26) | 0, wt &= 67108863, n = Math.imul(N, j), i = Math.imul(N, q), i = i + Math.imul(A, j) | 0, o = Math.imul(A, q), n = n + Math.imul(b, K) | 0, i = i + Math.imul(b, W) | 0, i = i + Math.imul(M, K) | 0, o = o + Math.imul(M, W) | 0, n = n + Math.imul(v, H) | 0, i = i + Math.imul(v, J) | 0, i = i + Math.imul(y, H) | 0, o = o + Math.imul(y, J) | 0, n = n + Math.imul(m, X) | 0, i = i + Math.imul(m, $) | 0, i = i + Math.imul(p, X) | 0, o = o + Math.imul(p, $) | 0, n = n + Math.imul(f, Q) | 0, i = i + Math.imul(f, tt) | 0, i = i + Math.imul(c, Q) | 0, o = o + Math.imul(c, tt) | 0;
                        var bt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (bt >>> 26) | 0, bt &= 67108863, n = Math.imul(S, j), i = Math.imul(S, q), i = i + Math.imul(I, j) | 0, o = Math.imul(I, q), n = n + Math.imul(N, K) | 0, i = i + Math.imul(N, W) | 0, i = i + Math.imul(A, K) | 0, o = o + Math.imul(A, W) | 0, n = n + Math.imul(b, H) | 0, i = i + Math.imul(b, J) | 0, i = i + Math.imul(M, H) | 0, o = o + Math.imul(M, J) | 0, n = n + Math.imul(v, X) | 0, i = i + Math.imul(v, $) | 0, i = i + Math.imul(y, X) | 0, o = o + Math.imul(y, $) | 0, n = n + Math.imul(m, Q) | 0, i = i + Math.imul(m, tt) | 0, i = i + Math.imul(p, Q) | 0, o = o + Math.imul(p, tt) | 0, n = n + Math.imul(f, rt) | 0, i = i + Math.imul(f, nt) | 0, i = i + Math.imul(c, rt) | 0, o = o + Math.imul(c, nt) | 0;
                        var Mt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (Mt >>> 26) | 0, Mt &= 67108863, n = Math.imul(P, j), i = Math.imul(P, q), i = i + Math.imul(k, j) | 0, o = Math.imul(k, q), n = n + Math.imul(S, K) | 0, i = i + Math.imul(S, W) | 0, i = i + Math.imul(I, K) | 0, o = o + Math.imul(I, W) | 0, n = n + Math.imul(N, H) | 0, i = i + Math.imul(N, J) | 0, i = i + Math.imul(A, H) | 0, o = o + Math.imul(A, J) | 0, n = n + Math.imul(b, X) | 0, i = i + Math.imul(b, $) | 0, i = i + Math.imul(M, X) | 0, o = o + Math.imul(M, $) | 0, n = n + Math.imul(v, Q) | 0, i = i + Math.imul(v, tt) | 0, i = i + Math.imul(y, Q) | 0, o = o + Math.imul(y, tt) | 0, n = n + Math.imul(m, rt) | 0, i = i + Math.imul(m, nt) | 0, i = i + Math.imul(p, rt) | 0, o = o + Math.imul(p, nt) | 0, n = n + Math.imul(f, ot) | 0, i = i + Math.imul(f, st) | 0, i = i + Math.imul(c, ot) | 0, o = o + Math.imul(c, st) | 0;
                        var Et = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (Et >>> 26) | 0, Et &= 67108863, n = Math.imul(T, j), i = Math.imul(T, q), i = i + Math.imul(O, j) | 0, o = Math.imul(O, q), n = n + Math.imul(P, K) | 0, i = i + Math.imul(P, W) | 0, i = i + Math.imul(k, K) | 0, o = o + Math.imul(k, W) | 0, n = n + Math.imul(S, H) | 0, i = i + Math.imul(S, J) | 0, i = i + Math.imul(I, H) | 0, o = o + Math.imul(I, J) | 0, n = n + Math.imul(N, X) | 0, i = i + Math.imul(N, $) | 0, i = i + Math.imul(A, X) | 0, o = o + Math.imul(A, $) | 0, n = n + Math.imul(b, Q) | 0, i = i + Math.imul(b, tt) | 0, i = i + Math.imul(M, Q) | 0, o = o + Math.imul(M, tt) | 0, n = n + Math.imul(v, rt) | 0, i = i + Math.imul(v, nt) | 0, i = i + Math.imul(y, rt) | 0, o = o + Math.imul(y, nt) | 0, n = n + Math.imul(m, ot) | 0, i = i + Math.imul(m, st) | 0, i = i + Math.imul(p, ot) | 0, o = o + Math.imul(p, st) | 0, n = n + Math.imul(f, ut) | 0, i = i + Math.imul(f, ht) | 0, i = i + Math.imul(c, ut) | 0, o = o + Math.imul(c, ht) | 0;
                        var Nt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (Nt >>> 26) | 0, Nt &= 67108863, n = Math.imul(U, j), i = Math.imul(U, q), i = i + Math.imul(F, j) | 0, o = Math.imul(F, q), n = n + Math.imul(T, K) | 0, i = i + Math.imul(T, W) | 0, i = i + Math.imul(O, K) | 0, o = o + Math.imul(O, W) | 0, n = n + Math.imul(P, H) | 0, i = i + Math.imul(P, J) | 0, i = i + Math.imul(k, H) | 0, o = o + Math.imul(k, J) | 0, n = n + Math.imul(S, X) | 0, i = i + Math.imul(S, $) | 0, i = i + Math.imul(I, X) | 0, o = o + Math.imul(I, $) | 0, n = n + Math.imul(N, Q) | 0, i = i + Math.imul(N, tt) | 0, i = i + Math.imul(A, Q) | 0, o = o + Math.imul(A, tt) | 0, n = n + Math.imul(b, rt) | 0, i = i + Math.imul(b, nt) | 0, i = i + Math.imul(M, rt) | 0, o = o + Math.imul(M, nt) | 0, n = n + Math.imul(v, ot) | 0, i = i + Math.imul(v, st) | 0, i = i + Math.imul(y, ot) | 0, o = o + Math.imul(y, st) | 0, n = n + Math.imul(m, ut) | 0, i = i + Math.imul(m, ht) | 0, i = i + Math.imul(p, ut) | 0, o = o + Math.imul(p, ht) | 0, n = n + Math.imul(f, ft) | 0, i = i + Math.imul(f, ct) | 0, i = i + Math.imul(c, ft) | 0, o = o + Math.imul(c, ct) | 0;
                        var At = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (At >>> 26) | 0, At &= 67108863, n = Math.imul(L, j), i = Math.imul(L, q), i = i + Math.imul(D, j) | 0, o = Math.imul(D, q), n = n + Math.imul(U, K) | 0, i = i + Math.imul(U, W) | 0, i = i + Math.imul(F, K) | 0, o = o + Math.imul(F, W) | 0, n = n + Math.imul(T, H) | 0, i = i + Math.imul(T, J) | 0, i = i + Math.imul(O, H) | 0, o = o + Math.imul(O, J) | 0, n = n + Math.imul(P, X) | 0, i = i + Math.imul(P, $) | 0, i = i + Math.imul(k, X) | 0, o = o + Math.imul(k, $) | 0, n = n + Math.imul(S, Q) | 0, i = i + Math.imul(S, tt) | 0, i = i + Math.imul(I, Q) | 0, o = o + Math.imul(I, tt) | 0, n = n + Math.imul(N, rt) | 0, i = i + Math.imul(N, nt) | 0, i = i + Math.imul(A, rt) | 0, o = o + Math.imul(A, nt) | 0, n = n + Math.imul(b, ot) | 0, i = i + Math.imul(b, st) | 0, i = i + Math.imul(M, ot) | 0, o = o + Math.imul(M, st) | 0, n = n + Math.imul(v, ut) | 0, i = i + Math.imul(v, ht) | 0, i = i + Math.imul(y, ut) | 0, o = o + Math.imul(y, ht) | 0, n = n + Math.imul(m, ft) | 0, i = i + Math.imul(m, ct) | 0, i = i + Math.imul(p, ft) | 0, o = o + Math.imul(p, ct) | 0, n = n + Math.imul(f, mt) | 0, i = i + Math.imul(f, pt) | 0, i = i + Math.imul(c, mt) | 0, o = o + Math.imul(c, pt) | 0;
                        var _t = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (_t >>> 26) | 0, _t &= 67108863, n = Math.imul(L, K), i = Math.imul(L, W), i = i + Math.imul(D, K) | 0, o = Math.imul(D, W), n = n + Math.imul(U, H) | 0, i = i + Math.imul(U, J) | 0, i = i + Math.imul(F, H) | 0, o = o + Math.imul(F, J) | 0, n = n + Math.imul(T, X) | 0, i = i + Math.imul(T, $) | 0, i = i + Math.imul(O, X) | 0, o = o + Math.imul(O, $) | 0, n = n + Math.imul(P, Q) | 0, i = i + Math.imul(P, tt) | 0, i = i + Math.imul(k, Q) | 0, o = o + Math.imul(k, tt) | 0, n = n + Math.imul(S, rt) | 0, i = i + Math.imul(S, nt) | 0, i = i + Math.imul(I, rt) | 0, o = o + Math.imul(I, nt) | 0, n = n + Math.imul(N, ot) | 0, i = i + Math.imul(N, st) | 0, i = i + Math.imul(A, ot) | 0, o = o + Math.imul(A, st) | 0, n = n + Math.imul(b, ut) | 0, i = i + Math.imul(b, ht) | 0, i = i + Math.imul(M, ut) | 0, o = o + Math.imul(M, ht) | 0, n = n + Math.imul(v, ft) | 0, i = i + Math.imul(v, ct) | 0, i = i + Math.imul(y, ft) | 0, o = o + Math.imul(y, ct) | 0, n = n + Math.imul(m, mt) | 0, i = i + Math.imul(m, pt) | 0, i = i + Math.imul(p, mt) | 0, o = o + Math.imul(p, pt) | 0;
                        var St = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (St >>> 26) | 0, St &= 67108863, n = Math.imul(L, H), i = Math.imul(L, J), i = i + Math.imul(D, H) | 0, o = Math.imul(D, J), n = n + Math.imul(U, X) | 0, i = i + Math.imul(U, $) | 0, i = i + Math.imul(F, X) | 0, o = o + Math.imul(F, $) | 0, n = n + Math.imul(T, Q) | 0, i = i + Math.imul(T, tt) | 0, i = i + Math.imul(O, Q) | 0, o = o + Math.imul(O, tt) | 0, n = n + Math.imul(P, rt) | 0, i = i + Math.imul(P, nt) | 0, i = i + Math.imul(k, rt) | 0, o = o + Math.imul(k, nt) | 0, n = n + Math.imul(S, ot) | 0, i = i + Math.imul(S, st) | 0, i = i + Math.imul(I, ot) | 0, o = o + Math.imul(I, st) | 0, n = n + Math.imul(N, ut) | 0, i = i + Math.imul(N, ht) | 0, i = i + Math.imul(A, ut) | 0, o = o + Math.imul(A, ht) | 0, n = n + Math.imul(b, ft) | 0, i = i + Math.imul(b, ct) | 0, i = i + Math.imul(M, ft) | 0, o = o + Math.imul(M, ct) | 0, n = n + Math.imul(v, mt) | 0, i = i + Math.imul(v, pt) | 0, i = i + Math.imul(y, mt) | 0, o = o + Math.imul(y, pt) | 0;
                        var It = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (It >>> 26) | 0, It &= 67108863, n = Math.imul(L, X), i = Math.imul(L, $), i = i + Math.imul(D, X) | 0, o = Math.imul(D, $), n = n + Math.imul(U, Q) | 0, i = i + Math.imul(U, tt) | 0, i = i + Math.imul(F, Q) | 0, o = o + Math.imul(F, tt) | 0, n = n + Math.imul(T, rt) | 0, i = i + Math.imul(T, nt) | 0, i = i + Math.imul(O, rt) | 0, o = o + Math.imul(O, nt) | 0, n = n + Math.imul(P, ot) | 0, i = i + Math.imul(P, st) | 0, i = i + Math.imul(k, ot) | 0, o = o + Math.imul(k, st) | 0, n = n + Math.imul(S, ut) | 0, i = i + Math.imul(S, ht) | 0, i = i + Math.imul(I, ut) | 0, o = o + Math.imul(I, ht) | 0, n = n + Math.imul(N, ft) | 0, i = i + Math.imul(N, ct) | 0, i = i + Math.imul(A, ft) | 0, o = o + Math.imul(A, ct) | 0, n = n + Math.imul(b, mt) | 0, i = i + Math.imul(b, pt) | 0, i = i + Math.imul(M, mt) | 0, o = o + Math.imul(M, pt) | 0;
                        var Rt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (Rt >>> 26) | 0, Rt &= 67108863, n = Math.imul(L, Q), i = Math.imul(L, tt), i = i + Math.imul(D, Q) | 0, o = Math.imul(D, tt), n = n + Math.imul(U, rt) | 0, i = i + Math.imul(U, nt) | 0, i = i + Math.imul(F, rt) | 0, o = o + Math.imul(F, nt) | 0, n = n + Math.imul(T, ot) | 0, i = i + Math.imul(T, st) | 0, i = i + Math.imul(O, ot) | 0, o = o + Math.imul(O, st) | 0, n = n + Math.imul(P, ut) | 0, i = i + Math.imul(P, ht) | 0, i = i + Math.imul(k, ut) | 0, o = o + Math.imul(k, ht) | 0, n = n + Math.imul(S, ft) | 0, i = i + Math.imul(S, ct) | 0, i = i + Math.imul(I, ft) | 0, o = o + Math.imul(I, ct) | 0, n = n + Math.imul(N, mt) | 0, i = i + Math.imul(N, pt) | 0, i = i + Math.imul(A, mt) | 0, o = o + Math.imul(A, pt) | 0;
                        var Pt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (Pt >>> 26) | 0, Pt &= 67108863, n = Math.imul(L, rt), i = Math.imul(L, nt), i = i + Math.imul(D, rt) | 0, o = Math.imul(D, nt), n = n + Math.imul(U, ot) | 0, i = i + Math.imul(U, st) | 0, i = i + Math.imul(F, ot) | 0, o = o + Math.imul(F, st) | 0, n = n + Math.imul(T, ut) | 0, i = i + Math.imul(T, ht) | 0, i = i + Math.imul(O, ut) | 0, o = o + Math.imul(O, ht) | 0, n = n + Math.imul(P, ft) | 0, i = i + Math.imul(P, ct) | 0, i = i + Math.imul(k, ft) | 0, o = o + Math.imul(k, ct) | 0, n = n + Math.imul(S, mt) | 0, i = i + Math.imul(S, pt) | 0, i = i + Math.imul(I, mt) | 0, o = o + Math.imul(I, pt) | 0;
                        var kt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (kt >>> 26) | 0, kt &= 67108863, n = Math.imul(L, ot), i = Math.imul(L, st), i = i + Math.imul(D, ot) | 0, o = Math.imul(D, st), n = n + Math.imul(U, ut) | 0, i = i + Math.imul(U, ht) | 0, i = i + Math.imul(F, ut) | 0, o = o + Math.imul(F, ht) | 0, n = n + Math.imul(T, ft) | 0, i = i + Math.imul(T, ct) | 0, i = i + Math.imul(O, ft) | 0, o = o + Math.imul(O, ct) | 0, n = n + Math.imul(P, mt) | 0, i = i + Math.imul(P, pt) | 0, i = i + Math.imul(k, mt) | 0, o = o + Math.imul(k, pt) | 0;
                        var xt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (xt >>> 26) | 0, xt &= 67108863, n = Math.imul(L, ut), i = Math.imul(L, ht), i = i + Math.imul(D, ut) | 0, o = Math.imul(D, ht), n = n + Math.imul(U, ft) | 0, i = i + Math.imul(U, ct) | 0, i = i + Math.imul(F, ft) | 0, o = o + Math.imul(F, ct) | 0, n = n + Math.imul(T, mt) | 0, i = i + Math.imul(T, pt) | 0, i = i + Math.imul(O, mt) | 0, o = o + Math.imul(O, pt) | 0;
                        var Tt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (Tt >>> 26) | 0, Tt &= 67108863, n = Math.imul(L, ft), i = Math.imul(L, ct), i = i + Math.imul(D, ft) | 0, o = Math.imul(D, ct), n = n + Math.imul(U, mt) | 0, i = i + Math.imul(U, pt) | 0, i = i + Math.imul(F, mt) | 0, o = o + Math.imul(F, pt) | 0;
                        var Ot = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (Ot >>> 26) | 0, Ot &= 67108863, n = Math.imul(L, mt), i = Math.imul(L, pt), i = i + Math.imul(D, mt) | 0, o = Math.imul(D, pt);
                        var Ct = (h + n | 0) + ((8191 & i) << 13) | 0;
                        return h = (o + (i >>> 13) | 0) + (Ct >>> 26) | 0, Ct &= 67108863, u[0] = gt, u[1] = vt, u[2] = yt, u[3] = wt, u[4] = bt, u[5] = Mt, u[6] = Et, u[7] = Nt, u[8] = At, u[9] = _t, u[10] = St, u[11] = It, u[12] = Rt, u[13] = Pt, u[14] = kt, u[15] = xt, u[16] = Tt, u[17] = Ot, u[18] = Ct, 0 !== h && (u[19] = h, r.length++), r
                    };

                    function g(t, e, r) {
                        r.negative = e.negative ^ t.negative, r.length = t.length + e.length;
                        for (var n = 0, i = 0, o = 0; o < r.length - 1; o++) {
                            var s = i;
                            i = 0;
                            for (var a = 67108863 & n, u = Math.min(o, e.length - 1), h = Math.max(0, o - t.length + 1); h <= u; h++) {
                                var l = o - h,
                                    f = 0 | t.words[l],
                                    c = 0 | e.words[h],
                                    d = f * c,
                                    m = 67108863 & d;
                                s = s + (d / 67108864 | 0) | 0, m = m + a | 0, a = 67108863 & m, s = s + (m >>> 26) | 0, i += s >>> 26, s &= 67108863
                            }
                            r.words[o] = a, n = s, s = i
                        }
                        return 0 !== n ? r.words[o] = n : r.length--, r.strip()
                    }

                    function v(t, e, r) {
                        var n = new y;
                        return n.mulp(t, e, r)
                    }

                    function y(t, e) {
                        this.x = t, this.y = e
                    }
                    Math.imul || (p = m), o.prototype.mulTo = function(t, e) {
                        var r, n = this.length + t.length;
                        return r = 10 === this.length && 10 === t.length ? p(this, t, e) : n < 63 ? m(this, t, e) : n < 1024 ? g(this, t, e) : v(this, t, e), r
                    }, y.prototype.makeRBT = function(t) {
                        for (var e = new Array(t), r = o.prototype._countBits(t) - 1, n = 0; n < t; n++) e[n] = this.revBin(n, r, t);
                        return e
                    }, y.prototype.revBin = function(t, e, r) {
                        if (0 === t || t === r - 1) return t;
                        for (var n = 0, i = 0; i < e; i++) n |= (1 & t) << e - i - 1, t >>= 1;
                        return n
                    }, y.prototype.permute = function(t, e, r, n, i, o) {
                        for (var s = 0; s < o; s++) n[s] = e[t[s]], i[s] = r[t[s]]
                    }, y.prototype.transform = function(t, e, r, n, i, o) {
                        this.permute(o, t, e, r, n, i);
                        for (var s = 1; s < i; s <<= 1)
                            for (var a = s << 1, u = Math.cos(2 * Math.PI / a), h = Math.sin(2 * Math.PI / a), l = 0; l < i; l += a)
                                for (var f = u, c = h, d = 0; d < s; d++) {
                                    var m = r[l + d],
                                        p = n[l + d],
                                        g = r[l + d + s],
                                        v = n[l + d + s],
                                        y = f * g - c * v;
                                    v = f * v + c * g, g = y, r[l + d] = m + g, n[l + d] = p + v, r[l + d + s] = m - g, n[l + d + s] = p - v, d !== a && (y = u * f - h * c, c = u * c + h * f, f = y)
                                }
                    }, y.prototype.guessLen13b = function(t, e) {
                        var r = 1 | Math.max(e, t),
                            n = 1 & r,
                            i = 0;
                        for (r = r / 2 | 0; r; r >>>= 1) i++;
                        return 1 << i + 1 + n
                    }, y.prototype.conjugate = function(t, e, r) {
                        if (!(r <= 1))
                            for (var n = 0; n < r / 2; n++) {
                                var i = t[n];
                                t[n] = t[r - n - 1], t[r - n - 1] = i, i = e[n], e[n] = -e[r - n - 1], e[r - n - 1] = -i
                            }
                    }, y.prototype.normalize13b = function(t, e) {
                        for (var r = 0, n = 0; n < e / 2; n++) {
                            var i = 8192 * Math.round(t[2 * n + 1] / e) + Math.round(t[2 * n] / e) + r;
                            t[n] = 67108863 & i, r = i < 67108864 ? 0 : i / 67108864 | 0
                        }
                        return t
                    }, y.prototype.convert13b = function(t, e, r, i) {
                        for (var o = 0, s = 0; s < e; s++) o += 0 | t[s], r[2 * s] = 8191 & o, o >>>= 13, r[2 * s + 1] = 8191 & o, o >>>= 13;
                        for (s = 2 * e; s < i; ++s) r[s] = 0;
                        n(0 === o), n(0 === (-8192 & o))
                    }, y.prototype.stub = function(t) {
                        for (var e = new Array(t), r = 0; r < t; r++) e[r] = 0;
                        return e
                    }, y.prototype.mulp = function(t, e, r) {
                        var n = 2 * this.guessLen13b(t.length, e.length),
                            i = this.makeRBT(n),
                            o = this.stub(n),
                            s = new Array(n),
                            a = new Array(n),
                            u = new Array(n),
                            h = new Array(n),
                            l = new Array(n),
                            f = new Array(n),
                            c = r.words;
                        c.length = n, this.convert13b(t.words, t.length, s, n), this.convert13b(e.words, e.length, h, n), this.transform(s, o, a, u, n, i), this.transform(h, o, l, f, n, i);
                        for (var d = 0; d < n; d++) {
                            var m = a[d] * l[d] - u[d] * f[d];
                            u[d] = a[d] * f[d] + u[d] * l[d], a[d] = m
                        }
                        return this.conjugate(a, u, n), this.transform(a, u, c, o, n, i), this.conjugate(c, o, n), this.normalize13b(c, n), r.negative = t.negative ^ e.negative, r.length = t.length + e.length, r.strip()
                    }, o.prototype.mul = function(t) {
                        var e = new o(null);
                        return e.words = new Array(this.length + t.length), this.mulTo(t, e)
                    }, o.prototype.mulf = function(t) {
                        var e = new o(null);
                        return e.words = new Array(this.length + t.length), v(this, t, e)
                    }, o.prototype.imul = function(t) {
                        return this.clone().mulTo(t, this)
                    }, o.prototype.imuln = function(t) {
                        n("number" === typeof t), n(t < 67108864);
                        for (var e = 0, r = 0; r < this.length; r++) {
                            var i = (0 | this.words[r]) * t,
                                o = (67108863 & i) + (67108863 & e);
                            e >>= 26, e += i / 67108864 | 0, e += o >>> 26, this.words[r] = 67108863 & o
                        }
                        return 0 !== e && (this.words[r] = e, this.length++), this
                    }, o.prototype.muln = function(t) {
                        return this.clone().imuln(t)
                    }, o.prototype.sqr = function() {
                        return this.mul(this)
                    }, o.prototype.isqr = function() {
                        return this.imul(this.clone())
                    }, o.prototype.pow = function(t) {
                        var e = d(t);
                        if (0 === e.length) return new o(1);
                        for (var r = this, n = 0; n < e.length; n++, r = r.sqr())
                            if (0 !== e[n]) break;
                        if (++n < e.length)
                            for (var i = r.sqr(); n < e.length; n++, i = i.sqr()) 0 !== e[n] && (r = r.mul(i));
                        return r
                    }, o.prototype.iushln = function(t) {
                        n("number" === typeof t && t >= 0);
                        var e, r = t % 26,
                            i = (t - r) / 26,
                            o = 67108863 >>> 26 - r << 26 - r;
                        if (0 !== r) {
                            var s = 0;
                            for (e = 0; e < this.length; e++) {
                                var a = this.words[e] & o,
                                    u = (0 | this.words[e]) - a << r;
                                this.words[e] = u | s, s = a >>> 26 - r
                            }
                            s && (this.words[e] = s, this.length++)
                        }
                        if (0 !== i) {
                            for (e = this.length - 1; e >= 0; e--) this.words[e + i] = this.words[e];
                            for (e = 0; e < i; e++) this.words[e] = 0;
                            this.length += i
                        }
                        return this.strip()
                    }, o.prototype.ishln = function(t) {
                        return n(0 === this.negative), this.iushln(t)
                    }, o.prototype.iushrn = function(t, e, r) {
                        var i;
                        n("number" === typeof t && t >= 0), i = e ? (e - e % 26) / 26 : 0;
                        var o = t % 26,
                            s = Math.min((t - o) / 26, this.length),
                            a = 67108863 ^ 67108863 >>> o << o,
                            u = r;
                        if (i -= s, i = Math.max(0, i), u) {
                            for (var h = 0; h < s; h++) u.words[h] = this.words[h];
                            u.length = s
                        }
                        if (0 === s);
                        else if (this.length > s)
                            for (this.length -= s, h = 0; h < this.length; h++) this.words[h] = this.words[h + s];
                        else this.words[0] = 0, this.length = 1;
                        var l = 0;
                        for (h = this.length - 1; h >= 0 && (0 !== l || h >= i); h--) {
                            var f = 0 | this.words[h];
                            this.words[h] = l << 26 - o | f >>> o, l = f & a
                        }
                        return u && 0 !== l && (u.words[u.length++] = l), 0 === this.length && (this.words[0] = 0, this.length = 1), this.strip()
                    }, o.prototype.ishrn = function(t, e, r) {
                        return n(0 === this.negative), this.iushrn(t, e, r)
                    }, o.prototype.shln = function(t) {
                        return this.clone().ishln(t)
                    }, o.prototype.ushln = function(t) {
                        return this.clone().iushln(t)
                    }, o.prototype.shrn = function(t) {
                        return this.clone().ishrn(t)
                    }, o.prototype.ushrn = function(t) {
                        return this.clone().iushrn(t)
                    }, o.prototype.testn = function(t) {
                        n("number" === typeof t && t >= 0);
                        var e = t % 26,
                            r = (t - e) / 26,
                            i = 1 << e;
                        if (this.length <= r) return !1;
                        var o = this.words[r];
                        return !!(o & i)
                    }, o.prototype.imaskn = function(t) {
                        n("number" === typeof t && t >= 0);
                        var e = t % 26,
                            r = (t - e) / 26;
                        if (n(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r) return this;
                        if (0 !== e && r++, this.length = Math.min(r, this.length), 0 !== e) {
                            var i = 67108863 ^ 67108863 >>> e << e;
                            this.words[this.length - 1] &= i
                        }
                        return this.strip()
                    }, o.prototype.maskn = function(t) {
                        return this.clone().imaskn(t)
                    }, o.prototype.iaddn = function(t) {
                        return n("number" === typeof t), n(t < 67108864), t < 0 ? this.isubn(-t) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) < t ? (this.words[0] = t - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(t), this.negative = 1, this) : this._iaddn(t)
                    }, o.prototype._iaddn = function(t) {
                        this.words[0] += t;
                        for (var e = 0; e < this.length && this.words[e] >= 67108864; e++) this.words[e] -= 67108864, e === this.length - 1 ? this.words[e + 1] = 1 : this.words[e + 1]++;
                        return this.length = Math.max(this.length, e + 1), this
                    }, o.prototype.isubn = function(t) {
                        if (n("number" === typeof t), n(t < 67108864), t < 0) return this.iaddn(-t);
                        if (0 !== this.negative) return this.negative = 0, this.iaddn(t), this.negative = 1, this;
                        if (this.words[0] -= t, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
                        else
                            for (var e = 0; e < this.length && this.words[e] < 0; e++) this.words[e] += 67108864, this.words[e + 1] -= 1;
                        return this.strip()
                    }, o.prototype.addn = function(t) {
                        return this.clone().iaddn(t)
                    }, o.prototype.subn = function(t) {
                        return this.clone().isubn(t)
                    }, o.prototype.iabs = function() {
                        return this.negative = 0, this
                    }, o.prototype.abs = function() {
                        return this.clone().iabs()
                    }, o.prototype._ishlnsubmul = function(t, e, r) {
                        var i, o, s = t.length + r;
                        this._expand(s);
                        var a = 0;
                        for (i = 0; i < t.length; i++) {
                            o = (0 | this.words[i + r]) + a;
                            var u = (0 | t.words[i]) * e;
                            o -= 67108863 & u, a = (o >> 26) - (u / 67108864 | 0), this.words[i + r] = 67108863 & o
                        }
                        for (; i < this.length - r; i++) o = (0 | this.words[i + r]) + a, a = o >> 26, this.words[i + r] = 67108863 & o;
                        if (0 === a) return this.strip();
                        for (n(-1 === a), a = 0, i = 0; i < this.length; i++) o = -(0 | this.words[i]) + a, a = o >> 26, this.words[i] = 67108863 & o;
                        return this.negative = 1, this.strip()
                    }, o.prototype._wordDiv = function(t, e) {
                        var r = this.length - t.length,
                            n = this.clone(),
                            i = t,
                            s = 0 | i.words[i.length - 1],
                            a = this._countBits(s);
                        r = 26 - a, 0 !== r && (i = i.ushln(r), n.iushln(r), s = 0 | i.words[i.length - 1]);
                        var u, h = n.length - i.length;
                        if ("mod" !== e) {
                            u = new o(null), u.length = h + 1, u.words = new Array(u.length);
                            for (var l = 0; l < u.length; l++) u.words[l] = 0
                        }
                        var f = n.clone()._ishlnsubmul(i, 1, h);
                        0 === f.negative && (n = f, u && (u.words[h] = 1));
                        for (var c = h - 1; c >= 0; c--) {
                            var d = 67108864 * (0 | n.words[i.length + c]) + (0 | n.words[i.length + c - 1]);
                            d = Math.min(d / s | 0, 67108863), n._ishlnsubmul(i, d, c);
                            while (0 !== n.negative) d--, n.negative = 0, n._ishlnsubmul(i, 1, c), n.isZero() || (n.negative ^= 1);
                            u && (u.words[c] = d)
                        }
                        return u && u.strip(), n.strip(), "div" !== e && 0 !== r && n.iushrn(r), {
                            div: u || null,
                            mod: n
                        }
                    }, o.prototype.divmod = function(t, e, r) {
                        return n(!t.isZero()), this.isZero() ? {
                            div: new o(0),
                            mod: new o(0)
                        } : 0 !== this.negative && 0 === t.negative ? (a = this.neg().divmod(t, e), "mod" !== e && (i = a.div.neg()), "div" !== e && (s = a.mod.neg(), r && 0 !== s.negative && s.iadd(t)), {
                            div: i,
                            mod: s
                        }) : 0 === this.negative && 0 !== t.negative ? (a = this.divmod(t.neg(), e), "mod" !== e && (i = a.div.neg()), {
                            div: i,
                            mod: a.mod
                        }) : 0 !== (this.negative & t.negative) ? (a = this.neg().divmod(t.neg(), e), "div" !== e && (s = a.mod.neg(), r && 0 !== s.negative && s.isub(t)), {
                            div: a.div,
                            mod: s
                        }) : t.length > this.length || this.cmp(t) < 0 ? {
                            div: new o(0),
                            mod: this
                        } : 1 === t.length ? "div" === e ? {
                            div: this.divn(t.words[0]),
                            mod: null
                        } : "mod" === e ? {
                            div: null,
                            mod: new o(this.modn(t.words[0]))
                        } : {
                            div: this.divn(t.words[0]),
                            mod: new o(this.modn(t.words[0]))
                        } : this._wordDiv(t, e);
                        var i, s, a
                    }, o.prototype.div = function(t) {
                        return this.divmod(t, "div", !1).div
                    }, o.prototype.mod = function(t) {
                        return this.divmod(t, "mod", !1).mod
                    }, o.prototype.umod = function(t) {
                        return this.divmod(t, "mod", !0).mod
                    }, o.prototype.divRound = function(t) {
                        var e = this.divmod(t);
                        if (e.mod.isZero()) return e.div;
                        var r = 0 !== e.div.negative ? e.mod.isub(t) : e.mod,
                            n = t.ushrn(1),
                            i = t.andln(1),
                            o = r.cmp(n);
                        return o < 0 || 1 === i && 0 === o ? e.div : 0 !== e.div.negative ? e.div.isubn(1) : e.div.iaddn(1)
                    }, o.prototype.modn = function(t) {
                        n(t <= 67108863);
                        for (var e = (1 << 26) % t, r = 0, i = this.length - 1; i >= 0; i--) r = (e * r + (0 | this.words[i])) % t;
                        return r
                    }, o.prototype.idivn = function(t) {
                        n(t <= 67108863);
                        for (var e = 0, r = this.length - 1; r >= 0; r--) {
                            var i = (0 | this.words[r]) + 67108864 * e;
                            this.words[r] = i / t | 0, e = i % t
                        }
                        return this.strip()
                    }, o.prototype.divn = function(t) {
                        return this.clone().idivn(t)
                    }, o.prototype.egcd = function(t) {
                        n(0 === t.negative), n(!t.isZero());
                        var e = this,
                            r = t.clone();
                        e = 0 !== e.negative ? e.umod(t) : e.clone();
                        var i = new o(1),
                            s = new o(0),
                            a = new o(0),
                            u = new o(1),
                            h = 0;
                        while (e.isEven() && r.isEven()) e.iushrn(1), r.iushrn(1), ++h;
                        var l = r.clone(),
                            f = e.clone();
                        while (!e.isZero()) {
                            for (var c = 0, d = 1; 0 === (e.words[0] & d) && c < 26; ++c, d <<= 1);
                            if (c > 0) {
                                e.iushrn(c);
                                while (c-- > 0)(i.isOdd() || s.isOdd()) && (i.iadd(l), s.isub(f)), i.iushrn(1), s.iushrn(1)
                            }
                            for (var m = 0, p = 1; 0 === (r.words[0] & p) && m < 26; ++m, p <<= 1);
                            if (m > 0) {
                                r.iushrn(m);
                                while (m-- > 0)(a.isOdd() || u.isOdd()) && (a.iadd(l), u.isub(f)), a.iushrn(1), u.iushrn(1)
                            }
                            e.cmp(r) >= 0 ? (e.isub(r), i.isub(a), s.isub(u)) : (r.isub(e), a.isub(i), u.isub(s))
                        }
                        return {
                            a: a,
                            b: u,
                            gcd: r.iushln(h)
                        }
                    }, o.prototype._invmp = function(t) {
                        n(0 === t.negative), n(!t.isZero());
                        var e = this,
                            r = t.clone();
                        e = 0 !== e.negative ? e.umod(t) : e.clone();
                        var i, s = new o(1),
                            a = new o(0),
                            u = r.clone();
                        while (e.cmpn(1) > 0 && r.cmpn(1) > 0) {
                            for (var h = 0, l = 1; 0 === (e.words[0] & l) && h < 26; ++h, l <<= 1);
                            if (h > 0) {
                                e.iushrn(h);
                                while (h-- > 0) s.isOdd() && s.iadd(u), s.iushrn(1)
                            }
                            for (var f = 0, c = 1; 0 === (r.words[0] & c) && f < 26; ++f, c <<= 1);
                            if (f > 0) {
                                r.iushrn(f);
                                while (f-- > 0) a.isOdd() && a.iadd(u), a.iushrn(1)
                            }
                            e.cmp(r) >= 0 ? (e.isub(r), s.isub(a)) : (r.isub(e), a.isub(s))
                        }
                        return i = 0 === e.cmpn(1) ? s : a, i.cmpn(0) < 0 && i.iadd(t), i
                    }, o.prototype.gcd = function(t) {
                        if (this.isZero()) return t.abs();
                        if (t.isZero()) return this.abs();
                        var e = this.clone(),
                            r = t.clone();
                        e.negative = 0, r.negative = 0;
                        for (var n = 0; e.isEven() && r.isEven(); n++) e.iushrn(1), r.iushrn(1);
                        do {
                            while (e.isEven()) e.iushrn(1);
                            while (r.isEven()) r.iushrn(1);
                            var i = e.cmp(r);
                            if (i < 0) {
                                var o = e;
                                e = r, r = o
                            } else if (0 === i || 0 === r.cmpn(1)) break;
                            e.isub(r)
                        } while (1);
                        return r.iushln(n)
                    }, o.prototype.invm = function(t) {
                        return this.egcd(t).a.umod(t)
                    }, o.prototype.isEven = function() {
                        return 0 === (1 & this.words[0])
                    }, o.prototype.isOdd = function() {
                        return 1 === (1 & this.words[0])
                    }, o.prototype.andln = function(t) {
                        return this.words[0] & t
                    }, o.prototype.bincn = function(t) {
                        n("number" === typeof t);
                        var e = t % 26,
                            r = (t - e) / 26,
                            i = 1 << e;
                        if (this.length <= r) return this._expand(r + 1), this.words[r] |= i, this;
                        for (var o = i, s = r; 0 !== o && s < this.length; s++) {
                            var a = 0 | this.words[s];
                            a += o, o = a >>> 26, a &= 67108863, this.words[s] = a
                        }
                        return 0 !== o && (this.words[s] = o, this.length++), this
                    }, o.prototype.isZero = function() {
                        return 1 === this.length && 0 === this.words[0]
                    }, o.prototype.cmpn = function(t) {
                        var e, r = t < 0;
                        if (0 !== this.negative && !r) return -1;
                        if (0 === this.negative && r) return 1;
                        if (this.strip(), this.length > 1) e = 1;
                        else {
                            r && (t = -t), n(t <= 67108863, "Number is too big");
                            var i = 0 | this.words[0];
                            e = i === t ? 0 : i < t ? -1 : 1
                        }
                        return 0 !== this.negative ? 0 | -e : e
                    }, o.prototype.cmp = function(t) {
                        if (0 !== this.negative && 0 === t.negative) return -1;
                        if (0 === this.negative && 0 !== t.negative) return 1;
                        var e = this.ucmp(t);
                        return 0 !== this.negative ? 0 | -e : e
                    }, o.prototype.ucmp = function(t) {
                        if (this.length > t.length) return 1;
                        if (this.length < t.length) return -1;
                        for (var e = 0, r = this.length - 1; r >= 0; r--) {
                            var n = 0 | this.words[r],
                                i = 0 | t.words[r];
                            if (n !== i) {
                                n < i ? e = -1 : n > i && (e = 1);
                                break
                            }
                        }
                        return e
                    }, o.prototype.gtn = function(t) {
                        return 1 === this.cmpn(t)
                    }, o.prototype.gt = function(t) {
                        return 1 === this.cmp(t)
                    }, o.prototype.gten = function(t) {
                        return this.cmpn(t) >= 0
                    }, o.prototype.gte = function(t) {
                        return this.cmp(t) >= 0
                    }, o.prototype.ltn = function(t) {
                        return -1 === this.cmpn(t)
                    }, o.prototype.lt = function(t) {
                        return -1 === this.cmp(t)
                    }, o.prototype.lten = function(t) {
                        return this.cmpn(t) <= 0
                    }, o.prototype.lte = function(t) {
                        return this.cmp(t) <= 0
                    }, o.prototype.eqn = function(t) {
                        return 0 === this.cmpn(t)
                    }, o.prototype.eq = function(t) {
                        return 0 === this.cmp(t)
                    }, o.red = function(t) {
                        return new _(t)
                    }, o.prototype.toRed = function(t) {
                        return n(!this.red, "Already a number in reduction context"), n(0 === this.negative, "red works only with positives"), t.convertTo(this)._forceRed(t)
                    }, o.prototype.fromRed = function() {
                        return n(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this)
                    }, o.prototype._forceRed = function(t) {
                        return this.red = t, this
                    }, o.prototype.forceRed = function(t) {
                        return n(!this.red, "Already a number in reduction context"), this._forceRed(t)
                    }, o.prototype.redAdd = function(t) {
                        return n(this.red, "redAdd works only with red numbers"), this.red.add(this, t)
                    }, o.prototype.redIAdd = function(t) {
                        return n(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t)
                    }, o.prototype.redSub = function(t) {
                        return n(this.red, "redSub works only with red numbers"), this.red.sub(this, t)
                    }, o.prototype.redISub = function(t) {
                        return n(this.red, "redISub works only with red numbers"), this.red.isub(this, t)
                    }, o.prototype.redShl = function(t) {
                        return n(this.red, "redShl works only with red numbers"), this.red.shl(this, t)
                    }, o.prototype.redMul = function(t) {
                        return n(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.mul(this, t)
                    }, o.prototype.redIMul = function(t) {
                        return n(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.imul(this, t)
                    }, o.prototype.redSqr = function() {
                        return n(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this)
                    }, o.prototype.redISqr = function() {
                        return n(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this)
                    }, o.prototype.redSqrt = function() {
                        return n(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this)
                    }, o.prototype.redInvm = function() {
                        return n(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this)
                    }, o.prototype.redNeg = function() {
                        return n(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this)
                    }, o.prototype.redPow = function(t) {
                        return n(this.red && !t.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t)
                    };
                    var w = {
                        k256: null,
                        p224: null,
                        p192: null,
                        p25519: null
                    };

                    function b(t, e) {
                        this.name = t, this.p = new o(e, 16), this.n = this.p.bitLength(), this.k = new o(1).iushln(this.n).isub(this.p), this.tmp = this._tmp()
                    }

                    function M() {
                        b.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")
                    }

                    function E() {
                        b.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")
                    }

                    function N() {
                        b.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")
                    }

                    function A() {
                        b.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")
                    }

                    function _(t) {
                        if ("string" === typeof t) {
                            var e = o._prime(t);
                            this.m = e.p, this.prime = e
                        } else n(t.gtn(1), "modulus must be greater than 1"), this.m = t, this.prime = null
                    }

                    function S(t) {
                        _.call(this, t), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new o(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv)
                    }
                    b.prototype._tmp = function() {
                        var t = new o(null);
                        return t.words = new Array(Math.ceil(this.n / 13)), t
                    }, b.prototype.ireduce = function(t) {
                        var e, r = t;
                        do {
                            this.split(r, this.tmp), r = this.imulK(r), r = r.iadd(this.tmp), e = r.bitLength()
                        } while (e > this.n);
                        var n = e < this.n ? -1 : r.ucmp(this.p);
                        return 0 === n ? (r.words[0] = 0, r.length = 1) : n > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r
                    }, b.prototype.split = function(t, e) {
                        t.iushrn(this.n, 0, e)
                    }, b.prototype.imulK = function(t) {
                        return t.imul(this.k)
                    }, i(M, b), M.prototype.split = function(t, e) {
                        for (var r = 4194303, n = Math.min(t.length, 9), i = 0; i < n; i++) e.words[i] = t.words[i];
                        if (e.length = n, t.length <= 9) return t.words[0] = 0, void(t.length = 1);
                        var o = t.words[9];
                        for (e.words[e.length++] = o & r, i = 10; i < t.length; i++) {
                            var s = 0 | t.words[i];
                            t.words[i - 10] = (s & r) << 4 | o >>> 22, o = s
                        }
                        o >>>= 22, t.words[i - 10] = o, 0 === o && t.length > 10 ? t.length -= 10 : t.length -= 9
                    }, M.prototype.imulK = function(t) {
                        t.words[t.length] = 0, t.words[t.length + 1] = 0, t.length += 2;
                        for (var e = 0, r = 0; r < t.length; r++) {
                            var n = 0 | t.words[r];
                            e += 977 * n, t.words[r] = 67108863 & e, e = 64 * n + (e / 67108864 | 0)
                        }
                        return 0 === t.words[t.length - 1] && (t.length--, 0 === t.words[t.length - 1] && t.length--), t
                    }, i(E, b), i(N, b), i(A, b), A.prototype.imulK = function(t) {
                        for (var e = 0, r = 0; r < t.length; r++) {
                            var n = 19 * (0 | t.words[r]) + e,
                                i = 67108863 & n;
                            n >>>= 26, t.words[r] = i, e = n
                        }
                        return 0 !== e && (t.words[t.length++] = e), t
                    }, o._prime = function(t) {
                        if (w[t]) return w[t];
                        var e;
                        if ("k256" === t) e = new M;
                        else if ("p224" === t) e = new E;
                        else if ("p192" === t) e = new N;
                        else {
                            if ("p25519" !== t) throw new Error("Unknown prime " + t);
                            e = new A
                        }
                        return w[t] = e, e
                    }, _.prototype._verify1 = function(t) {
                        n(0 === t.negative, "red works only with positives"), n(t.red, "red works only with red numbers")
                    }, _.prototype._verify2 = function(t, e) {
                        n(0 === (t.negative | e.negative), "red works only with positives"), n(t.red && t.red === e.red, "red works only with red numbers")
                    }, _.prototype.imod = function(t) {
                        return this.prime ? this.prime.ireduce(t)._forceRed(this) : t.umod(this.m)._forceRed(this)
                    }, _.prototype.neg = function(t) {
                        return t.isZero() ? t.clone() : this.m.sub(t)._forceRed(this)
                    }, _.prototype.add = function(t, e) {
                        this._verify2(t, e);
                        var r = t.add(e);
                        return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this)
                    }, _.prototype.iadd = function(t, e) {
                        this._verify2(t, e);
                        var r = t.iadd(e);
                        return r.cmp(this.m) >= 0 && r.isub(this.m), r
                    }, _.prototype.sub = function(t, e) {
                        this._verify2(t, e);
                        var r = t.sub(e);
                        return r.cmpn(0) < 0 && r.iadd(this.m), r._forceRed(this)
                    }, _.prototype.isub = function(t, e) {
                        this._verify2(t, e);
                        var r = t.isub(e);
                        return r.cmpn(0) < 0 && r.iadd(this.m), r
                    }, _.prototype.shl = function(t, e) {
                        return this._verify1(t), this.imod(t.ushln(e))
                    }, _.prototype.imul = function(t, e) {
                        return this._verify2(t, e), this.imod(t.imul(e))
                    }, _.prototype.mul = function(t, e) {
                        return this._verify2(t, e), this.imod(t.mul(e))
                    }, _.prototype.isqr = function(t) {
                        return this.imul(t, t.clone())
                    }, _.prototype.sqr = function(t) {
                        return this.mul(t, t)
                    }, _.prototype.sqrt = function(t) {
                        if (t.isZero()) return t.clone();
                        var e = this.m.andln(3);
                        if (n(e % 2 === 1), 3 === e) {
                            var r = this.m.add(new o(1)).iushrn(2);
                            return this.pow(t, r)
                        }
                        var i = this.m.subn(1),
                            s = 0;
                        while (!i.isZero() && 0 === i.andln(1)) s++, i.iushrn(1);
                        n(!i.isZero());
                        var a = new o(1).toRed(this),
                            u = a.redNeg(),
                            h = this.m.subn(1).iushrn(1),
                            l = this.m.bitLength();
                        l = new o(2 * l * l).toRed(this);
                        while (0 !== this.pow(l, h).cmp(u)) l.redIAdd(u);
                        var f = this.pow(l, i),
                            c = this.pow(t, i.addn(1).iushrn(1)),
                            d = this.pow(t, i),
                            m = s;
                        while (0 !== d.cmp(a)) {
                            for (var p = d, g = 0; 0 !== p.cmp(a); g++) p = p.redSqr();
                            n(g < m);
                            var v = this.pow(f, new o(1).iushln(m - g - 1));
                            c = c.redMul(v), f = v.redSqr(), d = d.redMul(f), m = g
                        }
                        return c
                    }, _.prototype.invm = function(t) {
                        var e = t._invmp(this.m);
                        return 0 !== e.negative ? (e.negative = 0, this.imod(e).redNeg()) : this.imod(e)
                    }, _.prototype.pow = function(t, e) {
                        if (e.isZero()) return new o(1).toRed(this);
                        if (0 === e.cmpn(1)) return t.clone();
                        var r = 4,
                            n = new Array(1 << r);
                        n[0] = new o(1).toRed(this), n[1] = t;
                        for (var i = 2; i < n.length; i++) n[i] = this.mul(n[i - 1], t);
                        var s = n[0],
                            a = 0,
                            u = 0,
                            h = e.bitLength() % 26;
                        for (0 === h && (h = 26), i = e.length - 1; i >= 0; i--) {
                            for (var l = e.words[i], f = h - 1; f >= 0; f--) {
                                var c = l >> f & 1;
                                s !== n[0] && (s = this.sqr(s)), 0 !== c || 0 !== a ? (a <<= 1, a |= c, u++, (u === r || 0 === i && 0 === f) && (s = this.mul(s, n[a]), u = 0, a = 0)) : u = 0
                            }
                            h = 26
                        }
                        return s
                    }, _.prototype.convertTo = function(t) {
                        var e = t.umod(this.m);
                        return e === t ? e.clone() : e
                    }, _.prototype.convertFrom = function(t) {
                        var e = t.clone();
                        return e.red = null, e
                    }, o.mont = function(t) {
                        return new S(t)
                    }, i(S, _), S.prototype.convertTo = function(t) {
                        return this.imod(t.ushln(this.shift))
                    }, S.prototype.convertFrom = function(t) {
                        var e = this.imod(t.mul(this.rinv));
                        return e.red = null, e
                    }, S.prototype.imul = function(t, e) {
                        if (t.isZero() || e.isZero()) return t.words[0] = 0, t.length = 1, t;
                        var r = t.imul(e),
                            n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                            i = r.isub(n).iushrn(this.shift),
                            o = i;
                        return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this)
                    }, S.prototype.mul = function(t, e) {
                        if (t.isZero() || e.isZero()) return new o(0)._forceRed(this);
                        var r = t.mul(e),
                            n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                            i = r.isub(n).iushrn(this.shift),
                            s = i;
                        return i.cmp(this.m) >= 0 ? s = i.isub(this.m) : i.cmpn(0) < 0 && (s = i.iadd(this.m)), s._forceRed(this)
                    }, S.prototype.invm = function(t) {
                        var e = this.imod(t._invmp(this.m).mul(this.r2));
                        return e._forceRed(this)
                    }
                })(t, this)
            }).call(this, r("62e4")(t))
        },
        9565: function(t, e, r) {
            (function(t) {
                (function(t, e) {
                    "use strict";

                    function n(t, e) {
                        if (!t) throw new Error(e || "Assertion failed")
                    }

                    function i(t, e) {
                        t.super_ = e;
                        var r = function() {};
                        r.prototype = e.prototype, t.prototype = new r, t.prototype.constructor = t
                    }

                    function o(t, e, r) {
                        if (o.isBN(t)) return t;
                        this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== t && ("le" !== e && "be" !== e || (r = e, e = 10), this._init(t || 0, e || 10, r || "be"))
                    }
                    var s;
                    "object" === typeof t ? t.exports = o : e.BN = o, o.BN = o, o.wordSize = 26;
                    try {
                        s = "undefined" !== typeof window && "undefined" !== typeof window.Buffer ? window.Buffer : r(15).Buffer
                    } catch (I) {}

                    function a(t, e) {
                        var r = t.charCodeAt(e);
                        return r >= 65 && r <= 70 ? r - 55 : r >= 97 && r <= 102 ? r - 87 : r - 48 & 15
                    }

                    function u(t, e, r) {
                        var n = a(t, r);
                        return r - 1 >= e && (n |= a(t, r - 1) << 4), n
                    }

                    function h(t, e, r, n) {
                        for (var i = 0, o = Math.min(t.length, r), s = e; s < o; s++) {
                            var a = t.charCodeAt(s) - 48;
                            i *= n, i += a >= 49 ? a - 49 + 10 : a >= 17 ? a - 17 + 10 : a
                        }
                        return i
                    }
                    o.isBN = function(t) {
                        return t instanceof o || null !== t && "object" === typeof t && t.constructor.wordSize === o.wordSize && Array.isArray(t.words)
                    }, o.max = function(t, e) {
                        return t.cmp(e) > 0 ? t : e
                    }, o.min = function(t, e) {
                        return t.cmp(e) < 0 ? t : e
                    }, o.prototype._init = function(t, e, r) {
                        if ("number" === typeof t) return this._initNumber(t, e, r);
                        if ("object" === typeof t) return this._initArray(t, e, r);
                        "hex" === e && (e = 16), n(e === (0 | e) && e >= 2 && e <= 36), t = t.toString().replace(/\s+/g, "");
                        var i = 0;
                        "-" === t[0] && (i++, this.negative = 1), i < t.length && (16 === e ? this._parseHex(t, i, r) : (this._parseBase(t, e, i), "le" === r && this._initArray(this.toArray(), e, r)))
                    }, o.prototype._initNumber = function(t, e, r) {
                        t < 0 && (this.negative = 1, t = -t), t < 67108864 ? (this.words = [67108863 & t], this.length = 1) : t < 4503599627370496 ? (this.words = [67108863 & t, t / 67108864 & 67108863], this.length = 2) : (n(t < 9007199254740992), this.words = [67108863 & t, t / 67108864 & 67108863, 1], this.length = 3), "le" === r && this._initArray(this.toArray(), e, r)
                    }, o.prototype._initArray = function(t, e, r) {
                        if (n("number" === typeof t.length), t.length <= 0) return this.words = [0], this.length = 1, this;
                        this.length = Math.ceil(t.length / 3), this.words = new Array(this.length);
                        for (var i = 0; i < this.length; i++) this.words[i] = 0;
                        var o, s, a = 0;
                        if ("be" === r)
                            for (i = t.length - 1, o = 0; i >= 0; i -= 3) s = t[i] | t[i - 1] << 8 | t[i - 2] << 16, this.words[o] |= s << a & 67108863, this.words[o + 1] = s >>> 26 - a & 67108863, a += 24, a >= 26 && (a -= 26, o++);
                        else if ("le" === r)
                            for (i = 0, o = 0; i < t.length; i += 3) s = t[i] | t[i + 1] << 8 | t[i + 2] << 16, this.words[o] |= s << a & 67108863, this.words[o + 1] = s >>> 26 - a & 67108863, a += 24, a >= 26 && (a -= 26, o++);
                        return this.strip()
                    }, o.prototype._parseHex = function(t, e, r) {
                        this.length = Math.ceil((t.length - e) / 6), this.words = new Array(this.length);
                        for (var n = 0; n < this.length; n++) this.words[n] = 0;
                        var i, o = 0,
                            s = 0;
                        if ("be" === r)
                            for (n = t.length - 1; n >= e; n -= 2) i = u(t, e, n) << o, this.words[s] |= 67108863 & i, o >= 18 ? (o -= 18, s += 1, this.words[s] |= i >>> 26) : o += 8;
                        else {
                            var a = t.length - e;
                            for (n = a % 2 === 0 ? e + 1 : e; n < t.length; n += 2) i = u(t, e, n) << o, this.words[s] |= 67108863 & i, o >= 18 ? (o -= 18, s += 1, this.words[s] |= i >>> 26) : o += 8
                        }
                        this.strip()
                    }, o.prototype._parseBase = function(t, e, r) {
                        this.words = [0], this.length = 1;
                        for (var n = 0, i = 1; i <= 67108863; i *= e) n++;
                        n--, i = i / e | 0;
                        for (var o = t.length - r, s = o % n, a = Math.min(o, o - s) + r, u = 0, l = r; l < a; l += n) u = h(t, l, l + n, e), this.imuln(i), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
                        if (0 !== s) {
                            var f = 1;
                            for (u = h(t, l, t.length, e), l = 0; l < s; l++) f *= e;
                            this.imuln(f), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u)
                        }
                        this.strip()
                    }, o.prototype.copy = function(t) {
                        t.words = new Array(this.length);
                        for (var e = 0; e < this.length; e++) t.words[e] = this.words[e];
                        t.length = this.length, t.negative = this.negative, t.red = this.red
                    }, o.prototype.clone = function() {
                        var t = new o(null);
                        return this.copy(t), t
                    }, o.prototype._expand = function(t) {
                        while (this.length < t) this.words[this.length++] = 0;
                        return this
                    }, o.prototype.strip = function() {
                        while (this.length > 1 && 0 === this.words[this.length - 1]) this.length--;
                        return this._normSign()
                    }, o.prototype._normSign = function() {
                        return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this
                    }, o.prototype.inspect = function() {
                        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">"
                    };
                    var l = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"],
                        f = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                        c = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];

                    function d(t) {
                        for (var e = new Array(t.bitLength()), r = 0; r < e.length; r++) {
                            var n = r / 26 | 0,
                                i = r % 26;
                            e[r] = (t.words[n] & 1 << i) >>> i
                        }
                        return e
                    }

                    function m(t, e, r) {
                        r.negative = e.negative ^ t.negative;
                        var n = t.length + e.length | 0;
                        r.length = n, n = n - 1 | 0;
                        var i = 0 | t.words[0],
                            o = 0 | e.words[0],
                            s = i * o,
                            a = 67108863 & s,
                            u = s / 67108864 | 0;
                        r.words[0] = a;
                        for (var h = 1; h < n; h++) {
                            for (var l = u >>> 26, f = 67108863 & u, c = Math.min(h, e.length - 1), d = Math.max(0, h - t.length + 1); d <= c; d++) {
                                var m = h - d | 0;
                                i = 0 | t.words[m], o = 0 | e.words[d], s = i * o + f, l += s / 67108864 | 0, f = 67108863 & s
                            }
                            r.words[h] = 0 | f, u = 0 | l
                        }
                        return 0 !== u ? r.words[h] = 0 | u : r.length--, r.strip()
                    }
                    o.prototype.toString = function(t, e) {
                        var r;
                        if (t = t || 10, e = 0 | e || 1, 16 === t || "hex" === t) {
                            r = "";
                            for (var i = 0, o = 0, s = 0; s < this.length; s++) {
                                var a = this.words[s],
                                    u = (16777215 & (a << i | o)).toString(16);
                                o = a >>> 24 - i & 16777215, r = 0 !== o || s !== this.length - 1 ? l[6 - u.length] + u + r : u + r, i += 2, i >= 26 && (i -= 26, s--)
                            }
                            0 !== o && (r = o.toString(16) + r);
                            while (r.length % e !== 0) r = "0" + r;
                            return 0 !== this.negative && (r = "-" + r), r
                        }
                        if (t === (0 | t) && t >= 2 && t <= 36) {
                            var h = f[t],
                                d = c[t];
                            r = "";
                            var m = this.clone();
                            m.negative = 0;
                            while (!m.isZero()) {
                                var p = m.modn(d).toString(t);
                                m = m.idivn(d), r = m.isZero() ? p + r : l[h - p.length] + p + r
                            }
                            this.isZero() && (r = "0" + r);
                            while (r.length % e !== 0) r = "0" + r;
                            return 0 !== this.negative && (r = "-" + r), r
                        }
                        n(!1, "Base should be between 2 and 36")
                    }, o.prototype.toNumber = function() {
                        var t = this.words[0];
                        return 2 === this.length ? t += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && n(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -t : t
                    }, o.prototype.toJSON = function() {
                        return this.toString(16)
                    }, o.prototype.toBuffer = function(t, e) {
                        return n("undefined" !== typeof s), this.toArrayLike(s, t, e)
                    }, o.prototype.toArray = function(t, e) {
                        return this.toArrayLike(Array, t, e)
                    }, o.prototype.toArrayLike = function(t, e, r) {
                        var i = this.byteLength(),
                            o = r || Math.max(1, i);
                        n(i <= o, "byte array longer than desired length"), n(o > 0, "Requested array length <= 0"), this.strip();
                        var s, a, u = "le" === e,
                            h = new t(o),
                            l = this.clone();
                        if (u) {
                            for (a = 0; !l.isZero(); a++) s = l.andln(255), l.iushrn(8), h[a] = s;
                            for (; a < o; a++) h[a] = 0
                        } else {
                            for (a = 0; a < o - i; a++) h[a] = 0;
                            for (a = 0; !l.isZero(); a++) s = l.andln(255), l.iushrn(8), h[o - a - 1] = s
                        }
                        return h
                    }, Math.clz32 ? o.prototype._countBits = function(t) {
                        return 32 - Math.clz32(t)
                    } : o.prototype._countBits = function(t) {
                        var e = t,
                            r = 0;
                        return e >= 4096 && (r += 13, e >>>= 13), e >= 64 && (r += 7, e >>>= 7), e >= 8 && (r += 4, e >>>= 4), e >= 2 && (r += 2, e >>>= 2), r + e
                    }, o.prototype._zeroBits = function(t) {
                        if (0 === t) return 26;
                        var e = t,
                            r = 0;
                        return 0 === (8191 & e) && (r += 13, e >>>= 13), 0 === (127 & e) && (r += 7, e >>>= 7), 0 === (15 & e) && (r += 4, e >>>= 4), 0 === (3 & e) && (r += 2, e >>>= 2), 0 === (1 & e) && r++, r
                    }, o.prototype.bitLength = function() {
                        var t = this.words[this.length - 1],
                            e = this._countBits(t);
                        return 26 * (this.length - 1) + e
                    }, o.prototype.zeroBits = function() {
                        if (this.isZero()) return 0;
                        for (var t = 0, e = 0; e < this.length; e++) {
                            var r = this._zeroBits(this.words[e]);
                            if (t += r, 26 !== r) break
                        }
                        return t
                    }, o.prototype.byteLength = function() {
                        return Math.ceil(this.bitLength() / 8)
                    }, o.prototype.toTwos = function(t) {
                        return 0 !== this.negative ? this.abs().inotn(t).iaddn(1) : this.clone()
                    }, o.prototype.fromTwos = function(t) {
                        return this.testn(t - 1) ? this.notn(t).iaddn(1).ineg() : this.clone()
                    }, o.prototype.isNeg = function() {
                        return 0 !== this.negative
                    }, o.prototype.neg = function() {
                        return this.clone().ineg()
                    }, o.prototype.ineg = function() {
                        return this.isZero() || (this.negative ^= 1), this
                    }, o.prototype.iuor = function(t) {
                        while (this.length < t.length) this.words[this.length++] = 0;
                        for (var e = 0; e < t.length; e++) this.words[e] = this.words[e] | t.words[e];
                        return this.strip()
                    }, o.prototype.ior = function(t) {
                        return n(0 === (this.negative | t.negative)), this.iuor(t)
                    }, o.prototype.or = function(t) {
                        return this.length > t.length ? this.clone().ior(t) : t.clone().ior(this)
                    }, o.prototype.uor = function(t) {
                        return this.length > t.length ? this.clone().iuor(t) : t.clone().iuor(this)
                    }, o.prototype.iuand = function(t) {
                        var e;
                        e = this.length > t.length ? t : this;
                        for (var r = 0; r < e.length; r++) this.words[r] = this.words[r] & t.words[r];
                        return this.length = e.length, this.strip()
                    }, o.prototype.iand = function(t) {
                        return n(0 === (this.negative | t.negative)), this.iuand(t)
                    }, o.prototype.and = function(t) {
                        return this.length > t.length ? this.clone().iand(t) : t.clone().iand(this)
                    }, o.prototype.uand = function(t) {
                        return this.length > t.length ? this.clone().iuand(t) : t.clone().iuand(this)
                    }, o.prototype.iuxor = function(t) {
                        var e, r;
                        this.length > t.length ? (e = this, r = t) : (e = t, r = this);
                        for (var n = 0; n < r.length; n++) this.words[n] = e.words[n] ^ r.words[n];
                        if (this !== e)
                            for (; n < e.length; n++) this.words[n] = e.words[n];
                        return this.length = e.length, this.strip()
                    }, o.prototype.ixor = function(t) {
                        return n(0 === (this.negative | t.negative)), this.iuxor(t)
                    }, o.prototype.xor = function(t) {
                        return this.length > t.length ? this.clone().ixor(t) : t.clone().ixor(this)
                    }, o.prototype.uxor = function(t) {
                        return this.length > t.length ? this.clone().iuxor(t) : t.clone().iuxor(this)
                    }, o.prototype.inotn = function(t) {
                        n("number" === typeof t && t >= 0);
                        var e = 0 | Math.ceil(t / 26),
                            r = t % 26;
                        this._expand(e), r > 0 && e--;
                        for (var i = 0; i < e; i++) this.words[i] = 67108863 & ~this.words[i];
                        return r > 0 && (this.words[i] = ~this.words[i] & 67108863 >> 26 - r), this.strip()
                    }, o.prototype.notn = function(t) {
                        return this.clone().inotn(t)
                    }, o.prototype.setn = function(t, e) {
                        n("number" === typeof t && t >= 0);
                        var r = t / 26 | 0,
                            i = t % 26;
                        return this._expand(r + 1), this.words[r] = e ? this.words[r] | 1 << i : this.words[r] & ~(1 << i), this.strip()
                    }, o.prototype.iadd = function(t) {
                        var e, r, n;
                        if (0 !== this.negative && 0 === t.negative) return this.negative = 0, e = this.isub(t), this.negative ^= 1, this._normSign();
                        if (0 === this.negative && 0 !== t.negative) return t.negative = 0, e = this.isub(t), t.negative = 1, e._normSign();
                        this.length > t.length ? (r = this, n = t) : (r = t, n = this);
                        for (var i = 0, o = 0; o < n.length; o++) e = (0 | r.words[o]) + (0 | n.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                        for (; 0 !== i && o < r.length; o++) e = (0 | r.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                        if (this.length = r.length, 0 !== i) this.words[this.length] = i, this.length++;
                        else if (r !== this)
                            for (; o < r.length; o++) this.words[o] = r.words[o];
                        return this
                    }, o.prototype.add = function(t) {
                        var e;
                        return 0 !== t.negative && 0 === this.negative ? (t.negative = 0, e = this.sub(t), t.negative ^= 1, e) : 0 === t.negative && 0 !== this.negative ? (this.negative = 0, e = t.sub(this), this.negative = 1, e) : this.length > t.length ? this.clone().iadd(t) : t.clone().iadd(this)
                    }, o.prototype.isub = function(t) {
                        if (0 !== t.negative) {
                            t.negative = 0;
                            var e = this.iadd(t);
                            return t.negative = 1, e._normSign()
                        }
                        if (0 !== this.negative) return this.negative = 0, this.iadd(t), this.negative = 1, this._normSign();
                        var r, n, i = this.cmp(t);
                        if (0 === i) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
                        i > 0 ? (r = this, n = t) : (r = t, n = this);
                        for (var o = 0, s = 0; s < n.length; s++) e = (0 | r.words[s]) - (0 | n.words[s]) + o, o = e >> 26, this.words[s] = 67108863 & e;
                        for (; 0 !== o && s < r.length; s++) e = (0 | r.words[s]) + o, o = e >> 26, this.words[s] = 67108863 & e;
                        if (0 === o && s < r.length && r !== this)
                            for (; s < r.length; s++) this.words[s] = r.words[s];
                        return this.length = Math.max(this.length, s), r !== this && (this.negative = 1), this.strip()
                    }, o.prototype.sub = function(t) {
                        return this.clone().isub(t)
                    };
                    var p = function(t, e, r) {
                        var n, i, o, s = t.words,
                            a = e.words,
                            u = r.words,
                            h = 0,
                            l = 0 | s[0],
                            f = 8191 & l,
                            c = l >>> 13,
                            d = 0 | s[1],
                            m = 8191 & d,
                            p = d >>> 13,
                            g = 0 | s[2],
                            v = 8191 & g,
                            y = g >>> 13,
                            w = 0 | s[3],
                            b = 8191 & w,
                            M = w >>> 13,
                            E = 0 | s[4],
                            N = 8191 & E,
                            A = E >>> 13,
                            _ = 0 | s[5],
                            S = 8191 & _,
                            I = _ >>> 13,
                            R = 0 | s[6],
                            P = 8191 & R,
                            k = R >>> 13,
                            x = 0 | s[7],
                            T = 8191 & x,
                            O = x >>> 13,
                            C = 0 | s[8],
                            U = 8191 & C,
                            F = C >>> 13,
                            B = 0 | s[9],
                            L = 8191 & B,
                            D = B >>> 13,
                            G = 0 | a[0],
                            j = 8191 & G,
                            q = G >>> 13,
                            z = 0 | a[1],
                            K = 8191 & z,
                            W = z >>> 13,
                            V = 0 | a[2],
                            H = 8191 & V,
                            J = V >>> 13,
                            Z = 0 | a[3],
                            X = 8191 & Z,
                            $ = Z >>> 13,
                            Y = 0 | a[4],
                            Q = 8191 & Y,
                            tt = Y >>> 13,
                            et = 0 | a[5],
                            rt = 8191 & et,
                            nt = et >>> 13,
                            it = 0 | a[6],
                            ot = 8191 & it,
                            st = it >>> 13,
                            at = 0 | a[7],
                            ut = 8191 & at,
                            ht = at >>> 13,
                            lt = 0 | a[8],
                            ft = 8191 & lt,
                            ct = lt >>> 13,
                            dt = 0 | a[9],
                            mt = 8191 & dt,
                            pt = dt >>> 13;
                        r.negative = t.negative ^ e.negative, r.length = 19, n = Math.imul(f, j), i = Math.imul(f, q), i = i + Math.imul(c, j) | 0, o = Math.imul(c, q);
                        var gt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (gt >>> 26) | 0, gt &= 67108863, n = Math.imul(m, j), i = Math.imul(m, q), i = i + Math.imul(p, j) | 0, o = Math.imul(p, q), n = n + Math.imul(f, K) | 0, i = i + Math.imul(f, W) | 0, i = i + Math.imul(c, K) | 0, o = o + Math.imul(c, W) | 0;
                        var vt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (vt >>> 26) | 0, vt &= 67108863, n = Math.imul(v, j), i = Math.imul(v, q), i = i + Math.imul(y, j) | 0, o = Math.imul(y, q), n = n + Math.imul(m, K) | 0, i = i + Math.imul(m, W) | 0, i = i + Math.imul(p, K) | 0, o = o + Math.imul(p, W) | 0, n = n + Math.imul(f, H) | 0, i = i + Math.imul(f, J) | 0, i = i + Math.imul(c, H) | 0, o = o + Math.imul(c, J) | 0;
                        var yt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (yt >>> 26) | 0, yt &= 67108863, n = Math.imul(b, j), i = Math.imul(b, q), i = i + Math.imul(M, j) | 0, o = Math.imul(M, q), n = n + Math.imul(v, K) | 0, i = i + Math.imul(v, W) | 0, i = i + Math.imul(y, K) | 0, o = o + Math.imul(y, W) | 0, n = n + Math.imul(m, H) | 0, i = i + Math.imul(m, J) | 0, i = i + Math.imul(p, H) | 0, o = o + Math.imul(p, J) | 0, n = n + Math.imul(f, X) | 0, i = i + Math.imul(f, $) | 0, i = i + Math.imul(c, X) | 0, o = o + Math.imul(c, $) | 0;
                        var wt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (wt >>> 26) | 0, wt &= 67108863, n = Math.imul(N, j), i = Math.imul(N, q), i = i + Math.imul(A, j) | 0, o = Math.imul(A, q), n = n + Math.imul(b, K) | 0, i = i + Math.imul(b, W) | 0, i = i + Math.imul(M, K) | 0, o = o + Math.imul(M, W) | 0, n = n + Math.imul(v, H) | 0, i = i + Math.imul(v, J) | 0, i = i + Math.imul(y, H) | 0, o = o + Math.imul(y, J) | 0, n = n + Math.imul(m, X) | 0, i = i + Math.imul(m, $) | 0, i = i + Math.imul(p, X) | 0, o = o + Math.imul(p, $) | 0, n = n + Math.imul(f, Q) | 0, i = i + Math.imul(f, tt) | 0, i = i + Math.imul(c, Q) | 0, o = o + Math.imul(c, tt) | 0;
                        var bt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (bt >>> 26) | 0, bt &= 67108863, n = Math.imul(S, j), i = Math.imul(S, q), i = i + Math.imul(I, j) | 0, o = Math.imul(I, q), n = n + Math.imul(N, K) | 0, i = i + Math.imul(N, W) | 0, i = i + Math.imul(A, K) | 0, o = o + Math.imul(A, W) | 0, n = n + Math.imul(b, H) | 0, i = i + Math.imul(b, J) | 0, i = i + Math.imul(M, H) | 0, o = o + Math.imul(M, J) | 0, n = n + Math.imul(v, X) | 0, i = i + Math.imul(v, $) | 0, i = i + Math.imul(y, X) | 0, o = o + Math.imul(y, $) | 0, n = n + Math.imul(m, Q) | 0, i = i + Math.imul(m, tt) | 0, i = i + Math.imul(p, Q) | 0, o = o + Math.imul(p, tt) | 0, n = n + Math.imul(f, rt) | 0, i = i + Math.imul(f, nt) | 0, i = i + Math.imul(c, rt) | 0, o = o + Math.imul(c, nt) | 0;
                        var Mt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (Mt >>> 26) | 0, Mt &= 67108863, n = Math.imul(P, j), i = Math.imul(P, q), i = i + Math.imul(k, j) | 0, o = Math.imul(k, q), n = n + Math.imul(S, K) | 0, i = i + Math.imul(S, W) | 0, i = i + Math.imul(I, K) | 0, o = o + Math.imul(I, W) | 0, n = n + Math.imul(N, H) | 0, i = i + Math.imul(N, J) | 0, i = i + Math.imul(A, H) | 0, o = o + Math.imul(A, J) | 0, n = n + Math.imul(b, X) | 0, i = i + Math.imul(b, $) | 0, i = i + Math.imul(M, X) | 0, o = o + Math.imul(M, $) | 0, n = n + Math.imul(v, Q) | 0, i = i + Math.imul(v, tt) | 0, i = i + Math.imul(y, Q) | 0, o = o + Math.imul(y, tt) | 0, n = n + Math.imul(m, rt) | 0, i = i + Math.imul(m, nt) | 0, i = i + Math.imul(p, rt) | 0, o = o + Math.imul(p, nt) | 0, n = n + Math.imul(f, ot) | 0, i = i + Math.imul(f, st) | 0, i = i + Math.imul(c, ot) | 0, o = o + Math.imul(c, st) | 0;
                        var Et = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (Et >>> 26) | 0, Et &= 67108863, n = Math.imul(T, j), i = Math.imul(T, q), i = i + Math.imul(O, j) | 0, o = Math.imul(O, q), n = n + Math.imul(P, K) | 0, i = i + Math.imul(P, W) | 0, i = i + Math.imul(k, K) | 0, o = o + Math.imul(k, W) | 0, n = n + Math.imul(S, H) | 0, i = i + Math.imul(S, J) | 0, i = i + Math.imul(I, H) | 0, o = o + Math.imul(I, J) | 0, n = n + Math.imul(N, X) | 0, i = i + Math.imul(N, $) | 0, i = i + Math.imul(A, X) | 0, o = o + Math.imul(A, $) | 0, n = n + Math.imul(b, Q) | 0, i = i + Math.imul(b, tt) | 0, i = i + Math.imul(M, Q) | 0, o = o + Math.imul(M, tt) | 0, n = n + Math.imul(v, rt) | 0, i = i + Math.imul(v, nt) | 0, i = i + Math.imul(y, rt) | 0, o = o + Math.imul(y, nt) | 0, n = n + Math.imul(m, ot) | 0, i = i + Math.imul(m, st) | 0, i = i + Math.imul(p, ot) | 0, o = o + Math.imul(p, st) | 0, n = n + Math.imul(f, ut) | 0, i = i + Math.imul(f, ht) | 0, i = i + Math.imul(c, ut) | 0, o = o + Math.imul(c, ht) | 0;
                        var Nt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (Nt >>> 26) | 0, Nt &= 67108863, n = Math.imul(U, j), i = Math.imul(U, q), i = i + Math.imul(F, j) | 0, o = Math.imul(F, q), n = n + Math.imul(T, K) | 0, i = i + Math.imul(T, W) | 0, i = i + Math.imul(O, K) | 0, o = o + Math.imul(O, W) | 0, n = n + Math.imul(P, H) | 0, i = i + Math.imul(P, J) | 0, i = i + Math.imul(k, H) | 0, o = o + Math.imul(k, J) | 0, n = n + Math.imul(S, X) | 0, i = i + Math.imul(S, $) | 0, i = i + Math.imul(I, X) | 0, o = o + Math.imul(I, $) | 0, n = n + Math.imul(N, Q) | 0, i = i + Math.imul(N, tt) | 0, i = i + Math.imul(A, Q) | 0, o = o + Math.imul(A, tt) | 0, n = n + Math.imul(b, rt) | 0, i = i + Math.imul(b, nt) | 0, i = i + Math.imul(M, rt) | 0, o = o + Math.imul(M, nt) | 0, n = n + Math.imul(v, ot) | 0, i = i + Math.imul(v, st) | 0, i = i + Math.imul(y, ot) | 0, o = o + Math.imul(y, st) | 0, n = n + Math.imul(m, ut) | 0, i = i + Math.imul(m, ht) | 0, i = i + Math.imul(p, ut) | 0, o = o + Math.imul(p, ht) | 0, n = n + Math.imul(f, ft) | 0, i = i + Math.imul(f, ct) | 0, i = i + Math.imul(c, ft) | 0, o = o + Math.imul(c, ct) | 0;
                        var At = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (At >>> 26) | 0, At &= 67108863, n = Math.imul(L, j), i = Math.imul(L, q), i = i + Math.imul(D, j) | 0, o = Math.imul(D, q), n = n + Math.imul(U, K) | 0, i = i + Math.imul(U, W) | 0, i = i + Math.imul(F, K) | 0, o = o + Math.imul(F, W) | 0, n = n + Math.imul(T, H) | 0, i = i + Math.imul(T, J) | 0, i = i + Math.imul(O, H) | 0, o = o + Math.imul(O, J) | 0, n = n + Math.imul(P, X) | 0, i = i + Math.imul(P, $) | 0, i = i + Math.imul(k, X) | 0, o = o + Math.imul(k, $) | 0, n = n + Math.imul(S, Q) | 0, i = i + Math.imul(S, tt) | 0, i = i + Math.imul(I, Q) | 0, o = o + Math.imul(I, tt) | 0, n = n + Math.imul(N, rt) | 0, i = i + Math.imul(N, nt) | 0, i = i + Math.imul(A, rt) | 0, o = o + Math.imul(A, nt) | 0, n = n + Math.imul(b, ot) | 0, i = i + Math.imul(b, st) | 0, i = i + Math.imul(M, ot) | 0, o = o + Math.imul(M, st) | 0, n = n + Math.imul(v, ut) | 0, i = i + Math.imul(v, ht) | 0, i = i + Math.imul(y, ut) | 0, o = o + Math.imul(y, ht) | 0, n = n + Math.imul(m, ft) | 0, i = i + Math.imul(m, ct) | 0, i = i + Math.imul(p, ft) | 0, o = o + Math.imul(p, ct) | 0, n = n + Math.imul(f, mt) | 0, i = i + Math.imul(f, pt) | 0, i = i + Math.imul(c, mt) | 0, o = o + Math.imul(c, pt) | 0;
                        var _t = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (_t >>> 26) | 0, _t &= 67108863, n = Math.imul(L, K), i = Math.imul(L, W), i = i + Math.imul(D, K) | 0, o = Math.imul(D, W), n = n + Math.imul(U, H) | 0, i = i + Math.imul(U, J) | 0, i = i + Math.imul(F, H) | 0, o = o + Math.imul(F, J) | 0, n = n + Math.imul(T, X) | 0, i = i + Math.imul(T, $) | 0, i = i + Math.imul(O, X) | 0, o = o + Math.imul(O, $) | 0, n = n + Math.imul(P, Q) | 0, i = i + Math.imul(P, tt) | 0, i = i + Math.imul(k, Q) | 0, o = o + Math.imul(k, tt) | 0, n = n + Math.imul(S, rt) | 0, i = i + Math.imul(S, nt) | 0, i = i + Math.imul(I, rt) | 0, o = o + Math.imul(I, nt) | 0, n = n + Math.imul(N, ot) | 0, i = i + Math.imul(N, st) | 0, i = i + Math.imul(A, ot) | 0, o = o + Math.imul(A, st) | 0, n = n + Math.imul(b, ut) | 0, i = i + Math.imul(b, ht) | 0, i = i + Math.imul(M, ut) | 0, o = o + Math.imul(M, ht) | 0, n = n + Math.imul(v, ft) | 0, i = i + Math.imul(v, ct) | 0, i = i + Math.imul(y, ft) | 0, o = o + Math.imul(y, ct) | 0, n = n + Math.imul(m, mt) | 0, i = i + Math.imul(m, pt) | 0, i = i + Math.imul(p, mt) | 0, o = o + Math.imul(p, pt) | 0;
                        var St = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (St >>> 26) | 0, St &= 67108863, n = Math.imul(L, H), i = Math.imul(L, J), i = i + Math.imul(D, H) | 0, o = Math.imul(D, J), n = n + Math.imul(U, X) | 0, i = i + Math.imul(U, $) | 0, i = i + Math.imul(F, X) | 0, o = o + Math.imul(F, $) | 0, n = n + Math.imul(T, Q) | 0, i = i + Math.imul(T, tt) | 0, i = i + Math.imul(O, Q) | 0, o = o + Math.imul(O, tt) | 0, n = n + Math.imul(P, rt) | 0, i = i + Math.imul(P, nt) | 0, i = i + Math.imul(k, rt) | 0, o = o + Math.imul(k, nt) | 0, n = n + Math.imul(S, ot) | 0, i = i + Math.imul(S, st) | 0, i = i + Math.imul(I, ot) | 0, o = o + Math.imul(I, st) | 0, n = n + Math.imul(N, ut) | 0, i = i + Math.imul(N, ht) | 0, i = i + Math.imul(A, ut) | 0, o = o + Math.imul(A, ht) | 0, n = n + Math.imul(b, ft) | 0, i = i + Math.imul(b, ct) | 0, i = i + Math.imul(M, ft) | 0, o = o + Math.imul(M, ct) | 0, n = n + Math.imul(v, mt) | 0, i = i + Math.imul(v, pt) | 0, i = i + Math.imul(y, mt) | 0, o = o + Math.imul(y, pt) | 0;
                        var It = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (It >>> 26) | 0, It &= 67108863, n = Math.imul(L, X), i = Math.imul(L, $), i = i + Math.imul(D, X) | 0, o = Math.imul(D, $), n = n + Math.imul(U, Q) | 0, i = i + Math.imul(U, tt) | 0, i = i + Math.imul(F, Q) | 0, o = o + Math.imul(F, tt) | 0, n = n + Math.imul(T, rt) | 0, i = i + Math.imul(T, nt) | 0, i = i + Math.imul(O, rt) | 0, o = o + Math.imul(O, nt) | 0, n = n + Math.imul(P, ot) | 0, i = i + Math.imul(P, st) | 0, i = i + Math.imul(k, ot) | 0, o = o + Math.imul(k, st) | 0, n = n + Math.imul(S, ut) | 0, i = i + Math.imul(S, ht) | 0, i = i + Math.imul(I, ut) | 0, o = o + Math.imul(I, ht) | 0, n = n + Math.imul(N, ft) | 0, i = i + Math.imul(N, ct) | 0, i = i + Math.imul(A, ft) | 0, o = o + Math.imul(A, ct) | 0, n = n + Math.imul(b, mt) | 0, i = i + Math.imul(b, pt) | 0, i = i + Math.imul(M, mt) | 0, o = o + Math.imul(M, pt) | 0;
                        var Rt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (Rt >>> 26) | 0, Rt &= 67108863, n = Math.imul(L, Q), i = Math.imul(L, tt), i = i + Math.imul(D, Q) | 0, o = Math.imul(D, tt), n = n + Math.imul(U, rt) | 0, i = i + Math.imul(U, nt) | 0, i = i + Math.imul(F, rt) | 0, o = o + Math.imul(F, nt) | 0, n = n + Math.imul(T, ot) | 0, i = i + Math.imul(T, st) | 0, i = i + Math.imul(O, ot) | 0, o = o + Math.imul(O, st) | 0, n = n + Math.imul(P, ut) | 0, i = i + Math.imul(P, ht) | 0, i = i + Math.imul(k, ut) | 0, o = o + Math.imul(k, ht) | 0, n = n + Math.imul(S, ft) | 0, i = i + Math.imul(S, ct) | 0, i = i + Math.imul(I, ft) | 0, o = o + Math.imul(I, ct) | 0, n = n + Math.imul(N, mt) | 0, i = i + Math.imul(N, pt) | 0, i = i + Math.imul(A, mt) | 0, o = o + Math.imul(A, pt) | 0;
                        var Pt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (Pt >>> 26) | 0, Pt &= 67108863, n = Math.imul(L, rt), i = Math.imul(L, nt), i = i + Math.imul(D, rt) | 0, o = Math.imul(D, nt), n = n + Math.imul(U, ot) | 0, i = i + Math.imul(U, st) | 0, i = i + Math.imul(F, ot) | 0, o = o + Math.imul(F, st) | 0, n = n + Math.imul(T, ut) | 0, i = i + Math.imul(T, ht) | 0, i = i + Math.imul(O, ut) | 0, o = o + Math.imul(O, ht) | 0, n = n + Math.imul(P, ft) | 0, i = i + Math.imul(P, ct) | 0, i = i + Math.imul(k, ft) | 0, o = o + Math.imul(k, ct) | 0, n = n + Math.imul(S, mt) | 0, i = i + Math.imul(S, pt) | 0, i = i + Math.imul(I, mt) | 0, o = o + Math.imul(I, pt) | 0;
                        var kt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (kt >>> 26) | 0, kt &= 67108863, n = Math.imul(L, ot), i = Math.imul(L, st), i = i + Math.imul(D, ot) | 0, o = Math.imul(D, st), n = n + Math.imul(U, ut) | 0, i = i + Math.imul(U, ht) | 0, i = i + Math.imul(F, ut) | 0, o = o + Math.imul(F, ht) | 0, n = n + Math.imul(T, ft) | 0, i = i + Math.imul(T, ct) | 0, i = i + Math.imul(O, ft) | 0, o = o + Math.imul(O, ct) | 0, n = n + Math.imul(P, mt) | 0, i = i + Math.imul(P, pt) | 0, i = i + Math.imul(k, mt) | 0, o = o + Math.imul(k, pt) | 0;
                        var xt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (xt >>> 26) | 0, xt &= 67108863, n = Math.imul(L, ut), i = Math.imul(L, ht), i = i + Math.imul(D, ut) | 0, o = Math.imul(D, ht), n = n + Math.imul(U, ft) | 0, i = i + Math.imul(U, ct) | 0, i = i + Math.imul(F, ft) | 0, o = o + Math.imul(F, ct) | 0, n = n + Math.imul(T, mt) | 0, i = i + Math.imul(T, pt) | 0, i = i + Math.imul(O, mt) | 0, o = o + Math.imul(O, pt) | 0;
                        var Tt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (Tt >>> 26) | 0, Tt &= 67108863, n = Math.imul(L, ft), i = Math.imul(L, ct), i = i + Math.imul(D, ft) | 0, o = Math.imul(D, ct), n = n + Math.imul(U, mt) | 0, i = i + Math.imul(U, pt) | 0, i = i + Math.imul(F, mt) | 0, o = o + Math.imul(F, pt) | 0;
                        var Ot = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (Ot >>> 26) | 0, Ot &= 67108863, n = Math.imul(L, mt), i = Math.imul(L, pt), i = i + Math.imul(D, mt) | 0, o = Math.imul(D, pt);
                        var Ct = (h + n | 0) + ((8191 & i) << 13) | 0;
                        return h = (o + (i >>> 13) | 0) + (Ct >>> 26) | 0, Ct &= 67108863, u[0] = gt, u[1] = vt, u[2] = yt, u[3] = wt, u[4] = bt, u[5] = Mt, u[6] = Et, u[7] = Nt, u[8] = At, u[9] = _t, u[10] = St, u[11] = It, u[12] = Rt, u[13] = Pt, u[14] = kt, u[15] = xt, u[16] = Tt, u[17] = Ot, u[18] = Ct, 0 !== h && (u[19] = h, r.length++), r
                    };

                    function g(t, e, r) {
                        r.negative = e.negative ^ t.negative, r.length = t.length + e.length;
                        for (var n = 0, i = 0, o = 0; o < r.length - 1; o++) {
                            var s = i;
                            i = 0;
                            for (var a = 67108863 & n, u = Math.min(o, e.length - 1), h = Math.max(0, o - t.length + 1); h <= u; h++) {
                                var l = o - h,
                                    f = 0 | t.words[l],
                                    c = 0 | e.words[h],
                                    d = f * c,
                                    m = 67108863 & d;
                                s = s + (d / 67108864 | 0) | 0, m = m + a | 0, a = 67108863 & m, s = s + (m >>> 26) | 0, i += s >>> 26, s &= 67108863
                            }
                            r.words[o] = a, n = s, s = i
                        }
                        return 0 !== n ? r.words[o] = n : r.length--, r.strip()
                    }

                    function v(t, e, r) {
                        var n = new y;
                        return n.mulp(t, e, r)
                    }

                    function y(t, e) {
                        this.x = t, this.y = e
                    }
                    Math.imul || (p = m), o.prototype.mulTo = function(t, e) {
                        var r, n = this.length + t.length;
                        return r = 10 === this.length && 10 === t.length ? p(this, t, e) : n < 63 ? m(this, t, e) : n < 1024 ? g(this, t, e) : v(this, t, e), r
                    }, y.prototype.makeRBT = function(t) {
                        for (var e = new Array(t), r = o.prototype._countBits(t) - 1, n = 0; n < t; n++) e[n] = this.revBin(n, r, t);
                        return e
                    }, y.prototype.revBin = function(t, e, r) {
                        if (0 === t || t === r - 1) return t;
                        for (var n = 0, i = 0; i < e; i++) n |= (1 & t) << e - i - 1, t >>= 1;
                        return n
                    }, y.prototype.permute = function(t, e, r, n, i, o) {
                        for (var s = 0; s < o; s++) n[s] = e[t[s]], i[s] = r[t[s]]
                    }, y.prototype.transform = function(t, e, r, n, i, o) {
                        this.permute(o, t, e, r, n, i);
                        for (var s = 1; s < i; s <<= 1)
                            for (var a = s << 1, u = Math.cos(2 * Math.PI / a), h = Math.sin(2 * Math.PI / a), l = 0; l < i; l += a)
                                for (var f = u, c = h, d = 0; d < s; d++) {
                                    var m = r[l + d],
                                        p = n[l + d],
                                        g = r[l + d + s],
                                        v = n[l + d + s],
                                        y = f * g - c * v;
                                    v = f * v + c * g, g = y, r[l + d] = m + g, n[l + d] = p + v, r[l + d + s] = m - g, n[l + d + s] = p - v, d !== a && (y = u * f - h * c, c = u * c + h * f, f = y)
                                }
                    }, y.prototype.guessLen13b = function(t, e) {
                        var r = 1 | Math.max(e, t),
                            n = 1 & r,
                            i = 0;
                        for (r = r / 2 | 0; r; r >>>= 1) i++;
                        return 1 << i + 1 + n
                    }, y.prototype.conjugate = function(t, e, r) {
                        if (!(r <= 1))
                            for (var n = 0; n < r / 2; n++) {
                                var i = t[n];
                                t[n] = t[r - n - 1], t[r - n - 1] = i, i = e[n], e[n] = -e[r - n - 1], e[r - n - 1] = -i
                            }
                    }, y.prototype.normalize13b = function(t, e) {
                        for (var r = 0, n = 0; n < e / 2; n++) {
                            var i = 8192 * Math.round(t[2 * n + 1] / e) + Math.round(t[2 * n] / e) + r;
                            t[n] = 67108863 & i, r = i < 67108864 ? 0 : i / 67108864 | 0
                        }
                        return t
                    }, y.prototype.convert13b = function(t, e, r, i) {
                        for (var o = 0, s = 0; s < e; s++) o += 0 | t[s], r[2 * s] = 8191 & o, o >>>= 13, r[2 * s + 1] = 8191 & o, o >>>= 13;
                        for (s = 2 * e; s < i; ++s) r[s] = 0;
                        n(0 === o), n(0 === (-8192 & o))
                    }, y.prototype.stub = function(t) {
                        for (var e = new Array(t), r = 0; r < t; r++) e[r] = 0;
                        return e
                    }, y.prototype.mulp = function(t, e, r) {
                        var n = 2 * this.guessLen13b(t.length, e.length),
                            i = this.makeRBT(n),
                            o = this.stub(n),
                            s = new Array(n),
                            a = new Array(n),
                            u = new Array(n),
                            h = new Array(n),
                            l = new Array(n),
                            f = new Array(n),
                            c = r.words;
                        c.length = n, this.convert13b(t.words, t.length, s, n), this.convert13b(e.words, e.length, h, n), this.transform(s, o, a, u, n, i), this.transform(h, o, l, f, n, i);
                        for (var d = 0; d < n; d++) {
                            var m = a[d] * l[d] - u[d] * f[d];
                            u[d] = a[d] * f[d] + u[d] * l[d], a[d] = m
                        }
                        return this.conjugate(a, u, n), this.transform(a, u, c, o, n, i), this.conjugate(c, o, n), this.normalize13b(c, n), r.negative = t.negative ^ e.negative, r.length = t.length + e.length, r.strip()
                    }, o.prototype.mul = function(t) {
                        var e = new o(null);
                        return e.words = new Array(this.length + t.length), this.mulTo(t, e)
                    }, o.prototype.mulf = function(t) {
                        var e = new o(null);
                        return e.words = new Array(this.length + t.length), v(this, t, e)
                    }, o.prototype.imul = function(t) {
                        return this.clone().mulTo(t, this)
                    }, o.prototype.imuln = function(t) {
                        n("number" === typeof t), n(t < 67108864);
                        for (var e = 0, r = 0; r < this.length; r++) {
                            var i = (0 | this.words[r]) * t,
                                o = (67108863 & i) + (67108863 & e);
                            e >>= 26, e += i / 67108864 | 0, e += o >>> 26, this.words[r] = 67108863 & o
                        }
                        return 0 !== e && (this.words[r] = e, this.length++), this
                    }, o.prototype.muln = function(t) {
                        return this.clone().imuln(t)
                    }, o.prototype.sqr = function() {
                        return this.mul(this)
                    }, o.prototype.isqr = function() {
                        return this.imul(this.clone())
                    }, o.prototype.pow = function(t) {
                        var e = d(t);
                        if (0 === e.length) return new o(1);
                        for (var r = this, n = 0; n < e.length; n++, r = r.sqr())
                            if (0 !== e[n]) break;
                        if (++n < e.length)
                            for (var i = r.sqr(); n < e.length; n++, i = i.sqr()) 0 !== e[n] && (r = r.mul(i));
                        return r
                    }, o.prototype.iushln = function(t) {
                        n("number" === typeof t && t >= 0);
                        var e, r = t % 26,
                            i = (t - r) / 26,
                            o = 67108863 >>> 26 - r << 26 - r;
                        if (0 !== r) {
                            var s = 0;
                            for (e = 0; e < this.length; e++) {
                                var a = this.words[e] & o,
                                    u = (0 | this.words[e]) - a << r;
                                this.words[e] = u | s, s = a >>> 26 - r
                            }
                            s && (this.words[e] = s, this.length++)
                        }
                        if (0 !== i) {
                            for (e = this.length - 1; e >= 0; e--) this.words[e + i] = this.words[e];
                            for (e = 0; e < i; e++) this.words[e] = 0;
                            this.length += i
                        }
                        return this.strip()
                    }, o.prototype.ishln = function(t) {
                        return n(0 === this.negative), this.iushln(t)
                    }, o.prototype.iushrn = function(t, e, r) {
                        var i;
                        n("number" === typeof t && t >= 0), i = e ? (e - e % 26) / 26 : 0;
                        var o = t % 26,
                            s = Math.min((t - o) / 26, this.length),
                            a = 67108863 ^ 67108863 >>> o << o,
                            u = r;
                        if (i -= s, i = Math.max(0, i), u) {
                            for (var h = 0; h < s; h++) u.words[h] = this.words[h];
                            u.length = s
                        }
                        if (0 === s);
                        else if (this.length > s)
                            for (this.length -= s, h = 0; h < this.length; h++) this.words[h] = this.words[h + s];
                        else this.words[0] = 0, this.length = 1;
                        var l = 0;
                        for (h = this.length - 1; h >= 0 && (0 !== l || h >= i); h--) {
                            var f = 0 | this.words[h];
                            this.words[h] = l << 26 - o | f >>> o, l = f & a
                        }
                        return u && 0 !== l && (u.words[u.length++] = l), 0 === this.length && (this.words[0] = 0, this.length = 1), this.strip()
                    }, o.prototype.ishrn = function(t, e, r) {
                        return n(0 === this.negative), this.iushrn(t, e, r)
                    }, o.prototype.shln = function(t) {
                        return this.clone().ishln(t)
                    }, o.prototype.ushln = function(t) {
                        return this.clone().iushln(t)
                    }, o.prototype.shrn = function(t) {
                        return this.clone().ishrn(t)
                    }, o.prototype.ushrn = function(t) {
                        return this.clone().iushrn(t)
                    }, o.prototype.testn = function(t) {
                        n("number" === typeof t && t >= 0);
                        var e = t % 26,
                            r = (t - e) / 26,
                            i = 1 << e;
                        if (this.length <= r) return !1;
                        var o = this.words[r];
                        return !!(o & i)
                    }, o.prototype.imaskn = function(t) {
                        n("number" === typeof t && t >= 0);
                        var e = t % 26,
                            r = (t - e) / 26;
                        if (n(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r) return this;
                        if (0 !== e && r++, this.length = Math.min(r, this.length), 0 !== e) {
                            var i = 67108863 ^ 67108863 >>> e << e;
                            this.words[this.length - 1] &= i
                        }
                        return this.strip()
                    }, o.prototype.maskn = function(t) {
                        return this.clone().imaskn(t)
                    }, o.prototype.iaddn = function(t) {
                        return n("number" === typeof t), n(t < 67108864), t < 0 ? this.isubn(-t) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) < t ? (this.words[0] = t - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(t), this.negative = 1, this) : this._iaddn(t)
                    }, o.prototype._iaddn = function(t) {
                        this.words[0] += t;
                        for (var e = 0; e < this.length && this.words[e] >= 67108864; e++) this.words[e] -= 67108864, e === this.length - 1 ? this.words[e + 1] = 1 : this.words[e + 1]++;
                        return this.length = Math.max(this.length, e + 1), this
                    }, o.prototype.isubn = function(t) {
                        if (n("number" === typeof t), n(t < 67108864), t < 0) return this.iaddn(-t);
                        if (0 !== this.negative) return this.negative = 0, this.iaddn(t), this.negative = 1, this;
                        if (this.words[0] -= t, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
                        else
                            for (var e = 0; e < this.length && this.words[e] < 0; e++) this.words[e] += 67108864, this.words[e + 1] -= 1;
                        return this.strip()
                    }, o.prototype.addn = function(t) {
                        return this.clone().iaddn(t)
                    }, o.prototype.subn = function(t) {
                        return this.clone().isubn(t)
                    }, o.prototype.iabs = function() {
                        return this.negative = 0, this
                    }, o.prototype.abs = function() {
                        return this.clone().iabs()
                    }, o.prototype._ishlnsubmul = function(t, e, r) {
                        var i, o, s = t.length + r;
                        this._expand(s);
                        var a = 0;
                        for (i = 0; i < t.length; i++) {
                            o = (0 | this.words[i + r]) + a;
                            var u = (0 | t.words[i]) * e;
                            o -= 67108863 & u, a = (o >> 26) - (u / 67108864 | 0), this.words[i + r] = 67108863 & o
                        }
                        for (; i < this.length - r; i++) o = (0 | this.words[i + r]) + a, a = o >> 26, this.words[i + r] = 67108863 & o;
                        if (0 === a) return this.strip();
                        for (n(-1 === a), a = 0, i = 0; i < this.length; i++) o = -(0 | this.words[i]) + a, a = o >> 26, this.words[i] = 67108863 & o;
                        return this.negative = 1, this.strip()
                    }, o.prototype._wordDiv = function(t, e) {
                        var r = this.length - t.length,
                            n = this.clone(),
                            i = t,
                            s = 0 | i.words[i.length - 1],
                            a = this._countBits(s);
                        r = 26 - a, 0 !== r && (i = i.ushln(r), n.iushln(r), s = 0 | i.words[i.length - 1]);
                        var u, h = n.length - i.length;
                        if ("mod" !== e) {
                            u = new o(null), u.length = h + 1, u.words = new Array(u.length);
                            for (var l = 0; l < u.length; l++) u.words[l] = 0
                        }
                        var f = n.clone()._ishlnsubmul(i, 1, h);
                        0 === f.negative && (n = f, u && (u.words[h] = 1));
                        for (var c = h - 1; c >= 0; c--) {
                            var d = 67108864 * (0 | n.words[i.length + c]) + (0 | n.words[i.length + c - 1]);
                            d = Math.min(d / s | 0, 67108863), n._ishlnsubmul(i, d, c);
                            while (0 !== n.negative) d--, n.negative = 0, n._ishlnsubmul(i, 1, c), n.isZero() || (n.negative ^= 1);
                            u && (u.words[c] = d)
                        }
                        return u && u.strip(), n.strip(), "div" !== e && 0 !== r && n.iushrn(r), {
                            div: u || null,
                            mod: n
                        }
                    }, o.prototype.divmod = function(t, e, r) {
                        return n(!t.isZero()), this.isZero() ? {
                            div: new o(0),
                            mod: new o(0)
                        } : 0 !== this.negative && 0 === t.negative ? (a = this.neg().divmod(t, e), "mod" !== e && (i = a.div.neg()), "div" !== e && (s = a.mod.neg(), r && 0 !== s.negative && s.iadd(t)), {
                            div: i,
                            mod: s
                        }) : 0 === this.negative && 0 !== t.negative ? (a = this.divmod(t.neg(), e), "mod" !== e && (i = a.div.neg()), {
                            div: i,
                            mod: a.mod
                        }) : 0 !== (this.negative & t.negative) ? (a = this.neg().divmod(t.neg(), e), "div" !== e && (s = a.mod.neg(), r && 0 !== s.negative && s.isub(t)), {
                            div: a.div,
                            mod: s
                        }) : t.length > this.length || this.cmp(t) < 0 ? {
                            div: new o(0),
                            mod: this
                        } : 1 === t.length ? "div" === e ? {
                            div: this.divn(t.words[0]),
                            mod: null
                        } : "mod" === e ? {
                            div: null,
                            mod: new o(this.modn(t.words[0]))
                        } : {
                            div: this.divn(t.words[0]),
                            mod: new o(this.modn(t.words[0]))
                        } : this._wordDiv(t, e);
                        var i, s, a
                    }, o.prototype.div = function(t) {
                        return this.divmod(t, "div", !1).div
                    }, o.prototype.mod = function(t) {
                        return this.divmod(t, "mod", !1).mod
                    }, o.prototype.umod = function(t) {
                        return this.divmod(t, "mod", !0).mod
                    }, o.prototype.divRound = function(t) {
                        var e = this.divmod(t);
                        if (e.mod.isZero()) return e.div;
                        var r = 0 !== e.div.negative ? e.mod.isub(t) : e.mod,
                            n = t.ushrn(1),
                            i = t.andln(1),
                            o = r.cmp(n);
                        return o < 0 || 1 === i && 0 === o ? e.div : 0 !== e.div.negative ? e.div.isubn(1) : e.div.iaddn(1)
                    }, o.prototype.modn = function(t) {
                        n(t <= 67108863);
                        for (var e = (1 << 26) % t, r = 0, i = this.length - 1; i >= 0; i--) r = (e * r + (0 | this.words[i])) % t;
                        return r
                    }, o.prototype.idivn = function(t) {
                        n(t <= 67108863);
                        for (var e = 0, r = this.length - 1; r >= 0; r--) {
                            var i = (0 | this.words[r]) + 67108864 * e;
                            this.words[r] = i / t | 0, e = i % t
                        }
                        return this.strip()
                    }, o.prototype.divn = function(t) {
                        return this.clone().idivn(t)
                    }, o.prototype.egcd = function(t) {
                        n(0 === t.negative), n(!t.isZero());
                        var e = this,
                            r = t.clone();
                        e = 0 !== e.negative ? e.umod(t) : e.clone();
                        var i = new o(1),
                            s = new o(0),
                            a = new o(0),
                            u = new o(1),
                            h = 0;
                        while (e.isEven() && r.isEven()) e.iushrn(1), r.iushrn(1), ++h;
                        var l = r.clone(),
                            f = e.clone();
                        while (!e.isZero()) {
                            for (var c = 0, d = 1; 0 === (e.words[0] & d) && c < 26; ++c, d <<= 1);
                            if (c > 0) {
                                e.iushrn(c);
                                while (c-- > 0)(i.isOdd() || s.isOdd()) && (i.iadd(l), s.isub(f)), i.iushrn(1), s.iushrn(1)
                            }
                            for (var m = 0, p = 1; 0 === (r.words[0] & p) && m < 26; ++m, p <<= 1);
                            if (m > 0) {
                                r.iushrn(m);
                                while (m-- > 0)(a.isOdd() || u.isOdd()) && (a.iadd(l), u.isub(f)), a.iushrn(1), u.iushrn(1)
                            }
                            e.cmp(r) >= 0 ? (e.isub(r), i.isub(a), s.isub(u)) : (r.isub(e), a.isub(i), u.isub(s))
                        }
                        return {
                            a: a,
                            b: u,
                            gcd: r.iushln(h)
                        }
                    }, o.prototype._invmp = function(t) {
                        n(0 === t.negative), n(!t.isZero());
                        var e = this,
                            r = t.clone();
                        e = 0 !== e.negative ? e.umod(t) : e.clone();
                        var i, s = new o(1),
                            a = new o(0),
                            u = r.clone();
                        while (e.cmpn(1) > 0 && r.cmpn(1) > 0) {
                            for (var h = 0, l = 1; 0 === (e.words[0] & l) && h < 26; ++h, l <<= 1);
                            if (h > 0) {
                                e.iushrn(h);
                                while (h-- > 0) s.isOdd() && s.iadd(u), s.iushrn(1)
                            }
                            for (var f = 0, c = 1; 0 === (r.words[0] & c) && f < 26; ++f, c <<= 1);
                            if (f > 0) {
                                r.iushrn(f);
                                while (f-- > 0) a.isOdd() && a.iadd(u), a.iushrn(1)
                            }
                            e.cmp(r) >= 0 ? (e.isub(r), s.isub(a)) : (r.isub(e), a.isub(s))
                        }
                        return i = 0 === e.cmpn(1) ? s : a, i.cmpn(0) < 0 && i.iadd(t), i
                    }, o.prototype.gcd = function(t) {
                        if (this.isZero()) return t.abs();
                        if (t.isZero()) return this.abs();
                        var e = this.clone(),
                            r = t.clone();
                        e.negative = 0, r.negative = 0;
                        for (var n = 0; e.isEven() && r.isEven(); n++) e.iushrn(1), r.iushrn(1);
                        do {
                            while (e.isEven()) e.iushrn(1);
                            while (r.isEven()) r.iushrn(1);
                            var i = e.cmp(r);
                            if (i < 0) {
                                var o = e;
                                e = r, r = o
                            } else if (0 === i || 0 === r.cmpn(1)) break;
                            e.isub(r)
                        } while (1);
                        return r.iushln(n)
                    }, o.prototype.invm = function(t) {
                        return this.egcd(t).a.umod(t)
                    }, o.prototype.isEven = function() {
                        return 0 === (1 & this.words[0])
                    }, o.prototype.isOdd = function() {
                        return 1 === (1 & this.words[0])
                    }, o.prototype.andln = function(t) {
                        return this.words[0] & t
                    }, o.prototype.bincn = function(t) {
                        n("number" === typeof t);
                        var e = t % 26,
                            r = (t - e) / 26,
                            i = 1 << e;
                        if (this.length <= r) return this._expand(r + 1), this.words[r] |= i, this;
                        for (var o = i, s = r; 0 !== o && s < this.length; s++) {
                            var a = 0 | this.words[s];
                            a += o, o = a >>> 26, a &= 67108863, this.words[s] = a
                        }
                        return 0 !== o && (this.words[s] = o, this.length++), this
                    }, o.prototype.isZero = function() {
                        return 1 === this.length && 0 === this.words[0]
                    }, o.prototype.cmpn = function(t) {
                        var e, r = t < 0;
                        if (0 !== this.negative && !r) return -1;
                        if (0 === this.negative && r) return 1;
                        if (this.strip(), this.length > 1) e = 1;
                        else {
                            r && (t = -t), n(t <= 67108863, "Number is too big");
                            var i = 0 | this.words[0];
                            e = i === t ? 0 : i < t ? -1 : 1
                        }
                        return 0 !== this.negative ? 0 | -e : e
                    }, o.prototype.cmp = function(t) {
                        if (0 !== this.negative && 0 === t.negative) return -1;
                        if (0 === this.negative && 0 !== t.negative) return 1;
                        var e = this.ucmp(t);
                        return 0 !== this.negative ? 0 | -e : e
                    }, o.prototype.ucmp = function(t) {
                        if (this.length > t.length) return 1;
                        if (this.length < t.length) return -1;
                        for (var e = 0, r = this.length - 1; r >= 0; r--) {
                            var n = 0 | this.words[r],
                                i = 0 | t.words[r];
                            if (n !== i) {
                                n < i ? e = -1 : n > i && (e = 1);
                                break
                            }
                        }
                        return e
                    }, o.prototype.gtn = function(t) {
                        return 1 === this.cmpn(t)
                    }, o.prototype.gt = function(t) {
                        return 1 === this.cmp(t)
                    }, o.prototype.gten = function(t) {
                        return this.cmpn(t) >= 0
                    }, o.prototype.gte = function(t) {
                        return this.cmp(t) >= 0
                    }, o.prototype.ltn = function(t) {
                        return -1 === this.cmpn(t)
                    }, o.prototype.lt = function(t) {
                        return -1 === this.cmp(t)
                    }, o.prototype.lten = function(t) {
                        return this.cmpn(t) <= 0
                    }, o.prototype.lte = function(t) {
                        return this.cmp(t) <= 0
                    }, o.prototype.eqn = function(t) {
                        return 0 === this.cmpn(t)
                    }, o.prototype.eq = function(t) {
                        return 0 === this.cmp(t)
                    }, o.red = function(t) {
                        return new _(t)
                    }, o.prototype.toRed = function(t) {
                        return n(!this.red, "Already a number in reduction context"), n(0 === this.negative, "red works only with positives"), t.convertTo(this)._forceRed(t)
                    }, o.prototype.fromRed = function() {
                        return n(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this)
                    }, o.prototype._forceRed = function(t) {
                        return this.red = t, this
                    }, o.prototype.forceRed = function(t) {
                        return n(!this.red, "Already a number in reduction context"), this._forceRed(t)
                    }, o.prototype.redAdd = function(t) {
                        return n(this.red, "redAdd works only with red numbers"), this.red.add(this, t)
                    }, o.prototype.redIAdd = function(t) {
                        return n(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t)
                    }, o.prototype.redSub = function(t) {
                        return n(this.red, "redSub works only with red numbers"), this.red.sub(this, t)
                    }, o.prototype.redISub = function(t) {
                        return n(this.red, "redISub works only with red numbers"), this.red.isub(this, t)
                    }, o.prototype.redShl = function(t) {
                        return n(this.red, "redShl works only with red numbers"), this.red.shl(this, t)
                    }, o.prototype.redMul = function(t) {
                        return n(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.mul(this, t)
                    }, o.prototype.redIMul = function(t) {
                        return n(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.imul(this, t)
                    }, o.prototype.redSqr = function() {
                        return n(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this)
                    }, o.prototype.redISqr = function() {
                        return n(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this)
                    }, o.prototype.redSqrt = function() {
                        return n(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this)
                    }, o.prototype.redInvm = function() {
                        return n(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this)
                    }, o.prototype.redNeg = function() {
                        return n(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this)
                    }, o.prototype.redPow = function(t) {
                        return n(this.red && !t.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t)
                    };
                    var w = {
                        k256: null,
                        p224: null,
                        p192: null,
                        p25519: null
                    };

                    function b(t, e) {
                        this.name = t, this.p = new o(e, 16), this.n = this.p.bitLength(), this.k = new o(1).iushln(this.n).isub(this.p), this.tmp = this._tmp()
                    }

                    function M() {
                        b.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")
                    }

                    function E() {
                        b.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")
                    }

                    function N() {
                        b.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")
                    }

                    function A() {
                        b.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")
                    }

                    function _(t) {
                        if ("string" === typeof t) {
                            var e = o._prime(t);
                            this.m = e.p, this.prime = e
                        } else n(t.gtn(1), "modulus must be greater than 1"), this.m = t, this.prime = null
                    }

                    function S(t) {
                        _.call(this, t), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new o(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv)
                    }
                    b.prototype._tmp = function() {
                        var t = new o(null);
                        return t.words = new Array(Math.ceil(this.n / 13)), t
                    }, b.prototype.ireduce = function(t) {
                        var e, r = t;
                        do {
                            this.split(r, this.tmp), r = this.imulK(r), r = r.iadd(this.tmp), e = r.bitLength()
                        } while (e > this.n);
                        var n = e < this.n ? -1 : r.ucmp(this.p);
                        return 0 === n ? (r.words[0] = 0, r.length = 1) : n > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r
                    }, b.prototype.split = function(t, e) {
                        t.iushrn(this.n, 0, e)
                    }, b.prototype.imulK = function(t) {
                        return t.imul(this.k)
                    }, i(M, b), M.prototype.split = function(t, e) {
                        for (var r = 4194303, n = Math.min(t.length, 9), i = 0; i < n; i++) e.words[i] = t.words[i];
                        if (e.length = n, t.length <= 9) return t.words[0] = 0, void(t.length = 1);
                        var o = t.words[9];
                        for (e.words[e.length++] = o & r, i = 10; i < t.length; i++) {
                            var s = 0 | t.words[i];
                            t.words[i - 10] = (s & r) << 4 | o >>> 22, o = s
                        }
                        o >>>= 22, t.words[i - 10] = o, 0 === o && t.length > 10 ? t.length -= 10 : t.length -= 9
                    }, M.prototype.imulK = function(t) {
                        t.words[t.length] = 0, t.words[t.length + 1] = 0, t.length += 2;
                        for (var e = 0, r = 0; r < t.length; r++) {
                            var n = 0 | t.words[r];
                            e += 977 * n, t.words[r] = 67108863 & e, e = 64 * n + (e / 67108864 | 0)
                        }
                        return 0 === t.words[t.length - 1] && (t.length--, 0 === t.words[t.length - 1] && t.length--), t
                    }, i(E, b), i(N, b), i(A, b), A.prototype.imulK = function(t) {
                        for (var e = 0, r = 0; r < t.length; r++) {
                            var n = 19 * (0 | t.words[r]) + e,
                                i = 67108863 & n;
                            n >>>= 26, t.words[r] = i, e = n
                        }
                        return 0 !== e && (t.words[t.length++] = e), t
                    }, o._prime = function(t) {
                        if (w[t]) return w[t];
                        var e;
                        if ("k256" === t) e = new M;
                        else if ("p224" === t) e = new E;
                        else if ("p192" === t) e = new N;
                        else {
                            if ("p25519" !== t) throw new Error("Unknown prime " + t);
                            e = new A
                        }
                        return w[t] = e, e
                    }, _.prototype._verify1 = function(t) {
                        n(0 === t.negative, "red works only with positives"), n(t.red, "red works only with red numbers")
                    }, _.prototype._verify2 = function(t, e) {
                        n(0 === (t.negative | e.negative), "red works only with positives"), n(t.red && t.red === e.red, "red works only with red numbers")
                    }, _.prototype.imod = function(t) {
                        return this.prime ? this.prime.ireduce(t)._forceRed(this) : t.umod(this.m)._forceRed(this)
                    }, _.prototype.neg = function(t) {
                        return t.isZero() ? t.clone() : this.m.sub(t)._forceRed(this)
                    }, _.prototype.add = function(t, e) {
                        this._verify2(t, e);
                        var r = t.add(e);
                        return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this)
                    }, _.prototype.iadd = function(t, e) {
                        this._verify2(t, e);
                        var r = t.iadd(e);
                        return r.cmp(this.m) >= 0 && r.isub(this.m), r
                    }, _.prototype.sub = function(t, e) {
                        this._verify2(t, e);
                        var r = t.sub(e);
                        return r.cmpn(0) < 0 && r.iadd(this.m), r._forceRed(this)
                    }, _.prototype.isub = function(t, e) {
                        this._verify2(t, e);
                        var r = t.isub(e);
                        return r.cmpn(0) < 0 && r.iadd(this.m), r
                    }, _.prototype.shl = function(t, e) {
                        return this._verify1(t), this.imod(t.ushln(e))
                    }, _.prototype.imul = function(t, e) {
                        return this._verify2(t, e), this.imod(t.imul(e))
                    }, _.prototype.mul = function(t, e) {
                        return this._verify2(t, e), this.imod(t.mul(e))
                    }, _.prototype.isqr = function(t) {
                        return this.imul(t, t.clone())
                    }, _.prototype.sqr = function(t) {
                        return this.mul(t, t)
                    }, _.prototype.sqrt = function(t) {
                        if (t.isZero()) return t.clone();
                        var e = this.m.andln(3);
                        if (n(e % 2 === 1), 3 === e) {
                            var r = this.m.add(new o(1)).iushrn(2);
                            return this.pow(t, r)
                        }
                        var i = this.m.subn(1),
                            s = 0;
                        while (!i.isZero() && 0 === i.andln(1)) s++, i.iushrn(1);
                        n(!i.isZero());
                        var a = new o(1).toRed(this),
                            u = a.redNeg(),
                            h = this.m.subn(1).iushrn(1),
                            l = this.m.bitLength();
                        l = new o(2 * l * l).toRed(this);
                        while (0 !== this.pow(l, h).cmp(u)) l.redIAdd(u);
                        var f = this.pow(l, i),
                            c = this.pow(t, i.addn(1).iushrn(1)),
                            d = this.pow(t, i),
                            m = s;
                        while (0 !== d.cmp(a)) {
                            for (var p = d, g = 0; 0 !== p.cmp(a); g++) p = p.redSqr();
                            n(g < m);
                            var v = this.pow(f, new o(1).iushln(m - g - 1));
                            c = c.redMul(v), f = v.redSqr(), d = d.redMul(f), m = g
                        }
                        return c
                    }, _.prototype.invm = function(t) {
                        var e = t._invmp(this.m);
                        return 0 !== e.negative ? (e.negative = 0, this.imod(e).redNeg()) : this.imod(e)
                    }, _.prototype.pow = function(t, e) {
                        if (e.isZero()) return new o(1).toRed(this);
                        if (0 === e.cmpn(1)) return t.clone();
                        var r = 4,
                            n = new Array(1 << r);
                        n[0] = new o(1).toRed(this), n[1] = t;
                        for (var i = 2; i < n.length; i++) n[i] = this.mul(n[i - 1], t);
                        var s = n[0],
                            a = 0,
                            u = 0,
                            h = e.bitLength() % 26;
                        for (0 === h && (h = 26), i = e.length - 1; i >= 0; i--) {
                            for (var l = e.words[i], f = h - 1; f >= 0; f--) {
                                var c = l >> f & 1;
                                s !== n[0] && (s = this.sqr(s)), 0 !== c || 0 !== a ? (a <<= 1, a |= c, u++, (u === r || 0 === i && 0 === f) && (s = this.mul(s, n[a]), u = 0, a = 0)) : u = 0
                            }
                            h = 26
                        }
                        return s
                    }, _.prototype.convertTo = function(t) {
                        var e = t.umod(this.m);
                        return e === t ? e.clone() : e
                    }, _.prototype.convertFrom = function(t) {
                        var e = t.clone();
                        return e.red = null, e
                    }, o.mont = function(t) {
                        return new S(t)
                    }, i(S, _), S.prototype.convertTo = function(t) {
                        return this.imod(t.ushln(this.shift))
                    }, S.prototype.convertFrom = function(t) {
                        var e = this.imod(t.mul(this.rinv));
                        return e.red = null, e
                    }, S.prototype.imul = function(t, e) {
                        if (t.isZero() || e.isZero()) return t.words[0] = 0, t.length = 1, t;
                        var r = t.imul(e),
                            n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                            i = r.isub(n).iushrn(this.shift),
                            o = i;
                        return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this)
                    }, S.prototype.mul = function(t, e) {
                        if (t.isZero() || e.isZero()) return new o(0)._forceRed(this);
                        var r = t.mul(e),
                            n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                            i = r.isub(n).iushrn(this.shift),
                            s = i;
                        return i.cmp(this.m) >= 0 ? s = i.isub(this.m) : i.cmpn(0) < 0 && (s = i.iadd(this.m)), s._forceRed(this)
                    }, S.prototype.invm = function(t) {
                        var e = this.imod(t._invmp(this.m).mul(this.r2));
                        return e._forceRed(this)
                    }
                })(t, this)
            }).call(this, r("62e4")(t))
        },
        "9bda": function(t, e, r) {
            "use strict";
            r.d(e, "d", (function() {
                return a
            })), r.d(e, "e", (function() {
                return u
            })), r.d(e, "f", (function() {
                return h
            })), r.d(e, "b", (function() {
                return l
            })), r.d(e, "g", (function() {
                return f
            })), r.d(e, "c", (function() {
                return p
            })), r.d(e, "a", (function() {
                return g
            }));
            var n = r("ffb2");
            const i = "properties/5.5.0";
            var o = function(t, e, r, n) {
                function i(t) {
                    return t instanceof r ? t : new r((function(e) {
                        e(t)
                    }))
                }
                return new(r || (r = Promise))((function(r, o) {
                    function s(t) {
                        try {
                            u(n.next(t))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function a(t) {
                        try {
                            u(n["throw"](t))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function u(t) {
                        t.done ? r(t.value) : i(t.value).then(s, a)
                    }
                    u((n = n.apply(t, e || [])).next())
                }))
            };
            const s = new n["a"](i);

            function a(t, e, r) {
                Object.defineProperty(t, e, {
                    enumerable: !0,
                    value: r,
                    writable: !1
                })
            }

            function u(t, e) {
                for (let r = 0; r < 32; r++) {
                    if (t[e]) return t[e];
                    if (!t.prototype || "object" !== typeof t.prototype) break;
                    t = Object.getPrototypeOf(t.prototype).constructor
                }
                return null
            }

            function h(t) {
                return o(this, void 0, void 0, (function*() {
                    const e = Object.keys(t).map(e => {
                            const r = t[e];
                            return Promise.resolve(r).then(t => ({
                                key: e,
                                value: t
                            }))
                        }),
                        r = yield Promise.all(e);
                    return r.reduce((t, e) => (t[e.key] = e.value, t), {})
                }))
            }

            function l(t, e) {
                t && "object" === typeof t || s.throwArgumentError("invalid object", "object", t), Object.keys(t).forEach(r => {
                    e[r] || s.throwArgumentError("invalid object key - " + r, "transaction:" + r, t)
                })
            }

            function f(t) {
                const e = {};
                for (const r in t) e[r] = t[r];
                return e
            }
            const c = {
                bigint: !0,
                boolean: !0,
                function: !0,
                number: !0,
                string: !0
            };

            function d(t) {
                if (void 0 === t || null === t || c[typeof t]) return !0;
                if (Array.isArray(t) || "object" === typeof t) {
                    if (!Object.isFrozen(t)) return !1;
                    const r = Object.keys(t);
                    for (let n = 0; n < r.length; n++) {
                        let i = null;
                        try {
                            i = t[r[n]]
                        } catch (e) {
                            continue
                        }
                        if (!d(i)) return !1
                    }
                    return !0
                }
                return s.throwArgumentError("Cannot deepCopy " + typeof t, "object", t)
            }

            function m(t) {
                if (d(t)) return t;
                if (Array.isArray(t)) return Object.freeze(t.map(t => p(t)));
                if ("object" === typeof t) {
                    const e = {};
                    for (const r in t) {
                        const n = t[r];
                        void 0 !== n && a(e, r, p(n))
                    }
                    return e
                }
                return s.throwArgumentError("Cannot deepCopy " + typeof t, "object", t)
            }

            function p(t) {
                return m(t)
            }
            class g {
                constructor(t) {
                    for (const e in t) this[e] = p(t[e])
                }
            }
        },
        ae1c: function(t, e, r) {
            "use strict";
            r.d(e, "a", (function() {
                return f
            })), r.d(e, "c", (function() {
                return c
            })), r.d(e, "b", (function() {
                return d
            }));
            var n = r("c24b"),
                i = r("549e"),
                o = r("9bda"),
                s = r("ffb2");
            const a = "signing-key/5.5.0",
                u = new s["a"](a);
            let h = null;

            function l() {
                return h || (h = new n["a"]("secp256k1")), h
            }
            class f {
                constructor(t) {
                    Object(o["d"])(this, "curve", "secp256k1"), Object(o["d"])(this, "privateKey", Object(i["i"])(t));
                    const e = l().keyFromPrivate(Object(i["a"])(this.privateKey));
                    Object(o["d"])(this, "publicKey", "0x" + e.getPublic(!1, "hex")), Object(o["d"])(this, "compressedPublicKey", "0x" + e.getPublic(!0, "hex")), Object(o["d"])(this, "_isSigningKey", !0)
                }
                _addPoint(t) {
                    const e = l().keyFromPublic(Object(i["a"])(this.publicKey)),
                        r = l().keyFromPublic(Object(i["a"])(t));
                    return "0x" + e.pub.add(r.pub).encodeCompressed("hex")
                }
                signDigest(t) {
                    const e = l().keyFromPrivate(Object(i["a"])(this.privateKey)),
                        r = Object(i["a"])(t);
                    32 !== r.length && u.throwArgumentError("bad digest length", "digest", t);
                    const n = e.sign(r, {
                        canonical: !0
                    });
                    return Object(i["n"])({
                        recoveryParam: n.recoveryParam,
                        r: Object(i["h"])("0x" + n.r.toString(16), 32),
                        s: Object(i["h"])("0x" + n.s.toString(16), 32)
                    })
                }
                computeSharedSecret(t) {
                    const e = l().keyFromPrivate(Object(i["a"])(this.privateKey)),
                        r = l().keyFromPublic(Object(i["a"])(d(t)));
                    return Object(i["h"])("0x" + e.derive(r.getPublic()).toString(16), 32)
                }
                static isSigningKey(t) {
                    return !(!t || !t._isSigningKey)
                }
            }

            function c(t, e) {
                const r = Object(i["n"])(e),
                    n = {
                        r: Object(i["a"])(r.r),
                        s: Object(i["a"])(r.s)
                    };
                return "0x" + l().recoverPubKey(Object(i["a"])(t), n, r.recoveryParam).encode("hex", !1)
            }

            function d(t, e) {
                const r = Object(i["a"])(t);
                if (32 === r.length) {
                    const t = new f(r);
                    return e ? "0x" + l().keyFromPrivate(r).getPublic(!0, "hex") : t.publicKey
                }
                return 33 === r.length ? e ? Object(i["i"])(r) : "0x" + l().keyFromPublic(r).getPublic(!1, "hex") : 65 === r.length ? e ? "0x" + l().keyFromPublic(r).getPublic(!0, "hex") : Object(i["i"])(r) : u.throwArgumentError("invalid public or private key", "key", "[REDACTED]")
            }
        },
        baf7: function(t, e, r) {
            "use strict";
            r.d(e, "a", (function() {
                return p
            })), r.d(e, "b", (function() {
                return g
            })), r.d(e, "c", (function() {
                return v
            }));
            var n = r("207b"),
                i = r("549e"),
                o = r("9bda"),
                s = r("5273"),
                a = r("ffb2");
            const u = "web/5.5.1";
            var h = function(t, e, r, n) {
                function i(t) {
                    return t instanceof r ? t : new r((function(e) {
                        e(t)
                    }))
                }
                return new(r || (r = Promise))((function(r, o) {
                    function s(t) {
                        try {
                            u(n.next(t))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function a(t) {
                        try {
                            u(n["throw"](t))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function u(t) {
                        t.done ? r(t.value) : i(t.value).then(s, a)
                    }
                    u((n = n.apply(t, e || [])).next())
                }))
            };

            function l(t, e) {
                return h(this, void 0, void 0, (function*() {
                    null == e && (e = {});
                    const r = {
                        method: e.method || "GET",
                        headers: e.headers || {},
                        body: e.body || void 0
                    };
                    !0 !== e.skipFetchSetup && (r.mode = "cors", r.cache = "no-cache", r.credentials = "same-origin", r.redirect = "follow", r.referrer = "client");
                    const n = yield fetch(t, r), o = yield n.arrayBuffer(), s = {};
                    return n.headers.forEach ? n.headers.forEach((t, e) => {
                        s[e.toLowerCase()] = t
                    }) : n.headers.keys().forEach(t => {
                        s[t.toLowerCase()] = n.headers.get(t)
                    }), {
                        headers: s,
                        statusCode: n.status,
                        statusMessage: n.statusText,
                        body: Object(i["a"])(new Uint8Array(o))
                    }
                }))
            }
            var f = function(t, e, r, n) {
                function i(t) {
                    return t instanceof r ? t : new r((function(e) {
                        e(t)
                    }))
                }
                return new(r || (r = Promise))((function(r, o) {
                    function s(t) {
                        try {
                            u(n.next(t))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function a(t) {
                        try {
                            u(n["throw"](t))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function u(t) {
                        t.done ? r(t.value) : i(t.value).then(s, a)
                    }
                    u((n = n.apply(t, e || [])).next())
                }))
            };
            const c = new a["a"](u);

            function d(t) {
                return new Promise(e => {
                    setTimeout(e, t)
                })
            }

            function m(t, e) {
                if (null == t) return null;
                if ("string" === typeof t) return t;
                if (Object(i["k"])(t)) {
                    if (e && ("text" === e.split("/")[0] || "application/json" === e.split(";")[0].trim())) try {
                        return Object(s["h"])(t)
                    } catch (r) {}
                    return Object(i["i"])(t)
                }
                return t
            }

            function p(t, e, r) {
                const i = "object" === typeof t && null != t.throttleLimit ? t.throttleLimit : 12;
                c.assertArgument(i > 0 && i % 1 === 0, "invalid connection throttle limit", "connection.throttleLimit", i);
                const o = "object" === typeof t ? t.throttleCallback : null,
                    u = "object" === typeof t && "number" === typeof t.throttleSlotInterval ? t.throttleSlotInterval : 100;
                c.assertArgument(u > 0 && u % 1 === 0, "invalid connection throttle slot interval", "connection.throttleSlotInterval", u);
                const h = {};
                let p = null;
                const g = {
                    method: "GET"
                };
                let v = !1,
                    y = 12e4;
                if ("string" === typeof t) p = t;
                else if ("object" === typeof t) {
                    if (null != t && null != t.url || c.throwArgumentError("missing URL", "connection.url", t), p = t.url, "number" === typeof t.timeout && t.timeout > 0 && (y = t.timeout), t.headers)
                        for (const e in t.headers) h[e.toLowerCase()] = {
                            key: e,
                            value: String(t.headers[e])
                        }, ["if-none-match", "if-modified-since"].indexOf(e.toLowerCase()) >= 0 && (v = !0);
                    if (g.allowGzip = !!t.allowGzip, null != t.user && null != t.password) {
                        "https:" !== p.substring(0, 6) && !0 !== t.allowInsecureAuthentication && c.throwError("basic authentication requires a secure https url", a["a"].errors.INVALID_ARGUMENT, {
                            argument: "url",
                            url: p,
                            user: t.user,
                            password: "[REDACTED]"
                        });
                        const e = t.user + ":" + t.password;
                        h["authorization"] = {
                            key: "Authorization",
                            value: "Basic " + Object(n["b"])(Object(s["f"])(e))
                        }
                    }
                }
                const w = new RegExp("^data:([a-z0-9-]+/[a-z0-9-]+);base64,(.*)$", "i"),
                    b = p ? p.match(w) : null;
                if (b) try {
                    const t = {
                        statusCode: 200,
                        statusMessage: "OK",
                        headers: {
                            "content-type": b[1]
                        },
                        body: Object(n["a"])(b[2])
                    };
                    let e = t.body;
                    return r && (e = r(t.body, t)), Promise.resolve(e)
                } catch (A) {
                    c.throwError("processing response error", a["a"].errors.SERVER_ERROR, {
                        body: m(b[1], b[2]),
                        error: A,
                        requestBody: null,
                        requestMethod: "GET",
                        url: p
                    })
                }
                e && (g.method = "POST", g.body = e, null == h["content-type"] && (h["content-type"] = {
                    key: "Content-Type",
                    value: "application/octet-stream"
                }), null == h["content-length"] && (h["content-length"] = {
                    key: "Content-Length",
                    value: String(e.length)
                }));
                const M = {};
                Object.keys(h).forEach(t => {
                    const e = h[t];
                    M[e.key] = e.value
                }), g.headers = M;
                const E = function() {
                        let t = null;
                        const e = new Promise((function(e, r) {
                                y && (t = setTimeout(() => {
                                    null != t && (t = null, r(c.makeError("timeout", a["a"].errors.TIMEOUT, {
                                        requestBody: m(g.body, M["content-type"]),
                                        requestMethod: g.method,
                                        timeout: y,
                                        url: p
                                    })))
                                }, y))
                            })),
                            r = function() {
                                null != t && (clearTimeout(t), t = null)
                            };
                        return {
                            promise: e,
                            cancel: r
                        }
                    }(),
                    N = function() {
                        return f(this, void 0, void 0, (function*() {
                            for (let t = 0; t < i; t++) {
                                let e = null;
                                try {
                                    if (e = yield l(p, g), t < i)
                                        if (301 === e.statusCode || 302 === e.statusCode) {
                                            const t = e.headers.location || "";
                                            if ("GET" === g.method && t.match(/^https:/)) {
                                                p = e.headers.location;
                                                continue
                                            }
                                        } else if (429 === e.statusCode) {
                                        let r = !0;
                                        if (o && (r = yield o(t, p)), r) {
                                            let r = 0;
                                            const n = e.headers["retry-after"];
                                            r = "string" === typeof n && n.match(/^[1-9][0-9]*$/) ? 1e3 * parseInt(n) : u * parseInt(String(Math.random() * Math.pow(2, t))), yield d(r);
                                            continue
                                        }
                                    }
                                } catch (A) {
                                    e = A.response, null == e && (E.cancel(), c.throwError("missing response", a["a"].errors.SERVER_ERROR, {
                                        requestBody: m(g.body, M["content-type"]),
                                        requestMethod: g.method,
                                        serverError: A,
                                        url: p
                                    }))
                                }
                                let n = e.body;
                                if (v && 304 === e.statusCode ? n = null : (e.statusCode < 200 || e.statusCode >= 300) && (E.cancel(), c.throwError("bad response", a["a"].errors.SERVER_ERROR, {
                                        status: e.statusCode,
                                        headers: e.headers,
                                        body: m(n, e.headers ? e.headers["content-type"] : null),
                                        requestBody: m(g.body, M["content-type"]),
                                        requestMethod: g.method,
                                        url: p
                                    })), r) try {
                                    const t = yield r(n, e);
                                    return E.cancel(), t
                                } catch (A) {
                                    if (A.throttleRetry && t < i) {
                                        let e = !0;
                                        if (o && (e = yield o(t, p)), e) {
                                            const e = u * parseInt(String(Math.random() * Math.pow(2, t)));
                                            yield d(e);
                                            continue
                                        }
                                    }
                                    E.cancel(), c.throwError("processing response error", a["a"].errors.SERVER_ERROR, {
                                        body: m(n, e.headers ? e.headers["content-type"] : null),
                                        error: A,
                                        requestBody: m(g.body, M["content-type"]),
                                        requestMethod: g.method,
                                        url: p
                                    })
                                }
                                return E.cancel(), n
                            }
                            return c.throwError("failed response", a["a"].errors.SERVER_ERROR, {
                                requestBody: m(g.body, M["content-type"]),
                                requestMethod: g.method,
                                url: p
                            })
                        }))
                    }();
                return Promise.race([E.promise, N])
            }

            function g(t, e, r) {
                let n = (t, e) => {
                        let n = null;
                        if (null != t) try {
                            n = JSON.parse(Object(s["h"])(t))
                        } catch (i) {
                            c.throwError("invalid JSON", a["a"].errors.SERVER_ERROR, {
                                body: t,
                                error: i
                            })
                        }
                        return r && (n = r(n, e)), n
                    },
                    i = null;
                if (null != e) {
                    i = Object(s["f"])(e);
                    const r = "string" === typeof t ? {
                        url: t
                    } : Object(o["g"])(t);
                    if (r.headers) {
                        const t = 0 !== Object.keys(r.headers).filter(t => "content-type" === t.toLowerCase()).length;
                        t || (r.headers = Object(o["g"])(r.headers), r.headers["content-type"] = "application/json")
                    } else r.headers = {
                        "content-type": "application/json"
                    };
                    t = r
                }
                return p(t, i, n)
            }

            function v(t, e) {
                return e || (e = {}), e = Object(o["g"])(e), null == e.floor && (e.floor = 0), null == e.ceiling && (e.ceiling = 1e4), null == e.interval && (e.interval = 250), new Promise((function(r, n) {
                    let i = null,
                        o = !1;
                    const s = () => !o && (o = !0, i && clearTimeout(i), !0);
                    e.timeout && (i = setTimeout(() => {
                        s() && n(new Error("timeout"))
                    }, e.timeout));
                    const a = e.retryLimit;
                    let u = 0;

                    function h() {
                        return t().then((function(t) {
                            if (void 0 !== t) s() && r(t);
                            else if (e.oncePoll) e.oncePoll.once("poll", h);
                            else if (e.onceBlock) e.onceBlock.once("block", h);
                            else if (!o) {
                                if (u++, u > a) return void(s() && n(new Error("retry limit reached")));
                                let t = e.interval * parseInt(String(Math.random() * Math.pow(2, u)));
                                t < e.floor && (t = e.floor), t > e.ceiling && (t = e.ceiling), setTimeout(h, t)
                            }
                            return null
                        }), (function(t) {
                            s() && n(t)
                        }))
                    }
                    h()
                }))
            }
        },
        bb68: function(t, e, r) {
            (function(t) {
                (function(t, e) {
                    "use strict";

                    function n(t, e) {
                        if (!t) throw new Error(e || "Assertion failed")
                    }

                    function i(t, e) {
                        t.super_ = e;
                        var r = function() {};
                        r.prototype = e.prototype, t.prototype = new r, t.prototype.constructor = t
                    }

                    function o(t, e, r) {
                        if (o.isBN(t)) return t;
                        this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== t && ("le" !== e && "be" !== e || (r = e, e = 10), this._init(t || 0, e || 10, r || "be"))
                    }
                    var s;
                    "object" === typeof t ? t.exports = o : e.BN = o, o.BN = o, o.wordSize = 26;
                    try {
                        s = "undefined" !== typeof window && "undefined" !== typeof window.Buffer ? window.Buffer : r(16).Buffer
                    } catch (I) {}

                    function a(t, e) {
                        var r = t.charCodeAt(e);
                        return r >= 65 && r <= 70 ? r - 55 : r >= 97 && r <= 102 ? r - 87 : r - 48 & 15
                    }

                    function u(t, e, r) {
                        var n = a(t, r);
                        return r - 1 >= e && (n |= a(t, r - 1) << 4), n
                    }

                    function h(t, e, r, n) {
                        for (var i = 0, o = Math.min(t.length, r), s = e; s < o; s++) {
                            var a = t.charCodeAt(s) - 48;
                            i *= n, i += a >= 49 ? a - 49 + 10 : a >= 17 ? a - 17 + 10 : a
                        }
                        return i
                    }
                    o.isBN = function(t) {
                        return t instanceof o || null !== t && "object" === typeof t && t.constructor.wordSize === o.wordSize && Array.isArray(t.words)
                    }, o.max = function(t, e) {
                        return t.cmp(e) > 0 ? t : e
                    }, o.min = function(t, e) {
                        return t.cmp(e) < 0 ? t : e
                    }, o.prototype._init = function(t, e, r) {
                        if ("number" === typeof t) return this._initNumber(t, e, r);
                        if ("object" === typeof t) return this._initArray(t, e, r);
                        "hex" === e && (e = 16), n(e === (0 | e) && e >= 2 && e <= 36), t = t.toString().replace(/\s+/g, "");
                        var i = 0;
                        "-" === t[0] && (i++, this.negative = 1), i < t.length && (16 === e ? this._parseHex(t, i, r) : (this._parseBase(t, e, i), "le" === r && this._initArray(this.toArray(), e, r)))
                    }, o.prototype._initNumber = function(t, e, r) {
                        t < 0 && (this.negative = 1, t = -t), t < 67108864 ? (this.words = [67108863 & t], this.length = 1) : t < 4503599627370496 ? (this.words = [67108863 & t, t / 67108864 & 67108863], this.length = 2) : (n(t < 9007199254740992), this.words = [67108863 & t, t / 67108864 & 67108863, 1], this.length = 3), "le" === r && this._initArray(this.toArray(), e, r)
                    }, o.prototype._initArray = function(t, e, r) {
                        if (n("number" === typeof t.length), t.length <= 0) return this.words = [0], this.length = 1, this;
                        this.length = Math.ceil(t.length / 3), this.words = new Array(this.length);
                        for (var i = 0; i < this.length; i++) this.words[i] = 0;
                        var o, s, a = 0;
                        if ("be" === r)
                            for (i = t.length - 1, o = 0; i >= 0; i -= 3) s = t[i] | t[i - 1] << 8 | t[i - 2] << 16, this.words[o] |= s << a & 67108863, this.words[o + 1] = s >>> 26 - a & 67108863, a += 24, a >= 26 && (a -= 26, o++);
                        else if ("le" === r)
                            for (i = 0, o = 0; i < t.length; i += 3) s = t[i] | t[i + 1] << 8 | t[i + 2] << 16, this.words[o] |= s << a & 67108863, this.words[o + 1] = s >>> 26 - a & 67108863, a += 24, a >= 26 && (a -= 26, o++);
                        return this.strip()
                    }, o.prototype._parseHex = function(t, e, r) {
                        this.length = Math.ceil((t.length - e) / 6), this.words = new Array(this.length);
                        for (var n = 0; n < this.length; n++) this.words[n] = 0;
                        var i, o = 0,
                            s = 0;
                        if ("be" === r)
                            for (n = t.length - 1; n >= e; n -= 2) i = u(t, e, n) << o, this.words[s] |= 67108863 & i, o >= 18 ? (o -= 18, s += 1, this.words[s] |= i >>> 26) : o += 8;
                        else {
                            var a = t.length - e;
                            for (n = a % 2 === 0 ? e + 1 : e; n < t.length; n += 2) i = u(t, e, n) << o, this.words[s] |= 67108863 & i, o >= 18 ? (o -= 18, s += 1, this.words[s] |= i >>> 26) : o += 8
                        }
                        this.strip()
                    }, o.prototype._parseBase = function(t, e, r) {
                        this.words = [0], this.length = 1;
                        for (var n = 0, i = 1; i <= 67108863; i *= e) n++;
                        n--, i = i / e | 0;
                        for (var o = t.length - r, s = o % n, a = Math.min(o, o - s) + r, u = 0, l = r; l < a; l += n) u = h(t, l, l + n, e), this.imuln(i), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
                        if (0 !== s) {
                            var f = 1;
                            for (u = h(t, l, t.length, e), l = 0; l < s; l++) f *= e;
                            this.imuln(f), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u)
                        }
                        this.strip()
                    }, o.prototype.copy = function(t) {
                        t.words = new Array(this.length);
                        for (var e = 0; e < this.length; e++) t.words[e] = this.words[e];
                        t.length = this.length, t.negative = this.negative, t.red = this.red
                    }, o.prototype.clone = function() {
                        var t = new o(null);
                        return this.copy(t), t
                    }, o.prototype._expand = function(t) {
                        while (this.length < t) this.words[this.length++] = 0;
                        return this
                    }, o.prototype.strip = function() {
                        while (this.length > 1 && 0 === this.words[this.length - 1]) this.length--;
                        return this._normSign()
                    }, o.prototype._normSign = function() {
                        return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this
                    }, o.prototype.inspect = function() {
                        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">"
                    };
                    var l = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"],
                        f = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                        c = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];

                    function d(t) {
                        for (var e = new Array(t.bitLength()), r = 0; r < e.length; r++) {
                            var n = r / 26 | 0,
                                i = r % 26;
                            e[r] = (t.words[n] & 1 << i) >>> i
                        }
                        return e
                    }

                    function m(t, e, r) {
                        r.negative = e.negative ^ t.negative;
                        var n = t.length + e.length | 0;
                        r.length = n, n = n - 1 | 0;
                        var i = 0 | t.words[0],
                            o = 0 | e.words[0],
                            s = i * o,
                            a = 67108863 & s,
                            u = s / 67108864 | 0;
                        r.words[0] = a;
                        for (var h = 1; h < n; h++) {
                            for (var l = u >>> 26, f = 67108863 & u, c = Math.min(h, e.length - 1), d = Math.max(0, h - t.length + 1); d <= c; d++) {
                                var m = h - d | 0;
                                i = 0 | t.words[m], o = 0 | e.words[d], s = i * o + f, l += s / 67108864 | 0, f = 67108863 & s
                            }
                            r.words[h] = 0 | f, u = 0 | l
                        }
                        return 0 !== u ? r.words[h] = 0 | u : r.length--, r.strip()
                    }
                    o.prototype.toString = function(t, e) {
                        var r;
                        if (t = t || 10, e = 0 | e || 1, 16 === t || "hex" === t) {
                            r = "";
                            for (var i = 0, o = 0, s = 0; s < this.length; s++) {
                                var a = this.words[s],
                                    u = (16777215 & (a << i | o)).toString(16);
                                o = a >>> 24 - i & 16777215, r = 0 !== o || s !== this.length - 1 ? l[6 - u.length] + u + r : u + r, i += 2, i >= 26 && (i -= 26, s--)
                            }
                            0 !== o && (r = o.toString(16) + r);
                            while (r.length % e !== 0) r = "0" + r;
                            return 0 !== this.negative && (r = "-" + r), r
                        }
                        if (t === (0 | t) && t >= 2 && t <= 36) {
                            var h = f[t],
                                d = c[t];
                            r = "";
                            var m = this.clone();
                            m.negative = 0;
                            while (!m.isZero()) {
                                var p = m.modn(d).toString(t);
                                m = m.idivn(d), r = m.isZero() ? p + r : l[h - p.length] + p + r
                            }
                            this.isZero() && (r = "0" + r);
                            while (r.length % e !== 0) r = "0" + r;
                            return 0 !== this.negative && (r = "-" + r), r
                        }
                        n(!1, "Base should be between 2 and 36")
                    }, o.prototype.toNumber = function() {
                        var t = this.words[0];
                        return 2 === this.length ? t += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && n(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -t : t
                    }, o.prototype.toJSON = function() {
                        return this.toString(16)
                    }, o.prototype.toBuffer = function(t, e) {
                        return n("undefined" !== typeof s), this.toArrayLike(s, t, e)
                    }, o.prototype.toArray = function(t, e) {
                        return this.toArrayLike(Array, t, e)
                    }, o.prototype.toArrayLike = function(t, e, r) {
                        var i = this.byteLength(),
                            o = r || Math.max(1, i);
                        n(i <= o, "byte array longer than desired length"), n(o > 0, "Requested array length <= 0"), this.strip();
                        var s, a, u = "le" === e,
                            h = new t(o),
                            l = this.clone();
                        if (u) {
                            for (a = 0; !l.isZero(); a++) s = l.andln(255), l.iushrn(8), h[a] = s;
                            for (; a < o; a++) h[a] = 0
                        } else {
                            for (a = 0; a < o - i; a++) h[a] = 0;
                            for (a = 0; !l.isZero(); a++) s = l.andln(255), l.iushrn(8), h[o - a - 1] = s
                        }
                        return h
                    }, Math.clz32 ? o.prototype._countBits = function(t) {
                        return 32 - Math.clz32(t)
                    } : o.prototype._countBits = function(t) {
                        var e = t,
                            r = 0;
                        return e >= 4096 && (r += 13, e >>>= 13), e >= 64 && (r += 7, e >>>= 7), e >= 8 && (r += 4, e >>>= 4), e >= 2 && (r += 2, e >>>= 2), r + e
                    }, o.prototype._zeroBits = function(t) {
                        if (0 === t) return 26;
                        var e = t,
                            r = 0;
                        return 0 === (8191 & e) && (r += 13, e >>>= 13), 0 === (127 & e) && (r += 7, e >>>= 7), 0 === (15 & e) && (r += 4, e >>>= 4), 0 === (3 & e) && (r += 2, e >>>= 2), 0 === (1 & e) && r++, r
                    }, o.prototype.bitLength = function() {
                        var t = this.words[this.length - 1],
                            e = this._countBits(t);
                        return 26 * (this.length - 1) + e
                    }, o.prototype.zeroBits = function() {
                        if (this.isZero()) return 0;
                        for (var t = 0, e = 0; e < this.length; e++) {
                            var r = this._zeroBits(this.words[e]);
                            if (t += r, 26 !== r) break
                        }
                        return t
                    }, o.prototype.byteLength = function() {
                        return Math.ceil(this.bitLength() / 8)
                    }, o.prototype.toTwos = function(t) {
                        return 0 !== this.negative ? this.abs().inotn(t).iaddn(1) : this.clone()
                    }, o.prototype.fromTwos = function(t) {
                        return this.testn(t - 1) ? this.notn(t).iaddn(1).ineg() : this.clone()
                    }, o.prototype.isNeg = function() {
                        return 0 !== this.negative
                    }, o.prototype.neg = function() {
                        return this.clone().ineg()
                    }, o.prototype.ineg = function() {
                        return this.isZero() || (this.negative ^= 1), this
                    }, o.prototype.iuor = function(t) {
                        while (this.length < t.length) this.words[this.length++] = 0;
                        for (var e = 0; e < t.length; e++) this.words[e] = this.words[e] | t.words[e];
                        return this.strip()
                    }, o.prototype.ior = function(t) {
                        return n(0 === (this.negative | t.negative)), this.iuor(t)
                    }, o.prototype.or = function(t) {
                        return this.length > t.length ? this.clone().ior(t) : t.clone().ior(this)
                    }, o.prototype.uor = function(t) {
                        return this.length > t.length ? this.clone().iuor(t) : t.clone().iuor(this)
                    }, o.prototype.iuand = function(t) {
                        var e;
                        e = this.length > t.length ? t : this;
                        for (var r = 0; r < e.length; r++) this.words[r] = this.words[r] & t.words[r];
                        return this.length = e.length, this.strip()
                    }, o.prototype.iand = function(t) {
                        return n(0 === (this.negative | t.negative)), this.iuand(t)
                    }, o.prototype.and = function(t) {
                        return this.length > t.length ? this.clone().iand(t) : t.clone().iand(this)
                    }, o.prototype.uand = function(t) {
                        return this.length > t.length ? this.clone().iuand(t) : t.clone().iuand(this)
                    }, o.prototype.iuxor = function(t) {
                        var e, r;
                        this.length > t.length ? (e = this, r = t) : (e = t, r = this);
                        for (var n = 0; n < r.length; n++) this.words[n] = e.words[n] ^ r.words[n];
                        if (this !== e)
                            for (; n < e.length; n++) this.words[n] = e.words[n];
                        return this.length = e.length, this.strip()
                    }, o.prototype.ixor = function(t) {
                        return n(0 === (this.negative | t.negative)), this.iuxor(t)
                    }, o.prototype.xor = function(t) {
                        return this.length > t.length ? this.clone().ixor(t) : t.clone().ixor(this)
                    }, o.prototype.uxor = function(t) {
                        return this.length > t.length ? this.clone().iuxor(t) : t.clone().iuxor(this)
                    }, o.prototype.inotn = function(t) {
                        n("number" === typeof t && t >= 0);
                        var e = 0 | Math.ceil(t / 26),
                            r = t % 26;
                        this._expand(e), r > 0 && e--;
                        for (var i = 0; i < e; i++) this.words[i] = 67108863 & ~this.words[i];
                        return r > 0 && (this.words[i] = ~this.words[i] & 67108863 >> 26 - r), this.strip()
                    }, o.prototype.notn = function(t) {
                        return this.clone().inotn(t)
                    }, o.prototype.setn = function(t, e) {
                        n("number" === typeof t && t >= 0);
                        var r = t / 26 | 0,
                            i = t % 26;
                        return this._expand(r + 1), this.words[r] = e ? this.words[r] | 1 << i : this.words[r] & ~(1 << i), this.strip()
                    }, o.prototype.iadd = function(t) {
                        var e, r, n;
                        if (0 !== this.negative && 0 === t.negative) return this.negative = 0, e = this.isub(t), this.negative ^= 1, this._normSign();
                        if (0 === this.negative && 0 !== t.negative) return t.negative = 0, e = this.isub(t), t.negative = 1, e._normSign();
                        this.length > t.length ? (r = this, n = t) : (r = t, n = this);
                        for (var i = 0, o = 0; o < n.length; o++) e = (0 | r.words[o]) + (0 | n.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                        for (; 0 !== i && o < r.length; o++) e = (0 | r.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                        if (this.length = r.length, 0 !== i) this.words[this.length] = i, this.length++;
                        else if (r !== this)
                            for (; o < r.length; o++) this.words[o] = r.words[o];
                        return this
                    }, o.prototype.add = function(t) {
                        var e;
                        return 0 !== t.negative && 0 === this.negative ? (t.negative = 0, e = this.sub(t), t.negative ^= 1, e) : 0 === t.negative && 0 !== this.negative ? (this.negative = 0, e = t.sub(this), this.negative = 1, e) : this.length > t.length ? this.clone().iadd(t) : t.clone().iadd(this)
                    }, o.prototype.isub = function(t) {
                        if (0 !== t.negative) {
                            t.negative = 0;
                            var e = this.iadd(t);
                            return t.negative = 1, e._normSign()
                        }
                        if (0 !== this.negative) return this.negative = 0, this.iadd(t), this.negative = 1, this._normSign();
                        var r, n, i = this.cmp(t);
                        if (0 === i) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
                        i > 0 ? (r = this, n = t) : (r = t, n = this);
                        for (var o = 0, s = 0; s < n.length; s++) e = (0 | r.words[s]) - (0 | n.words[s]) + o, o = e >> 26, this.words[s] = 67108863 & e;
                        for (; 0 !== o && s < r.length; s++) e = (0 | r.words[s]) + o, o = e >> 26, this.words[s] = 67108863 & e;
                        if (0 === o && s < r.length && r !== this)
                            for (; s < r.length; s++) this.words[s] = r.words[s];
                        return this.length = Math.max(this.length, s), r !== this && (this.negative = 1), this.strip()
                    }, o.prototype.sub = function(t) {
                        return this.clone().isub(t)
                    };
                    var p = function(t, e, r) {
                        var n, i, o, s = t.words,
                            a = e.words,
                            u = r.words,
                            h = 0,
                            l = 0 | s[0],
                            f = 8191 & l,
                            c = l >>> 13,
                            d = 0 | s[1],
                            m = 8191 & d,
                            p = d >>> 13,
                            g = 0 | s[2],
                            v = 8191 & g,
                            y = g >>> 13,
                            w = 0 | s[3],
                            b = 8191 & w,
                            M = w >>> 13,
                            E = 0 | s[4],
                            N = 8191 & E,
                            A = E >>> 13,
                            _ = 0 | s[5],
                            S = 8191 & _,
                            I = _ >>> 13,
                            R = 0 | s[6],
                            P = 8191 & R,
                            k = R >>> 13,
                            x = 0 | s[7],
                            T = 8191 & x,
                            O = x >>> 13,
                            C = 0 | s[8],
                            U = 8191 & C,
                            F = C >>> 13,
                            B = 0 | s[9],
                            L = 8191 & B,
                            D = B >>> 13,
                            G = 0 | a[0],
                            j = 8191 & G,
                            q = G >>> 13,
                            z = 0 | a[1],
                            K = 8191 & z,
                            W = z >>> 13,
                            V = 0 | a[2],
                            H = 8191 & V,
                            J = V >>> 13,
                            Z = 0 | a[3],
                            X = 8191 & Z,
                            $ = Z >>> 13,
                            Y = 0 | a[4],
                            Q = 8191 & Y,
                            tt = Y >>> 13,
                            et = 0 | a[5],
                            rt = 8191 & et,
                            nt = et >>> 13,
                            it = 0 | a[6],
                            ot = 8191 & it,
                            st = it >>> 13,
                            at = 0 | a[7],
                            ut = 8191 & at,
                            ht = at >>> 13,
                            lt = 0 | a[8],
                            ft = 8191 & lt,
                            ct = lt >>> 13,
                            dt = 0 | a[9],
                            mt = 8191 & dt,
                            pt = dt >>> 13;
                        r.negative = t.negative ^ e.negative, r.length = 19, n = Math.imul(f, j), i = Math.imul(f, q), i = i + Math.imul(c, j) | 0, o = Math.imul(c, q);
                        var gt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (gt >>> 26) | 0, gt &= 67108863, n = Math.imul(m, j), i = Math.imul(m, q), i = i + Math.imul(p, j) | 0, o = Math.imul(p, q), n = n + Math.imul(f, K) | 0, i = i + Math.imul(f, W) | 0, i = i + Math.imul(c, K) | 0, o = o + Math.imul(c, W) | 0;
                        var vt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (vt >>> 26) | 0, vt &= 67108863, n = Math.imul(v, j), i = Math.imul(v, q), i = i + Math.imul(y, j) | 0, o = Math.imul(y, q), n = n + Math.imul(m, K) | 0, i = i + Math.imul(m, W) | 0, i = i + Math.imul(p, K) | 0, o = o + Math.imul(p, W) | 0, n = n + Math.imul(f, H) | 0, i = i + Math.imul(f, J) | 0, i = i + Math.imul(c, H) | 0, o = o + Math.imul(c, J) | 0;
                        var yt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (yt >>> 26) | 0, yt &= 67108863, n = Math.imul(b, j), i = Math.imul(b, q), i = i + Math.imul(M, j) | 0, o = Math.imul(M, q), n = n + Math.imul(v, K) | 0, i = i + Math.imul(v, W) | 0, i = i + Math.imul(y, K) | 0, o = o + Math.imul(y, W) | 0, n = n + Math.imul(m, H) | 0, i = i + Math.imul(m, J) | 0, i = i + Math.imul(p, H) | 0, o = o + Math.imul(p, J) | 0, n = n + Math.imul(f, X) | 0, i = i + Math.imul(f, $) | 0, i = i + Math.imul(c, X) | 0, o = o + Math.imul(c, $) | 0;
                        var wt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (wt >>> 26) | 0, wt &= 67108863, n = Math.imul(N, j), i = Math.imul(N, q), i = i + Math.imul(A, j) | 0, o = Math.imul(A, q), n = n + Math.imul(b, K) | 0, i = i + Math.imul(b, W) | 0, i = i + Math.imul(M, K) | 0, o = o + Math.imul(M, W) | 0, n = n + Math.imul(v, H) | 0, i = i + Math.imul(v, J) | 0, i = i + Math.imul(y, H) | 0, o = o + Math.imul(y, J) | 0, n = n + Math.imul(m, X) | 0, i = i + Math.imul(m, $) | 0, i = i + Math.imul(p, X) | 0, o = o + Math.imul(p, $) | 0, n = n + Math.imul(f, Q) | 0, i = i + Math.imul(f, tt) | 0, i = i + Math.imul(c, Q) | 0, o = o + Math.imul(c, tt) | 0;
                        var bt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (bt >>> 26) | 0, bt &= 67108863, n = Math.imul(S, j), i = Math.imul(S, q), i = i + Math.imul(I, j) | 0, o = Math.imul(I, q), n = n + Math.imul(N, K) | 0, i = i + Math.imul(N, W) | 0, i = i + Math.imul(A, K) | 0, o = o + Math.imul(A, W) | 0, n = n + Math.imul(b, H) | 0, i = i + Math.imul(b, J) | 0, i = i + Math.imul(M, H) | 0, o = o + Math.imul(M, J) | 0, n = n + Math.imul(v, X) | 0, i = i + Math.imul(v, $) | 0, i = i + Math.imul(y, X) | 0, o = o + Math.imul(y, $) | 0, n = n + Math.imul(m, Q) | 0, i = i + Math.imul(m, tt) | 0, i = i + Math.imul(p, Q) | 0, o = o + Math.imul(p, tt) | 0, n = n + Math.imul(f, rt) | 0, i = i + Math.imul(f, nt) | 0, i = i + Math.imul(c, rt) | 0, o = o + Math.imul(c, nt) | 0;
                        var Mt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (Mt >>> 26) | 0, Mt &= 67108863, n = Math.imul(P, j), i = Math.imul(P, q), i = i + Math.imul(k, j) | 0, o = Math.imul(k, q), n = n + Math.imul(S, K) | 0, i = i + Math.imul(S, W) | 0, i = i + Math.imul(I, K) | 0, o = o + Math.imul(I, W) | 0, n = n + Math.imul(N, H) | 0, i = i + Math.imul(N, J) | 0, i = i + Math.imul(A, H) | 0, o = o + Math.imul(A, J) | 0, n = n + Math.imul(b, X) | 0, i = i + Math.imul(b, $) | 0, i = i + Math.imul(M, X) | 0, o = o + Math.imul(M, $) | 0, n = n + Math.imul(v, Q) | 0, i = i + Math.imul(v, tt) | 0, i = i + Math.imul(y, Q) | 0, o = o + Math.imul(y, tt) | 0, n = n + Math.imul(m, rt) | 0, i = i + Math.imul(m, nt) | 0, i = i + Math.imul(p, rt) | 0, o = o + Math.imul(p, nt) | 0, n = n + Math.imul(f, ot) | 0, i = i + Math.imul(f, st) | 0, i = i + Math.imul(c, ot) | 0, o = o + Math.imul(c, st) | 0;
                        var Et = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (Et >>> 26) | 0, Et &= 67108863, n = Math.imul(T, j), i = Math.imul(T, q), i = i + Math.imul(O, j) | 0, o = Math.imul(O, q), n = n + Math.imul(P, K) | 0, i = i + Math.imul(P, W) | 0, i = i + Math.imul(k, K) | 0, o = o + Math.imul(k, W) | 0, n = n + Math.imul(S, H) | 0, i = i + Math.imul(S, J) | 0, i = i + Math.imul(I, H) | 0, o = o + Math.imul(I, J) | 0, n = n + Math.imul(N, X) | 0, i = i + Math.imul(N, $) | 0, i = i + Math.imul(A, X) | 0, o = o + Math.imul(A, $) | 0, n = n + Math.imul(b, Q) | 0, i = i + Math.imul(b, tt) | 0, i = i + Math.imul(M, Q) | 0, o = o + Math.imul(M, tt) | 0, n = n + Math.imul(v, rt) | 0, i = i + Math.imul(v, nt) | 0, i = i + Math.imul(y, rt) | 0, o = o + Math.imul(y, nt) | 0, n = n + Math.imul(m, ot) | 0, i = i + Math.imul(m, st) | 0, i = i + Math.imul(p, ot) | 0, o = o + Math.imul(p, st) | 0, n = n + Math.imul(f, ut) | 0, i = i + Math.imul(f, ht) | 0, i = i + Math.imul(c, ut) | 0, o = o + Math.imul(c, ht) | 0;
                        var Nt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (Nt >>> 26) | 0, Nt &= 67108863, n = Math.imul(U, j), i = Math.imul(U, q), i = i + Math.imul(F, j) | 0, o = Math.imul(F, q), n = n + Math.imul(T, K) | 0, i = i + Math.imul(T, W) | 0, i = i + Math.imul(O, K) | 0, o = o + Math.imul(O, W) | 0, n = n + Math.imul(P, H) | 0, i = i + Math.imul(P, J) | 0, i = i + Math.imul(k, H) | 0, o = o + Math.imul(k, J) | 0, n = n + Math.imul(S, X) | 0, i = i + Math.imul(S, $) | 0, i = i + Math.imul(I, X) | 0, o = o + Math.imul(I, $) | 0, n = n + Math.imul(N, Q) | 0, i = i + Math.imul(N, tt) | 0, i = i + Math.imul(A, Q) | 0, o = o + Math.imul(A, tt) | 0, n = n + Math.imul(b, rt) | 0, i = i + Math.imul(b, nt) | 0, i = i + Math.imul(M, rt) | 0, o = o + Math.imul(M, nt) | 0, n = n + Math.imul(v, ot) | 0, i = i + Math.imul(v, st) | 0, i = i + Math.imul(y, ot) | 0, o = o + Math.imul(y, st) | 0, n = n + Math.imul(m, ut) | 0, i = i + Math.imul(m, ht) | 0, i = i + Math.imul(p, ut) | 0, o = o + Math.imul(p, ht) | 0, n = n + Math.imul(f, ft) | 0, i = i + Math.imul(f, ct) | 0, i = i + Math.imul(c, ft) | 0, o = o + Math.imul(c, ct) | 0;
                        var At = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (At >>> 26) | 0, At &= 67108863, n = Math.imul(L, j), i = Math.imul(L, q), i = i + Math.imul(D, j) | 0, o = Math.imul(D, q), n = n + Math.imul(U, K) | 0, i = i + Math.imul(U, W) | 0, i = i + Math.imul(F, K) | 0, o = o + Math.imul(F, W) | 0, n = n + Math.imul(T, H) | 0, i = i + Math.imul(T, J) | 0, i = i + Math.imul(O, H) | 0, o = o + Math.imul(O, J) | 0, n = n + Math.imul(P, X) | 0, i = i + Math.imul(P, $) | 0, i = i + Math.imul(k, X) | 0, o = o + Math.imul(k, $) | 0, n = n + Math.imul(S, Q) | 0, i = i + Math.imul(S, tt) | 0, i = i + Math.imul(I, Q) | 0, o = o + Math.imul(I, tt) | 0, n = n + Math.imul(N, rt) | 0, i = i + Math.imul(N, nt) | 0, i = i + Math.imul(A, rt) | 0, o = o + Math.imul(A, nt) | 0, n = n + Math.imul(b, ot) | 0, i = i + Math.imul(b, st) | 0, i = i + Math.imul(M, ot) | 0, o = o + Math.imul(M, st) | 0, n = n + Math.imul(v, ut) | 0, i = i + Math.imul(v, ht) | 0, i = i + Math.imul(y, ut) | 0, o = o + Math.imul(y, ht) | 0, n = n + Math.imul(m, ft) | 0, i = i + Math.imul(m, ct) | 0, i = i + Math.imul(p, ft) | 0, o = o + Math.imul(p, ct) | 0, n = n + Math.imul(f, mt) | 0, i = i + Math.imul(f, pt) | 0, i = i + Math.imul(c, mt) | 0, o = o + Math.imul(c, pt) | 0;
                        var _t = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (_t >>> 26) | 0, _t &= 67108863, n = Math.imul(L, K), i = Math.imul(L, W), i = i + Math.imul(D, K) | 0, o = Math.imul(D, W), n = n + Math.imul(U, H) | 0, i = i + Math.imul(U, J) | 0, i = i + Math.imul(F, H) | 0, o = o + Math.imul(F, J) | 0, n = n + Math.imul(T, X) | 0, i = i + Math.imul(T, $) | 0, i = i + Math.imul(O, X) | 0, o = o + Math.imul(O, $) | 0, n = n + Math.imul(P, Q) | 0, i = i + Math.imul(P, tt) | 0, i = i + Math.imul(k, Q) | 0, o = o + Math.imul(k, tt) | 0, n = n + Math.imul(S, rt) | 0, i = i + Math.imul(S, nt) | 0, i = i + Math.imul(I, rt) | 0, o = o + Math.imul(I, nt) | 0, n = n + Math.imul(N, ot) | 0, i = i + Math.imul(N, st) | 0, i = i + Math.imul(A, ot) | 0, o = o + Math.imul(A, st) | 0, n = n + Math.imul(b, ut) | 0, i = i + Math.imul(b, ht) | 0, i = i + Math.imul(M, ut) | 0, o = o + Math.imul(M, ht) | 0, n = n + Math.imul(v, ft) | 0, i = i + Math.imul(v, ct) | 0, i = i + Math.imul(y, ft) | 0, o = o + Math.imul(y, ct) | 0, n = n + Math.imul(m, mt) | 0, i = i + Math.imul(m, pt) | 0, i = i + Math.imul(p, mt) | 0, o = o + Math.imul(p, pt) | 0;
                        var St = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (St >>> 26) | 0, St &= 67108863, n = Math.imul(L, H), i = Math.imul(L, J), i = i + Math.imul(D, H) | 0, o = Math.imul(D, J), n = n + Math.imul(U, X) | 0, i = i + Math.imul(U, $) | 0, i = i + Math.imul(F, X) | 0, o = o + Math.imul(F, $) | 0, n = n + Math.imul(T, Q) | 0, i = i + Math.imul(T, tt) | 0, i = i + Math.imul(O, Q) | 0, o = o + Math.imul(O, tt) | 0, n = n + Math.imul(P, rt) | 0, i = i + Math.imul(P, nt) | 0, i = i + Math.imul(k, rt) | 0, o = o + Math.imul(k, nt) | 0, n = n + Math.imul(S, ot) | 0, i = i + Math.imul(S, st) | 0, i = i + Math.imul(I, ot) | 0, o = o + Math.imul(I, st) | 0, n = n + Math.imul(N, ut) | 0, i = i + Math.imul(N, ht) | 0, i = i + Math.imul(A, ut) | 0, o = o + Math.imul(A, ht) | 0, n = n + Math.imul(b, ft) | 0, i = i + Math.imul(b, ct) | 0, i = i + Math.imul(M, ft) | 0, o = o + Math.imul(M, ct) | 0, n = n + Math.imul(v, mt) | 0, i = i + Math.imul(v, pt) | 0, i = i + Math.imul(y, mt) | 0, o = o + Math.imul(y, pt) | 0;
                        var It = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (It >>> 26) | 0, It &= 67108863, n = Math.imul(L, X), i = Math.imul(L, $), i = i + Math.imul(D, X) | 0, o = Math.imul(D, $), n = n + Math.imul(U, Q) | 0, i = i + Math.imul(U, tt) | 0, i = i + Math.imul(F, Q) | 0, o = o + Math.imul(F, tt) | 0, n = n + Math.imul(T, rt) | 0, i = i + Math.imul(T, nt) | 0, i = i + Math.imul(O, rt) | 0, o = o + Math.imul(O, nt) | 0, n = n + Math.imul(P, ot) | 0, i = i + Math.imul(P, st) | 0, i = i + Math.imul(k, ot) | 0, o = o + Math.imul(k, st) | 0, n = n + Math.imul(S, ut) | 0, i = i + Math.imul(S, ht) | 0, i = i + Math.imul(I, ut) | 0, o = o + Math.imul(I, ht) | 0, n = n + Math.imul(N, ft) | 0, i = i + Math.imul(N, ct) | 0, i = i + Math.imul(A, ft) | 0, o = o + Math.imul(A, ct) | 0, n = n + Math.imul(b, mt) | 0, i = i + Math.imul(b, pt) | 0, i = i + Math.imul(M, mt) | 0, o = o + Math.imul(M, pt) | 0;
                        var Rt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (Rt >>> 26) | 0, Rt &= 67108863, n = Math.imul(L, Q), i = Math.imul(L, tt), i = i + Math.imul(D, Q) | 0, o = Math.imul(D, tt), n = n + Math.imul(U, rt) | 0, i = i + Math.imul(U, nt) | 0, i = i + Math.imul(F, rt) | 0, o = o + Math.imul(F, nt) | 0, n = n + Math.imul(T, ot) | 0, i = i + Math.imul(T, st) | 0, i = i + Math.imul(O, ot) | 0, o = o + Math.imul(O, st) | 0, n = n + Math.imul(P, ut) | 0, i = i + Math.imul(P, ht) | 0, i = i + Math.imul(k, ut) | 0, o = o + Math.imul(k, ht) | 0, n = n + Math.imul(S, ft) | 0, i = i + Math.imul(S, ct) | 0, i = i + Math.imul(I, ft) | 0, o = o + Math.imul(I, ct) | 0, n = n + Math.imul(N, mt) | 0, i = i + Math.imul(N, pt) | 0, i = i + Math.imul(A, mt) | 0, o = o + Math.imul(A, pt) | 0;
                        var Pt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (Pt >>> 26) | 0, Pt &= 67108863, n = Math.imul(L, rt), i = Math.imul(L, nt), i = i + Math.imul(D, rt) | 0, o = Math.imul(D, nt), n = n + Math.imul(U, ot) | 0, i = i + Math.imul(U, st) | 0, i = i + Math.imul(F, ot) | 0, o = o + Math.imul(F, st) | 0, n = n + Math.imul(T, ut) | 0, i = i + Math.imul(T, ht) | 0, i = i + Math.imul(O, ut) | 0, o = o + Math.imul(O, ht) | 0, n = n + Math.imul(P, ft) | 0, i = i + Math.imul(P, ct) | 0, i = i + Math.imul(k, ft) | 0, o = o + Math.imul(k, ct) | 0, n = n + Math.imul(S, mt) | 0, i = i + Math.imul(S, pt) | 0, i = i + Math.imul(I, mt) | 0, o = o + Math.imul(I, pt) | 0;
                        var kt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (kt >>> 26) | 0, kt &= 67108863, n = Math.imul(L, ot), i = Math.imul(L, st), i = i + Math.imul(D, ot) | 0, o = Math.imul(D, st), n = n + Math.imul(U, ut) | 0, i = i + Math.imul(U, ht) | 0, i = i + Math.imul(F, ut) | 0, o = o + Math.imul(F, ht) | 0, n = n + Math.imul(T, ft) | 0, i = i + Math.imul(T, ct) | 0, i = i + Math.imul(O, ft) | 0, o = o + Math.imul(O, ct) | 0, n = n + Math.imul(P, mt) | 0, i = i + Math.imul(P, pt) | 0, i = i + Math.imul(k, mt) | 0, o = o + Math.imul(k, pt) | 0;
                        var xt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (xt >>> 26) | 0, xt &= 67108863, n = Math.imul(L, ut), i = Math.imul(L, ht), i = i + Math.imul(D, ut) | 0, o = Math.imul(D, ht), n = n + Math.imul(U, ft) | 0, i = i + Math.imul(U, ct) | 0, i = i + Math.imul(F, ft) | 0, o = o + Math.imul(F, ct) | 0, n = n + Math.imul(T, mt) | 0, i = i + Math.imul(T, pt) | 0, i = i + Math.imul(O, mt) | 0, o = o + Math.imul(O, pt) | 0;
                        var Tt = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (Tt >>> 26) | 0, Tt &= 67108863, n = Math.imul(L, ft), i = Math.imul(L, ct), i = i + Math.imul(D, ft) | 0, o = Math.imul(D, ct), n = n + Math.imul(U, mt) | 0, i = i + Math.imul(U, pt) | 0, i = i + Math.imul(F, mt) | 0, o = o + Math.imul(F, pt) | 0;
                        var Ot = (h + n | 0) + ((8191 & i) << 13) | 0;
                        h = (o + (i >>> 13) | 0) + (Ot >>> 26) | 0, Ot &= 67108863, n = Math.imul(L, mt), i = Math.imul(L, pt), i = i + Math.imul(D, mt) | 0, o = Math.imul(D, pt);
                        var Ct = (h + n | 0) + ((8191 & i) << 13) | 0;
                        return h = (o + (i >>> 13) | 0) + (Ct >>> 26) | 0, Ct &= 67108863, u[0] = gt, u[1] = vt, u[2] = yt, u[3] = wt, u[4] = bt, u[5] = Mt, u[6] = Et, u[7] = Nt, u[8] = At, u[9] = _t, u[10] = St, u[11] = It, u[12] = Rt, u[13] = Pt, u[14] = kt, u[15] = xt, u[16] = Tt, u[17] = Ot, u[18] = Ct, 0 !== h && (u[19] = h, r.length++), r
                    };

                    function g(t, e, r) {
                        r.negative = e.negative ^ t.negative, r.length = t.length + e.length;
                        for (var n = 0, i = 0, o = 0; o < r.length - 1; o++) {
                            var s = i;
                            i = 0;
                            for (var a = 67108863 & n, u = Math.min(o, e.length - 1), h = Math.max(0, o - t.length + 1); h <= u; h++) {
                                var l = o - h,
                                    f = 0 | t.words[l],
                                    c = 0 | e.words[h],
                                    d = f * c,
                                    m = 67108863 & d;
                                s = s + (d / 67108864 | 0) | 0, m = m + a | 0, a = 67108863 & m, s = s + (m >>> 26) | 0, i += s >>> 26, s &= 67108863
                            }
                            r.words[o] = a, n = s, s = i
                        }
                        return 0 !== n ? r.words[o] = n : r.length--, r.strip()
                    }

                    function v(t, e, r) {
                        var n = new y;
                        return n.mulp(t, e, r)
                    }

                    function y(t, e) {
                        this.x = t, this.y = e
                    }
                    Math.imul || (p = m), o.prototype.mulTo = function(t, e) {
                        var r, n = this.length + t.length;
                        return r = 10 === this.length && 10 === t.length ? p(this, t, e) : n < 63 ? m(this, t, e) : n < 1024 ? g(this, t, e) : v(this, t, e), r
                    }, y.prototype.makeRBT = function(t) {
                        for (var e = new Array(t), r = o.prototype._countBits(t) - 1, n = 0; n < t; n++) e[n] = this.revBin(n, r, t);
                        return e
                    }, y.prototype.revBin = function(t, e, r) {
                        if (0 === t || t === r - 1) return t;
                        for (var n = 0, i = 0; i < e; i++) n |= (1 & t) << e - i - 1, t >>= 1;
                        return n
                    }, y.prototype.permute = function(t, e, r, n, i, o) {
                        for (var s = 0; s < o; s++) n[s] = e[t[s]], i[s] = r[t[s]]
                    }, y.prototype.transform = function(t, e, r, n, i, o) {
                        this.permute(o, t, e, r, n, i);
                        for (var s = 1; s < i; s <<= 1)
                            for (var a = s << 1, u = Math.cos(2 * Math.PI / a), h = Math.sin(2 * Math.PI / a), l = 0; l < i; l += a)
                                for (var f = u, c = h, d = 0; d < s; d++) {
                                    var m = r[l + d],
                                        p = n[l + d],
                                        g = r[l + d + s],
                                        v = n[l + d + s],
                                        y = f * g - c * v;
                                    v = f * v + c * g, g = y, r[l + d] = m + g, n[l + d] = p + v, r[l + d + s] = m - g, n[l + d + s] = p - v, d !== a && (y = u * f - h * c, c = u * c + h * f, f = y)
                                }
                    }, y.prototype.guessLen13b = function(t, e) {
                        var r = 1 | Math.max(e, t),
                            n = 1 & r,
                            i = 0;
                        for (r = r / 2 | 0; r; r >>>= 1) i++;
                        return 1 << i + 1 + n
                    }, y.prototype.conjugate = function(t, e, r) {
                        if (!(r <= 1))
                            for (var n = 0; n < r / 2; n++) {
                                var i = t[n];
                                t[n] = t[r - n - 1], t[r - n - 1] = i, i = e[n], e[n] = -e[r - n - 1], e[r - n - 1] = -i
                            }
                    }, y.prototype.normalize13b = function(t, e) {
                        for (var r = 0, n = 0; n < e / 2; n++) {
                            var i = 8192 * Math.round(t[2 * n + 1] / e) + Math.round(t[2 * n] / e) + r;
                            t[n] = 67108863 & i, r = i < 67108864 ? 0 : i / 67108864 | 0
                        }
                        return t
                    }, y.prototype.convert13b = function(t, e, r, i) {
                        for (var o = 0, s = 0; s < e; s++) o += 0 | t[s], r[2 * s] = 8191 & o, o >>>= 13, r[2 * s + 1] = 8191 & o, o >>>= 13;
                        for (s = 2 * e; s < i; ++s) r[s] = 0;
                        n(0 === o), n(0 === (-8192 & o))
                    }, y.prototype.stub = function(t) {
                        for (var e = new Array(t), r = 0; r < t; r++) e[r] = 0;
                        return e
                    }, y.prototype.mulp = function(t, e, r) {
                        var n = 2 * this.guessLen13b(t.length, e.length),
                            i = this.makeRBT(n),
                            o = this.stub(n),
                            s = new Array(n),
                            a = new Array(n),
                            u = new Array(n),
                            h = new Array(n),
                            l = new Array(n),
                            f = new Array(n),
                            c = r.words;
                        c.length = n, this.convert13b(t.words, t.length, s, n), this.convert13b(e.words, e.length, h, n), this.transform(s, o, a, u, n, i), this.transform(h, o, l, f, n, i);
                        for (var d = 0; d < n; d++) {
                            var m = a[d] * l[d] - u[d] * f[d];
                            u[d] = a[d] * f[d] + u[d] * l[d], a[d] = m
                        }
                        return this.conjugate(a, u, n), this.transform(a, u, c, o, n, i), this.conjugate(c, o, n), this.normalize13b(c, n), r.negative = t.negative ^ e.negative, r.length = t.length + e.length, r.strip()
                    }, o.prototype.mul = function(t) {
                        var e = new o(null);
                        return e.words = new Array(this.length + t.length), this.mulTo(t, e)
                    }, o.prototype.mulf = function(t) {
                        var e = new o(null);
                        return e.words = new Array(this.length + t.length), v(this, t, e)
                    }, o.prototype.imul = function(t) {
                        return this.clone().mulTo(t, this)
                    }, o.prototype.imuln = function(t) {
                        n("number" === typeof t), n(t < 67108864);
                        for (var e = 0, r = 0; r < this.length; r++) {
                            var i = (0 | this.words[r]) * t,
                                o = (67108863 & i) + (67108863 & e);
                            e >>= 26, e += i / 67108864 | 0, e += o >>> 26, this.words[r] = 67108863 & o
                        }
                        return 0 !== e && (this.words[r] = e, this.length++), this
                    }, o.prototype.muln = function(t) {
                        return this.clone().imuln(t)
                    }, o.prototype.sqr = function() {
                        return this.mul(this)
                    }, o.prototype.isqr = function() {
                        return this.imul(this.clone())
                    }, o.prototype.pow = function(t) {
                        var e = d(t);
                        if (0 === e.length) return new o(1);
                        for (var r = this, n = 0; n < e.length; n++, r = r.sqr())
                            if (0 !== e[n]) break;
                        if (++n < e.length)
                            for (var i = r.sqr(); n < e.length; n++, i = i.sqr()) 0 !== e[n] && (r = r.mul(i));
                        return r
                    }, o.prototype.iushln = function(t) {
                        n("number" === typeof t && t >= 0);
                        var e, r = t % 26,
                            i = (t - r) / 26,
                            o = 67108863 >>> 26 - r << 26 - r;
                        if (0 !== r) {
                            var s = 0;
                            for (e = 0; e < this.length; e++) {
                                var a = this.words[e] & o,
                                    u = (0 | this.words[e]) - a << r;
                                this.words[e] = u | s, s = a >>> 26 - r
                            }
                            s && (this.words[e] = s, this.length++)
                        }
                        if (0 !== i) {
                            for (e = this.length - 1; e >= 0; e--) this.words[e + i] = this.words[e];
                            for (e = 0; e < i; e++) this.words[e] = 0;
                            this.length += i
                        }
                        return this.strip()
                    }, o.prototype.ishln = function(t) {
                        return n(0 === this.negative), this.iushln(t)
                    }, o.prototype.iushrn = function(t, e, r) {
                        var i;
                        n("number" === typeof t && t >= 0), i = e ? (e - e % 26) / 26 : 0;
                        var o = t % 26,
                            s = Math.min((t - o) / 26, this.length),
                            a = 67108863 ^ 67108863 >>> o << o,
                            u = r;
                        if (i -= s, i = Math.max(0, i), u) {
                            for (var h = 0; h < s; h++) u.words[h] = this.words[h];
                            u.length = s
                        }
                        if (0 === s);
                        else if (this.length > s)
                            for (this.length -= s, h = 0; h < this.length; h++) this.words[h] = this.words[h + s];
                        else this.words[0] = 0, this.length = 1;
                        var l = 0;
                        for (h = this.length - 1; h >= 0 && (0 !== l || h >= i); h--) {
                            var f = 0 | this.words[h];
                            this.words[h] = l << 26 - o | f >>> o, l = f & a
                        }
                        return u && 0 !== l && (u.words[u.length++] = l), 0 === this.length && (this.words[0] = 0, this.length = 1), this.strip()
                    }, o.prototype.ishrn = function(t, e, r) {
                        return n(0 === this.negative), this.iushrn(t, e, r)
                    }, o.prototype.shln = function(t) {
                        return this.clone().ishln(t)
                    }, o.prototype.ushln = function(t) {
                        return this.clone().iushln(t)
                    }, o.prototype.shrn = function(t) {
                        return this.clone().ishrn(t)
                    }, o.prototype.ushrn = function(t) {
                        return this.clone().iushrn(t)
                    }, o.prototype.testn = function(t) {
                        n("number" === typeof t && t >= 0);
                        var e = t % 26,
                            r = (t - e) / 26,
                            i = 1 << e;
                        if (this.length <= r) return !1;
                        var o = this.words[r];
                        return !!(o & i)
                    }, o.prototype.imaskn = function(t) {
                        n("number" === typeof t && t >= 0);
                        var e = t % 26,
                            r = (t - e) / 26;
                        if (n(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r) return this;
                        if (0 !== e && r++, this.length = Math.min(r, this.length), 0 !== e) {
                            var i = 67108863 ^ 67108863 >>> e << e;
                            this.words[this.length - 1] &= i
                        }
                        return this.strip()
                    }, o.prototype.maskn = function(t) {
                        return this.clone().imaskn(t)
                    }, o.prototype.iaddn = function(t) {
                        return n("number" === typeof t), n(t < 67108864), t < 0 ? this.isubn(-t) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) < t ? (this.words[0] = t - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(t), this.negative = 1, this) : this._iaddn(t)
                    }, o.prototype._iaddn = function(t) {
                        this.words[0] += t;
                        for (var e = 0; e < this.length && this.words[e] >= 67108864; e++) this.words[e] -= 67108864, e === this.length - 1 ? this.words[e + 1] = 1 : this.words[e + 1]++;
                        return this.length = Math.max(this.length, e + 1), this
                    }, o.prototype.isubn = function(t) {
                        if (n("number" === typeof t), n(t < 67108864), t < 0) return this.iaddn(-t);
                        if (0 !== this.negative) return this.negative = 0, this.iaddn(t), this.negative = 1, this;
                        if (this.words[0] -= t, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
                        else
                            for (var e = 0; e < this.length && this.words[e] < 0; e++) this.words[e] += 67108864, this.words[e + 1] -= 1;
                        return this.strip()
                    }, o.prototype.addn = function(t) {
                        return this.clone().iaddn(t)
                    }, o.prototype.subn = function(t) {
                        return this.clone().isubn(t)
                    }, o.prototype.iabs = function() {
                        return this.negative = 0, this
                    }, o.prototype.abs = function() {
                        return this.clone().iabs()
                    }, o.prototype._ishlnsubmul = function(t, e, r) {
                        var i, o, s = t.length + r;
                        this._expand(s);
                        var a = 0;
                        for (i = 0; i < t.length; i++) {
                            o = (0 | this.words[i + r]) + a;
                            var u = (0 | t.words[i]) * e;
                            o -= 67108863 & u, a = (o >> 26) - (u / 67108864 | 0), this.words[i + r] = 67108863 & o
                        }
                        for (; i < this.length - r; i++) o = (0 | this.words[i + r]) + a, a = o >> 26, this.words[i + r] = 67108863 & o;
                        if (0 === a) return this.strip();
                        for (n(-1 === a), a = 0, i = 0; i < this.length; i++) o = -(0 | this.words[i]) + a, a = o >> 26, this.words[i] = 67108863 & o;
                        return this.negative = 1, this.strip()
                    }, o.prototype._wordDiv = function(t, e) {
                        var r = this.length - t.length,
                            n = this.clone(),
                            i = t,
                            s = 0 | i.words[i.length - 1],
                            a = this._countBits(s);
                        r = 26 - a, 0 !== r && (i = i.ushln(r), n.iushln(r), s = 0 | i.words[i.length - 1]);
                        var u, h = n.length - i.length;
                        if ("mod" !== e) {
                            u = new o(null), u.length = h + 1, u.words = new Array(u.length);
                            for (var l = 0; l < u.length; l++) u.words[l] = 0
                        }
                        var f = n.clone()._ishlnsubmul(i, 1, h);
                        0 === f.negative && (n = f, u && (u.words[h] = 1));
                        for (var c = h - 1; c >= 0; c--) {
                            var d = 67108864 * (0 | n.words[i.length + c]) + (0 | n.words[i.length + c - 1]);
                            d = Math.min(d / s | 0, 67108863), n._ishlnsubmul(i, d, c);
                            while (0 !== n.negative) d--, n.negative = 0, n._ishlnsubmul(i, 1, c), n.isZero() || (n.negative ^= 1);
                            u && (u.words[c] = d)
                        }
                        return u && u.strip(), n.strip(), "div" !== e && 0 !== r && n.iushrn(r), {
                            div: u || null,
                            mod: n
                        }
                    }, o.prototype.divmod = function(t, e, r) {
                        return n(!t.isZero()), this.isZero() ? {
                            div: new o(0),
                            mod: new o(0)
                        } : 0 !== this.negative && 0 === t.negative ? (a = this.neg().divmod(t, e), "mod" !== e && (i = a.div.neg()), "div" !== e && (s = a.mod.neg(), r && 0 !== s.negative && s.iadd(t)), {
                            div: i,
                            mod: s
                        }) : 0 === this.negative && 0 !== t.negative ? (a = this.divmod(t.neg(), e), "mod" !== e && (i = a.div.neg()), {
                            div: i,
                            mod: a.mod
                        }) : 0 !== (this.negative & t.negative) ? (a = this.neg().divmod(t.neg(), e), "div" !== e && (s = a.mod.neg(), r && 0 !== s.negative && s.isub(t)), {
                            div: a.div,
                            mod: s
                        }) : t.length > this.length || this.cmp(t) < 0 ? {
                            div: new o(0),
                            mod: this
                        } : 1 === t.length ? "div" === e ? {
                            div: this.divn(t.words[0]),
                            mod: null
                        } : "mod" === e ? {
                            div: null,
                            mod: new o(this.modn(t.words[0]))
                        } : {
                            div: this.divn(t.words[0]),
                            mod: new o(this.modn(t.words[0]))
                        } : this._wordDiv(t, e);
                        var i, s, a
                    }, o.prototype.div = function(t) {
                        return this.divmod(t, "div", !1).div
                    }, o.prototype.mod = function(t) {
                        return this.divmod(t, "mod", !1).mod
                    }, o.prototype.umod = function(t) {
                        return this.divmod(t, "mod", !0).mod
                    }, o.prototype.divRound = function(t) {
                        var e = this.divmod(t);
                        if (e.mod.isZero()) return e.div;
                        var r = 0 !== e.div.negative ? e.mod.isub(t) : e.mod,
                            n = t.ushrn(1),
                            i = t.andln(1),
                            o = r.cmp(n);
                        return o < 0 || 1 === i && 0 === o ? e.div : 0 !== e.div.negative ? e.div.isubn(1) : e.div.iaddn(1)
                    }, o.prototype.modn = function(t) {
                        n(t <= 67108863);
                        for (var e = (1 << 26) % t, r = 0, i = this.length - 1; i >= 0; i--) r = (e * r + (0 | this.words[i])) % t;
                        return r
                    }, o.prototype.idivn = function(t) {
                        n(t <= 67108863);
                        for (var e = 0, r = this.length - 1; r >= 0; r--) {
                            var i = (0 | this.words[r]) + 67108864 * e;
                            this.words[r] = i / t | 0, e = i % t
                        }
                        return this.strip()
                    }, o.prototype.divn = function(t) {
                        return this.clone().idivn(t)
                    }, o.prototype.egcd = function(t) {
                        n(0 === t.negative), n(!t.isZero());
                        var e = this,
                            r = t.clone();
                        e = 0 !== e.negative ? e.umod(t) : e.clone();
                        var i = new o(1),
                            s = new o(0),
                            a = new o(0),
                            u = new o(1),
                            h = 0;
                        while (e.isEven() && r.isEven()) e.iushrn(1), r.iushrn(1), ++h;
                        var l = r.clone(),
                            f = e.clone();
                        while (!e.isZero()) {
                            for (var c = 0, d = 1; 0 === (e.words[0] & d) && c < 26; ++c, d <<= 1);
                            if (c > 0) {
                                e.iushrn(c);
                                while (c-- > 0)(i.isOdd() || s.isOdd()) && (i.iadd(l), s.isub(f)), i.iushrn(1), s.iushrn(1)
                            }
                            for (var m = 0, p = 1; 0 === (r.words[0] & p) && m < 26; ++m, p <<= 1);
                            if (m > 0) {
                                r.iushrn(m);
                                while (m-- > 0)(a.isOdd() || u.isOdd()) && (a.iadd(l), u.isub(f)), a.iushrn(1), u.iushrn(1)
                            }
                            e.cmp(r) >= 0 ? (e.isub(r), i.isub(a), s.isub(u)) : (r.isub(e), a.isub(i), u.isub(s))
                        }
                        return {
                            a: a,
                            b: u,
                            gcd: r.iushln(h)
                        }
                    }, o.prototype._invmp = function(t) {
                        n(0 === t.negative), n(!t.isZero());
                        var e = this,
                            r = t.clone();
                        e = 0 !== e.negative ? e.umod(t) : e.clone();
                        var i, s = new o(1),
                            a = new o(0),
                            u = r.clone();
                        while (e.cmpn(1) > 0 && r.cmpn(1) > 0) {
                            for (var h = 0, l = 1; 0 === (e.words[0] & l) && h < 26; ++h, l <<= 1);
                            if (h > 0) {
                                e.iushrn(h);
                                while (h-- > 0) s.isOdd() && s.iadd(u), s.iushrn(1)
                            }
                            for (var f = 0, c = 1; 0 === (r.words[0] & c) && f < 26; ++f, c <<= 1);
                            if (f > 0) {
                                r.iushrn(f);
                                while (f-- > 0) a.isOdd() && a.iadd(u), a.iushrn(1)
                            }
                            e.cmp(r) >= 0 ? (e.isub(r), s.isub(a)) : (r.isub(e), a.isub(s))
                        }
                        return i = 0 === e.cmpn(1) ? s : a, i.cmpn(0) < 0 && i.iadd(t), i
                    }, o.prototype.gcd = function(t) {
                        if (this.isZero()) return t.abs();
                        if (t.isZero()) return this.abs();
                        var e = this.clone(),
                            r = t.clone();
                        e.negative = 0, r.negative = 0;
                        for (var n = 0; e.isEven() && r.isEven(); n++) e.iushrn(1), r.iushrn(1);
                        do {
                            while (e.isEven()) e.iushrn(1);
                            while (r.isEven()) r.iushrn(1);
                            var i = e.cmp(r);
                            if (i < 0) {
                                var o = e;
                                e = r, r = o
                            } else if (0 === i || 0 === r.cmpn(1)) break;
                            e.isub(r)
                        } while (1);
                        return r.iushln(n)
                    }, o.prototype.invm = function(t) {
                        return this.egcd(t).a.umod(t)
                    }, o.prototype.isEven = function() {
                        return 0 === (1 & this.words[0])
                    }, o.prototype.isOdd = function() {
                        return 1 === (1 & this.words[0])
                    }, o.prototype.andln = function(t) {
                        return this.words[0] & t
                    }, o.prototype.bincn = function(t) {
                        n("number" === typeof t);
                        var e = t % 26,
                            r = (t - e) / 26,
                            i = 1 << e;
                        if (this.length <= r) return this._expand(r + 1), this.words[r] |= i, this;
                        for (var o = i, s = r; 0 !== o && s < this.length; s++) {
                            var a = 0 | this.words[s];
                            a += o, o = a >>> 26, a &= 67108863, this.words[s] = a
                        }
                        return 0 !== o && (this.words[s] = o, this.length++), this
                    }, o.prototype.isZero = function() {
                        return 1 === this.length && 0 === this.words[0]
                    }, o.prototype.cmpn = function(t) {
                        var e, r = t < 0;
                        if (0 !== this.negative && !r) return -1;
                        if (0 === this.negative && r) return 1;
                        if (this.strip(), this.length > 1) e = 1;
                        else {
                            r && (t = -t), n(t <= 67108863, "Number is too big");
                            var i = 0 | this.words[0];
                            e = i === t ? 0 : i < t ? -1 : 1
                        }
                        return 0 !== this.negative ? 0 | -e : e
                    }, o.prototype.cmp = function(t) {
                        if (0 !== this.negative && 0 === t.negative) return -1;
                        if (0 === this.negative && 0 !== t.negative) return 1;
                        var e = this.ucmp(t);
                        return 0 !== this.negative ? 0 | -e : e
                    }, o.prototype.ucmp = function(t) {
                        if (this.length > t.length) return 1;
                        if (this.length < t.length) return -1;
                        for (var e = 0, r = this.length - 1; r >= 0; r--) {
                            var n = 0 | this.words[r],
                                i = 0 | t.words[r];
                            if (n !== i) {
                                n < i ? e = -1 : n > i && (e = 1);
                                break
                            }
                        }
                        return e
                    }, o.prototype.gtn = function(t) {
                        return 1 === this.cmpn(t)
                    }, o.prototype.gt = function(t) {
                        return 1 === this.cmp(t)
                    }, o.prototype.gten = function(t) {
                        return this.cmpn(t) >= 0
                    }, o.prototype.gte = function(t) {
                        return this.cmp(t) >= 0
                    }, o.prototype.ltn = function(t) {
                        return -1 === this.cmpn(t)
                    }, o.prototype.lt = function(t) {
                        return -1 === this.cmp(t)
                    }, o.prototype.lten = function(t) {
                        return this.cmpn(t) <= 0
                    }, o.prototype.lte = function(t) {
                        return this.cmp(t) <= 0
                    }, o.prototype.eqn = function(t) {
                        return 0 === this.cmpn(t)
                    }, o.prototype.eq = function(t) {
                        return 0 === this.cmp(t)
                    }, o.red = function(t) {
                        return new _(t)
                    }, o.prototype.toRed = function(t) {
                        return n(!this.red, "Already a number in reduction context"), n(0 === this.negative, "red works only with positives"), t.convertTo(this)._forceRed(t)
                    }, o.prototype.fromRed = function() {
                        return n(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this)
                    }, o.prototype._forceRed = function(t) {
                        return this.red = t, this
                    }, o.prototype.forceRed = function(t) {
                        return n(!this.red, "Already a number in reduction context"), this._forceRed(t)
                    }, o.prototype.redAdd = function(t) {
                        return n(this.red, "redAdd works only with red numbers"), this.red.add(this, t)
                    }, o.prototype.redIAdd = function(t) {
                        return n(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t)
                    }, o.prototype.redSub = function(t) {
                        return n(this.red, "redSub works only with red numbers"), this.red.sub(this, t)
                    }, o.prototype.redISub = function(t) {
                        return n(this.red, "redISub works only with red numbers"), this.red.isub(this, t)
                    }, o.prototype.redShl = function(t) {
                        return n(this.red, "redShl works only with red numbers"), this.red.shl(this, t)
                    }, o.prototype.redMul = function(t) {
                        return n(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.mul(this, t)
                    }, o.prototype.redIMul = function(t) {
                        return n(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.imul(this, t)
                    }, o.prototype.redSqr = function() {
                        return n(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this)
                    }, o.prototype.redISqr = function() {
                        return n(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this)
                    }, o.prototype.redSqrt = function() {
                        return n(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this)
                    }, o.prototype.redInvm = function() {
                        return n(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this)
                    }, o.prototype.redNeg = function() {
                        return n(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this)
                    }, o.prototype.redPow = function(t) {
                        return n(this.red && !t.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t)
                    };
                    var w = {
                        k256: null,
                        p224: null,
                        p192: null,
                        p25519: null
                    };

                    function b(t, e) {
                        this.name = t, this.p = new o(e, 16), this.n = this.p.bitLength(), this.k = new o(1).iushln(this.n).isub(this.p), this.tmp = this._tmp()
                    }

                    function M() {
                        b.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")
                    }

                    function E() {
                        b.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")
                    }

                    function N() {
                        b.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")
                    }

                    function A() {
                        b.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")
                    }

                    function _(t) {
                        if ("string" === typeof t) {
                            var e = o._prime(t);
                            this.m = e.p, this.prime = e
                        } else n(t.gtn(1), "modulus must be greater than 1"), this.m = t, this.prime = null
                    }

                    function S(t) {
                        _.call(this, t), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new o(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv)
                    }
                    b.prototype._tmp = function() {
                        var t = new o(null);
                        return t.words = new Array(Math.ceil(this.n / 13)), t
                    }, b.prototype.ireduce = function(t) {
                        var e, r = t;
                        do {
                            this.split(r, this.tmp), r = this.imulK(r), r = r.iadd(this.tmp), e = r.bitLength()
                        } while (e > this.n);
                        var n = e < this.n ? -1 : r.ucmp(this.p);
                        return 0 === n ? (r.words[0] = 0, r.length = 1) : n > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r
                    }, b.prototype.split = function(t, e) {
                        t.iushrn(this.n, 0, e)
                    }, b.prototype.imulK = function(t) {
                        return t.imul(this.k)
                    }, i(M, b), M.prototype.split = function(t, e) {
                        for (var r = 4194303, n = Math.min(t.length, 9), i = 0; i < n; i++) e.words[i] = t.words[i];
                        if (e.length = n, t.length <= 9) return t.words[0] = 0, void(t.length = 1);
                        var o = t.words[9];
                        for (e.words[e.length++] = o & r, i = 10; i < t.length; i++) {
                            var s = 0 | t.words[i];
                            t.words[i - 10] = (s & r) << 4 | o >>> 22, o = s
                        }
                        o >>>= 22, t.words[i - 10] = o, 0 === o && t.length > 10 ? t.length -= 10 : t.length -= 9
                    }, M.prototype.imulK = function(t) {
                        t.words[t.length] = 0, t.words[t.length + 1] = 0, t.length += 2;
                        for (var e = 0, r = 0; r < t.length; r++) {
                            var n = 0 | t.words[r];
                            e += 977 * n, t.words[r] = 67108863 & e, e = 64 * n + (e / 67108864 | 0)
                        }
                        return 0 === t.words[t.length - 1] && (t.length--, 0 === t.words[t.length - 1] && t.length--), t
                    }, i(E, b), i(N, b), i(A, b), A.prototype.imulK = function(t) {
                        for (var e = 0, r = 0; r < t.length; r++) {
                            var n = 19 * (0 | t.words[r]) + e,
                                i = 67108863 & n;
                            n >>>= 26, t.words[r] = i, e = n
                        }
                        return 0 !== e && (t.words[t.length++] = e), t
                    }, o._prime = function(t) {
                        if (w[t]) return w[t];
                        var e;
                        if ("k256" === t) e = new M;
                        else if ("p224" === t) e = new E;
                        else if ("p192" === t) e = new N;
                        else {
                            if ("p25519" !== t) throw new Error("Unknown prime " + t);
                            e = new A
                        }
                        return w[t] = e, e
                    }, _.prototype._verify1 = function(t) {
                        n(0 === t.negative, "red works only with positives"), n(t.red, "red works only with red numbers")
                    }, _.prototype._verify2 = function(t, e) {
                        n(0 === (t.negative | e.negative), "red works only with positives"), n(t.red && t.red === e.red, "red works only with red numbers")
                    }, _.prototype.imod = function(t) {
                        return this.prime ? this.prime.ireduce(t)._forceRed(this) : t.umod(this.m)._forceRed(this)
                    }, _.prototype.neg = function(t) {
                        return t.isZero() ? t.clone() : this.m.sub(t)._forceRed(this)
                    }, _.prototype.add = function(t, e) {
                        this._verify2(t, e);
                        var r = t.add(e);
                        return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this)
                    }, _.prototype.iadd = function(t, e) {
                        this._verify2(t, e);
                        var r = t.iadd(e);
                        return r.cmp(this.m) >= 0 && r.isub(this.m), r
                    }, _.prototype.sub = function(t, e) {
                        this._verify2(t, e);
                        var r = t.sub(e);
                        return r.cmpn(0) < 0 && r.iadd(this.m), r._forceRed(this)
                    }, _.prototype.isub = function(t, e) {
                        this._verify2(t, e);
                        var r = t.isub(e);
                        return r.cmpn(0) < 0 && r.iadd(this.m), r
                    }, _.prototype.shl = function(t, e) {
                        return this._verify1(t), this.imod(t.ushln(e))
                    }, _.prototype.imul = function(t, e) {
                        return this._verify2(t, e), this.imod(t.imul(e))
                    }, _.prototype.mul = function(t, e) {
                        return this._verify2(t, e), this.imod(t.mul(e))
                    }, _.prototype.isqr = function(t) {
                        return this.imul(t, t.clone())
                    }, _.prototype.sqr = function(t) {
                        return this.mul(t, t)
                    }, _.prototype.sqrt = function(t) {
                        if (t.isZero()) return t.clone();
                        var e = this.m.andln(3);
                        if (n(e % 2 === 1), 3 === e) {
                            var r = this.m.add(new o(1)).iushrn(2);
                            return this.pow(t, r)
                        }
                        var i = this.m.subn(1),
                            s = 0;
                        while (!i.isZero() && 0 === i.andln(1)) s++, i.iushrn(1);
                        n(!i.isZero());
                        var a = new o(1).toRed(this),
                            u = a.redNeg(),
                            h = this.m.subn(1).iushrn(1),
                            l = this.m.bitLength();
                        l = new o(2 * l * l).toRed(this);
                        while (0 !== this.pow(l, h).cmp(u)) l.redIAdd(u);
                        var f = this.pow(l, i),
                            c = this.pow(t, i.addn(1).iushrn(1)),
                            d = this.pow(t, i),
                            m = s;
                        while (0 !== d.cmp(a)) {
                            for (var p = d, g = 0; 0 !== p.cmp(a); g++) p = p.redSqr();
                            n(g < m);
                            var v = this.pow(f, new o(1).iushln(m - g - 1));
                            c = c.redMul(v), f = v.redSqr(), d = d.redMul(f), m = g
                        }
                        return c
                    }, _.prototype.invm = function(t) {
                        var e = t._invmp(this.m);
                        return 0 !== e.negative ? (e.negative = 0, this.imod(e).redNeg()) : this.imod(e)
                    }, _.prototype.pow = function(t, e) {
                        if (e.isZero()) return new o(1).toRed(this);
                        if (0 === e.cmpn(1)) return t.clone();
                        var r = 4,
                            n = new Array(1 << r);
                        n[0] = new o(1).toRed(this), n[1] = t;
                        for (var i = 2; i < n.length; i++) n[i] = this.mul(n[i - 1], t);
                        var s = n[0],
                            a = 0,
                            u = 0,
                            h = e.bitLength() % 26;
                        for (0 === h && (h = 26), i = e.length - 1; i >= 0; i--) {
                            for (var l = e.words[i], f = h - 1; f >= 0; f--) {
                                var c = l >> f & 1;
                                s !== n[0] && (s = this.sqr(s)), 0 !== c || 0 !== a ? (a <<= 1, a |= c, u++, (u === r || 0 === i && 0 === f) && (s = this.mul(s, n[a]), u = 0, a = 0)) : u = 0
                            }
                            h = 26
                        }
                        return s
                    }, _.prototype.convertTo = function(t) {
                        var e = t.umod(this.m);
                        return e === t ? e.clone() : e
                    }, _.prototype.convertFrom = function(t) {
                        var e = t.clone();
                        return e.red = null, e
                    }, o.mont = function(t) {
                        return new S(t)
                    }, i(S, _), S.prototype.convertTo = function(t) {
                        return this.imod(t.ushln(this.shift))
                    }, S.prototype.convertFrom = function(t) {
                        var e = this.imod(t.mul(this.rinv));
                        return e.red = null, e
                    }, S.prototype.imul = function(t, e) {
                        if (t.isZero() || e.isZero()) return t.words[0] = 0, t.length = 1, t;
                        var r = t.imul(e),
                            n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                            i = r.isub(n).iushrn(this.shift),
                            o = i;
                        return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this)
                    }, S.prototype.mul = function(t, e) {
                        if (t.isZero() || e.isZero()) return new o(0)._forceRed(this);
                        var r = t.mul(e),
                            n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                            i = r.isub(n).iushrn(this.shift),
                            s = i;
                        return i.cmp(this.m) >= 0 ? s = i.isub(this.m) : i.cmpn(0) < 0 && (s = i.iadd(this.m)), s._forceRed(this)
                    }, S.prototype.invm = function(t) {
                        var e = this.imod(t._invmp(this.m).mul(this.r2));
                        return e._forceRed(this)
                    }
                })(t, this)
            }).call(this, r("62e4")(t))
        },
        bd9b: function(t, e, r) {
            "use strict";
            r.d(e, "a", (function() {
                return G
            }));
            var n = r("1c55"),
                i = r.n(n);
            const o = "logger/5.6.0";
            let s = !1,
                a = !1;
            const u = {
                debug: 1,
                default: 2,
                info: 2,
                warning: 3,
                error: 4,
                off: 5
            };
            let h = u["default"],
                l = null;

            function f() {
                try {
                    const t = [];
                    if (["NFD", "NFC", "NFKD", "NFKC"].forEach(e => {
                            try {
                                if ("test" !== "test".normalize(e)) throw new Error("bad normalize")
                            } catch (r) {
                                t.push(e)
                            }
                        }), t.length) throw new Error("missing " + t.join(", "));
                    if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) throw new Error("broken implementation")
                } catch (t) {
                    return t.message
                }
                return null
            }
            const c = f();
            var d, m;
            (function(t) {
                t["DEBUG"] = "DEBUG", t["INFO"] = "INFO", t["WARNING"] = "WARNING", t["ERROR"] = "ERROR", t["OFF"] = "OFF"
            })(d || (d = {})),
            function(t) {
                t["UNKNOWN_ERROR"] = "UNKNOWN_ERROR", t["NOT_IMPLEMENTED"] = "NOT_IMPLEMENTED", t["UNSUPPORTED_OPERATION"] = "UNSUPPORTED_OPERATION", t["NETWORK_ERROR"] = "NETWORK_ERROR", t["SERVER_ERROR"] = "SERVER_ERROR", t["TIMEOUT"] = "TIMEOUT", t["BUFFER_OVERRUN"] = "BUFFER_OVERRUN", t["NUMERIC_FAULT"] = "NUMERIC_FAULT", t["MISSING_NEW"] = "MISSING_NEW", t["INVALID_ARGUMENT"] = "INVALID_ARGUMENT", t["MISSING_ARGUMENT"] = "MISSING_ARGUMENT", t["UNEXPECTED_ARGUMENT"] = "UNEXPECTED_ARGUMENT", t["CALL_EXCEPTION"] = "CALL_EXCEPTION", t["INSUFFICIENT_FUNDS"] = "INSUFFICIENT_FUNDS", t["NONCE_EXPIRED"] = "NONCE_EXPIRED", t["REPLACEMENT_UNDERPRICED"] = "REPLACEMENT_UNDERPRICED", t["UNPREDICTABLE_GAS_LIMIT"] = "UNPREDICTABLE_GAS_LIMIT", t["TRANSACTION_REPLACED"] = "TRANSACTION_REPLACED"
            }(m || (m = {}));
            const p = "0123456789abcdef";
            class g {
                constructor(t) {
                    Object.defineProperty(this, "version", {
                        enumerable: !0,
                        value: t,
                        writable: !1
                    })
                }
                _log(t, e) {
                    const r = t.toLowerCase();
                    null == u[r] && this.throwArgumentError("invalid log level name", "logLevel", t), h > u[r] || console.log.apply(console, e)
                }
                debug(...t) {
                    this._log(g.levels.DEBUG, t)
                }
                info(...t) {
                    this._log(g.levels.INFO, t)
                }
                warn(...t) {
                    this._log(g.levels.WARNING, t)
                }
                makeError(t, e, r) {
                    if (a) return this.makeError("censored error", e, {});
                    e || (e = g.errors.UNKNOWN_ERROR), r || (r = {});
                    const n = [];
                    Object.keys(r).forEach(t => {
                        const e = r[t];
                        try {
                            if (e instanceof Uint8Array) {
                                let r = "";
                                for (let t = 0; t < e.length; t++) r += p[e[t] >> 4], r += p[15 & e[t]];
                                n.push(t + "=Uint8Array(0x" + r + ")")
                            } else n.push(t + "=" + JSON.stringify(e))
                        } catch (s) {
                            n.push(t + "=" + JSON.stringify(r[t].toString()))
                        }
                    }), n.push("code=" + e), n.push("version=" + this.version);
                    const i = t;
                    let o = "";
                    switch (e) {
                        case m.NUMERIC_FAULT:
                            {
                                o = "NUMERIC_FAULT";
                                const e = t;
                                switch (e) {
                                    case "overflow":
                                    case "underflow":
                                    case "division-by-zero":
                                        o += "-" + e;
                                        break;
                                    case "negative-power":
                                    case "negative-width":
                                        o += "-unsupported";
                                        break;
                                    case "unbound-bitwise-result":
                                        o += "-unbound-result";
                                        break
                                }
                                break
                            }
                        case m.CALL_EXCEPTION:
                        case m.INSUFFICIENT_FUNDS:
                        case m.MISSING_NEW:
                        case m.NONCE_EXPIRED:
                        case m.REPLACEMENT_UNDERPRICED:
                        case m.TRANSACTION_REPLACED:
                        case m.UNPREDICTABLE_GAS_LIMIT:
                            o = e;
                            break
                    }
                    o && (t += " [ See: https://links.ethers.org/v5-errors-" + o + " ]"), n.length && (t += " (" + n.join(", ") + ")");
                    const s = new Error(t);
                    return s.reason = i, s.code = e, Object.keys(r).forEach((function(t) {
                        s[t] = r[t]
                    })), s
                }
                throwError(t, e, r) {
                    throw this.makeError(t, e, r)
                }
                throwArgumentError(t, e, r) {
                    return this.throwError(t, g.errors.INVALID_ARGUMENT, {
                        argument: e,
                        value: r
                    })
                }
                assert(t, e, r, n) {
                    t || this.throwError(e, r, n)
                }
                assertArgument(t, e, r, n) {
                    t || this.throwArgumentError(e, r, n)
                }
                checkNormalize(t) {
                    null == t && (t = "platform missing String.prototype.normalize"), c && this.throwError("platform missing String.prototype.normalize", g.errors.UNSUPPORTED_OPERATION, {
                        operation: "String.prototype.normalize",
                        form: c
                    })
                }
                checkSafeUint53(t, e) {
                    "number" === typeof t && (null == e && (e = "value not safe"), (t < 0 || t >= 9007199254740991) && this.throwError(e, g.errors.NUMERIC_FAULT, {
                        operation: "checkSafeInteger",
                        fault: "out-of-safe-range",
                        value: t
                    }), t % 1 && this.throwError(e, g.errors.NUMERIC_FAULT, {
                        operation: "checkSafeInteger",
                        fault: "non-integer",
                        value: t
                    }))
                }
                checkArgumentCount(t, e, r) {
                    r = r ? ": " + r : "", t < e && this.throwError("missing argument" + r, g.errors.MISSING_ARGUMENT, {
                        count: t,
                        expectedCount: e
                    }), t > e && this.throwError("too many arguments" + r, g.errors.UNEXPECTED_ARGUMENT, {
                        count: t,
                        expectedCount: e
                    })
                }
                checkNew(t, e) {
                    t !== Object && null != t || this.throwError("missing new", g.errors.MISSING_NEW, {
                        name: e.name
                    })
                }
                checkAbstract(t, e) {
                    t === e ? this.throwError("cannot instantiate abstract class " + JSON.stringify(e.name) + " directly; use a sub-class", g.errors.UNSUPPORTED_OPERATION, {
                        name: t.name,
                        operation: "new"
                    }) : t !== Object && null != t || this.throwError("missing new", g.errors.MISSING_NEW, {
                        name: e.name
                    })
                }
                static globalLogger() {
                    return l || (l = new g(o)), l
                }
                static setCensorship(t, e) {
                    if (!t && e && this.globalLogger().throwError("cannot permanently disable censorship", g.errors.UNSUPPORTED_OPERATION, {
                            operation: "setCensorship"
                        }), s) {
                        if (!t) return;
                        this.globalLogger().throwError("error censorship permanent", g.errors.UNSUPPORTED_OPERATION, {
                            operation: "setCensorship"
                        })
                    }
                    a = !!t, s = !!e
                }
                static setLogLevel(t) {
                    const e = u[t.toLowerCase()];
                    null != e ? h = e : g.globalLogger().warn("invalid log level - " + t)
                }
                static from(t) {
                    return new g(t)
                }
            }
            g.errors = m, g.levels = d;
            const v = "bytes/5.6.1",
                y = new g(v);

            function w(t) {
                return !!t.toHexString
            }

            function b(t) {
                return t.slice || (t.slice = function() {
                    const e = Array.prototype.slice.call(arguments);
                    return b(new Uint8Array(Array.prototype.slice.apply(t, e)))
                }), t
            }

            function M(t) {
                return "number" === typeof t && t == t && t % 1 === 0
            }

            function E(t) {
                if (null == t) return !1;
                if (t.constructor === Uint8Array) return !0;
                if ("string" === typeof t) return !1;
                if (!M(t.length) || t.length < 0) return !1;
                for (let e = 0; e < t.length; e++) {
                    const r = t[e];
                    if (!M(r) || r < 0 || r >= 256) return !1
                }
                return !0
            }

            function N(t, e) {
                if (e || (e = {}), "number" === typeof t) {
                    y.checkSafeUint53(t, "invalid arrayify value");
                    const e = [];
                    while (t) e.unshift(255 & t), t = parseInt(String(t / 256));
                    return 0 === e.length && e.push(0), b(new Uint8Array(e))
                }
                if (e.allowMissingPrefix && "string" === typeof t && "0x" !== t.substring(0, 2) && (t = "0x" + t), w(t) && (t = t.toHexString()), A(t)) {
                    let r = t.substring(2);
                    r.length % 2 && ("left" === e.hexPad ? r = "0" + r : "right" === e.hexPad ? r += "0" : y.throwArgumentError("hex data is odd-length", "value", t));
                    const n = [];
                    for (let t = 0; t < r.length; t += 2) n.push(parseInt(r.substring(t, t + 2), 16));
                    return b(new Uint8Array(n))
                }
                return E(t) ? b(new Uint8Array(t)) : y.throwArgumentError("invalid arrayify value", "value", t)
            }

            function A(t, e) {
                return !("string" !== typeof t || !t.match(/^0x[0-9A-Fa-f]*$/)) && (!e || t.length === 2 + 2 * e)
            }

            function _(t) {
                return "0x" + i.a.keccak_256(N(t))
            }
            const S = "strings/5.6.0",
                I = new g(S);
            var R, P;

            function k(t, e, r, n, i) {
                return I.throwArgumentError(`invalid codepoint at offset ${e}; ${t}`, "bytes", r)
            }

            function x(t, e, r, n, i) {
                if (t === P.BAD_PREFIX || t === P.UNEXPECTED_CONTINUE) {
                    let t = 0;
                    for (let n = e + 1; n < r.length; n++) {
                        if (r[n] >> 6 !== 2) break;
                        t++
                    }
                    return t
                }
                return t === P.OVERRUN ? r.length - e - 1 : 0
            }

            function T(t, e, r, n, i) {
                return t === P.OVERLONG ? (n.push(i), 0) : (n.push(65533), x(t, e, r, n, i))
            }(function(t) {
                t["current"] = "", t["NFC"] = "NFC", t["NFD"] = "NFD", t["NFKC"] = "NFKC", t["NFKD"] = "NFKD"
            })(R || (R = {})),
            function(t) {
                t["UNEXPECTED_CONTINUE"] = "unexpected continuation byte", t["BAD_PREFIX"] = "bad codepoint prefix", t["OVERRUN"] = "string overrun", t["MISSING_CONTINUE"] = "missing continuation byte", t["OUT_OF_RANGE"] = "out of UTF-8 range", t["UTF16_SURROGATE"] = "UTF-16 surrogate", t["OVERLONG"] = "overlong representation"
            }(P || (P = {}));
            Object.freeze({
                error: k,
                ignore: x,
                replace: T
            });

            function O(t, e = R.current) {
                e != R.current && (I.checkNormalize(), t = t.normalize(e));
                let r = [];
                for (let n = 0; n < t.length; n++) {
                    const e = t.charCodeAt(n);
                    if (e < 128) r.push(e);
                    else if (e < 2048) r.push(e >> 6 | 192), r.push(63 & e | 128);
                    else if (55296 == (64512 & e)) {
                        n++;
                        const i = t.charCodeAt(n);
                        if (n >= t.length || 56320 !== (64512 & i)) throw new Error("invalid utf-8 string");
                        const o = 65536 + ((1023 & e) << 10) + (1023 & i);
                        r.push(o >> 18 | 240), r.push(o >> 12 & 63 | 128), r.push(o >> 6 & 63 | 128), r.push(63 & o | 128)
                    } else r.push(e >> 12 | 224), r.push(e >> 6 & 63 | 128), r.push(63 & e | 128)
                }
                return N(r)
            }

            function C(t) {
                return _(O(t))
            }
            const U = "properties/5.6.0";
            new g(U);

            function F(t, e, r) {
                Object.defineProperty(t, e, {
                    enumerable: !0,
                    value: r,
                    writable: !1
                })
            }
            const B = "wordlists/5.6.0",
                L = !1,
                D = new g(B);
            class G {
                constructor(t) {
                    D.checkAbstract(new.target, G), F(this, "locale", t)
                }
                split(t) {
                    return t.toLowerCase().split(/ +/g)
                }
                join(t) {
                    return t.join(" ")
                }
                static check(t) {
                    const e = [];
                    for (let r = 0; r < 2048; r++) {
                        const n = t.getWord(r);
                        if (r !== t.getWordIndex(n)) return "0x";
                        e.push(n)
                    }
                    return C(e.join("\n") + "\n")
                }
                static register(t, e) {
                    if (e || (e = t.locale), L) try {
                        const r = window;
                        r._ethers && r._ethers.wordlists && (r._ethers.wordlists[e] || F(r._ethers.wordlists, e, t))
                    } catch (r) {}
                }
            }
        },
        c24b: function(t, e, r) {
            "use strict";
            (function(t) {
                r.d(e, "a", (function() {
                    return K
                }));
                var n = r("4121"),
                    i = r.n(n),
                    o = r("7d92"),
                    s = r.n(o);
                "undefined" !== typeof globalThis ? globalThis : "undefined" !== typeof window ? window : "undefined" !== typeof t || "undefined" !== typeof self && self;

                function a(t, e, r) {
                    return r = {
                        path: e,
                        exports: {},
                        require: function(t, e) {
                            return u(t, void 0 === e || null === e ? r.path : e)
                        }
                    }, t(r, r.exports), r.exports
                }

                function u() {
                    throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")
                }
                var h = l;

                function l(t, e) {
                    if (!t) throw new Error(e || "Assertion failed")
                }
                l.equal = function(t, e, r) {
                    if (t != e) throw new Error(r || "Assertion failed: " + t + " != " + e)
                };
                var f = a((function(t, e) {
                        var r = e;

                        function n(t, e) {
                            if (Array.isArray(t)) return t.slice();
                            if (!t) return [];
                            var r = [];
                            if ("string" !== typeof t) {
                                for (var n = 0; n < t.length; n++) r[n] = 0 | t[n];
                                return r
                            }
                            if ("hex" === e) {
                                t = t.replace(/[^a-z0-9]+/gi, ""), t.length % 2 !== 0 && (t = "0" + t);
                                for (n = 0; n < t.length; n += 2) r.push(parseInt(t[n] + t[n + 1], 16))
                            } else
                                for (n = 0; n < t.length; n++) {
                                    var i = t.charCodeAt(n),
                                        o = i >> 8,
                                        s = 255 & i;
                                    o ? r.push(o, s) : r.push(s)
                                }
                            return r
                        }

                        function i(t) {
                            return 1 === t.length ? "0" + t : t
                        }

                        function o(t) {
                            for (var e = "", r = 0; r < t.length; r++) e += i(t[r].toString(16));
                            return e
                        }
                        r.toArray = n, r.zero2 = i, r.toHex = o, r.encode = function(t, e) {
                            return "hex" === e ? o(t) : t
                        }
                    })),
                    c = a((function(t, e) {
                        var r = e;

                        function n(t, e, r) {
                            var n = new Array(Math.max(t.bitLength(), r) + 1);
                            n.fill(0);
                            for (var i = 1 << e + 1, o = t.clone(), s = 0; s < n.length; s++) {
                                var a, u = o.andln(i - 1);
                                o.isOdd() ? (a = u > (i >> 1) - 1 ? (i >> 1) - u : u, o.isubn(a)) : a = 0, n[s] = a, o.iushrn(1)
                            }
                            return n
                        }

                        function o(t, e) {
                            var r = [
                                [],
                                []
                            ];
                            t = t.clone(), e = e.clone();
                            var n, i = 0,
                                o = 0;
                            while (t.cmpn(-i) > 0 || e.cmpn(-o) > 0) {
                                var s, a, u = t.andln(3) + i & 3,
                                    h = e.andln(3) + o & 3;
                                3 === u && (u = -1), 3 === h && (h = -1), 0 === (1 & u) ? s = 0 : (n = t.andln(7) + i & 7, s = 3 !== n && 5 !== n || 2 !== h ? u : -u), r[0].push(s), 0 === (1 & h) ? a = 0 : (n = e.andln(7) + o & 7, a = 3 !== n && 5 !== n || 2 !== u ? h : -h), r[1].push(a), 2 * i === s + 1 && (i = 1 - i), 2 * o === a + 1 && (o = 1 - o), t.iushrn(1), e.iushrn(1)
                            }
                            return r
                        }

                        function s(t, e, r) {
                            var n = "_" + e;
                            t.prototype[e] = function() {
                                return void 0 !== this[n] ? this[n] : this[n] = r.call(this)
                            }
                        }

                        function a(t) {
                            return "string" === typeof t ? r.toArray(t, "hex") : t
                        }

                        function u(t) {
                            return new i.a(t, "hex", "le")
                        }
                        r.assert = h, r.toArray = f.toArray, r.zero2 = f.zero2, r.toHex = f.toHex, r.encode = f.encode, r.getNAF = n, r.getJSF = o, r.cachedProperty = s, r.parseBytes = a, r.intFromLE = u
                    })),
                    d = c.getNAF,
                    m = c.getJSF,
                    p = c.assert;

                function g(t, e) {
                    this.type = t, this.p = new i.a(e.p, 16), this.red = e.prime ? i.a.red(e.prime) : i.a.mont(this.p), this.zero = new i.a(0).toRed(this.red), this.one = new i.a(1).toRed(this.red), this.two = new i.a(2).toRed(this.red), this.n = e.n && new i.a(e.n, 16), this.g = e.g && this.pointFromJSON(e.g, e.gRed), this._wnafT1 = new Array(4), this._wnafT2 = new Array(4), this._wnafT3 = new Array(4), this._wnafT4 = new Array(4), this._bitLength = this.n ? this.n.bitLength() : 0;
                    var r = this.n && this.p.div(this.n);
                    !r || r.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = !0, this.redN = this.n.toRed(this.red))
                }
                var v = g;

                function y(t, e) {
                    this.curve = t, this.type = e, this.precomputed = null
                }
                g.prototype.point = function() {
                    throw new Error("Not implemented")
                }, g.prototype.validate = function() {
                    throw new Error("Not implemented")
                }, g.prototype._fixedNafMul = function(t, e) {
                    p(t.precomputed);
                    var r = t._getDoubles(),
                        n = d(e, 1, this._bitLength),
                        i = (1 << r.step + 1) - (r.step % 2 === 0 ? 2 : 1);
                    i /= 3;
                    var o, s, a = [];
                    for (o = 0; o < n.length; o += r.step) {
                        s = 0;
                        for (var u = o + r.step - 1; u >= o; u--) s = (s << 1) + n[u];
                        a.push(s)
                    }
                    for (var h = this.jpoint(null, null, null), l = this.jpoint(null, null, null), f = i; f > 0; f--) {
                        for (o = 0; o < a.length; o++) s = a[o], s === f ? l = l.mixedAdd(r.points[o]) : s === -f && (l = l.mixedAdd(r.points[o].neg()));
                        h = h.add(l)
                    }
                    return h.toP()
                }, g.prototype._wnafMul = function(t, e) {
                    var r = 4,
                        n = t._getNAFPoints(r);
                    r = n.wnd;
                    for (var i = n.points, o = d(e, r, this._bitLength), s = this.jpoint(null, null, null), a = o.length - 1; a >= 0; a--) {
                        for (var u = 0; a >= 0 && 0 === o[a]; a--) u++;
                        if (a >= 0 && u++, s = s.dblp(u), a < 0) break;
                        var h = o[a];
                        p(0 !== h), s = "affine" === t.type ? h > 0 ? s.mixedAdd(i[h - 1 >> 1]) : s.mixedAdd(i[-h - 1 >> 1].neg()) : h > 0 ? s.add(i[h - 1 >> 1]) : s.add(i[-h - 1 >> 1].neg())
                    }
                    return "affine" === t.type ? s.toP() : s
                }, g.prototype._wnafMulAdd = function(t, e, r, n, i) {
                    var o, s, a, u = this._wnafT1,
                        h = this._wnafT2,
                        l = this._wnafT3,
                        f = 0;
                    for (o = 0; o < n; o++) {
                        a = e[o];
                        var c = a._getNAFPoints(t);
                        u[o] = c.wnd, h[o] = c.points
                    }
                    for (o = n - 1; o >= 1; o -= 2) {
                        var p = o - 1,
                            g = o;
                        if (1 === u[p] && 1 === u[g]) {
                            var v = [e[p], null, null, e[g]];
                            0 === e[p].y.cmp(e[g].y) ? (v[1] = e[p].add(e[g]), v[2] = e[p].toJ().mixedAdd(e[g].neg())) : 0 === e[p].y.cmp(e[g].y.redNeg()) ? (v[1] = e[p].toJ().mixedAdd(e[g]), v[2] = e[p].add(e[g].neg())) : (v[1] = e[p].toJ().mixedAdd(e[g]), v[2] = e[p].toJ().mixedAdd(e[g].neg()));
                            var y = [-3, -1, -5, -7, 0, 7, 5, 1, 3],
                                w = m(r[p], r[g]);
                            for (f = Math.max(w[0].length, f), l[p] = new Array(f), l[g] = new Array(f), s = 0; s < f; s++) {
                                var b = 0 | w[0][s],
                                    M = 0 | w[1][s];
                                l[p][s] = y[3 * (b + 1) + (M + 1)], l[g][s] = 0, h[p] = v
                            }
                        } else l[p] = d(r[p], u[p], this._bitLength), l[g] = d(r[g], u[g], this._bitLength), f = Math.max(l[p].length, f), f = Math.max(l[g].length, f)
                    }
                    var E = this.jpoint(null, null, null),
                        N = this._wnafT4;
                    for (o = f; o >= 0; o--) {
                        var A = 0;
                        while (o >= 0) {
                            var _ = !0;
                            for (s = 0; s < n; s++) N[s] = 0 | l[s][o], 0 !== N[s] && (_ = !1);
                            if (!_) break;
                            A++, o--
                        }
                        if (o >= 0 && A++, E = E.dblp(A), o < 0) break;
                        for (s = 0; s < n; s++) {
                            var S = N[s];
                            0 !== S && (S > 0 ? a = h[s][S - 1 >> 1] : S < 0 && (a = h[s][-S - 1 >> 1].neg()), E = "affine" === a.type ? E.mixedAdd(a) : E.add(a))
                        }
                    }
                    for (o = 0; o < n; o++) h[o] = null;
                    return i ? E : E.toP()
                }, g.BasePoint = y, y.prototype.eq = function() {
                    throw new Error("Not implemented")
                }, y.prototype.validate = function() {
                    return this.curve.validate(this)
                }, g.prototype.decodePoint = function(t, e) {
                    t = c.toArray(t, e);
                    var r = this.p.byteLength();
                    if ((4 === t[0] || 6 === t[0] || 7 === t[0]) && t.length - 1 === 2 * r) {
                        6 === t[0] ? p(t[t.length - 1] % 2 === 0) : 7 === t[0] && p(t[t.length - 1] % 2 === 1);
                        var n = this.point(t.slice(1, 1 + r), t.slice(1 + r, 1 + 2 * r));
                        return n
                    }
                    if ((2 === t[0] || 3 === t[0]) && t.length - 1 === r) return this.pointFromX(t.slice(1, 1 + r), 3 === t[0]);
                    throw new Error("Unknown point format")
                }, y.prototype.encodeCompressed = function(t) {
                    return this.encode(t, !0)
                }, y.prototype._encode = function(t) {
                    var e = this.curve.p.byteLength(),
                        r = this.getX().toArray("be", e);
                    return t ? [this.getY().isEven() ? 2 : 3].concat(r) : [4].concat(r, this.getY().toArray("be", e))
                }, y.prototype.encode = function(t, e) {
                    return c.encode(this._encode(e), t)
                }, y.prototype.precompute = function(t) {
                    if (this.precomputed) return this;
                    var e = {
                        doubles: null,
                        naf: null,
                        beta: null
                    };
                    return e.naf = this._getNAFPoints(8), e.doubles = this._getDoubles(4, t), e.beta = this._getBeta(), this.precomputed = e, this
                }, y.prototype._hasDoubles = function(t) {
                    if (!this.precomputed) return !1;
                    var e = this.precomputed.doubles;
                    return !!e && e.points.length >= Math.ceil((t.bitLength() + 1) / e.step)
                }, y.prototype._getDoubles = function(t, e) {
                    if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;
                    for (var r = [this], n = this, i = 0; i < e; i += t) {
                        for (var o = 0; o < t; o++) n = n.dbl();
                        r.push(n)
                    }
                    return {
                        step: t,
                        points: r
                    }
                }, y.prototype._getNAFPoints = function(t) {
                    if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;
                    for (var e = [this], r = (1 << t) - 1, n = 1 === r ? null : this.dbl(), i = 1; i < r; i++) e[i] = e[i - 1].add(n);
                    return {
                        wnd: t,
                        points: e
                    }
                }, y.prototype._getBeta = function() {
                    return null
                }, y.prototype.dblp = function(t) {
                    for (var e = this, r = 0; r < t; r++) e = e.dbl();
                    return e
                };
                var w = a((function(t) {
                        "function" === typeof Object.create ? t.exports = function(t, e) {
                            e && (t.super_ = e, t.prototype = Object.create(e.prototype, {
                                constructor: {
                                    value: t,
                                    enumerable: !1,
                                    writable: !0,
                                    configurable: !0
                                }
                            }))
                        } : t.exports = function(t, e) {
                            if (e) {
                                t.super_ = e;
                                var r = function() {};
                                r.prototype = e.prototype, t.prototype = new r, t.prototype.constructor = t
                            }
                        }
                    })),
                    b = c.assert;

                function M(t) {
                    v.call(this, "short", t), this.a = new i.a(t.a, 16).toRed(this.red), this.b = new i.a(t.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = 0 === this.a.fromRed().cmpn(0), this.threeA = 0 === this.a.fromRed().sub(this.p).cmpn(-3), this.endo = this._getEndomorphism(t), this._endoWnafT1 = new Array(4), this._endoWnafT2 = new Array(4)
                }
                w(M, v);
                var E = M;

                function N(t, e, r, n) {
                    v.BasePoint.call(this, t, "affine"), null === e && null === r ? (this.x = null, this.y = null, this.inf = !0) : (this.x = new i.a(e, 16), this.y = new i.a(r, 16), n && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = !1)
                }

                function A(t, e, r, n) {
                    v.BasePoint.call(this, t, "jacobian"), null === e && null === r && null === n ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new i.a(0)) : (this.x = new i.a(e, 16), this.y = new i.a(r, 16), this.z = new i.a(n, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one
                }
                M.prototype._getEndomorphism = function(t) {
                    if (this.zeroA && this.g && this.n && 1 === this.p.modn(3)) {
                        var e, r, n;
                        if (t.beta) e = new i.a(t.beta, 16).toRed(this.red);
                        else {
                            var o = this._getEndoRoots(this.p);
                            e = o[0].cmp(o[1]) < 0 ? o[0] : o[1], e = e.toRed(this.red)
                        }
                        if (t.lambda) r = new i.a(t.lambda, 16);
                        else {
                            var s = this._getEndoRoots(this.n);
                            0 === this.g.mul(s[0]).x.cmp(this.g.x.redMul(e)) ? r = s[0] : (r = s[1], b(0 === this.g.mul(r).x.cmp(this.g.x.redMul(e))))
                        }
                        return n = t.basis ? t.basis.map((function(t) {
                            return {
                                a: new i.a(t.a, 16),
                                b: new i.a(t.b, 16)
                            }
                        })) : this._getEndoBasis(r), {
                            beta: e,
                            lambda: r,
                            basis: n
                        }
                    }
                }, M.prototype._getEndoRoots = function(t) {
                    var e = t === this.p ? this.red : i.a.mont(t),
                        r = new i.a(2).toRed(e).redInvm(),
                        n = r.redNeg(),
                        o = new i.a(3).toRed(e).redNeg().redSqrt().redMul(r),
                        s = n.redAdd(o).fromRed(),
                        a = n.redSub(o).fromRed();
                    return [s, a]
                }, M.prototype._getEndoBasis = function(t) {
                    var e, r, n, o, s, a, u, h, l, f = this.n.ushrn(Math.floor(this.n.bitLength() / 2)),
                        c = t,
                        d = this.n.clone(),
                        m = new i.a(1),
                        p = new i.a(0),
                        g = new i.a(0),
                        v = new i.a(1),
                        y = 0;
                    while (0 !== c.cmpn(0)) {
                        var w = d.div(c);
                        h = d.sub(w.mul(c)), l = g.sub(w.mul(m));
                        var b = v.sub(w.mul(p));
                        if (!n && h.cmp(f) < 0) e = u.neg(), r = m, n = h.neg(), o = l;
                        else if (n && 2 === ++y) break;
                        u = h, d = c, c = h, g = m, m = l, v = p, p = b
                    }
                    s = h.neg(), a = l;
                    var M = n.sqr().add(o.sqr()),
                        E = s.sqr().add(a.sqr());
                    return E.cmp(M) >= 0 && (s = e, a = r), n.negative && (n = n.neg(), o = o.neg()), s.negative && (s = s.neg(), a = a.neg()), [{
                        a: n,
                        b: o
                    }, {
                        a: s,
                        b: a
                    }]
                }, M.prototype._endoSplit = function(t) {
                    var e = this.endo.basis,
                        r = e[0],
                        n = e[1],
                        i = n.b.mul(t).divRound(this.n),
                        o = r.b.neg().mul(t).divRound(this.n),
                        s = i.mul(r.a),
                        a = o.mul(n.a),
                        u = i.mul(r.b),
                        h = o.mul(n.b),
                        l = t.sub(s).sub(a),
                        f = u.add(h).neg();
                    return {
                        k1: l,
                        k2: f
                    }
                }, M.prototype.pointFromX = function(t, e) {
                    t = new i.a(t, 16), t.red || (t = t.toRed(this.red));
                    var r = t.redSqr().redMul(t).redIAdd(t.redMul(this.a)).redIAdd(this.b),
                        n = r.redSqrt();
                    if (0 !== n.redSqr().redSub(r).cmp(this.zero)) throw new Error("invalid point");
                    var o = n.fromRed().isOdd();
                    return (e && !o || !e && o) && (n = n.redNeg()), this.point(t, n)
                }, M.prototype.validate = function(t) {
                    if (t.inf) return !0;
                    var e = t.x,
                        r = t.y,
                        n = this.a.redMul(e),
                        i = e.redSqr().redMul(e).redIAdd(n).redIAdd(this.b);
                    return 0 === r.redSqr().redISub(i).cmpn(0)
                }, M.prototype._endoWnafMulAdd = function(t, e, r) {
                    for (var n = this._endoWnafT1, i = this._endoWnafT2, o = 0; o < t.length; o++) {
                        var s = this._endoSplit(e[o]),
                            a = t[o],
                            u = a._getBeta();
                        s.k1.negative && (s.k1.ineg(), a = a.neg(!0)), s.k2.negative && (s.k2.ineg(), u = u.neg(!0)), n[2 * o] = a, n[2 * o + 1] = u, i[2 * o] = s.k1, i[2 * o + 1] = s.k2
                    }
                    for (var h = this._wnafMulAdd(1, n, i, 2 * o, r), l = 0; l < 2 * o; l++) n[l] = null, i[l] = null;
                    return h
                }, w(N, v.BasePoint), M.prototype.point = function(t, e, r) {
                    return new N(this, t, e, r)
                }, M.prototype.pointFromJSON = function(t, e) {
                    return N.fromJSON(this, t, e)
                }, N.prototype._getBeta = function() {
                    if (this.curve.endo) {
                        var t = this.precomputed;
                        if (t && t.beta) return t.beta;
                        var e = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
                        if (t) {
                            var r = this.curve,
                                n = function(t) {
                                    return r.point(t.x.redMul(r.endo.beta), t.y)
                                };
                            t.beta = e, e.precomputed = {
                                beta: null,
                                naf: t.naf && {
                                    wnd: t.naf.wnd,
                                    points: t.naf.points.map(n)
                                },
                                doubles: t.doubles && {
                                    step: t.doubles.step,
                                    points: t.doubles.points.map(n)
                                }
                            }
                        }
                        return e
                    }
                }, N.prototype.toJSON = function() {
                    return this.precomputed ? [this.x, this.y, this.precomputed && {
                        doubles: this.precomputed.doubles && {
                            step: this.precomputed.doubles.step,
                            points: this.precomputed.doubles.points.slice(1)
                        },
                        naf: this.precomputed.naf && {
                            wnd: this.precomputed.naf.wnd,
                            points: this.precomputed.naf.points.slice(1)
                        }
                    }] : [this.x, this.y]
                }, N.fromJSON = function(t, e, r) {
                    "string" === typeof e && (e = JSON.parse(e));
                    var n = t.point(e[0], e[1], r);
                    if (!e[2]) return n;

                    function i(e) {
                        return t.point(e[0], e[1], r)
                    }
                    var o = e[2];
                    return n.precomputed = {
                        beta: null,
                        doubles: o.doubles && {
                            step: o.doubles.step,
                            points: [n].concat(o.doubles.points.map(i))
                        },
                        naf: o.naf && {
                            wnd: o.naf.wnd,
                            points: [n].concat(o.naf.points.map(i))
                        }
                    }, n
                }, N.prototype.inspect = function() {
                    return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">"
                }, N.prototype.isInfinity = function() {
                    return this.inf
                }, N.prototype.add = function(t) {
                    if (this.inf) return t;
                    if (t.inf) return this;
                    if (this.eq(t)) return this.dbl();
                    if (this.neg().eq(t)) return this.curve.point(null, null);
                    if (0 === this.x.cmp(t.x)) return this.curve.point(null, null);
                    var e = this.y.redSub(t.y);
                    0 !== e.cmpn(0) && (e = e.redMul(this.x.redSub(t.x).redInvm()));
                    var r = e.redSqr().redISub(this.x).redISub(t.x),
                        n = e.redMul(this.x.redSub(r)).redISub(this.y);
                    return this.curve.point(r, n)
                }, N.prototype.dbl = function() {
                    if (this.inf) return this;
                    var t = this.y.redAdd(this.y);
                    if (0 === t.cmpn(0)) return this.curve.point(null, null);
                    var e = this.curve.a,
                        r = this.x.redSqr(),
                        n = t.redInvm(),
                        i = r.redAdd(r).redIAdd(r).redIAdd(e).redMul(n),
                        o = i.redSqr().redISub(this.x.redAdd(this.x)),
                        s = i.redMul(this.x.redSub(o)).redISub(this.y);
                    return this.curve.point(o, s)
                }, N.prototype.getX = function() {
                    return this.x.fromRed()
                }, N.prototype.getY = function() {
                    return this.y.fromRed()
                }, N.prototype.mul = function(t) {
                    return t = new i.a(t, 16), this.isInfinity() ? this : this._hasDoubles(t) ? this.curve._fixedNafMul(this, t) : this.curve.endo ? this.curve._endoWnafMulAdd([this], [t]) : this.curve._wnafMul(this, t)
                }, N.prototype.mulAdd = function(t, e, r) {
                    var n = [this, e],
                        i = [t, r];
                    return this.curve.endo ? this.curve._endoWnafMulAdd(n, i) : this.curve._wnafMulAdd(1, n, i, 2)
                }, N.prototype.jmulAdd = function(t, e, r) {
                    var n = [this, e],
                        i = [t, r];
                    return this.curve.endo ? this.curve._endoWnafMulAdd(n, i, !0) : this.curve._wnafMulAdd(1, n, i, 2, !0)
                }, N.prototype.eq = function(t) {
                    return this === t || this.inf === t.inf && (this.inf || 0 === this.x.cmp(t.x) && 0 === this.y.cmp(t.y))
                }, N.prototype.neg = function(t) {
                    if (this.inf) return this;
                    var e = this.curve.point(this.x, this.y.redNeg());
                    if (t && this.precomputed) {
                        var r = this.precomputed,
                            n = function(t) {
                                return t.neg()
                            };
                        e.precomputed = {
                            naf: r.naf && {
                                wnd: r.naf.wnd,
                                points: r.naf.points.map(n)
                            },
                            doubles: r.doubles && {
                                step: r.doubles.step,
                                points: r.doubles.points.map(n)
                            }
                        }
                    }
                    return e
                }, N.prototype.toJ = function() {
                    if (this.inf) return this.curve.jpoint(null, null, null);
                    var t = this.curve.jpoint(this.x, this.y, this.curve.one);
                    return t
                }, w(A, v.BasePoint), M.prototype.jpoint = function(t, e, r) {
                    return new A(this, t, e, r)
                }, A.prototype.toP = function() {
                    if (this.isInfinity()) return this.curve.point(null, null);
                    var t = this.z.redInvm(),
                        e = t.redSqr(),
                        r = this.x.redMul(e),
                        n = this.y.redMul(e).redMul(t);
                    return this.curve.point(r, n)
                }, A.prototype.neg = function() {
                    return this.curve.jpoint(this.x, this.y.redNeg(), this.z)
                }, A.prototype.add = function(t) {
                    if (this.isInfinity()) return t;
                    if (t.isInfinity()) return this;
                    var e = t.z.redSqr(),
                        r = this.z.redSqr(),
                        n = this.x.redMul(e),
                        i = t.x.redMul(r),
                        o = this.y.redMul(e.redMul(t.z)),
                        s = t.y.redMul(r.redMul(this.z)),
                        a = n.redSub(i),
                        u = o.redSub(s);
                    if (0 === a.cmpn(0)) return 0 !== u.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
                    var h = a.redSqr(),
                        l = h.redMul(a),
                        f = n.redMul(h),
                        c = u.redSqr().redIAdd(l).redISub(f).redISub(f),
                        d = u.redMul(f.redISub(c)).redISub(o.redMul(l)),
                        m = this.z.redMul(t.z).redMul(a);
                    return this.curve.jpoint(c, d, m)
                }, A.prototype.mixedAdd = function(t) {
                    if (this.isInfinity()) return t.toJ();
                    if (t.isInfinity()) return this;
                    var e = this.z.redSqr(),
                        r = this.x,
                        n = t.x.redMul(e),
                        i = this.y,
                        o = t.y.redMul(e).redMul(this.z),
                        s = r.redSub(n),
                        a = i.redSub(o);
                    if (0 === s.cmpn(0)) return 0 !== a.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
                    var u = s.redSqr(),
                        h = u.redMul(s),
                        l = r.redMul(u),
                        f = a.redSqr().redIAdd(h).redISub(l).redISub(l),
                        c = a.redMul(l.redISub(f)).redISub(i.redMul(h)),
                        d = this.z.redMul(s);
                    return this.curve.jpoint(f, c, d)
                }, A.prototype.dblp = function(t) {
                    if (0 === t) return this;
                    if (this.isInfinity()) return this;
                    if (!t) return this.dbl();
                    var e;
                    if (this.curve.zeroA || this.curve.threeA) {
                        var r = this;
                        for (e = 0; e < t; e++) r = r.dbl();
                        return r
                    }
                    var n = this.curve.a,
                        i = this.curve.tinv,
                        o = this.x,
                        s = this.y,
                        a = this.z,
                        u = a.redSqr().redSqr(),
                        h = s.redAdd(s);
                    for (e = 0; e < t; e++) {
                        var l = o.redSqr(),
                            f = h.redSqr(),
                            c = f.redSqr(),
                            d = l.redAdd(l).redIAdd(l).redIAdd(n.redMul(u)),
                            m = o.redMul(f),
                            p = d.redSqr().redISub(m.redAdd(m)),
                            g = m.redISub(p),
                            v = d.redMul(g);
                        v = v.redIAdd(v).redISub(c);
                        var y = h.redMul(a);
                        e + 1 < t && (u = u.redMul(c)), o = p, a = y, h = v
                    }
                    return this.curve.jpoint(o, h.redMul(i), a)
                }, A.prototype.dbl = function() {
                    return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl()
                }, A.prototype._zeroDbl = function() {
                    var t, e, r;
                    if (this.zOne) {
                        var n = this.x.redSqr(),
                            i = this.y.redSqr(),
                            o = i.redSqr(),
                            s = this.x.redAdd(i).redSqr().redISub(n).redISub(o);
                        s = s.redIAdd(s);
                        var a = n.redAdd(n).redIAdd(n),
                            u = a.redSqr().redISub(s).redISub(s),
                            h = o.redIAdd(o);
                        h = h.redIAdd(h), h = h.redIAdd(h), t = u, e = a.redMul(s.redISub(u)).redISub(h), r = this.y.redAdd(this.y)
                    } else {
                        var l = this.x.redSqr(),
                            f = this.y.redSqr(),
                            c = f.redSqr(),
                            d = this.x.redAdd(f).redSqr().redISub(l).redISub(c);
                        d = d.redIAdd(d);
                        var m = l.redAdd(l).redIAdd(l),
                            p = m.redSqr(),
                            g = c.redIAdd(c);
                        g = g.redIAdd(g), g = g.redIAdd(g), t = p.redISub(d).redISub(d), e = m.redMul(d.redISub(t)).redISub(g), r = this.y.redMul(this.z), r = r.redIAdd(r)
                    }
                    return this.curve.jpoint(t, e, r)
                }, A.prototype._threeDbl = function() {
                    var t, e, r;
                    if (this.zOne) {
                        var n = this.x.redSqr(),
                            i = this.y.redSqr(),
                            o = i.redSqr(),
                            s = this.x.redAdd(i).redSqr().redISub(n).redISub(o);
                        s = s.redIAdd(s);
                        var a = n.redAdd(n).redIAdd(n).redIAdd(this.curve.a),
                            u = a.redSqr().redISub(s).redISub(s);
                        t = u;
                        var h = o.redIAdd(o);
                        h = h.redIAdd(h), h = h.redIAdd(h), e = a.redMul(s.redISub(u)).redISub(h), r = this.y.redAdd(this.y)
                    } else {
                        var l = this.z.redSqr(),
                            f = this.y.redSqr(),
                            c = this.x.redMul(f),
                            d = this.x.redSub(l).redMul(this.x.redAdd(l));
                        d = d.redAdd(d).redIAdd(d);
                        var m = c.redIAdd(c);
                        m = m.redIAdd(m);
                        var p = m.redAdd(m);
                        t = d.redSqr().redISub(p), r = this.y.redAdd(this.z).redSqr().redISub(f).redISub(l);
                        var g = f.redSqr();
                        g = g.redIAdd(g), g = g.redIAdd(g), g = g.redIAdd(g), e = d.redMul(m.redISub(t)).redISub(g)
                    }
                    return this.curve.jpoint(t, e, r)
                }, A.prototype._dbl = function() {
                    var t = this.curve.a,
                        e = this.x,
                        r = this.y,
                        n = this.z,
                        i = n.redSqr().redSqr(),
                        o = e.redSqr(),
                        s = r.redSqr(),
                        a = o.redAdd(o).redIAdd(o).redIAdd(t.redMul(i)),
                        u = e.redAdd(e);
                    u = u.redIAdd(u);
                    var h = u.redMul(s),
                        l = a.redSqr().redISub(h.redAdd(h)),
                        f = h.redISub(l),
                        c = s.redSqr();
                    c = c.redIAdd(c), c = c.redIAdd(c), c = c.redIAdd(c);
                    var d = a.redMul(f).redISub(c),
                        m = r.redAdd(r).redMul(n);
                    return this.curve.jpoint(l, d, m)
                }, A.prototype.trpl = function() {
                    if (!this.curve.zeroA) return this.dbl().add(this);
                    var t = this.x.redSqr(),
                        e = this.y.redSqr(),
                        r = this.z.redSqr(),
                        n = e.redSqr(),
                        i = t.redAdd(t).redIAdd(t),
                        o = i.redSqr(),
                        s = this.x.redAdd(e).redSqr().redISub(t).redISub(n);
                    s = s.redIAdd(s), s = s.redAdd(s).redIAdd(s), s = s.redISub(o);
                    var a = s.redSqr(),
                        u = n.redIAdd(n);
                    u = u.redIAdd(u), u = u.redIAdd(u), u = u.redIAdd(u);
                    var h = i.redIAdd(s).redSqr().redISub(o).redISub(a).redISub(u),
                        l = e.redMul(h);
                    l = l.redIAdd(l), l = l.redIAdd(l);
                    var f = this.x.redMul(a).redISub(l);
                    f = f.redIAdd(f), f = f.redIAdd(f);
                    var c = this.y.redMul(h.redMul(u.redISub(h)).redISub(s.redMul(a)));
                    c = c.redIAdd(c), c = c.redIAdd(c), c = c.redIAdd(c);
                    var d = this.z.redAdd(s).redSqr().redISub(r).redISub(a);
                    return this.curve.jpoint(f, c, d)
                }, A.prototype.mul = function(t, e) {
                    return t = new i.a(t, e), this.curve._wnafMul(this, t)
                }, A.prototype.eq = function(t) {
                    if ("affine" === t.type) return this.eq(t.toJ());
                    if (this === t) return !0;
                    var e = this.z.redSqr(),
                        r = t.z.redSqr();
                    if (0 !== this.x.redMul(r).redISub(t.x.redMul(e)).cmpn(0)) return !1;
                    var n = e.redMul(this.z),
                        i = r.redMul(t.z);
                    return 0 === this.y.redMul(i).redISub(t.y.redMul(n)).cmpn(0)
                }, A.prototype.eqXToP = function(t) {
                    var e = this.z.redSqr(),
                        r = t.toRed(this.curve.red).redMul(e);
                    if (0 === this.x.cmp(r)) return !0;
                    for (var n = t.clone(), i = this.curve.redN.redMul(e);;) {
                        if (n.iadd(this.curve.n), n.cmp(this.curve.p) >= 0) return !1;
                        if (r.redIAdd(i), 0 === this.x.cmp(r)) return !0
                    }
                }, A.prototype.inspect = function() {
                    return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">"
                }, A.prototype.isInfinity = function() {
                    return 0 === this.z.cmpn(0)
                };
                var _ = a((function(t, e) {
                        var r = e;
                        r.base = v, r.short = E, r.mont = null, r.edwards = null
                    })),
                    S = a((function(t, e) {
                        var r, n = e,
                            i = c.assert;

                        function o(t) {
                            "short" === t.type ? this.curve = new _.short(t) : "edwards" === t.type ? this.curve = new _.edwards(t) : this.curve = new _.mont(t), this.g = this.curve.g, this.n = this.curve.n, this.hash = t.hash, i(this.g.validate(), "Invalid curve"), i(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O")
                        }

                        function a(t, e) {
                            Object.defineProperty(n, t, {
                                configurable: !0,
                                enumerable: !0,
                                get: function() {
                                    var r = new o(e);
                                    return Object.defineProperty(n, t, {
                                        configurable: !0,
                                        enumerable: !0,
                                        value: r
                                    }), r
                                }
                            })
                        }
                        n.PresetCurve = o, a("p192", {
                            type: "short",
                            prime: "p192",
                            p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
                            a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
                            b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
                            n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
                            hash: s.a.sha256,
                            gRed: !1,
                            g: ["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012", "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]
                        }), a("p224", {
                            type: "short",
                            prime: "p224",
                            p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
                            a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
                            b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
                            n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
                            hash: s.a.sha256,
                            gRed: !1,
                            g: ["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21", "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]
                        }), a("p256", {
                            type: "short",
                            prime: null,
                            p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
                            a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
                            b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
                            n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
                            hash: s.a.sha256,
                            gRed: !1,
                            g: ["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296", "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]
                        }), a("p384", {
                            type: "short",
                            prime: null,
                            p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
                            a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
                            b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
                            n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
                            hash: s.a.sha384,
                            gRed: !1,
                            g: ["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7", "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]
                        }), a("p521", {
                            type: "short",
                            prime: null,
                            p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
                            a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
                            b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
                            n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
                            hash: s.a.sha512,
                            gRed: !1,
                            g: ["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66", "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"]
                        }), a("curve25519", {
                            type: "mont",
                            prime: "p25519",
                            p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
                            a: "76d06",
                            b: "1",
                            n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
                            hash: s.a.sha256,
                            gRed: !1,
                            g: ["9"]
                        }), a("ed25519", {
                            type: "edwards",
                            prime: "p25519",
                            p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
                            a: "-1",
                            c: "1",
                            d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
                            n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
                            hash: s.a.sha256,
                            gRed: !1,
                            g: ["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a", "6666666666666666666666666666666666666666666666666666666666666658"]
                        });
                        try {
                            r = null.crash()
                        } catch (u) {
                            r = void 0
                        }
                        a("secp256k1", {
                            type: "short",
                            prime: "k256",
                            p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
                            a: "0",
                            b: "7",
                            n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
                            h: "1",
                            hash: s.a.sha256,
                            beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
                            lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
                            basis: [{
                                a: "3086d221a7d46bcde86c90e49284eb15",
                                b: "-e4437ed6010e88286f547fa90abfe4c3"
                            }, {
                                a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
                                b: "3086d221a7d46bcde86c90e49284eb15"
                            }],
                            gRed: !1,
                            g: ["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798", "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8", r]
                        })
                    }));

                function I(t) {
                    if (!(this instanceof I)) return new I(t);
                    this.hash = t.hash, this.predResist = !!t.predResist, this.outLen = this.hash.outSize, this.minEntropy = t.minEntropy || this.hash.hmacStrength, this._reseed = null, this.reseedInterval = null, this.K = null, this.V = null;
                    var e = f.toArray(t.entropy, t.entropyEnc || "hex"),
                        r = f.toArray(t.nonce, t.nonceEnc || "hex"),
                        n = f.toArray(t.pers, t.persEnc || "hex");
                    h(e.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._init(e, r, n)
                }
                var R = I;
                I.prototype._init = function(t, e, r) {
                    var n = t.concat(e).concat(r);
                    this.K = new Array(this.outLen / 8), this.V = new Array(this.outLen / 8);
                    for (var i = 0; i < this.V.length; i++) this.K[i] = 0, this.V[i] = 1;
                    this._update(n), this._reseed = 1, this.reseedInterval = 281474976710656
                }, I.prototype._hmac = function() {
                    return new s.a.hmac(this.hash, this.K)
                }, I.prototype._update = function(t) {
                    var e = this._hmac().update(this.V).update([0]);
                    t && (e = e.update(t)), this.K = e.digest(), this.V = this._hmac().update(this.V).digest(), t && (this.K = this._hmac().update(this.V).update([1]).update(t).digest(), this.V = this._hmac().update(this.V).digest())
                }, I.prototype.reseed = function(t, e, r, n) {
                    "string" !== typeof e && (n = r, r = e, e = null), t = f.toArray(t, e), r = f.toArray(r, n), h(t.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._update(t.concat(r || [])), this._reseed = 1
                }, I.prototype.generate = function(t, e, r, n) {
                    if (this._reseed > this.reseedInterval) throw new Error("Reseed is required");
                    "string" !== typeof e && (n = r, r = e, e = null), r && (r = f.toArray(r, n || "hex"), this._update(r));
                    var i = [];
                    while (i.length < t) this.V = this._hmac().update(this.V).digest(), i = i.concat(this.V);
                    var o = i.slice(0, t);
                    return this._update(r), this._reseed++, f.encode(o, e)
                };
                var P = c.assert;

                function k(t, e) {
                    this.ec = t, this.priv = null, this.pub = null, e.priv && this._importPrivate(e.priv, e.privEnc), e.pub && this._importPublic(e.pub, e.pubEnc)
                }
                var x = k;
                k.fromPublic = function(t, e, r) {
                    return e instanceof k ? e : new k(t, {
                        pub: e,
                        pubEnc: r
                    })
                }, k.fromPrivate = function(t, e, r) {
                    return e instanceof k ? e : new k(t, {
                        priv: e,
                        privEnc: r
                    })
                }, k.prototype.validate = function() {
                    var t = this.getPublic();
                    return t.isInfinity() ? {
                        result: !1,
                        reason: "Invalid public key"
                    } : t.validate() ? t.mul(this.ec.curve.n).isInfinity() ? {
                        result: !0,
                        reason: null
                    } : {
                        result: !1,
                        reason: "Public key * N != O"
                    } : {
                        result: !1,
                        reason: "Public key is not a point"
                    }
                }, k.prototype.getPublic = function(t, e) {
                    return "string" === typeof t && (e = t, t = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), e ? this.pub.encode(e, t) : this.pub
                }, k.prototype.getPrivate = function(t) {
                    return "hex" === t ? this.priv.toString(16, 2) : this.priv
                }, k.prototype._importPrivate = function(t, e) {
                    this.priv = new i.a(t, e || 16), this.priv = this.priv.umod(this.ec.curve.n)
                }, k.prototype._importPublic = function(t, e) {
                    if (t.x || t.y) return "mont" === this.ec.curve.type ? P(t.x, "Need x coordinate") : "short" !== this.ec.curve.type && "edwards" !== this.ec.curve.type || P(t.x && t.y, "Need both x and y coordinate"), void(this.pub = this.ec.curve.point(t.x, t.y));
                    this.pub = this.ec.curve.decodePoint(t, e)
                }, k.prototype.derive = function(t) {
                    return t.validate() || P(t.validate(), "public point not validated"), t.mul(this.priv).getX()
                }, k.prototype.sign = function(t, e, r) {
                    return this.ec.sign(t, this, e, r)
                }, k.prototype.verify = function(t, e) {
                    return this.ec.verify(t, e, this)
                }, k.prototype.inspect = function() {
                    return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >"
                };
                var T = c.assert;

                function O(t, e) {
                    if (t instanceof O) return t;
                    this._importDER(t, e) || (T(t.r && t.s, "Signature without r or s"), this.r = new i.a(t.r, 16), this.s = new i.a(t.s, 16), void 0 === t.recoveryParam ? this.recoveryParam = null : this.recoveryParam = t.recoveryParam)
                }
                var C = O;

                function U() {
                    this.place = 0
                }

                function F(t, e) {
                    var r = t[e.place++];
                    if (!(128 & r)) return r;
                    var n = 15 & r;
                    if (0 === n || n > 4) return !1;
                    for (var i = 0, o = 0, s = e.place; o < n; o++, s++) i <<= 8, i |= t[s], i >>>= 0;
                    return !(i <= 127) && (e.place = s, i)
                }

                function B(t) {
                    var e = 0,
                        r = t.length - 1;
                    while (!t[e] && !(128 & t[e + 1]) && e < r) e++;
                    return 0 === e ? t : t.slice(e)
                }

                function L(t, e) {
                    if (e < 128) t.push(e);
                    else {
                        var r = 1 + (Math.log(e) / Math.LN2 >>> 3);
                        t.push(128 | r);
                        while (--r) t.push(e >>> (r << 3) & 255);
                        t.push(e)
                    }
                }
                O.prototype._importDER = function(t, e) {
                    t = c.toArray(t, e);
                    var r = new U;
                    if (48 !== t[r.place++]) return !1;
                    var n = F(t, r);
                    if (!1 === n) return !1;
                    if (n + r.place !== t.length) return !1;
                    if (2 !== t[r.place++]) return !1;
                    var o = F(t, r);
                    if (!1 === o) return !1;
                    var s = t.slice(r.place, o + r.place);
                    if (r.place += o, 2 !== t[r.place++]) return !1;
                    var a = F(t, r);
                    if (!1 === a) return !1;
                    if (t.length !== a + r.place) return !1;
                    var u = t.slice(r.place, a + r.place);
                    if (0 === s[0]) {
                        if (!(128 & s[1])) return !1;
                        s = s.slice(1)
                    }
                    if (0 === u[0]) {
                        if (!(128 & u[1])) return !1;
                        u = u.slice(1)
                    }
                    return this.r = new i.a(s), this.s = new i.a(u), this.recoveryParam = null, !0
                }, O.prototype.toDER = function(t) {
                    var e = this.r.toArray(),
                        r = this.s.toArray();
                    128 & e[0] && (e = [0].concat(e)), 128 & r[0] && (r = [0].concat(r)), e = B(e), r = B(r);
                    while (!r[0] && !(128 & r[1])) r = r.slice(1);
                    var n = [2];
                    L(n, e.length), n = n.concat(e), n.push(2), L(n, r.length);
                    var i = n.concat(r),
                        o = [48];
                    return L(o, i.length), o = o.concat(i), c.encode(o, t)
                };
                var D = function() {
                        throw new Error("unsupported")
                    },
                    G = c.assert;

                function j(t) {
                    if (!(this instanceof j)) return new j(t);
                    "string" === typeof t && (G(Object.prototype.hasOwnProperty.call(S, t), "Unknown curve " + t), t = S[t]), t instanceof S.PresetCurve && (t = {
                        curve: t
                    }), this.curve = t.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), this.g = this.curve.g, this.g = t.curve.g, this.g.precompute(t.curve.n.bitLength() + 1), this.hash = t.hash || t.curve.hash
                }
                var q = j;
                j.prototype.keyPair = function(t) {
                    return new x(this, t)
                }, j.prototype.keyFromPrivate = function(t, e) {
                    return x.fromPrivate(this, t, e)
                }, j.prototype.keyFromPublic = function(t, e) {
                    return x.fromPublic(this, t, e)
                }, j.prototype.genKeyPair = function(t) {
                    t || (t = {});
                    for (var e = new R({
                            hash: this.hash,
                            pers: t.pers,
                            persEnc: t.persEnc || "utf8",
                            entropy: t.entropy || D(this.hash.hmacStrength),
                            entropyEnc: t.entropy && t.entropyEnc || "utf8",
                            nonce: this.n.toArray()
                        }), r = this.n.byteLength(), n = this.n.sub(new i.a(2));;) {
                        var o = new i.a(e.generate(r));
                        if (!(o.cmp(n) > 0)) return o.iaddn(1), this.keyFromPrivate(o)
                    }
                }, j.prototype._truncateToN = function(t, e) {
                    var r = 8 * t.byteLength() - this.n.bitLength();
                    return r > 0 && (t = t.ushrn(r)), !e && t.cmp(this.n) >= 0 ? t.sub(this.n) : t
                }, j.prototype.sign = function(t, e, r, n) {
                    "object" === typeof r && (n = r, r = null), n || (n = {}), e = this.keyFromPrivate(e, r), t = this._truncateToN(new i.a(t, 16));
                    for (var o = this.n.byteLength(), s = e.getPrivate().toArray("be", o), a = t.toArray("be", o), u = new R({
                            hash: this.hash,
                            entropy: s,
                            nonce: a,
                            pers: n.pers,
                            persEnc: n.persEnc || "utf8"
                        }), h = this.n.sub(new i.a(1)), l = 0;; l++) {
                        var f = n.k ? n.k(l) : new i.a(u.generate(this.n.byteLength()));
                        if (f = this._truncateToN(f, !0), !(f.cmpn(1) <= 0 || f.cmp(h) >= 0)) {
                            var c = this.g.mul(f);
                            if (!c.isInfinity()) {
                                var d = c.getX(),
                                    m = d.umod(this.n);
                                if (0 !== m.cmpn(0)) {
                                    var p = f.invm(this.n).mul(m.mul(e.getPrivate()).iadd(t));
                                    if (p = p.umod(this.n), 0 !== p.cmpn(0)) {
                                        var g = (c.getY().isOdd() ? 1 : 0) | (0 !== d.cmp(m) ? 2 : 0);
                                        return n.canonical && p.cmp(this.nh) > 0 && (p = this.n.sub(p), g ^= 1), new C({
                                            r: m,
                                            s: p,
                                            recoveryParam: g
                                        })
                                    }
                                }
                            }
                        }
                    }
                }, j.prototype.verify = function(t, e, r, n) {
                    t = this._truncateToN(new i.a(t, 16)), r = this.keyFromPublic(r, n), e = new C(e, "hex");
                    var o = e.r,
                        s = e.s;
                    if (o.cmpn(1) < 0 || o.cmp(this.n) >= 0) return !1;
                    if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0) return !1;
                    var a, u = s.invm(this.n),
                        h = u.mul(t).umod(this.n),
                        l = u.mul(o).umod(this.n);
                    return this.curve._maxwellTrick ? (a = this.g.jmulAdd(h, r.getPublic(), l), !a.isInfinity() && a.eqXToP(o)) : (a = this.g.mulAdd(h, r.getPublic(), l), !a.isInfinity() && 0 === a.getX().umod(this.n).cmp(o))
                }, j.prototype.recoverPubKey = function(t, e, r, n) {
                    G((3 & r) === r, "The recovery param is more than two bits"), e = new C(e, n);
                    var o = this.n,
                        s = new i.a(t),
                        a = e.r,
                        u = e.s,
                        h = 1 & r,
                        l = r >> 1;
                    if (a.cmp(this.curve.p.umod(this.curve.n)) >= 0 && l) throw new Error("Unable to find sencond key candinate");
                    a = l ? this.curve.pointFromX(a.add(this.curve.n), h) : this.curve.pointFromX(a, h);
                    var f = e.r.invm(o),
                        c = o.sub(s).mul(f).umod(o),
                        d = u.mul(f).umod(o);
                    return this.g.mulAdd(c, a, d)
                }, j.prototype.getKeyRecoveryParam = function(t, e, r, n) {
                    if (e = new C(e, n), null !== e.recoveryParam) return e.recoveryParam;
                    for (var i = 0; i < 4; i++) {
                        var o;
                        try {
                            o = this.recoverPubKey(t, e, i)
                        } catch (t) {
                            continue
                        }
                        if (o.eq(r)) return i
                    }
                    throw new Error("Unable to find valid recovery factor")
                };
                var z = a((function(t, e) {
                        var r = e;
                        r.version = {
                            version: "6.5.4"
                        }.version, r.utils = c, r.rand = function() {
                            throw new Error("unsupported")
                        }, r.curve = _, r.curves = S, r.ec = q, r.eddsa = null
                    })),
                    K = z.ec
            }).call(this, r("c8ba"))
        },
        d457: function(t, e, r) {
            "use strict";
            var n;
            r.d(e, "a", (function() {
                    return n
                })),
                function(t) {
                    t["sha256"] = "sha256", t["sha512"] = "sha512"
                }(n || (n = {}))
        },
        df87: function(t, e, r) {
            "use strict";
            (function(t) {
                r.d(e, "a", (function() {
                    return K
                }));
                var n = r("9352"),
                    i = r.n(n),
                    o = r("7d92"),
                    s = r.n(o);
                "undefined" !== typeof globalThis ? globalThis : "undefined" !== typeof window ? window : "undefined" !== typeof t || "undefined" !== typeof self && self;

                function a(t, e, r) {
                    return r = {
                        path: e,
                        exports: {},
                        require: function(t, e) {
                            return u(t, void 0 === e || null === e ? r.path : e)
                        }
                    }, t(r, r.exports), r.exports
                }

                function u() {
                    throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")
                }
                var h = l;

                function l(t, e) {
                    if (!t) throw new Error(e || "Assertion failed")
                }
                l.equal = function(t, e, r) {
                    if (t != e) throw new Error(r || "Assertion failed: " + t + " != " + e)
                };
                var f = a((function(t, e) {
                        var r = e;

                        function n(t, e) {
                            if (Array.isArray(t)) return t.slice();
                            if (!t) return [];
                            var r = [];
                            if ("string" !== typeof t) {
                                for (var n = 0; n < t.length; n++) r[n] = 0 | t[n];
                                return r
                            }
                            if ("hex" === e) {
                                t = t.replace(/[^a-z0-9]+/gi, ""), t.length % 2 !== 0 && (t = "0" + t);
                                for (n = 0; n < t.length; n += 2) r.push(parseInt(t[n] + t[n + 1], 16))
                            } else
                                for (n = 0; n < t.length; n++) {
                                    var i = t.charCodeAt(n),
                                        o = i >> 8,
                                        s = 255 & i;
                                    o ? r.push(o, s) : r.push(s)
                                }
                            return r
                        }

                        function i(t) {
                            return 1 === t.length ? "0" + t : t
                        }

                        function o(t) {
                            for (var e = "", r = 0; r < t.length; r++) e += i(t[r].toString(16));
                            return e
                        }
                        r.toArray = n, r.zero2 = i, r.toHex = o, r.encode = function(t, e) {
                            return "hex" === e ? o(t) : t
                        }
                    })),
                    c = a((function(t, e) {
                        var r = e;

                        function n(t, e, r) {
                            var n = new Array(Math.max(t.bitLength(), r) + 1);
                            n.fill(0);
                            for (var i = 1 << e + 1, o = t.clone(), s = 0; s < n.length; s++) {
                                var a, u = o.andln(i - 1);
                                o.isOdd() ? (a = u > (i >> 1) - 1 ? (i >> 1) - u : u, o.isubn(a)) : a = 0, n[s] = a, o.iushrn(1)
                            }
                            return n
                        }

                        function o(t, e) {
                            var r = [
                                [],
                                []
                            ];
                            t = t.clone(), e = e.clone();
                            var n, i = 0,
                                o = 0;
                            while (t.cmpn(-i) > 0 || e.cmpn(-o) > 0) {
                                var s, a, u = t.andln(3) + i & 3,
                                    h = e.andln(3) + o & 3;
                                3 === u && (u = -1), 3 === h && (h = -1), 0 === (1 & u) ? s = 0 : (n = t.andln(7) + i & 7, s = 3 !== n && 5 !== n || 2 !== h ? u : -u), r[0].push(s), 0 === (1 & h) ? a = 0 : (n = e.andln(7) + o & 7, a = 3 !== n && 5 !== n || 2 !== u ? h : -h), r[1].push(a), 2 * i === s + 1 && (i = 1 - i), 2 * o === a + 1 && (o = 1 - o), t.iushrn(1), e.iushrn(1)
                            }
                            return r
                        }

                        function s(t, e, r) {
                            var n = "_" + e;
                            t.prototype[e] = function() {
                                return void 0 !== this[n] ? this[n] : this[n] = r.call(this)
                            }
                        }

                        function a(t) {
                            return "string" === typeof t ? r.toArray(t, "hex") : t
                        }

                        function u(t) {
                            return new i.a(t, "hex", "le")
                        }
                        r.assert = h, r.toArray = f.toArray, r.zero2 = f.zero2, r.toHex = f.toHex, r.encode = f.encode, r.getNAF = n, r.getJSF = o, r.cachedProperty = s, r.parseBytes = a, r.intFromLE = u
                    })),
                    d = c.getNAF,
                    m = c.getJSF,
                    p = c.assert;

                function g(t, e) {
                    this.type = t, this.p = new i.a(e.p, 16), this.red = e.prime ? i.a.red(e.prime) : i.a.mont(this.p), this.zero = new i.a(0).toRed(this.red), this.one = new i.a(1).toRed(this.red), this.two = new i.a(2).toRed(this.red), this.n = e.n && new i.a(e.n, 16), this.g = e.g && this.pointFromJSON(e.g, e.gRed), this._wnafT1 = new Array(4), this._wnafT2 = new Array(4), this._wnafT3 = new Array(4), this._wnafT4 = new Array(4), this._bitLength = this.n ? this.n.bitLength() : 0;
                    var r = this.n && this.p.div(this.n);
                    !r || r.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = !0, this.redN = this.n.toRed(this.red))
                }
                var v = g;

                function y(t, e) {
                    this.curve = t, this.type = e, this.precomputed = null
                }
                g.prototype.point = function() {
                    throw new Error("Not implemented")
                }, g.prototype.validate = function() {
                    throw new Error("Not implemented")
                }, g.prototype._fixedNafMul = function(t, e) {
                    p(t.precomputed);
                    var r = t._getDoubles(),
                        n = d(e, 1, this._bitLength),
                        i = (1 << r.step + 1) - (r.step % 2 === 0 ? 2 : 1);
                    i /= 3;
                    var o, s, a = [];
                    for (o = 0; o < n.length; o += r.step) {
                        s = 0;
                        for (var u = o + r.step - 1; u >= o; u--) s = (s << 1) + n[u];
                        a.push(s)
                    }
                    for (var h = this.jpoint(null, null, null), l = this.jpoint(null, null, null), f = i; f > 0; f--) {
                        for (o = 0; o < a.length; o++) s = a[o], s === f ? l = l.mixedAdd(r.points[o]) : s === -f && (l = l.mixedAdd(r.points[o].neg()));
                        h = h.add(l)
                    }
                    return h.toP()
                }, g.prototype._wnafMul = function(t, e) {
                    var r = 4,
                        n = t._getNAFPoints(r);
                    r = n.wnd;
                    for (var i = n.points, o = d(e, r, this._bitLength), s = this.jpoint(null, null, null), a = o.length - 1; a >= 0; a--) {
                        for (var u = 0; a >= 0 && 0 === o[a]; a--) u++;
                        if (a >= 0 && u++, s = s.dblp(u), a < 0) break;
                        var h = o[a];
                        p(0 !== h), s = "affine" === t.type ? h > 0 ? s.mixedAdd(i[h - 1 >> 1]) : s.mixedAdd(i[-h - 1 >> 1].neg()) : h > 0 ? s.add(i[h - 1 >> 1]) : s.add(i[-h - 1 >> 1].neg())
                    }
                    return "affine" === t.type ? s.toP() : s
                }, g.prototype._wnafMulAdd = function(t, e, r, n, i) {
                    var o, s, a, u = this._wnafT1,
                        h = this._wnafT2,
                        l = this._wnafT3,
                        f = 0;
                    for (o = 0; o < n; o++) {
                        a = e[o];
                        var c = a._getNAFPoints(t);
                        u[o] = c.wnd, h[o] = c.points
                    }
                    for (o = n - 1; o >= 1; o -= 2) {
                        var p = o - 1,
                            g = o;
                        if (1 === u[p] && 1 === u[g]) {
                            var v = [e[p], null, null, e[g]];
                            0 === e[p].y.cmp(e[g].y) ? (v[1] = e[p].add(e[g]), v[2] = e[p].toJ().mixedAdd(e[g].neg())) : 0 === e[p].y.cmp(e[g].y.redNeg()) ? (v[1] = e[p].toJ().mixedAdd(e[g]), v[2] = e[p].add(e[g].neg())) : (v[1] = e[p].toJ().mixedAdd(e[g]), v[2] = e[p].toJ().mixedAdd(e[g].neg()));
                            var y = [-3, -1, -5, -7, 0, 7, 5, 1, 3],
                                w = m(r[p], r[g]);
                            for (f = Math.max(w[0].length, f), l[p] = new Array(f), l[g] = new Array(f), s = 0; s < f; s++) {
                                var b = 0 | w[0][s],
                                    M = 0 | w[1][s];
                                l[p][s] = y[3 * (b + 1) + (M + 1)], l[g][s] = 0, h[p] = v
                            }
                        } else l[p] = d(r[p], u[p], this._bitLength), l[g] = d(r[g], u[g], this._bitLength), f = Math.max(l[p].length, f), f = Math.max(l[g].length, f)
                    }
                    var E = this.jpoint(null, null, null),
                        N = this._wnafT4;
                    for (o = f; o >= 0; o--) {
                        var A = 0;
                        while (o >= 0) {
                            var _ = !0;
                            for (s = 0; s < n; s++) N[s] = 0 | l[s][o], 0 !== N[s] && (_ = !1);
                            if (!_) break;
                            A++, o--
                        }
                        if (o >= 0 && A++, E = E.dblp(A), o < 0) break;
                        for (s = 0; s < n; s++) {
                            var S = N[s];
                            0 !== S && (S > 0 ? a = h[s][S - 1 >> 1] : S < 0 && (a = h[s][-S - 1 >> 1].neg()), E = "affine" === a.type ? E.mixedAdd(a) : E.add(a))
                        }
                    }
                    for (o = 0; o < n; o++) h[o] = null;
                    return i ? E : E.toP()
                }, g.BasePoint = y, y.prototype.eq = function() {
                    throw new Error("Not implemented")
                }, y.prototype.validate = function() {
                    return this.curve.validate(this)
                }, g.prototype.decodePoint = function(t, e) {
                    t = c.toArray(t, e);
                    var r = this.p.byteLength();
                    if ((4 === t[0] || 6 === t[0] || 7 === t[0]) && t.length - 1 === 2 * r) {
                        6 === t[0] ? p(t[t.length - 1] % 2 === 0) : 7 === t[0] && p(t[t.length - 1] % 2 === 1);
                        var n = this.point(t.slice(1, 1 + r), t.slice(1 + r, 1 + 2 * r));
                        return n
                    }
                    if ((2 === t[0] || 3 === t[0]) && t.length - 1 === r) return this.pointFromX(t.slice(1, 1 + r), 3 === t[0]);
                    throw new Error("Unknown point format")
                }, y.prototype.encodeCompressed = function(t) {
                    return this.encode(t, !0)
                }, y.prototype._encode = function(t) {
                    var e = this.curve.p.byteLength(),
                        r = this.getX().toArray("be", e);
                    return t ? [this.getY().isEven() ? 2 : 3].concat(r) : [4].concat(r, this.getY().toArray("be", e))
                }, y.prototype.encode = function(t, e) {
                    return c.encode(this._encode(e), t)
                }, y.prototype.precompute = function(t) {
                    if (this.precomputed) return this;
                    var e = {
                        doubles: null,
                        naf: null,
                        beta: null
                    };
                    return e.naf = this._getNAFPoints(8), e.doubles = this._getDoubles(4, t), e.beta = this._getBeta(), this.precomputed = e, this
                }, y.prototype._hasDoubles = function(t) {
                    if (!this.precomputed) return !1;
                    var e = this.precomputed.doubles;
                    return !!e && e.points.length >= Math.ceil((t.bitLength() + 1) / e.step)
                }, y.prototype._getDoubles = function(t, e) {
                    if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;
                    for (var r = [this], n = this, i = 0; i < e; i += t) {
                        for (var o = 0; o < t; o++) n = n.dbl();
                        r.push(n)
                    }
                    return {
                        step: t,
                        points: r
                    }
                }, y.prototype._getNAFPoints = function(t) {
                    if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;
                    for (var e = [this], r = (1 << t) - 1, n = 1 === r ? null : this.dbl(), i = 1; i < r; i++) e[i] = e[i - 1].add(n);
                    return {
                        wnd: t,
                        points: e
                    }
                }, y.prototype._getBeta = function() {
                    return null
                }, y.prototype.dblp = function(t) {
                    for (var e = this, r = 0; r < t; r++) e = e.dbl();
                    return e
                };
                var w = a((function(t) {
                        "function" === typeof Object.create ? t.exports = function(t, e) {
                            e && (t.super_ = e, t.prototype = Object.create(e.prototype, {
                                constructor: {
                                    value: t,
                                    enumerable: !1,
                                    writable: !0,
                                    configurable: !0
                                }
                            }))
                        } : t.exports = function(t, e) {
                            if (e) {
                                t.super_ = e;
                                var r = function() {};
                                r.prototype = e.prototype, t.prototype = new r, t.prototype.constructor = t
                            }
                        }
                    })),
                    b = c.assert;

                function M(t) {
                    v.call(this, "short", t), this.a = new i.a(t.a, 16).toRed(this.red), this.b = new i.a(t.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = 0 === this.a.fromRed().cmpn(0), this.threeA = 0 === this.a.fromRed().sub(this.p).cmpn(-3), this.endo = this._getEndomorphism(t), this._endoWnafT1 = new Array(4), this._endoWnafT2 = new Array(4)
                }
                w(M, v);
                var E = M;

                function N(t, e, r, n) {
                    v.BasePoint.call(this, t, "affine"), null === e && null === r ? (this.x = null, this.y = null, this.inf = !0) : (this.x = new i.a(e, 16), this.y = new i.a(r, 16), n && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = !1)
                }

                function A(t, e, r, n) {
                    v.BasePoint.call(this, t, "jacobian"), null === e && null === r && null === n ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new i.a(0)) : (this.x = new i.a(e, 16), this.y = new i.a(r, 16), this.z = new i.a(n, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one
                }
                M.prototype._getEndomorphism = function(t) {
                    if (this.zeroA && this.g && this.n && 1 === this.p.modn(3)) {
                        var e, r, n;
                        if (t.beta) e = new i.a(t.beta, 16).toRed(this.red);
                        else {
                            var o = this._getEndoRoots(this.p);
                            e = o[0].cmp(o[1]) < 0 ? o[0] : o[1], e = e.toRed(this.red)
                        }
                        if (t.lambda) r = new i.a(t.lambda, 16);
                        else {
                            var s = this._getEndoRoots(this.n);
                            0 === this.g.mul(s[0]).x.cmp(this.g.x.redMul(e)) ? r = s[0] : (r = s[1], b(0 === this.g.mul(r).x.cmp(this.g.x.redMul(e))))
                        }
                        return n = t.basis ? t.basis.map((function(t) {
                            return {
                                a: new i.a(t.a, 16),
                                b: new i.a(t.b, 16)
                            }
                        })) : this._getEndoBasis(r), {
                            beta: e,
                            lambda: r,
                            basis: n
                        }
                    }
                }, M.prototype._getEndoRoots = function(t) {
                    var e = t === this.p ? this.red : i.a.mont(t),
                        r = new i.a(2).toRed(e).redInvm(),
                        n = r.redNeg(),
                        o = new i.a(3).toRed(e).redNeg().redSqrt().redMul(r),
                        s = n.redAdd(o).fromRed(),
                        a = n.redSub(o).fromRed();
                    return [s, a]
                }, M.prototype._getEndoBasis = function(t) {
                    var e, r, n, o, s, a, u, h, l, f = this.n.ushrn(Math.floor(this.n.bitLength() / 2)),
                        c = t,
                        d = this.n.clone(),
                        m = new i.a(1),
                        p = new i.a(0),
                        g = new i.a(0),
                        v = new i.a(1),
                        y = 0;
                    while (0 !== c.cmpn(0)) {
                        var w = d.div(c);
                        h = d.sub(w.mul(c)), l = g.sub(w.mul(m));
                        var b = v.sub(w.mul(p));
                        if (!n && h.cmp(f) < 0) e = u.neg(), r = m, n = h.neg(), o = l;
                        else if (n && 2 === ++y) break;
                        u = h, d = c, c = h, g = m, m = l, v = p, p = b
                    }
                    s = h.neg(), a = l;
                    var M = n.sqr().add(o.sqr()),
                        E = s.sqr().add(a.sqr());
                    return E.cmp(M) >= 0 && (s = e, a = r), n.negative && (n = n.neg(), o = o.neg()), s.negative && (s = s.neg(), a = a.neg()), [{
                        a: n,
                        b: o
                    }, {
                        a: s,
                        b: a
                    }]
                }, M.prototype._endoSplit = function(t) {
                    var e = this.endo.basis,
                        r = e[0],
                        n = e[1],
                        i = n.b.mul(t).divRound(this.n),
                        o = r.b.neg().mul(t).divRound(this.n),
                        s = i.mul(r.a),
                        a = o.mul(n.a),
                        u = i.mul(r.b),
                        h = o.mul(n.b),
                        l = t.sub(s).sub(a),
                        f = u.add(h).neg();
                    return {
                        k1: l,
                        k2: f
                    }
                }, M.prototype.pointFromX = function(t, e) {
                    t = new i.a(t, 16), t.red || (t = t.toRed(this.red));
                    var r = t.redSqr().redMul(t).redIAdd(t.redMul(this.a)).redIAdd(this.b),
                        n = r.redSqrt();
                    if (0 !== n.redSqr().redSub(r).cmp(this.zero)) throw new Error("invalid point");
                    var o = n.fromRed().isOdd();
                    return (e && !o || !e && o) && (n = n.redNeg()), this.point(t, n)
                }, M.prototype.validate = function(t) {
                    if (t.inf) return !0;
                    var e = t.x,
                        r = t.y,
                        n = this.a.redMul(e),
                        i = e.redSqr().redMul(e).redIAdd(n).redIAdd(this.b);
                    return 0 === r.redSqr().redISub(i).cmpn(0)
                }, M.prototype._endoWnafMulAdd = function(t, e, r) {
                    for (var n = this._endoWnafT1, i = this._endoWnafT2, o = 0; o < t.length; o++) {
                        var s = this._endoSplit(e[o]),
                            a = t[o],
                            u = a._getBeta();
                        s.k1.negative && (s.k1.ineg(), a = a.neg(!0)), s.k2.negative && (s.k2.ineg(), u = u.neg(!0)), n[2 * o] = a, n[2 * o + 1] = u, i[2 * o] = s.k1, i[2 * o + 1] = s.k2
                    }
                    for (var h = this._wnafMulAdd(1, n, i, 2 * o, r), l = 0; l < 2 * o; l++) n[l] = null, i[l] = null;
                    return h
                }, w(N, v.BasePoint), M.prototype.point = function(t, e, r) {
                    return new N(this, t, e, r)
                }, M.prototype.pointFromJSON = function(t, e) {
                    return N.fromJSON(this, t, e)
                }, N.prototype._getBeta = function() {
                    if (this.curve.endo) {
                        var t = this.precomputed;
                        if (t && t.beta) return t.beta;
                        var e = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
                        if (t) {
                            var r = this.curve,
                                n = function(t) {
                                    return r.point(t.x.redMul(r.endo.beta), t.y)
                                };
                            t.beta = e, e.precomputed = {
                                beta: null,
                                naf: t.naf && {
                                    wnd: t.naf.wnd,
                                    points: t.naf.points.map(n)
                                },
                                doubles: t.doubles && {
                                    step: t.doubles.step,
                                    points: t.doubles.points.map(n)
                                }
                            }
                        }
                        return e
                    }
                }, N.prototype.toJSON = function() {
                    return this.precomputed ? [this.x, this.y, this.precomputed && {
                        doubles: this.precomputed.doubles && {
                            step: this.precomputed.doubles.step,
                            points: this.precomputed.doubles.points.slice(1)
                        },
                        naf: this.precomputed.naf && {
                            wnd: this.precomputed.naf.wnd,
                            points: this.precomputed.naf.points.slice(1)
                        }
                    }] : [this.x, this.y]
                }, N.fromJSON = function(t, e, r) {
                    "string" === typeof e && (e = JSON.parse(e));
                    var n = t.point(e[0], e[1], r);
                    if (!e[2]) return n;

                    function i(e) {
                        return t.point(e[0], e[1], r)
                    }
                    var o = e[2];
                    return n.precomputed = {
                        beta: null,
                        doubles: o.doubles && {
                            step: o.doubles.step,
                            points: [n].concat(o.doubles.points.map(i))
                        },
                        naf: o.naf && {
                            wnd: o.naf.wnd,
                            points: [n].concat(o.naf.points.map(i))
                        }
                    }, n
                }, N.prototype.inspect = function() {
                    return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">"
                }, N.prototype.isInfinity = function() {
                    return this.inf
                }, N.prototype.add = function(t) {
                    if (this.inf) return t;
                    if (t.inf) return this;
                    if (this.eq(t)) return this.dbl();
                    if (this.neg().eq(t)) return this.curve.point(null, null);
                    if (0 === this.x.cmp(t.x)) return this.curve.point(null, null);
                    var e = this.y.redSub(t.y);
                    0 !== e.cmpn(0) && (e = e.redMul(this.x.redSub(t.x).redInvm()));
                    var r = e.redSqr().redISub(this.x).redISub(t.x),
                        n = e.redMul(this.x.redSub(r)).redISub(this.y);
                    return this.curve.point(r, n)
                }, N.prototype.dbl = function() {
                    if (this.inf) return this;
                    var t = this.y.redAdd(this.y);
                    if (0 === t.cmpn(0)) return this.curve.point(null, null);
                    var e = this.curve.a,
                        r = this.x.redSqr(),
                        n = t.redInvm(),
                        i = r.redAdd(r).redIAdd(r).redIAdd(e).redMul(n),
                        o = i.redSqr().redISub(this.x.redAdd(this.x)),
                        s = i.redMul(this.x.redSub(o)).redISub(this.y);
                    return this.curve.point(o, s)
                }, N.prototype.getX = function() {
                    return this.x.fromRed()
                }, N.prototype.getY = function() {
                    return this.y.fromRed()
                }, N.prototype.mul = function(t) {
                    return t = new i.a(t, 16), this.isInfinity() ? this : this._hasDoubles(t) ? this.curve._fixedNafMul(this, t) : this.curve.endo ? this.curve._endoWnafMulAdd([this], [t]) : this.curve._wnafMul(this, t)
                }, N.prototype.mulAdd = function(t, e, r) {
                    var n = [this, e],
                        i = [t, r];
                    return this.curve.endo ? this.curve._endoWnafMulAdd(n, i) : this.curve._wnafMulAdd(1, n, i, 2)
                }, N.prototype.jmulAdd = function(t, e, r) {
                    var n = [this, e],
                        i = [t, r];
                    return this.curve.endo ? this.curve._endoWnafMulAdd(n, i, !0) : this.curve._wnafMulAdd(1, n, i, 2, !0)
                }, N.prototype.eq = function(t) {
                    return this === t || this.inf === t.inf && (this.inf || 0 === this.x.cmp(t.x) && 0 === this.y.cmp(t.y))
                }, N.prototype.neg = function(t) {
                    if (this.inf) return this;
                    var e = this.curve.point(this.x, this.y.redNeg());
                    if (t && this.precomputed) {
                        var r = this.precomputed,
                            n = function(t) {
                                return t.neg()
                            };
                        e.precomputed = {
                            naf: r.naf && {
                                wnd: r.naf.wnd,
                                points: r.naf.points.map(n)
                            },
                            doubles: r.doubles && {
                                step: r.doubles.step,
                                points: r.doubles.points.map(n)
                            }
                        }
                    }
                    return e
                }, N.prototype.toJ = function() {
                    if (this.inf) return this.curve.jpoint(null, null, null);
                    var t = this.curve.jpoint(this.x, this.y, this.curve.one);
                    return t
                }, w(A, v.BasePoint), M.prototype.jpoint = function(t, e, r) {
                    return new A(this, t, e, r)
                }, A.prototype.toP = function() {
                    if (this.isInfinity()) return this.curve.point(null, null);
                    var t = this.z.redInvm(),
                        e = t.redSqr(),
                        r = this.x.redMul(e),
                        n = this.y.redMul(e).redMul(t);
                    return this.curve.point(r, n)
                }, A.prototype.neg = function() {
                    return this.curve.jpoint(this.x, this.y.redNeg(), this.z)
                }, A.prototype.add = function(t) {
                    if (this.isInfinity()) return t;
                    if (t.isInfinity()) return this;
                    var e = t.z.redSqr(),
                        r = this.z.redSqr(),
                        n = this.x.redMul(e),
                        i = t.x.redMul(r),
                        o = this.y.redMul(e.redMul(t.z)),
                        s = t.y.redMul(r.redMul(this.z)),
                        a = n.redSub(i),
                        u = o.redSub(s);
                    if (0 === a.cmpn(0)) return 0 !== u.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
                    var h = a.redSqr(),
                        l = h.redMul(a),
                        f = n.redMul(h),
                        c = u.redSqr().redIAdd(l).redISub(f).redISub(f),
                        d = u.redMul(f.redISub(c)).redISub(o.redMul(l)),
                        m = this.z.redMul(t.z).redMul(a);
                    return this.curve.jpoint(c, d, m)
                }, A.prototype.mixedAdd = function(t) {
                    if (this.isInfinity()) return t.toJ();
                    if (t.isInfinity()) return this;
                    var e = this.z.redSqr(),
                        r = this.x,
                        n = t.x.redMul(e),
                        i = this.y,
                        o = t.y.redMul(e).redMul(this.z),
                        s = r.redSub(n),
                        a = i.redSub(o);
                    if (0 === s.cmpn(0)) return 0 !== a.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
                    var u = s.redSqr(),
                        h = u.redMul(s),
                        l = r.redMul(u),
                        f = a.redSqr().redIAdd(h).redISub(l).redISub(l),
                        c = a.redMul(l.redISub(f)).redISub(i.redMul(h)),
                        d = this.z.redMul(s);
                    return this.curve.jpoint(f, c, d)
                }, A.prototype.dblp = function(t) {
                    if (0 === t) return this;
                    if (this.isInfinity()) return this;
                    if (!t) return this.dbl();
                    var e;
                    if (this.curve.zeroA || this.curve.threeA) {
                        var r = this;
                        for (e = 0; e < t; e++) r = r.dbl();
                        return r
                    }
                    var n = this.curve.a,
                        i = this.curve.tinv,
                        o = this.x,
                        s = this.y,
                        a = this.z,
                        u = a.redSqr().redSqr(),
                        h = s.redAdd(s);
                    for (e = 0; e < t; e++) {
                        var l = o.redSqr(),
                            f = h.redSqr(),
                            c = f.redSqr(),
                            d = l.redAdd(l).redIAdd(l).redIAdd(n.redMul(u)),
                            m = o.redMul(f),
                            p = d.redSqr().redISub(m.redAdd(m)),
                            g = m.redISub(p),
                            v = d.redMul(g);
                        v = v.redIAdd(v).redISub(c);
                        var y = h.redMul(a);
                        e + 1 < t && (u = u.redMul(c)), o = p, a = y, h = v
                    }
                    return this.curve.jpoint(o, h.redMul(i), a)
                }, A.prototype.dbl = function() {
                    return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl()
                }, A.prototype._zeroDbl = function() {
                    var t, e, r;
                    if (this.zOne) {
                        var n = this.x.redSqr(),
                            i = this.y.redSqr(),
                            o = i.redSqr(),
                            s = this.x.redAdd(i).redSqr().redISub(n).redISub(o);
                        s = s.redIAdd(s);
                        var a = n.redAdd(n).redIAdd(n),
                            u = a.redSqr().redISub(s).redISub(s),
                            h = o.redIAdd(o);
                        h = h.redIAdd(h), h = h.redIAdd(h), t = u, e = a.redMul(s.redISub(u)).redISub(h), r = this.y.redAdd(this.y)
                    } else {
                        var l = this.x.redSqr(),
                            f = this.y.redSqr(),
                            c = f.redSqr(),
                            d = this.x.redAdd(f).redSqr().redISub(l).redISub(c);
                        d = d.redIAdd(d);
                        var m = l.redAdd(l).redIAdd(l),
                            p = m.redSqr(),
                            g = c.redIAdd(c);
                        g = g.redIAdd(g), g = g.redIAdd(g), t = p.redISub(d).redISub(d), e = m.redMul(d.redISub(t)).redISub(g), r = this.y.redMul(this.z), r = r.redIAdd(r)
                    }
                    return this.curve.jpoint(t, e, r)
                }, A.prototype._threeDbl = function() {
                    var t, e, r;
                    if (this.zOne) {
                        var n = this.x.redSqr(),
                            i = this.y.redSqr(),
                            o = i.redSqr(),
                            s = this.x.redAdd(i).redSqr().redISub(n).redISub(o);
                        s = s.redIAdd(s);
                        var a = n.redAdd(n).redIAdd(n).redIAdd(this.curve.a),
                            u = a.redSqr().redISub(s).redISub(s);
                        t = u;
                        var h = o.redIAdd(o);
                        h = h.redIAdd(h), h = h.redIAdd(h), e = a.redMul(s.redISub(u)).redISub(h), r = this.y.redAdd(this.y)
                    } else {
                        var l = this.z.redSqr(),
                            f = this.y.redSqr(),
                            c = this.x.redMul(f),
                            d = this.x.redSub(l).redMul(this.x.redAdd(l));
                        d = d.redAdd(d).redIAdd(d);
                        var m = c.redIAdd(c);
                        m = m.redIAdd(m);
                        var p = m.redAdd(m);
                        t = d.redSqr().redISub(p), r = this.y.redAdd(this.z).redSqr().redISub(f).redISub(l);
                        var g = f.redSqr();
                        g = g.redIAdd(g), g = g.redIAdd(g), g = g.redIAdd(g), e = d.redMul(m.redISub(t)).redISub(g)
                    }
                    return this.curve.jpoint(t, e, r)
                }, A.prototype._dbl = function() {
                    var t = this.curve.a,
                        e = this.x,
                        r = this.y,
                        n = this.z,
                        i = n.redSqr().redSqr(),
                        o = e.redSqr(),
                        s = r.redSqr(),
                        a = o.redAdd(o).redIAdd(o).redIAdd(t.redMul(i)),
                        u = e.redAdd(e);
                    u = u.redIAdd(u);
                    var h = u.redMul(s),
                        l = a.redSqr().redISub(h.redAdd(h)),
                        f = h.redISub(l),
                        c = s.redSqr();
                    c = c.redIAdd(c), c = c.redIAdd(c), c = c.redIAdd(c);
                    var d = a.redMul(f).redISub(c),
                        m = r.redAdd(r).redMul(n);
                    return this.curve.jpoint(l, d, m)
                }, A.prototype.trpl = function() {
                    if (!this.curve.zeroA) return this.dbl().add(this);
                    var t = this.x.redSqr(),
                        e = this.y.redSqr(),
                        r = this.z.redSqr(),
                        n = e.redSqr(),
                        i = t.redAdd(t).redIAdd(t),
                        o = i.redSqr(),
                        s = this.x.redAdd(e).redSqr().redISub(t).redISub(n);
                    s = s.redIAdd(s), s = s.redAdd(s).redIAdd(s), s = s.redISub(o);
                    var a = s.redSqr(),
                        u = n.redIAdd(n);
                    u = u.redIAdd(u), u = u.redIAdd(u), u = u.redIAdd(u);
                    var h = i.redIAdd(s).redSqr().redISub(o).redISub(a).redISub(u),
                        l = e.redMul(h);
                    l = l.redIAdd(l), l = l.redIAdd(l);
                    var f = this.x.redMul(a).redISub(l);
                    f = f.redIAdd(f), f = f.redIAdd(f);
                    var c = this.y.redMul(h.redMul(u.redISub(h)).redISub(s.redMul(a)));
                    c = c.redIAdd(c), c = c.redIAdd(c), c = c.redIAdd(c);
                    var d = this.z.redAdd(s).redSqr().redISub(r).redISub(a);
                    return this.curve.jpoint(f, c, d)
                }, A.prototype.mul = function(t, e) {
                    return t = new i.a(t, e), this.curve._wnafMul(this, t)
                }, A.prototype.eq = function(t) {
                    if ("affine" === t.type) return this.eq(t.toJ());
                    if (this === t) return !0;
                    var e = this.z.redSqr(),
                        r = t.z.redSqr();
                    if (0 !== this.x.redMul(r).redISub(t.x.redMul(e)).cmpn(0)) return !1;
                    var n = e.redMul(this.z),
                        i = r.redMul(t.z);
                    return 0 === this.y.redMul(i).redISub(t.y.redMul(n)).cmpn(0)
                }, A.prototype.eqXToP = function(t) {
                    var e = this.z.redSqr(),
                        r = t.toRed(this.curve.red).redMul(e);
                    if (0 === this.x.cmp(r)) return !0;
                    for (var n = t.clone(), i = this.curve.redN.redMul(e);;) {
                        if (n.iadd(this.curve.n), n.cmp(this.curve.p) >= 0) return !1;
                        if (r.redIAdd(i), 0 === this.x.cmp(r)) return !0
                    }
                }, A.prototype.inspect = function() {
                    return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">"
                }, A.prototype.isInfinity = function() {
                    return 0 === this.z.cmpn(0)
                };
                var _ = a((function(t, e) {
                        var r = e;
                        r.base = v, r.short = E, r.mont = null, r.edwards = null
                    })),
                    S = a((function(t, e) {
                        var r, n = e,
                            i = c.assert;

                        function o(t) {
                            "short" === t.type ? this.curve = new _.short(t) : "edwards" === t.type ? this.curve = new _.edwards(t) : this.curve = new _.mont(t), this.g = this.curve.g, this.n = this.curve.n, this.hash = t.hash, i(this.g.validate(), "Invalid curve"), i(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O")
                        }

                        function a(t, e) {
                            Object.defineProperty(n, t, {
                                configurable: !0,
                                enumerable: !0,
                                get: function() {
                                    var r = new o(e);
                                    return Object.defineProperty(n, t, {
                                        configurable: !0,
                                        enumerable: !0,
                                        value: r
                                    }), r
                                }
                            })
                        }
                        n.PresetCurve = o, a("p192", {
                            type: "short",
                            prime: "p192",
                            p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
                            a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
                            b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
                            n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
                            hash: s.a.sha256,
                            gRed: !1,
                            g: ["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012", "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]
                        }), a("p224", {
                            type: "short",
                            prime: "p224",
                            p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
                            a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
                            b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
                            n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
                            hash: s.a.sha256,
                            gRed: !1,
                            g: ["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21", "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]
                        }), a("p256", {
                            type: "short",
                            prime: null,
                            p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
                            a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
                            b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
                            n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
                            hash: s.a.sha256,
                            gRed: !1,
                            g: ["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296", "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]
                        }), a("p384", {
                            type: "short",
                            prime: null,
                            p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
                            a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
                            b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
                            n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
                            hash: s.a.sha384,
                            gRed: !1,
                            g: ["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7", "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]
                        }), a("p521", {
                            type: "short",
                            prime: null,
                            p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
                            a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
                            b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
                            n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
                            hash: s.a.sha512,
                            gRed: !1,
                            g: ["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66", "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"]
                        }), a("curve25519", {
                            type: "mont",
                            prime: "p25519",
                            p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
                            a: "76d06",
                            b: "1",
                            n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
                            hash: s.a.sha256,
                            gRed: !1,
                            g: ["9"]
                        }), a("ed25519", {
                            type: "edwards",
                            prime: "p25519",
                            p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
                            a: "-1",
                            c: "1",
                            d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
                            n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
                            hash: s.a.sha256,
                            gRed: !1,
                            g: ["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a", "6666666666666666666666666666666666666666666666666666666666666658"]
                        });
                        try {
                            r = null.crash()
                        } catch (u) {
                            r = void 0
                        }
                        a("secp256k1", {
                            type: "short",
                            prime: "k256",
                            p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
                            a: "0",
                            b: "7",
                            n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
                            h: "1",
                            hash: s.a.sha256,
                            beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
                            lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
                            basis: [{
                                a: "3086d221a7d46bcde86c90e49284eb15",
                                b: "-e4437ed6010e88286f547fa90abfe4c3"
                            }, {
                                a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
                                b: "3086d221a7d46bcde86c90e49284eb15"
                            }],
                            gRed: !1,
                            g: ["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798", "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8", r]
                        })
                    }));

                function I(t) {
                    if (!(this instanceof I)) return new I(t);
                    this.hash = t.hash, this.predResist = !!t.predResist, this.outLen = this.hash.outSize, this.minEntropy = t.minEntropy || this.hash.hmacStrength, this._reseed = null, this.reseedInterval = null, this.K = null, this.V = null;
                    var e = f.toArray(t.entropy, t.entropyEnc || "hex"),
                        r = f.toArray(t.nonce, t.nonceEnc || "hex"),
                        n = f.toArray(t.pers, t.persEnc || "hex");
                    h(e.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._init(e, r, n)
                }
                var R = I;
                I.prototype._init = function(t, e, r) {
                    var n = t.concat(e).concat(r);
                    this.K = new Array(this.outLen / 8), this.V = new Array(this.outLen / 8);
                    for (var i = 0; i < this.V.length; i++) this.K[i] = 0, this.V[i] = 1;
                    this._update(n), this._reseed = 1, this.reseedInterval = 281474976710656
                }, I.prototype._hmac = function() {
                    return new s.a.hmac(this.hash, this.K)
                }, I.prototype._update = function(t) {
                    var e = this._hmac().update(this.V).update([0]);
                    t && (e = e.update(t)), this.K = e.digest(), this.V = this._hmac().update(this.V).digest(), t && (this.K = this._hmac().update(this.V).update([1]).update(t).digest(), this.V = this._hmac().update(this.V).digest())
                }, I.prototype.reseed = function(t, e, r, n) {
                    "string" !== typeof e && (n = r, r = e, e = null), t = f.toArray(t, e), r = f.toArray(r, n), h(t.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._update(t.concat(r || [])), this._reseed = 1
                }, I.prototype.generate = function(t, e, r, n) {
                    if (this._reseed > this.reseedInterval) throw new Error("Reseed is required");
                    "string" !== typeof e && (n = r, r = e, e = null), r && (r = f.toArray(r, n || "hex"), this._update(r));
                    var i = [];
                    while (i.length < t) this.V = this._hmac().update(this.V).digest(), i = i.concat(this.V);
                    var o = i.slice(0, t);
                    return this._update(r), this._reseed++, f.encode(o, e)
                };
                var P = c.assert;

                function k(t, e) {
                    this.ec = t, this.priv = null, this.pub = null, e.priv && this._importPrivate(e.priv, e.privEnc), e.pub && this._importPublic(e.pub, e.pubEnc)
                }
                var x = k;
                k.fromPublic = function(t, e, r) {
                    return e instanceof k ? e : new k(t, {
                        pub: e,
                        pubEnc: r
                    })
                }, k.fromPrivate = function(t, e, r) {
                    return e instanceof k ? e : new k(t, {
                        priv: e,
                        privEnc: r
                    })
                }, k.prototype.validate = function() {
                    var t = this.getPublic();
                    return t.isInfinity() ? {
                        result: !1,
                        reason: "Invalid public key"
                    } : t.validate() ? t.mul(this.ec.curve.n).isInfinity() ? {
                        result: !0,
                        reason: null
                    } : {
                        result: !1,
                        reason: "Public key * N != O"
                    } : {
                        result: !1,
                        reason: "Public key is not a point"
                    }
                }, k.prototype.getPublic = function(t, e) {
                    return "string" === typeof t && (e = t, t = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), e ? this.pub.encode(e, t) : this.pub
                }, k.prototype.getPrivate = function(t) {
                    return "hex" === t ? this.priv.toString(16, 2) : this.priv
                }, k.prototype._importPrivate = function(t, e) {
                    this.priv = new i.a(t, e || 16), this.priv = this.priv.umod(this.ec.curve.n)
                }, k.prototype._importPublic = function(t, e) {
                    if (t.x || t.y) return "mont" === this.ec.curve.type ? P(t.x, "Need x coordinate") : "short" !== this.ec.curve.type && "edwards" !== this.ec.curve.type || P(t.x && t.y, "Need both x and y coordinate"), void(this.pub = this.ec.curve.point(t.x, t.y));
                    this.pub = this.ec.curve.decodePoint(t, e)
                }, k.prototype.derive = function(t) {
                    return t.validate() || P(t.validate(), "public point not validated"), t.mul(this.priv).getX()
                }, k.prototype.sign = function(t, e, r) {
                    return this.ec.sign(t, this, e, r)
                }, k.prototype.verify = function(t, e) {
                    return this.ec.verify(t, e, this)
                }, k.prototype.inspect = function() {
                    return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >"
                };
                var T = c.assert;

                function O(t, e) {
                    if (t instanceof O) return t;
                    this._importDER(t, e) || (T(t.r && t.s, "Signature without r or s"), this.r = new i.a(t.r, 16), this.s = new i.a(t.s, 16), void 0 === t.recoveryParam ? this.recoveryParam = null : this.recoveryParam = t.recoveryParam)
                }
                var C = O;

                function U() {
                    this.place = 0
                }

                function F(t, e) {
                    var r = t[e.place++];
                    if (!(128 & r)) return r;
                    var n = 15 & r;
                    if (0 === n || n > 4) return !1;
                    for (var i = 0, o = 0, s = e.place; o < n; o++, s++) i <<= 8, i |= t[s], i >>>= 0;
                    return !(i <= 127) && (e.place = s, i)
                }

                function B(t) {
                    var e = 0,
                        r = t.length - 1;
                    while (!t[e] && !(128 & t[e + 1]) && e < r) e++;
                    return 0 === e ? t : t.slice(e)
                }

                function L(t, e) {
                    if (e < 128) t.push(e);
                    else {
                        var r = 1 + (Math.log(e) / Math.LN2 >>> 3);
                        t.push(128 | r);
                        while (--r) t.push(e >>> (r << 3) & 255);
                        t.push(e)
                    }
                }
                O.prototype._importDER = function(t, e) {
                    t = c.toArray(t, e);
                    var r = new U;
                    if (48 !== t[r.place++]) return !1;
                    var n = F(t, r);
                    if (!1 === n) return !1;
                    if (n + r.place !== t.length) return !1;
                    if (2 !== t[r.place++]) return !1;
                    var o = F(t, r);
                    if (!1 === o) return !1;
                    var s = t.slice(r.place, o + r.place);
                    if (r.place += o, 2 !== t[r.place++]) return !1;
                    var a = F(t, r);
                    if (!1 === a) return !1;
                    if (t.length !== a + r.place) return !1;
                    var u = t.slice(r.place, a + r.place);
                    if (0 === s[0]) {
                        if (!(128 & s[1])) return !1;
                        s = s.slice(1)
                    }
                    if (0 === u[0]) {
                        if (!(128 & u[1])) return !1;
                        u = u.slice(1)
                    }
                    return this.r = new i.a(s), this.s = new i.a(u), this.recoveryParam = null, !0
                }, O.prototype.toDER = function(t) {
                    var e = this.r.toArray(),
                        r = this.s.toArray();
                    128 & e[0] && (e = [0].concat(e)), 128 & r[0] && (r = [0].concat(r)), e = B(e), r = B(r);
                    while (!r[0] && !(128 & r[1])) r = r.slice(1);
                    var n = [2];
                    L(n, e.length), n = n.concat(e), n.push(2), L(n, r.length);
                    var i = n.concat(r),
                        o = [48];
                    return L(o, i.length), o = o.concat(i), c.encode(o, t)
                };
                var D = function() {
                        throw new Error("unsupported")
                    },
                    G = c.assert;

                function j(t) {
                    if (!(this instanceof j)) return new j(t);
                    "string" === typeof t && (G(Object.prototype.hasOwnProperty.call(S, t), "Unknown curve " + t), t = S[t]), t instanceof S.PresetCurve && (t = {
                        curve: t
                    }), this.curve = t.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), this.g = this.curve.g, this.g = t.curve.g, this.g.precompute(t.curve.n.bitLength() + 1), this.hash = t.hash || t.curve.hash
                }
                var q = j;
                j.prototype.keyPair = function(t) {
                    return new x(this, t)
                }, j.prototype.keyFromPrivate = function(t, e) {
                    return x.fromPrivate(this, t, e)
                }, j.prototype.keyFromPublic = function(t, e) {
                    return x.fromPublic(this, t, e)
                }, j.prototype.genKeyPair = function(t) {
                    t || (t = {});
                    for (var e = new R({
                            hash: this.hash,
                            pers: t.pers,
                            persEnc: t.persEnc || "utf8",
                            entropy: t.entropy || D(this.hash.hmacStrength),
                            entropyEnc: t.entropy && t.entropyEnc || "utf8",
                            nonce: this.n.toArray()
                        }), r = this.n.byteLength(), n = this.n.sub(new i.a(2));;) {
                        var o = new i.a(e.generate(r));
                        if (!(o.cmp(n) > 0)) return o.iaddn(1), this.keyFromPrivate(o)
                    }
                }, j.prototype._truncateToN = function(t, e) {
                    var r = 8 * t.byteLength() - this.n.bitLength();
                    return r > 0 && (t = t.ushrn(r)), !e && t.cmp(this.n) >= 0 ? t.sub(this.n) : t
                }, j.prototype.sign = function(t, e, r, n) {
                    "object" === typeof r && (n = r, r = null), n || (n = {}), e = this.keyFromPrivate(e, r), t = this._truncateToN(new i.a(t, 16));
                    for (var o = this.n.byteLength(), s = e.getPrivate().toArray("be", o), a = t.toArray("be", o), u = new R({
                            hash: this.hash,
                            entropy: s,
                            nonce: a,
                            pers: n.pers,
                            persEnc: n.persEnc || "utf8"
                        }), h = this.n.sub(new i.a(1)), l = 0;; l++) {
                        var f = n.k ? n.k(l) : new i.a(u.generate(this.n.byteLength()));
                        if (f = this._truncateToN(f, !0), !(f.cmpn(1) <= 0 || f.cmp(h) >= 0)) {
                            var c = this.g.mul(f);
                            if (!c.isInfinity()) {
                                var d = c.getX(),
                                    m = d.umod(this.n);
                                if (0 !== m.cmpn(0)) {
                                    var p = f.invm(this.n).mul(m.mul(e.getPrivate()).iadd(t));
                                    if (p = p.umod(this.n), 0 !== p.cmpn(0)) {
                                        var g = (c.getY().isOdd() ? 1 : 0) | (0 !== d.cmp(m) ? 2 : 0);
                                        return n.canonical && p.cmp(this.nh) > 0 && (p = this.n.sub(p), g ^= 1), new C({
                                            r: m,
                                            s: p,
                                            recoveryParam: g
                                        })
                                    }
                                }
                            }
                        }
                    }
                }, j.prototype.verify = function(t, e, r, n) {
                    t = this._truncateToN(new i.a(t, 16)), r = this.keyFromPublic(r, n), e = new C(e, "hex");
                    var o = e.r,
                        s = e.s;
                    if (o.cmpn(1) < 0 || o.cmp(this.n) >= 0) return !1;
                    if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0) return !1;
                    var a, u = s.invm(this.n),
                        h = u.mul(t).umod(this.n),
                        l = u.mul(o).umod(this.n);
                    return this.curve._maxwellTrick ? (a = this.g.jmulAdd(h, r.getPublic(), l), !a.isInfinity() && a.eqXToP(o)) : (a = this.g.mulAdd(h, r.getPublic(), l), !a.isInfinity() && 0 === a.getX().umod(this.n).cmp(o))
                }, j.prototype.recoverPubKey = function(t, e, r, n) {
                    G((3 & r) === r, "The recovery param is more than two bits"), e = new C(e, n);
                    var o = this.n,
                        s = new i.a(t),
                        a = e.r,
                        u = e.s,
                        h = 1 & r,
                        l = r >> 1;
                    if (a.cmp(this.curve.p.umod(this.curve.n)) >= 0 && l) throw new Error("Unable to find sencond key candinate");
                    a = l ? this.curve.pointFromX(a.add(this.curve.n), h) : this.curve.pointFromX(a, h);
                    var f = e.r.invm(o),
                        c = o.sub(s).mul(f).umod(o),
                        d = u.mul(f).umod(o);
                    return this.g.mulAdd(c, a, d)
                }, j.prototype.getKeyRecoveryParam = function(t, e, r, n) {
                    if (e = new C(e, n), null !== e.recoveryParam) return e.recoveryParam;
                    for (var i = 0; i < 4; i++) {
                        var o;
                        try {
                            o = this.recoverPubKey(t, e, i)
                        } catch (t) {
                            continue
                        }
                        if (o.eq(r)) return i
                    }
                    throw new Error("Unable to find valid recovery factor")
                };
                var z = a((function(t, e) {
                        var r = e;
                        r.version = {
                            version: "6.5.4"
                        }.version, r.utils = c, r.rand = function() {
                            throw new Error("unsupported")
                        }, r.curve = _, r.curves = S, r.ec = q, r.eddsa = null
                    })),
                    K = z.ec
            }).call(this, r("c8ba"))
        },
        e165: function(t, e, r) {
            "use strict";
            r.r(e), r.d(e, "encode", (function() {
                return l
            })), r.d(e, "decode", (function() {
                return d
            }));
            var n = r("549e"),
                i = r("ffb2");
            const o = "rlp/5.5.0",
                s = new i["a"](o);

            function a(t) {
                const e = [];
                while (t) e.unshift(255 & t), t >>= 8;
                return e
            }

            function u(t, e, r) {
                let n = 0;
                for (let i = 0; i < r; i++) n = 256 * n + t[e + i];
                return n
            }

            function h(t) {
                if (Array.isArray(t)) {
                    let e = [];
                    if (t.forEach((function(t) {
                            e = e.concat(h(t))
                        })), e.length <= 55) return e.unshift(192 + e.length), e;
                    const r = a(e.length);
                    return r.unshift(247 + r.length), r.concat(e)
                }
                Object(n["k"])(t) || s.throwArgumentError("RLP object must be BytesLike", "object", t);
                const e = Array.prototype.slice.call(Object(n["a"])(t));
                if (1 === e.length && e[0] <= 127) return e;
                if (e.length <= 55) return e.unshift(128 + e.length), e;
                const r = a(e.length);
                return r.unshift(183 + r.length), r.concat(e)
            }

            function l(t) {
                return Object(n["i"])(h(t))
            }

            function f(t, e, r, n) {
                const o = [];
                while (r < e + 1 + n) {
                    const a = c(t, r);
                    o.push(a.result), r += a.consumed, r > e + 1 + n && s.throwError("child data too short", i["a"].errors.BUFFER_OVERRUN, {})
                }
                return {
                    consumed: 1 + n,
                    result: o
                }
            }

            function c(t, e) {
                if (0 === t.length && s.throwError("data too short", i["a"].errors.BUFFER_OVERRUN, {}), t[e] >= 248) {
                    const r = t[e] - 247;
                    e + 1 + r > t.length && s.throwError("data short segment too short", i["a"].errors.BUFFER_OVERRUN, {});
                    const n = u(t, e + 1, r);
                    return e + 1 + r + n > t.length && s.throwError("data long segment too short", i["a"].errors.BUFFER_OVERRUN, {}), f(t, e, e + 1 + r, r + n)
                }
                if (t[e] >= 192) {
                    const r = t[e] - 192;
                    return e + 1 + r > t.length && s.throwError("data array too short", i["a"].errors.BUFFER_OVERRUN, {}), f(t, e, e + 1, r)
                }
                if (t[e] >= 184) {
                    const r = t[e] - 183;
                    e + 1 + r > t.length && s.throwError("data array too short", i["a"].errors.BUFFER_OVERRUN, {});
                    const o = u(t, e + 1, r);
                    e + 1 + r + o > t.length && s.throwError("data array too short", i["a"].errors.BUFFER_OVERRUN, {});
                    const a = Object(n["i"])(t.slice(e + 1 + r, e + 1 + r + o));
                    return {
                        consumed: 1 + r + o,
                        result: a
                    }
                }
                if (t[e] >= 128) {
                    const r = t[e] - 128;
                    e + 1 + r > t.length && s.throwError("data too short", i["a"].errors.BUFFER_OVERRUN, {});
                    const o = Object(n["i"])(t.slice(e + 1, e + 1 + r));
                    return {
                        consumed: 1 + r,
                        result: o
                    }
                }
                return {
                    consumed: 1,
                    result: Object(n["i"])(t[e])
                }
            }

            function d(t) {
                const e = Object(n["a"])(t),
                    r = c(e, 0);
                return r.consumed !== e.length && s.throwArgumentError("invalid rlp data", "data", t), r.result
            }
        },
        ed62: function(t, e, r) {
            "use strict";
            r.d(e, "b", (function() {
                return ot
            })), r.d(e, "a", (function() {
                return st
            })), r.d(e, "c", (function() {
                return at
            }));
            var n = r("bb68"),
                i = r.n(n);
            const o = "logger/5.6.0";
            let s = !1,
                a = !1;
            const u = {
                debug: 1,
                default: 2,
                info: 2,
                warning: 3,
                error: 4,
                off: 5
            };
            let h = u["default"],
                l = null;

            function f() {
                try {
                    const t = [];
                    if (["NFD", "NFC", "NFKD", "NFKC"].forEach(e => {
                            try {
                                if ("test" !== "test".normalize(e)) throw new Error("bad normalize")
                            } catch (r) {
                                t.push(e)
                            }
                        }), t.length) throw new Error("missing " + t.join(", "));
                    if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) throw new Error("broken implementation")
                } catch (t) {
                    return t.message
                }
                return null
            }
            const c = f();
            var d, m;
            (function(t) {
                t["DEBUG"] = "DEBUG", t["INFO"] = "INFO", t["WARNING"] = "WARNING", t["ERROR"] = "ERROR", t["OFF"] = "OFF"
            })(d || (d = {})),
            function(t) {
                t["UNKNOWN_ERROR"] = "UNKNOWN_ERROR", t["NOT_IMPLEMENTED"] = "NOT_IMPLEMENTED", t["UNSUPPORTED_OPERATION"] = "UNSUPPORTED_OPERATION", t["NETWORK_ERROR"] = "NETWORK_ERROR", t["SERVER_ERROR"] = "SERVER_ERROR", t["TIMEOUT"] = "TIMEOUT", t["BUFFER_OVERRUN"] = "BUFFER_OVERRUN", t["NUMERIC_FAULT"] = "NUMERIC_FAULT", t["MISSING_NEW"] = "MISSING_NEW", t["INVALID_ARGUMENT"] = "INVALID_ARGUMENT", t["MISSING_ARGUMENT"] = "MISSING_ARGUMENT", t["UNEXPECTED_ARGUMENT"] = "UNEXPECTED_ARGUMENT", t["CALL_EXCEPTION"] = "CALL_EXCEPTION", t["INSUFFICIENT_FUNDS"] = "INSUFFICIENT_FUNDS", t["NONCE_EXPIRED"] = "NONCE_EXPIRED", t["REPLACEMENT_UNDERPRICED"] = "REPLACEMENT_UNDERPRICED", t["UNPREDICTABLE_GAS_LIMIT"] = "UNPREDICTABLE_GAS_LIMIT", t["TRANSACTION_REPLACED"] = "TRANSACTION_REPLACED"
            }(m || (m = {}));
            const p = "0123456789abcdef";
            class g {
                constructor(t) {
                    Object.defineProperty(this, "version", {
                        enumerable: !0,
                        value: t,
                        writable: !1
                    })
                }
                _log(t, e) {
                    const r = t.toLowerCase();
                    null == u[r] && this.throwArgumentError("invalid log level name", "logLevel", t), h > u[r] || console.log.apply(console, e)
                }
                debug(...t) {
                    this._log(g.levels.DEBUG, t)
                }
                info(...t) {
                    this._log(g.levels.INFO, t)
                }
                warn(...t) {
                    this._log(g.levels.WARNING, t)
                }
                makeError(t, e, r) {
                    if (a) return this.makeError("censored error", e, {});
                    e || (e = g.errors.UNKNOWN_ERROR), r || (r = {});
                    const n = [];
                    Object.keys(r).forEach(t => {
                        const e = r[t];
                        try {
                            if (e instanceof Uint8Array) {
                                let r = "";
                                for (let t = 0; t < e.length; t++) r += p[e[t] >> 4], r += p[15 & e[t]];
                                n.push(t + "=Uint8Array(0x" + r + ")")
                            } else n.push(t + "=" + JSON.stringify(e))
                        } catch (s) {
                            n.push(t + "=" + JSON.stringify(r[t].toString()))
                        }
                    }), n.push("code=" + e), n.push("version=" + this.version);
                    const i = t;
                    let o = "";
                    switch (e) {
                        case m.NUMERIC_FAULT:
                            {
                                o = "NUMERIC_FAULT";
                                const e = t;
                                switch (e) {
                                    case "overflow":
                                    case "underflow":
                                    case "division-by-zero":
                                        o += "-" + e;
                                        break;
                                    case "negative-power":
                                    case "negative-width":
                                        o += "-unsupported";
                                        break;
                                    case "unbound-bitwise-result":
                                        o += "-unbound-result";
                                        break
                                }
                                break
                            }
                        case m.CALL_EXCEPTION:
                        case m.INSUFFICIENT_FUNDS:
                        case m.MISSING_NEW:
                        case m.NONCE_EXPIRED:
                        case m.REPLACEMENT_UNDERPRICED:
                        case m.TRANSACTION_REPLACED:
                        case m.UNPREDICTABLE_GAS_LIMIT:
                            o = e;
                            break
                    }
                    o && (t += " [ See: https://links.ethers.org/v5-errors-" + o + " ]"), n.length && (t += " (" + n.join(", ") + ")");
                    const s = new Error(t);
                    return s.reason = i, s.code = e, Object.keys(r).forEach((function(t) {
                        s[t] = r[t]
                    })), s
                }
                throwError(t, e, r) {
                    throw this.makeError(t, e, r)
                }
                throwArgumentError(t, e, r) {
                    return this.throwError(t, g.errors.INVALID_ARGUMENT, {
                        argument: e,
                        value: r
                    })
                }
                assert(t, e, r, n) {
                    t || this.throwError(e, r, n)
                }
                assertArgument(t, e, r, n) {
                    t || this.throwArgumentError(e, r, n)
                }
                checkNormalize(t) {
                    null == t && (t = "platform missing String.prototype.normalize"), c && this.throwError("platform missing String.prototype.normalize", g.errors.UNSUPPORTED_OPERATION, {
                        operation: "String.prototype.normalize",
                        form: c
                    })
                }
                checkSafeUint53(t, e) {
                    "number" === typeof t && (null == e && (e = "value not safe"), (t < 0 || t >= 9007199254740991) && this.throwError(e, g.errors.NUMERIC_FAULT, {
                        operation: "checkSafeInteger",
                        fault: "out-of-safe-range",
                        value: t
                    }), t % 1 && this.throwError(e, g.errors.NUMERIC_FAULT, {
                        operation: "checkSafeInteger",
                        fault: "non-integer",
                        value: t
                    }))
                }
                checkArgumentCount(t, e, r) {
                    r = r ? ": " + r : "", t < e && this.throwError("missing argument" + r, g.errors.MISSING_ARGUMENT, {
                        count: t,
                        expectedCount: e
                    }), t > e && this.throwError("too many arguments" + r, g.errors.UNEXPECTED_ARGUMENT, {
                        count: t,
                        expectedCount: e
                    })
                }
                checkNew(t, e) {
                    t !== Object && null != t || this.throwError("missing new", g.errors.MISSING_NEW, {
                        name: e.name
                    })
                }
                checkAbstract(t, e) {
                    t === e ? this.throwError("cannot instantiate abstract class " + JSON.stringify(e.name) + " directly; use a sub-class", g.errors.UNSUPPORTED_OPERATION, {
                        name: t.name,
                        operation: "new"
                    }) : t !== Object && null != t || this.throwError("missing new", g.errors.MISSING_NEW, {
                        name: e.name
                    })
                }
                static globalLogger() {
                    return l || (l = new g(o)), l
                }
                static setCensorship(t, e) {
                    if (!t && e && this.globalLogger().throwError("cannot permanently disable censorship", g.errors.UNSUPPORTED_OPERATION, {
                            operation: "setCensorship"
                        }), s) {
                        if (!t) return;
                        this.globalLogger().throwError("error censorship permanent", g.errors.UNSUPPORTED_OPERATION, {
                            operation: "setCensorship"
                        })
                    }
                    a = !!t, s = !!e
                }
                static setLogLevel(t) {
                    const e = u[t.toLowerCase()];
                    null != e ? h = e : g.globalLogger().warn("invalid log level - " + t)
                }
                static from(t) {
                    return new g(t)
                }
            }
            g.errors = m, g.levels = d;
            const v = "bytes/5.6.1",
                y = new g(v);

            function w(t) {
                return !!t.toHexString
            }

            function b(t) {
                return t.slice || (t.slice = function() {
                    const e = Array.prototype.slice.call(arguments);
                    return b(new Uint8Array(Array.prototype.slice.apply(t, e)))
                }), t
            }

            function M(t) {
                return "number" === typeof t && t == t && t % 1 === 0
            }

            function E(t) {
                if (null == t) return !1;
                if (t.constructor === Uint8Array) return !0;
                if ("string" === typeof t) return !1;
                if (!M(t.length) || t.length < 0) return !1;
                for (let e = 0; e < t.length; e++) {
                    const r = t[e];
                    if (!M(r) || r < 0 || r >= 256) return !1
                }
                return !0
            }

            function N(t, e) {
                if (e || (e = {}), "number" === typeof t) {
                    y.checkSafeUint53(t, "invalid arrayify value");
                    const e = [];
                    while (t) e.unshift(255 & t), t = parseInt(String(t / 256));
                    return 0 === e.length && e.push(0), b(new Uint8Array(e))
                }
                if (e.allowMissingPrefix && "string" === typeof t && "0x" !== t.substring(0, 2) && (t = "0x" + t), w(t) && (t = t.toHexString()), S(t)) {
                    let r = t.substring(2);
                    r.length % 2 && ("left" === e.hexPad ? r = "0" + r : "right" === e.hexPad ? r += "0" : y.throwArgumentError("hex data is odd-length", "value", t));
                    const n = [];
                    for (let t = 0; t < r.length; t += 2) n.push(parseInt(r.substring(t, t + 2), 16));
                    return b(new Uint8Array(n))
                }
                return E(t) ? b(new Uint8Array(t)) : y.throwArgumentError("invalid arrayify value", "value", t)
            }

            function A(t) {
                const e = t.map(t => N(t)),
                    r = e.reduce((t, e) => t + e.length, 0),
                    n = new Uint8Array(r);
                return e.reduce((t, e) => (n.set(e, t), t + e.length), 0), b(n)
            }

            function _(t, e) {
                t = N(t), t.length > e && y.throwArgumentError("value out of range", "value", arguments[0]);
                const r = new Uint8Array(e);
                return r.set(t, e - t.length), b(r)
            }

            function S(t, e) {
                return !("string" !== typeof t || !t.match(/^0x[0-9A-Fa-f]*$/)) && (!e || t.length === 2 + 2 * e)
            }
            const I = "0123456789abcdef";

            function R(t, e) {
                if (e || (e = {}), "number" === typeof t) {
                    y.checkSafeUint53(t, "invalid hexlify value");
                    let e = "";
                    while (t) e = I[15 & t] + e, t = Math.floor(t / 16);
                    return e.length ? (e.length % 2 && (e = "0" + e), "0x" + e) : "0x00"
                }
                if ("bigint" === typeof t) return t = t.toString(16), t.length % 2 ? "0x0" + t : "0x" + t;
                if (e.allowMissingPrefix && "string" === typeof t && "0x" !== t.substring(0, 2) && (t = "0x" + t), w(t)) return t.toHexString();
                if (S(t)) return t.length % 2 && ("left" === e.hexPad ? t = "0x0" + t.substring(2) : "right" === e.hexPad ? t += "0" : y.throwArgumentError("hex data is odd-length", "value", t)), t.toLowerCase();
                if (E(t)) {
                    let e = "0x";
                    for (let r = 0; r < t.length; r++) {
                        let n = t[r];
                        e += I[(240 & n) >> 4] + I[15 & n]
                    }
                    return e
                }
                return y.throwArgumentError("invalid hexlify value", "value", t)
            }
            const P = "bignumber/5.6.0";
            var k = i.a.BN;
            const x = new g(P),
                T = {},
                O = 9007199254740991;
            let C = !1;
            class U {
                constructor(t, e) {
                    x.checkNew(new.target, U), t !== T && x.throwError("cannot call constructor directly; use BigNumber.from", g.errors.UNSUPPORTED_OPERATION, {
                        operation: "new (BigNumber)"
                    }), this._hex = e, this._isBigNumber = !0, Object.freeze(this)
                }
                fromTwos(t) {
                    return B(L(this).fromTwos(t))
                }
                toTwos(t) {
                    return B(L(this).toTwos(t))
                }
                abs() {
                    return "-" === this._hex[0] ? U.from(this._hex.substring(1)) : this
                }
                add(t) {
                    return B(L(this).add(L(t)))
                }
                sub(t) {
                    return B(L(this).sub(L(t)))
                }
                div(t) {
                    const e = U.from(t);
                    return e.isZero() && D("division-by-zero", "div"), B(L(this).div(L(t)))
                }
                mul(t) {
                    return B(L(this).mul(L(t)))
                }
                mod(t) {
                    const e = L(t);
                    return e.isNeg() && D("division-by-zero", "mod"), B(L(this).umod(e))
                }
                pow(t) {
                    const e = L(t);
                    return e.isNeg() && D("negative-power", "pow"), B(L(this).pow(e))
                }
                and(t) {
                    const e = L(t);
                    return (this.isNegative() || e.isNeg()) && D("unbound-bitwise-result", "and"), B(L(this).and(e))
                }
                or(t) {
                    const e = L(t);
                    return (this.isNegative() || e.isNeg()) && D("unbound-bitwise-result", "or"), B(L(this).or(e))
                }
                xor(t) {
                    const e = L(t);
                    return (this.isNegative() || e.isNeg()) && D("unbound-bitwise-result", "xor"), B(L(this).xor(e))
                }
                mask(t) {
                    return (this.isNegative() || t < 0) && D("negative-width", "mask"), B(L(this).maskn(t))
                }
                shl(t) {
                    return (this.isNegative() || t < 0) && D("negative-width", "shl"), B(L(this).shln(t))
                }
                shr(t) {
                    return (this.isNegative() || t < 0) && D("negative-width", "shr"), B(L(this).shrn(t))
                }
                eq(t) {
                    return L(this).eq(L(t))
                }
                lt(t) {
                    return L(this).lt(L(t))
                }
                lte(t) {
                    return L(this).lte(L(t))
                }
                gt(t) {
                    return L(this).gt(L(t))
                }
                gte(t) {
                    return L(this).gte(L(t))
                }
                isNegative() {
                    return "-" === this._hex[0]
                }
                isZero() {
                    return L(this).isZero()
                }
                toNumber() {
                    try {
                        return L(this).toNumber()
                    } catch (t) {
                        D("overflow", "toNumber", this.toString())
                    }
                    return null
                }
                toBigInt() {
                    try {
                        return BigInt(this.toString())
                    } catch (t) {}
                    return x.throwError("this platform does not support BigInt", g.errors.UNSUPPORTED_OPERATION, {
                        value: this.toString()
                    })
                }
                toString() {
                    return arguments.length > 0 && (10 === arguments[0] ? C || (C = !0, x.warn("BigNumber.toString does not accept any parameters; base-10 is assumed")) : 16 === arguments[0] ? x.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()", g.errors.UNEXPECTED_ARGUMENT, {}) : x.throwError("BigNumber.toString does not accept parameters", g.errors.UNEXPECTED_ARGUMENT, {})), L(this).toString(10)
                }
                toHexString() {
                    return this._hex
                }
                toJSON(t) {
                    return {
                        type: "BigNumber",
                        hex: this.toHexString()
                    }
                }
                static from(t) {
                    if (t instanceof U) return t;
                    if ("string" === typeof t) return t.match(/^-?0x[0-9a-f]+$/i) ? new U(T, F(t)) : t.match(/^-?[0-9]+$/) ? new U(T, F(new k(t))) : x.throwArgumentError("invalid BigNumber string", "value", t);
                    if ("number" === typeof t) return t % 1 && D("underflow", "BigNumber.from", t), (t >= O || t <= -O) && D("overflow", "BigNumber.from", t), U.from(String(t));
                    const e = t;
                    if ("bigint" === typeof e) return U.from(e.toString());
                    if (E(e)) return U.from(R(e));
                    if (e)
                        if (e.toHexString) {
                            const t = e.toHexString();
                            if ("string" === typeof t) return U.from(t)
                        } else {
                            let t = e._hex;
                            if (null == t && "BigNumber" === e.type && (t = e.hex), "string" === typeof t && (S(t) || "-" === t[0] && S(t.substring(1)))) return U.from(t)
                        }
                    return x.throwArgumentError("invalid BigNumber value", "value", t)
                }
                static isBigNumber(t) {
                    return !(!t || !t._isBigNumber)
                }
            }

            function F(t) {
                if ("string" !== typeof t) return F(t.toString(16));
                if ("-" === t[0]) return t = t.substring(1), "-" === t[0] && x.throwArgumentError("invalid hex", "value", t), t = F(t), "0x00" === t ? t : "-" + t;
                if ("0x" !== t.substring(0, 2) && (t = "0x" + t), "0x" === t) return "0x00";
                t.length % 2 && (t = "0x0" + t.substring(2));
                while (t.length > 4 && "0x00" === t.substring(0, 4)) t = "0x" + t.substring(4);
                return t
            }

            function B(t) {
                return U.from(F(t))
            }

            function L(t) {
                const e = U.from(t).toHexString();
                return "-" === e[0] ? new k("-" + e.substring(3), 16) : new k(e.substring(2), 16)
            }

            function D(t, e, r) {
                const n = {
                    fault: t,
                    operation: e
                };
                return null != r && (n.value = r), x.throwError(t, g.errors.NUMERIC_FAULT, n)
            }
            var G = r("1c55"),
                j = r.n(G);

            function q(t) {
                return "0x" + j.a.keccak_256(N(t))
            }
            var z = r("3796");
            const K = "strings/5.6.0",
                W = new g(K);
            var V, H;

            function J(t, e, r, n, i) {
                return W.throwArgumentError(`invalid codepoint at offset ${e}; ${t}`, "bytes", r)
            }

            function Z(t, e, r, n, i) {
                if (t === H.BAD_PREFIX || t === H.UNEXPECTED_CONTINUE) {
                    let t = 0;
                    for (let n = e + 1; n < r.length; n++) {
                        if (r[n] >> 6 !== 2) break;
                        t++
                    }
                    return t
                }
                return t === H.OVERRUN ? r.length - e - 1 : 0
            }

            function X(t, e, r, n, i) {
                return t === H.OVERLONG ? (n.push(i), 0) : (n.push(65533), Z(t, e, r, n, i))
            }(function(t) {
                t["current"] = "", t["NFC"] = "NFC", t["NFD"] = "NFD", t["NFKC"] = "NFKC", t["NFKD"] = "NFKD"
            })(V || (V = {})),
            function(t) {
                t["UNEXPECTED_CONTINUE"] = "unexpected continuation byte", t["BAD_PREFIX"] = "bad codepoint prefix", t["OVERRUN"] = "string overrun", t["MISSING_CONTINUE"] = "missing continuation byte", t["OUT_OF_RANGE"] = "out of UTF-8 range", t["UTF16_SURROGATE"] = "UTF-16 surrogate", t["OVERLONG"] = "overlong representation"
            }(H || (H = {}));
            Object.freeze({
                error: J,
                ignore: Z,
                replace: X
            });

            function $(t, e = V.current) {
                e != V.current && (W.checkNormalize(), t = t.normalize(e));
                let r = [];
                for (let n = 0; n < t.length; n++) {
                    const e = t.charCodeAt(n);
                    if (e < 128) r.push(e);
                    else if (e < 2048) r.push(e >> 6 | 192), r.push(63 & e | 128);
                    else if (55296 == (64512 & e)) {
                        n++;
                        const i = t.charCodeAt(n);
                        if (n >= t.length || 56320 !== (64512 & i)) throw new Error("invalid utf-8 string");
                        const o = 65536 + ((1023 & e) << 10) + (1023 & i);
                        r.push(o >> 18 | 240), r.push(o >> 12 & 63 | 128), r.push(o >> 6 & 63 | 128), r.push(63 & o | 128)
                    } else r.push(e >> 12 | 224), r.push(e >> 6 & 63 | 128), r.push(63 & e | 128)
                }
                return N(r)
            }
            const Y = "solidity/5.6.0",
                Q = new RegExp("^bytes([0-9]+)$"),
                tt = new RegExp("^(u?int)([0-9]*)$"),
                et = new RegExp("^(.*)\\[([0-9]*)\\]$"),
                rt = "0000000000000000000000000000000000000000000000000000000000000000",
                nt = new g(Y);

            function it(t, e, r) {
                switch (t) {
                    case "address":
                        return r ? _(e, 32) : N(e);
                    case "string":
                        return $(e);
                    case "bytes":
                        return N(e);
                    case "bool":
                        return e = e ? "0x01" : "0x00", r ? _(e, 32) : N(e)
                }
                let n = t.match(tt);
                if (n) {
                    let i = parseInt(n[2] || "256");
                    return (n[2] && String(i) !== n[2] || i % 8 !== 0 || 0 === i || i > 256) && nt.throwArgumentError("invalid number type", "type", t), r && (i = 256), e = U.from(e).toTwos(i), _(e, i / 8)
                }
                if (n = t.match(Q), n) {
                    const i = parseInt(n[1]);
                    return (String(i) !== n[1] || 0 === i || i > 32) && nt.throwArgumentError("invalid bytes type", "type", t), N(e).byteLength !== i && nt.throwArgumentError("invalid value for " + t, "value", e), r ? N((e + rt).substring(0, 66)) : e
                }
                if (n = t.match(et), n && Array.isArray(e)) {
                    const r = n[1],
                        i = parseInt(n[2] || String(e.length));
                    i != e.length && nt.throwArgumentError("invalid array length for " + t, "value", e);
                    const o = [];
                    return e.forEach((function(t) {
                        o.push(it(r, t, !0))
                    })), A(o)
                }
                return nt.throwArgumentError("invalid type", "type", t)
            }

            function ot(t, e) {
                t.length != e.length && nt.throwArgumentError("wrong number of values; expected ${ types.length }", "values", e);
                const r = [];
                return t.forEach((function(t, n) {
                    r.push(it(t, e[n]))
                })), R(A(r))
            }

            function st(t, e) {
                return q(ot(t, e))
            }

            function at(t, e) {
                return Object(z["c"])(ot(t, e))
            }
        },
        ff09: function(t, e, r) {
            "use strict";
            r.d(e, "a", (function() {
                return n
            }));
            const n = "random/5.6.0"
        }
    }
]);